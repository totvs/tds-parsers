// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`4gl: Token call.4gl 1`] = `
main

  call fgl_winmessage()

  call fgl_winmessage("p1")


  call log0030_mensagem("existe(m) ...", "exclamation");


  call fgl_winmessage("p1","p2", "p3")
  call fgl_winmessage(1,2,    3)

end main

function f1()

  call fgl_winmessage() returning var1

  call fgl_winmessage() returning var1 , var2

call fgl_winmessage() returning var1,var2,var3

end function

function f2()

  call fgl_winmessage() returning var1[ind1]

end function

function f3()

  call fgl_winmessage() returning rec1.var1

  call fgl_winmessage() returning rec1.*

end function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1] {C:93} {A:}
| notSpecified: main\\n\\n [1:1] {C:0} {A:}
| whiteSpace:    [3:1] {C:0} {A:}
| notSpecified: call [3:3] {C:0} {A:}
| whiteSpace: \\b [3:7] {C:0} {A:}
| notSpecified: fgl_winmessage()\\n\\n [3:8] {C:0} {A:}
| whiteSpace:    [5:1] {C:0} {A:}
| notSpecified: call [5:3] {C:0} {A:}
| whiteSpace: \\b [5:7] {C:0} {A:}
| notSpecified: fgl_winmessage("p1")\\n\\n\\n [5:8] {C:0} {A:}
| whiteSpace:    [8:1] {C:0} {A:}
| notSpecified: call [8:3] {C:0} {A:}
| whiteSpace: \\b [8:7] {C:0} {A:}
| notSpecified: log0030_mensagem("existe(m) [8:8] {C:0} {A:}
| whiteSpace: \\b [8:35] {C:0} {A:}
| notSpecified: ...", [8:36] {C:0} {A:}
| whiteSpace: \\b [8:41] {C:0} {A:}
| notSpecified: "exclamation");\\n\\n\\n [8:42] {C:0} {A:}
| whiteSpace:    [11:1] {C:0} {A:}
| notSpecified: call [11:3] {C:0} {A:}
| whiteSpace: \\b [11:7] {C:0} {A:}
| notSpecified: fgl_winmessage("p1","p2", [11:8] {C:0} {A:}
| whiteSpace: \\b [11:33] {C:0} {A:}
| notSpecified: "p3")\\n [11:34] {C:0} {A:}
| whiteSpace:    [12:1] {C:0} {A:}
| notSpecified: call [12:3] {C:0} {A:}
| whiteSpace: \\b [12:7] {C:0} {A:}
| notSpecified: fgl_winmessage(1,2, [12:8] {C:0} {A:}
| whiteSpace:      [12:27] {C:0} {A:}
| notSpecified: 3)\\n\\nend [12:31] {C:0} {A:}
| whiteSpace: \\b [14:4] {C:0} {A:}
| notSpecified: main\\n\\nfunction [14:5] {C:0} {A:}
| whiteSpace: \\b [16:9] {C:0} {A:}
| notSpecified: f1()\\n\\n [16:10] {C:0} {A:}
| whiteSpace:    [18:1] {C:0} {A:}
| notSpecified: call [18:3] {C:0} {A:}
| whiteSpace: \\b [18:7] {C:0} {A:}
| notSpecified: fgl_winmessage() [18:8] {C:0} {A:}
| whiteSpace: \\b [18:24] {C:0} {A:}
| notSpecified: returning [18:25] {C:0} {A:}
| whiteSpace: \\b [18:34] {C:0} {A:}
| notSpecified: var1\\n\\n [18:35] {C:0} {A:}
| whiteSpace:    [20:1] {C:0} {A:}
| notSpecified: call [20:3] {C:0} {A:}
| whiteSpace: \\b [20:7] {C:0} {A:}
| notSpecified: fgl_winmessage() [20:8] {C:0} {A:}
| whiteSpace: \\b [20:24] {C:0} {A:}
| notSpecified: returning [20:25] {C:0} {A:}
| whiteSpace: \\b [20:34] {C:0} {A:}
| notSpecified: var1 [20:35] {C:0} {A:}
| whiteSpace: \\b [20:39] {C:0} {A:}
| notSpecified: , [20:40] {C:0} {A:}
| whiteSpace: \\b [20:41] {C:0} {A:}
| notSpecified: var2\\n\\ncall [20:42] {C:0} {A:}
| whiteSpace: \\b [22:5] {C:0} {A:}
| notSpecified: fgl_winmessage() [22:6] {C:0} {A:}
| whiteSpace: \\b [22:22] {C:0} {A:}
| notSpecified: returning [22:23] {C:0} {A:}
| whiteSpace: \\b [22:32] {C:0} {A:}
| notSpecified: var1,var2,var3\\n\\nend [22:33] {C:0} {A:}
| whiteSpace: \\b [24:4] {C:0} {A:}
| notSpecified: function\\n\\nfunction [24:5] {C:0} {A:}
| whiteSpace: \\b [26:9] {C:0} {A:}
| notSpecified: f2()\\n\\n [26:10] {C:0} {A:}
| whiteSpace:    [28:1] {C:0} {A:}
| notSpecified: call [28:3] {C:0} {A:}
| whiteSpace: \\b [28:7] {C:0} {A:}
| notSpecified: fgl_winmessage() [28:8] {C:0} {A:}
| whiteSpace: \\b [28:24] {C:0} {A:}
| notSpecified: returning [28:25] {C:0} {A:}
| whiteSpace: \\b [28:34] {C:0} {A:}
| notSpecified: var1[ind1]\\n\\nend [28:35] {C:0} {A:}
| whiteSpace: \\b [30:4] {C:0} {A:}
| notSpecified: function\\n\\nfunction [30:5] {C:0} {A:}
| whiteSpace: \\b [32:9] {C:0} {A:}
| notSpecified: f3()\\n\\n [32:10] {C:0} {A:}
| whiteSpace:    [34:1] {C:0} {A:}
| notSpecified: call [34:3] {C:0} {A:}
| whiteSpace: \\b [34:7] {C:0} {A:}
| notSpecified: fgl_winmessage() [34:8] {C:0} {A:}
| whiteSpace: \\b [34:24] {C:0} {A:}
| notSpecified: returning [34:25] {C:0} {A:}
| whiteSpace: \\b [34:34] {C:0} {A:}
| notSpecified: rec1.var1\\n\\n [34:35] {C:0} {A:}
| whiteSpace:    [36:1] {C:0} {A:}
| notSpecified: call [36:3] {C:0} {A:}
| whiteSpace: \\b [36:7] {C:0} {A:}
| notSpecified: fgl_winmessage() [36:8] {C:0} {A:}
| whiteSpace: \\b [36:24] {C:0} {A:}
| notSpecified: returning [36:25] {C:0} {A:}
| whiteSpace: \\b [36:34] {C:0} {A:}
| notSpecified: rec1.*\\n\\nend [36:35] {C:0} {A:}
| whiteSpace: \\b [38:4] {C:0} {A:}
| notSpecified: function\\n [38:5] {C:0} {A:}

`;

exports[`4gl: Token define.4gl 1`] = `
MAIN 

	DEFINE VAR1 BIGINT   
	DEFINE VAR1 BYTE   
	DEFINE VAR1 CHAR(100)
	DEFINE VAR1 CHARACTER  
	DEFINE VAR1 DATE   
	DEFINE VAR1 DATETIME  day to day
	DEFINE VAR1 DEC   
	DEFINE VAR1 DECIMAL(10,2)
	DEFINE VAR1 DECIMAL(10)
	DEFINE VAR1 DOUBLE PRECISION  
	DEFINE VAR1 DYNAMIC ARRAY  
	DEFINE VAR1 FLOAT  
	DEFINE VAR1 INT  
	DEFINE VAR1 INTEGER  
	DEFINE VAR1 MONEY  
	DEFINE VAR1 NCHAR(100)  
	DEFINE VAR1 NUMERIC  
	DEFINE VAR1 NVARCHAR(100)  

end MAIN

function f1() 
	--DEFINE VAR1 INTERVAL  
end function

function f2() 
	DEFINE REC1 RECORD
    	VAR1 BIGINT
  	END RECORD

	DEFINE REC2 RECORD
    VAR1 CHAR(100),
    VAR1 CHARACTER,
    VAR1 DATE,
    VAR1 DATETIME  day to day,
    VAR1 DEC,
    VAR1 DECIMAL(10,2),
    VAR1 DECIMAL(10),
    VAR1 DOUBLE PRECISION,
    VAR1 FLOAT,
    VAR1 INT,
    VAR1 INTEGER,
    VAR1 MONEY,
    VAR1 NCHAR(100),
    VAR1 NUMERIC,
    VAR1 NVARCHAR(100)
  END RECORD  

end function

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1] {C:20} {A:}
| block:  [1:1] {C:3} {A:}
| | keyword: MAIN [1:1] {C:0} {A:}
| | whiteSpace: \\b [1:5] {C:0} {A:}
| | newLine: \\n\\n [1:6] {C:0} {A:}
| | whiteSpace: \\t [3:1] {C:0} {A:}
| | keyword: DEFINE [3:2] {C:0} {A:}
| | whiteSpace: \\b [3:8] {C:0} {A:}
| | identifier: VAR1 [3:9] {C:0} {A:}
| | whiteSpace: \\b [3:13] {C:0} {A:}
| | keyword: BIGINT [3:14] {C:0} {A:}
| | whiteSpace:     [3:20] {C:0} {A:}
| | newLine: \\n [3:23] {C:0} {A:}
| | whiteSpace: \\t [4:1] {C:0} {A:}
| | keyword: DEFINE [4:2] {C:0} {A:}
| | whiteSpace: \\b [4:8] {C:0} {A:}
| | identifier: VAR1 [4:9] {C:0} {A:}
| | whiteSpace: \\b [4:13] {C:0} {A:}
| | identifier: BYTE [4:14] {C:0} {A:}
| | whiteSpace:     [4:18] {C:0} {A:}
| | newLine: \\n [4:21] {C:0} {A:}
| | whiteSpace: \\t [5:1] {C:0} {A:}
| | keyword: DEFINE [5:2] {C:0} {A:}
| | whiteSpace: \\b [5:8] {C:0} {A:}
| | identifier: VAR1 [5:9] {C:0} {A:}
| | whiteSpace: \\b [5:13] {C:0} {A:}
| | keyword: CHAR [5:14] {C:0} {A:}
| | operatorParenthesis: ( [5:18] {C:0} {A:}
| | number: 100 [5:19] {C:0} {A:}
| | operatorParenthesis: ) [5:22] {C:0} {A:}
| | newLine: \\n [5:23] {C:0} {A:}
| | whiteSpace: \\t [6:1] {C:0} {A:}
| | keyword: DEFINE [6:2] {C:0} {A:}
| | whiteSpace: \\b [6:8] {C:0} {A:}
| | identifier: VAR1 [6:9] {C:0} {A:}
| | whiteSpace: \\b [6:13] {C:0} {A:}
| | identifier: CHARACTER [6:14] {C:0} {A:}
| | whiteSpace:    [6:23] {C:0} {A:}
| | newLine: \\n [6:25] {C:0} {A:}
| | whiteSpace: \\t [7:1] {C:0} {A:}
| | keyword: DEFINE [7:2] {C:0} {A:}
| | whiteSpace: \\b [7:8] {C:0} {A:}
| | identifier: VAR1 [7:9] {C:0} {A:}
| | whiteSpace: \\b [7:13] {C:0} {A:}
| | keyword: DATE [7:14] {C:0} {A:}
| | whiteSpace:     [7:18] {C:0} {A:}
| | newLine: \\n [7:21] {C:0} {A:}
| | whiteSpace: \\t [8:1] {C:0} {A:}
| | keyword: DEFINE [8:2] {C:0} {A:}
| | whiteSpace: \\b [8:8] {C:0} {A:}
| | identifier: VAR1 [8:9] {C:0} {A:}
| | whiteSpace: \\b [8:13] {C:0} {A:}
| | identifier: DATETIME [8:14] {C:0} {A:}
| | whiteSpace:    [8:22] {C:0} {A:}
| | keyword: day [8:24] {C:0} {A:}
| | whiteSpace: \\b [8:27] {C:0} {A:}
| | keyword: to [8:28] {C:0} {A:}
| | whiteSpace: \\b [8:30] {C:0} {A:}
| | keyword: day [8:31] {C:0} {A:}
| | newLine: \\n [8:34] {C:0} {A:}
| | whiteSpace: \\t [9:1] {C:0} {A:}
| | keyword: DEFINE [9:2] {C:0} {A:}
| | whiteSpace: \\b [9:8] {C:0} {A:}
| | identifier: VAR1 [9:9] {C:0} {A:}
| | whiteSpace: \\b [9:13] {C:0} {A:}
| | keyword: DEC [9:14] {C:0} {A:}
| | whiteSpace:     [9:17] {C:0} {A:}
| | newLine: \\n [9:20] {C:0} {A:}
| | whiteSpace: \\t [10:1] {C:0} {A:}
| | keyword: DEFINE [10:2] {C:0} {A:}
| | whiteSpace: \\b [10:8] {C:0} {A:}
| | identifier: VAR1 [10:9] {C:0} {A:}
| | whiteSpace: \\b [10:13] {C:0} {A:}
| | identifier: DECIMAL [10:14] {C:0} {A:}
| | operatorParenthesis: ( [10:21] {C:0} {A:}
| | number: 10 [10:22] {C:0} {A:}
| | operatorSeparator: , [10:24] {C:0} {A:}
| | number: 2 [10:25] {C:0} {A:}
| | operatorParenthesis: ) [10:26] {C:0} {A:}
| | newLine: \\n [10:27] {C:0} {A:}
| | whiteSpace: \\t [11:1] {C:0} {A:}
| | keyword: DEFINE [11:2] {C:0} {A:}
| | whiteSpace: \\b [11:8] {C:0} {A:}
| | identifier: VAR1 [11:9] {C:0} {A:}
| | whiteSpace: \\b [11:13] {C:0} {A:}
| | identifier: DECIMAL [11:14] {C:0} {A:}
| | operatorParenthesis: ( [11:21] {C:0} {A:}
| | number: 10 [11:22] {C:0} {A:}
| | operatorParenthesis: ) [11:24] {C:0} {A:}
| | newLine: \\n [11:25] {C:0} {A:}
| | whiteSpace: \\t [12:1] {C:0} {A:}
| | keyword: DEFINE [12:2] {C:0} {A:}
| | whiteSpace: \\b [12:8] {C:0} {A:}
| | identifier: VAR1 [12:9] {C:0} {A:}
| | whiteSpace: \\b [12:13] {C:0} {A:}
| | keyword: DOUBLE [12:14] {C:0} {A:}
| | whiteSpace: \\b [12:20] {C:0} {A:}
| | keyword: PRECISION [12:21] {C:0} {A:}
| | whiteSpace:    [12:30] {C:0} {A:}
| | newLine: \\n [12:32] {C:0} {A:}
| | whiteSpace: \\t [13:1] {C:0} {A:}
| | keyword: DEFINE [13:2] {C:0} {A:}
| | whiteSpace: \\b [13:8] {C:0} {A:}
| | identifier: VAR1 [13:9] {C:0} {A:}
| | whiteSpace: \\b [13:13] {C:0} {A:}
| | keyword: DYNAMIC [13:14] {C:0} {A:}
| | whiteSpace: \\b [13:21] {C:0} {A:}
| | keyword: ARRAY [13:22] {C:0} {A:}
| | whiteSpace:    [13:27] {C:0} {A:}
| | newLine: \\n [13:29] {C:0} {A:}
| | whiteSpace: \\t [14:1] {C:0} {A:}
| | keyword: DEFINE [14:2] {C:0} {A:}
| | whiteSpace: \\b [14:8] {C:0} {A:}
| | identifier: VAR1 [14:9] {C:0} {A:}
| | whiteSpace: \\b [14:13] {C:0} {A:}
| | keyword: FLOAT [14:14] {C:0} {A:}
| | whiteSpace:    [14:19] {C:0} {A:}
| | newLine: \\n [14:21] {C:0} {A:}
| | whiteSpace: \\t [15:1] {C:0} {A:}
| | keyword: DEFINE [15:2] {C:0} {A:}
| | whiteSpace: \\b [15:8] {C:0} {A:}
| | identifier: VAR1 [15:9] {C:0} {A:}
| | whiteSpace: \\b [15:13] {C:0} {A:}
| | identifier: INT [15:14] {C:0} {A:}
| | whiteSpace:    [15:17] {C:0} {A:}
| | newLine: \\n [15:19] {C:0} {A:}
| | whiteSpace: \\t [16:1] {C:0} {A:}
| | keyword: DEFINE [16:2] {C:0} {A:}
| | whiteSpace: \\b [16:8] {C:0} {A:}
| | identifier: VAR1 [16:9] {C:0} {A:}
| | whiteSpace: \\b [16:13] {C:0} {A:}
| | identifier: INTEGER [16:14] {C:0} {A:}
| | whiteSpace:    [16:21] {C:0} {A:}
| | newLine: \\n [16:23] {C:0} {A:}
| | whiteSpace: \\t [17:1] {C:0} {A:}
| | keyword: DEFINE [17:2] {C:0} {A:}
| | whiteSpace: \\b [17:8] {C:0} {A:}
| | identifier: VAR1 [17:9] {C:0} {A:}
| | whiteSpace: \\b [17:13] {C:0} {A:}
| | keyword: MONEY [17:14] {C:0} {A:}
| | whiteSpace:    [17:19] {C:0} {A:}
| | newLine: \\n [17:21] {C:0} {A:}
| | whiteSpace: \\t [18:1] {C:0} {A:}
| | keyword: DEFINE [18:2] {C:0} {A:}
| | whiteSpace: \\b [18:8] {C:0} {A:}
| | identifier: VAR1 [18:9] {C:0} {A:}
| | whiteSpace: \\b [18:13] {C:0} {A:}
| | keyword: NCHAR [18:14] {C:0} {A:}
| | operatorParenthesis: ( [18:19] {C:0} {A:}
| | number: 100 [18:20] {C:0} {A:}
| | operatorParenthesis: ) [18:23] {C:0} {A:}
| | whiteSpace:    [18:24] {C:0} {A:}
| | newLine: \\n [18:26] {C:0} {A:}
| | whiteSpace: \\t [19:1] {C:0} {A:}
| | keyword: DEFINE [19:2] {C:0} {A:}
| | whiteSpace: \\b [19:8] {C:0} {A:}
| | identifier: VAR1 [19:9] {C:0} {A:}
| | whiteSpace: \\b [19:13] {C:0} {A:}
| | keyword: NUMERIC [19:14] {C:0} {A:}
| | whiteSpace:    [19:21] {C:0} {A:}
| | newLine: \\n [19:23] {C:0} {A:}
| | whiteSpace: \\t [20:1] {C:0} {A:}
| | keyword: DEFINE [20:2] {C:0} {A:}
| | whiteSpace: \\b [20:8] {C:0} {A:}
| | identifier: VAR1 [20:9] {C:0} {A:}
| | whiteSpace: \\b [20:13] {C:0} {A:}
| | keyword: NVARCHAR [20:14] {C:0} {A:}
| | operatorParenthesis: ( [20:22] {C:0} {A:}
| | number: 100 [20:23] {C:0} {A:}
| | operatorParenthesis: ) [20:26] {C:0} {A:}
| | whiteSpace:    [20:27] {C:0} {A:}
| | newLine: \\n\\n [20:29] {C:0} {A:}
| | keyword: end [22:1] {C:0} {A:}
| | whiteSpace: \\b [22:4] {C:0} {A:}
| | keyword: MAIN [22:5] {C:0} {A:}
| | newLine: \\n\\n [22:9] {C:0} {A:}
| block:  [24:1] {C:3} {A:}
| | keyword: function [24:1] {C:0} {A:}
| | whiteSpace: \\b [24:9] {C:0} {A:}
| | identifier: f1 [24:10] {C:0} {A:}
| | argumentList:  [24:12] {C:1} {A:}
| | | operatorParenthesis: ( [24:12] {C:0} {A:}
| | | operatorParenthesis: ) [24:13] {C:0} {A:}
| | whiteSpace: \\b [24:14] {C:0} {A:}
| | newLine: \\n [24:15] {C:0} {A:}
| | whiteSpace: \\t [25:1] {C:0} {A:}
| | comment: --DEFINE VAR1 INTERVAL  \\n [25:2] {C:0} {A:}
| | keyword: end [26:1] {C:0} {A:}
| | whiteSpace: \\b [26:4] {C:0} {A:}
| | keyword: function [26:5] {C:0} {A:}
| | newLine: \\n\\n [26:13] {C:0} {A:}
| notSpecified: function [28:1] {C:0} {A:}
| whiteSpace: \\b [28:9] {C:0} {A:}
| notSpecified: f2() [28:10] {C:0} {A:}
| whiteSpace: \\b [28:14] {C:0} {A:}
| newLine: \\n [28:15] {C:0} {A:}
| whiteSpace: \\t [29:1] {C:0} {A:}
| notSpecified: DEFINE [29:2] {C:0} {A:}
| whiteSpace: \\b [29:8] {C:0} {A:}
| notSpecified: REC1 [29:9] {C:0} {A:}
| whiteSpace: \\b [29:13] {C:0} {A:}
| block:  [29:14] {C:3} {A:}
| | keyword: RECORD [29:14] {C:0} {A:}
| | newLine: \\n [29:20] {C:0} {A:}
| | whiteSpace:     \\t [30:1] {C:0} {A:}
| | identifier: VAR1 [30:6] {C:0} {A:}
| | whiteSpace: \\b [30:10] {C:0} {A:}
| | keyword: BIGINT [30:11] {C:0} {A:}
| | newLine: \\n [30:17] {C:0} {A:}
| | whiteSpace:   \\t [31:1] {C:0} {A:}
| | keyword: END [31:4] {C:0} {A:}
| | whiteSpace: \\b [31:7] {C:0} {A:}
| | keyword: RECORD [31:8] {C:0} {A:}
| | newLine: \\n\\n [31:14] {C:0} {A:}
| whiteSpace: \\t [33:1] {C:0} {A:}
| notSpecified: DEFINE [33:2] {C:0} {A:}
| whiteSpace: \\b [33:8] {C:0} {A:}
| notSpecified: REC2 [33:9] {C:0} {A:}
| whiteSpace: \\b [33:13] {C:0} {A:}
| block:  [33:14] {C:3} {A:}
| | keyword: RECORD [33:14] {C:0} {A:}
| | newLine: \\n [33:20] {C:0} {A:}
| | whiteSpace:      [34:1] {C:0} {A:}
| | identifier: VAR1 [34:5] {C:0} {A:}
| | whiteSpace: \\b [34:9] {C:0} {A:}
| | keyword: CHAR [34:10] {C:0} {A:}
| | operatorParenthesis: ( [34:14] {C:0} {A:}
| | number: 100 [34:15] {C:0} {A:}
| | operatorParenthesis: ) [34:18] {C:0} {A:}
| | operatorSeparator: , [34:19] {C:0} {A:}
| | newLine: \\n [34:20] {C:0} {A:}
| | whiteSpace:      [35:1] {C:0} {A:}
| | identifier: VAR1 [35:5] {C:0} {A:}
| | whiteSpace: \\b [35:9] {C:0} {A:}
| | identifier: CHARACTER [35:10] {C:0} {A:}
| | operatorSeparator: , [35:19] {C:0} {A:}
| | newLine: \\n [35:20] {C:0} {A:}
| | whiteSpace:      [36:1] {C:0} {A:}
| | identifier: VAR1 [36:5] {C:0} {A:}
| | whiteSpace: \\b [36:9] {C:0} {A:}
| | keyword: DATE [36:10] {C:0} {A:}
| | operatorSeparator: , [36:14] {C:0} {A:}
| | newLine: \\n [36:15] {C:0} {A:}
| | whiteSpace:      [37:1] {C:0} {A:}
| | identifier: VAR1 [37:5] {C:0} {A:}
| | whiteSpace: \\b [37:9] {C:0} {A:}
| | identifier: DATETIME [37:10] {C:0} {A:}
| | whiteSpace:    [37:18] {C:0} {A:}
| | keyword: day [37:20] {C:0} {A:}
| | whiteSpace: \\b [37:23] {C:0} {A:}
| | keyword: to [37:24] {C:0} {A:}
| | whiteSpace: \\b [37:26] {C:0} {A:}
| | keyword: day [37:27] {C:0} {A:}
| | operatorSeparator: , [37:30] {C:0} {A:}
| | newLine: \\n [37:31] {C:0} {A:}
| | whiteSpace:      [38:1] {C:0} {A:}
| | identifier: VAR1 [38:5] {C:0} {A:}
| | whiteSpace: \\b [38:9] {C:0} {A:}
| | keyword: DEC [38:10] {C:0} {A:}
| | operatorSeparator: , [38:13] {C:0} {A:}
| | newLine: \\n [38:14] {C:0} {A:}
| | whiteSpace:      [39:1] {C:0} {A:}
| | identifier: VAR1 [39:5] {C:0} {A:}
| | whiteSpace: \\b [39:9] {C:0} {A:}
| | identifier: DECIMAL [39:10] {C:0} {A:}
| | operatorParenthesis: ( [39:17] {C:0} {A:}
| | number: 10 [39:18] {C:0} {A:}
| | operatorSeparator: , [39:20] {C:0} {A:}
| | number: 2 [39:21] {C:0} {A:}
| | operatorParenthesis: ) [39:22] {C:0} {A:}
| | operatorSeparator: , [39:23] {C:0} {A:}
| | newLine: \\n [39:24] {C:0} {A:}
| | whiteSpace:      [40:1] {C:0} {A:}
| | identifier: VAR1 [40:5] {C:0} {A:}
| | whiteSpace: \\b [40:9] {C:0} {A:}
| | identifier: DECIMAL [40:10] {C:0} {A:}
| | operatorParenthesis: ( [40:17] {C:0} {A:}
| | number: 10 [40:18] {C:0} {A:}
| | operatorParenthesis: ) [40:20] {C:0} {A:}
| | operatorSeparator: , [40:21] {C:0} {A:}
| | newLine: \\n [40:22] {C:0} {A:}
| | whiteSpace:      [41:1] {C:0} {A:}
| | identifier: VAR1 [41:5] {C:0} {A:}
| | whiteSpace: \\b [41:9] {C:0} {A:}
| | keyword: DOUBLE [41:10] {C:0} {A:}
| | whiteSpace: \\b [41:16] {C:0} {A:}
| | keyword: PRECISION [41:17] {C:0} {A:}
| | operatorSeparator: , [41:26] {C:0} {A:}
| | newLine: \\n [41:27] {C:0} {A:}
| | whiteSpace:      [42:1] {C:0} {A:}
| | identifier: VAR1 [42:5] {C:0} {A:}
| | whiteSpace: \\b [42:9] {C:0} {A:}
| | keyword: FLOAT [42:10] {C:0} {A:}
| | operatorSeparator: , [42:15] {C:0} {A:}
| | newLine: \\n [42:16] {C:0} {A:}
| | whiteSpace:      [43:1] {C:0} {A:}
| | identifier: VAR1 [43:5] {C:0} {A:}
| | whiteSpace: \\b [43:9] {C:0} {A:}
| | identifier: INT [43:10] {C:0} {A:}
| | operatorSeparator: , [43:13] {C:0} {A:}
| | newLine: \\n [43:14] {C:0} {A:}
| | whiteSpace:      [44:1] {C:0} {A:}
| | identifier: VAR1 [44:5] {C:0} {A:}
| | whiteSpace: \\b [44:9] {C:0} {A:}
| | identifier: INTEGER [44:10] {C:0} {A:}
| | operatorSeparator: , [44:17] {C:0} {A:}
| | newLine: \\n [44:18] {C:0} {A:}
| | whiteSpace:      [45:1] {C:0} {A:}
| | identifier: VAR1 [45:5] {C:0} {A:}
| | whiteSpace: \\b [45:9] {C:0} {A:}
| | keyword: MONEY [45:10] {C:0} {A:}
| | operatorSeparator: , [45:15] {C:0} {A:}
| | newLine: \\n [45:16] {C:0} {A:}
| | whiteSpace:      [46:1] {C:0} {A:}
| | identifier: VAR1 [46:5] {C:0} {A:}
| | whiteSpace: \\b [46:9] {C:0} {A:}
| | keyword: NCHAR [46:10] {C:0} {A:}
| | operatorParenthesis: ( [46:15] {C:0} {A:}
| | number: 100 [46:16] {C:0} {A:}
| | operatorParenthesis: ) [46:19] {C:0} {A:}
| | operatorSeparator: , [46:20] {C:0} {A:}
| | newLine: \\n [46:21] {C:0} {A:}
| | whiteSpace:      [47:1] {C:0} {A:}
| | identifier: VAR1 [47:5] {C:0} {A:}
| | whiteSpace: \\b [47:9] {C:0} {A:}
| | keyword: NUMERIC [47:10] {C:0} {A:}
| | operatorSeparator: , [47:17] {C:0} {A:}
| | newLine: \\n [47:18] {C:0} {A:}
| | whiteSpace:      [48:1] {C:0} {A:}
| | identifier: VAR1 [48:5] {C:0} {A:}
| | whiteSpace: \\b [48:9] {C:0} {A:}
| | keyword: NVARCHAR [48:10] {C:0} {A:}
| | operatorParenthesis: ( [48:18] {C:0} {A:}
| | number: 100 [48:19] {C:0} {A:}
| | operatorParenthesis: ) [48:22] {C:0} {A:}
| | newLine: \\n [48:23] {C:0} {A:}
| | whiteSpace:    [49:1] {C:0} {A:}
| | keyword: END [49:3] {C:0} {A:}
| | whiteSpace: \\b [49:6] {C:0} {A:}
| | keyword: RECORD [49:7] {C:0} {A:}
| | whiteSpace:    [49:13] {C:0} {A:}
| | newLine: \\n\\n [49:15] {C:0} {A:}
| notSpecified: end [51:1] {C:0} {A:}
| whiteSpace: \\b [51:4] {C:0} {A:}
| notSpecified: function\\n\\n [51:5] {C:0} {A:}

`;

exports[`4gl: Token define-list.4gl 1`] = `
################################################################################
### atencao atencao atencao atencao atencao atencao atencao atencao atencao ###
###############################################################################
###                                                                         ###
### por motivos de tamanho deste arquivo fonte, os comandos de  selecao em  ###
### tabelas (select), que eram identicos em diversas partes do mesmo foram  ###
### unificados. para manter este principio, procure a seguinte string:      ###
###                      "busca_" + <nome da tabela>                        ###
### exemplo: para verificar se ja existe uma selecao que possa ser          ###
###         utilizada para a tabela ordem_sup, procure "busca_ordem_sup".   ###
###                                                                         ###
###############################################################################

#-------------------------------------------------------------------#
# sistema.: suprimentos                                             #
# programa: sup3760                                                 #
# modulos.: sup3760 log0010 log0030 log0040 log0050 log0060 sup0520 #
# objetivo: manutencao de notas fiscais                             #
# autor...: tatiane wiese                                           #
# data....: 18/11/1994                                              #
#                                                                   #
# ******************** a t e n c a o  ! ! ! ! ********************* #
# favor manter a identacao neste  programa (tres colunas),  para  o #
# melhor entendimento do programa nas manutencoes posteriores.      #
# ***************************************************************** #
#-------------------------------------------------------------------#

define m_msg                             char(200)

define m_num_nf_cap                      char(07),
m_informou_grade                  smallint

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1] {C:36} {A:}
| comment: ################################################################################\\n [1:1] {C:0} {A:}
| comment: ### atencao atencao atencao atencao atencao atencao atencao atencao atencao ###\\n [2:1] {C:0} {A:}
| comment: ###############################################################################\\n [3:1] {C:0} {A:}
| comment: ###                                                                         ###\\n [4:1] {C:0} {A:}
| comment: ### por motivos de tamanho deste arquivo fonte, os comandos de  selecao em  ###\\n [5:1] {C:0} {A:}
| comment: ### tabelas (select), que eram identicos em diversas partes do mesmo foram  ###\\n [6:1] {C:0} {A:}
| comment: ### unificados. para manter este principio, procure a seguinte string:      ###\\n [7:1] {C:0} {A:}
| comment: ###                      "busca_" + <nome da tabela>                        ###\\n [8:1] {C:0} {A:}
| comment: ### exemplo: para verificar se ja existe uma selecao que possa ser          ###\\n [9:1] {C:0} {A:}
| comment: ###         utilizada para a tabela ordem_sup, procure "busca_ordem_sup".   ###\\n [10:1] {C:0} {A:}
| comment: ###                                                                         ###\\n [11:1] {C:0} {A:}
| comment: ###############################################################################\\n\\n [12:1] {C:0} {A:}
| comment: #-------------------------------------------------------------------#\\n [14:1] {C:0} {A:}
| comment: # sistema.: suprimentos                                             #\\n [15:1] {C:0} {A:}
| comment: # programa: sup3760                                                 #\\n [16:1] {C:0} {A:}
| comment: # modulos.: sup3760 log0010 log0030 log0040 log0050 log0060 sup0520 #\\n [17:1] {C:0} {A:}
| comment: # objetivo: manutencao de notas fiscais                             #\\n [18:1] {C:0} {A:}
| comment: # autor...: tatiane wiese                                           #\\n [19:1] {C:0} {A:}
| comment: # data....: 18/11/1994                                              #\\n [20:1] {C:0} {A:}
| comment: #                                                                   #\\n [21:1] {C:0} {A:}
| comment: # ******************** a t e n c a o  ! ! ! ! ********************* #\\n [22:1] {C:0} {A:}
| comment: # favor manter a identacao neste  programa (tres colunas),  para  o #\\n [23:1] {C:0} {A:}
| comment: # melhor entendimento do programa nas manutencoes posteriores.      #\\n [24:1] {C:0} {A:}
| comment: # ***************************************************************** #\\n [25:1] {C:0} {A:}
| comment: #-------------------------------------------------------------------#\\n\\n [26:1] {C:0} {A:}
| notSpecified: define [28:1] {C:0} {A:}
| whiteSpace: \\b [28:7] {C:0} {A:}
| notSpecified: m_msg [28:8] {C:0} {A:}
| whiteSpace:                               [28:13] {C:0} {A:}
| notSpecified: char(200)\\n\\ndefine [28:42] {C:0} {A:}
| whiteSpace: \\b [30:7] {C:0} {A:}
| notSpecified: m_num_nf_cap [30:8] {C:0} {A:}
| whiteSpace:                        [30:20] {C:0} {A:}
| notSpecified: char(07),\\nm_informou_grade [30:42] {C:0} {A:}
| whiteSpace:                    [31:17] {C:0} {A:}
| notSpecified: smallint\\n\\n [31:35] {C:0} {A:}

`;

exports[`4gl: Token define1.4gl 1`] = `
globals
define mod char(10)
end globals

main 
	--define var1 record like tab1.*
end main
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-1:0] {C:2} {A:}
| block:  [1:1-1:0] {C:3} {A:}
| | keyword: globals [1:1-1:7] {C:0} {A:}
| | newLine: \\n [1:8-1:8] {C:0} {A:}
| | keyword: define [2:1-2:6] {C:0} {A:}
| | whiteSpace: \\b [2:7-2:7] {C:0} {A:}
| | keyword: mod [2:8-2:10] {C:0} {A:}
| | whiteSpace: \\b [2:11-2:11] {C:0} {A:}
| | keyword: char [2:12-2:15] {C:0} {A:}
| | operatorParenthesis: ( [2:16-2:16] {C:0} {A:}
| | number: 10 [2:17-2:18] {C:0} {A:}
| | operatorParenthesis: ) [2:19-2:19] {C:0} {A:}
| | newLine: \\n [2:20-2:20] {C:0} {A:}
| | keyword: end [3:1-3:3] {C:0} {A:}
| | whiteSpace: \\b [3:4-3:4] {C:0} {A:}
| | keyword: globals [3:5-3:11] {C:0} {A:}
| | newLine: \\n\\n [3:12-3:13] {C:0} {A:}
| block:  [5:1-5:0] {C:3} {A:}
| | keyword: main [5:1-5:4] {C:0} {A:}
| | whiteSpace: \\b [5:5-5:5] {C:0} {A:}
| | newLine: \\n [5:6-5:6] {C:0} {A:}
| | whiteSpace: \\t [6:1-6:1] {C:0} {A:}
| | comment: --define var1 record like tab1.*\\n [6:2-6:34] {C:0} {A:}
| | keyword: end [7:1-7:3] {C:0} {A:}
| | whiteSpace: \\b [7:4-7:4] {C:0} {A:}
| | keyword: main [7:5-7:8] {C:0} {A:}
| | newLine: \\n [7:9-7:9] {C:0} {A:}

`;

exports[`4gl: Token define2.4gl 1`] = `
main 
	--DEFINE VAR1 record LIKE TAB1.*
end main
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-1:0] {C:1} {A:}
| block:  [1:1-1:0] {C:3} {A:}
| | keyword: main [1:1-1:4] {C:0} {A:}
| | whiteSpace: \\b [1:5-1:5] {C:0} {A:}
| | newLine: \\n [1:6-1:6] {C:0} {A:}
| | whiteSpace: \\t [2:1-2:1] {C:0} {A:}
| | comment: --DEFINE VAR1 record LIKE TAB1.*\\n [2:2-2:34] {C:0} {A:}
| | keyword: end [3:1-3:3] {C:0} {A:}
| | whiteSpace: \\b [3:4-3:4] {C:0} {A:}
| | keyword: main [3:5-3:8] {C:0} {A:}
| | newLine: \\n [3:9-3:9] {C:0} {A:}

`;

exports[`4gl: Token for.4gl 1`] = `
main

  for a=1 to 20
  end for

  for a=1 to 20
    display b
  end for

end main
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1] {C:31} {A:}
| notSpecified: main\\n\\n [1:1] {C:0} {A:}
| whiteSpace:    [3:1] {C:0} {A:}
| notSpecified: for [3:3] {C:0} {A:}
| whiteSpace: \\b [3:6] {C:0} {A:}
| notSpecified: a=1 [3:7] {C:0} {A:}
| whiteSpace: \\b [3:10] {C:0} {A:}
| notSpecified: to [3:11] {C:0} {A:}
| whiteSpace: \\b [3:13] {C:0} {A:}
| notSpecified: 20\\n [3:14] {C:0} {A:}
| whiteSpace:    [4:1] {C:0} {A:}
| notSpecified: end [4:3] {C:0} {A:}
| whiteSpace: \\b [4:6] {C:0} {A:}
| notSpecified: for\\n\\n [4:7] {C:0} {A:}
| whiteSpace:    [6:1] {C:0} {A:}
| notSpecified: for [6:3] {C:0} {A:}
| whiteSpace: \\b [6:6] {C:0} {A:}
| notSpecified: a=1 [6:7] {C:0} {A:}
| whiteSpace: \\b [6:10] {C:0} {A:}
| notSpecified: to [6:11] {C:0} {A:}
| whiteSpace: \\b [6:13] {C:0} {A:}
| notSpecified: 20\\n [6:14] {C:0} {A:}
| whiteSpace:      [7:1] {C:0} {A:}
| notSpecified: display [7:5] {C:0} {A:}
| whiteSpace: \\b [7:12] {C:0} {A:}
| notSpecified: b\\n [7:13] {C:0} {A:}
| whiteSpace:    [8:1] {C:0} {A:}
| notSpecified: end [8:3] {C:0} {A:}
| whiteSpace: \\b [8:6] {C:0} {A:}
| notSpecified: for\\n\\nend [8:7] {C:0} {A:}
| whiteSpace: \\b [10:4] {C:0} {A:}
| notSpecified: main\\n [10:5] {C:0} {A:}

`;

exports[`4gl: Token if.4gl 1`] = `
main 

  if a=b then
  end if

end main

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1] {C:13} {A:}
| notSpecified: main [1:1] {C:0} {A:}
| whiteSpace: \\b [1:5] {C:0} {A:}
| newLine: \\n\\n [1:6] {C:0} {A:}
| whiteSpace:    [3:1] {C:0} {A:}
| notSpecified: if [3:3] {C:0} {A:}
| whiteSpace: \\b [3:5] {C:0} {A:}
| notSpecified: a=b [3:6] {C:0} {A:}
| whiteSpace: \\b [3:9] {C:0} {A:}
| notSpecified: then\\n [3:10] {C:0} {A:}
| whiteSpace:    [4:1] {C:0} {A:}
| notSpecified: end [4:3] {C:0} {A:}
| whiteSpace: \\b [4:6] {C:0} {A:}
| notSpecified: if\\n\\nend [4:7] {C:0} {A:}
| whiteSpace: \\b [6:4] {C:0} {A:}
| notSpecified: main\\n\\n [6:5] {C:0} {A:}

`;
