################################################################################
### atencao atencao atencao atencao atencao atencao atencao atencao atencao ###
###############################################################################
###                                                                         ###
### por motivos de tamanho deste arquivo fonte, os comandos de  selecao em  ###
### tabelas (select), que eram identicos em diversas partes do mesmo foram  ###
### unificados. para manter este principio, procure a seguinte string:      ###
###                      "busca_" + <nome da tabela>                        ###
### exemplo: para verificar se ja existe uma selecao que possa ser          ###
###         utilizada para a tabela ordem_sup, procure "busca_ordem_sup".   ###
###                                                                         ###
###############################################################################

#-------------------------------------------------------------------#
# sistema.: suprimentos                                             #
# programa: sup3760                                                 #
# modulos.: sup3760 log0010 log0030 log0040 log0050 log0060 sup0520 #
# objetivo: manutencao de notas fiscais                             #
# autor...: tatiane wiese                                           #
# data....: 18/11/1994                                              #
#                                                                   #
# ******************** a t e n c a o  ! ! ! ! ********************* #
# favor manter a identacao neste  programa (tres colunas),  para  o #
# melhor entendimento do programa nas manutencoes posteriores.      #
# ***************************************************************** #
#-------------------------------------------------------------------#
database logix

globals "sup3761.4gl"

define m_msg                      char(200)

define m_num_nf_cap               char(07),
m_informou_grade                  smallint

define m_mes_fecha_01             like par_sup_pad.par_ies,
p_ies_pagamento1                  like cond_pgto_cap.ies_pagamento,
m_log004                          smallint,
m_existe_tab_oc_nf                smallint,
m_tem_valid_fim                   smallint,
m_ind_transf_estoq                smallint,
m_ies_obj_entrada                 like cod_fiscal_sup.ies_obj_entrada,
m_ies_bloq_cc_os                  char(01),
m_controla_gao                    char(01),
m_controla_sup                    char(01),
m_orcamento_periodo               char(01),
m_usa_cond_pagto                  char(01),
m_transf_estoq                    like par_sup_pad.par_ies,
m_serie_branca                    like par_sup_pad.par_ies,
p_ies_pagamento2                  like cond_pgto_cap.ies_pagamento,
p_par_cap                         record like par_cap.*,
g_ies_audit                       char(01),
p_msg                             char(100),
m_perm_copia_nf                   char(01),
m_perm_alt_cnd_emb                char(01),
m_mod_emb_nf_transf               char(01),
m_num_ar_ant                      like aviso_rec.num_aviso_rec,
m_num_nf_ant                      like nf_sup.num_nf,
m_num_oc_ant                      like aviso_rec.num_oc,
m_num_pedido_ant                  like aviso_rec.num_pedido,
m_cod_operacao_ant                like cod_fiscal_sup.cod_fiscal,
m_cod_operac_estoq_ant            like estoque_operac.cod_operacao,
m_ies_custo_medio                 like par_estoque.ies_custo_medio,
m_contr_pes_rec                   like par_sup_pad.par_ies,
m_num_pesagem                     smallint,
m_ies_armaz_itau                  like par_sup_pad.par_ies,
m_pc_nf_consig                    char(01),
m_gera_rsv_transf                 char(01),
m_pedido_venda                    like pedidos.num_pedido,
m_ped_venda_dest                  like pedidos.num_pedido_cli,
m_num_ped_fornec                  like prog_ordem_sup.num_pedido_fornec,
m_pedido_venda1                   like pedidos.num_pedido,
m_cod_empresa_orig                like aviso_rec_compl.cod_empresa_orig,
m_dat_fim_valid                   like par_sup_pad.par_data,
m_ver_aviso_rec                   smallint,
m_exst_rel_fre_indt               smallint,
m_existe_despprit                 smallint,
m_exst_forntriter                 smallint, # verifica existe sup_fornec_tri_ter
m_exst_carcoraut                  smallint, # verifica existe sup_cart_corr_aut
m_cap_recolhe_cide                smallint, # verifica existe cap_recolhe_cide
m_sup_ar_item_fisc                smallint,
m_cred_st_fat                     char(01),
m_classif_nfc                     char(01),
m_transf_incid_its                char(01),
m_informa_cliente_triang_con      char(01),
m_pre_unit_oc                     like sup_par_oc.parametro_num,
m_segmento                        char(01),
m_wms_q04                         integer,
m_wms_gravou_q04                  smallint,
m_valida_nf_frete_filiais         char(01),
m_alter_den_item_nf               char(01),
m_ies_relac_nf_benef char(1),
m_utiliz_totvs_colab              char(01),#projeto totvs colaboracao
m_exigir_duplicata_nfs            char(01),
m_ies_efetua_cont_manual_sup3760  char(01),
m_mes_sistema                     like par_pat.mes_sistema,
m_ano_sistema                     like par_pat.ano_sistema,
m_uf_origem                       like uni_feder.cod_uni_feder ### tevp32

define m_dados_copia                     record
num_nf_dest                       like nf_sup.num_nf,
ser_nf_dest                       like nf_sup.ser_nf,
ssr_nf_dest                       like nf_sup.ssr_nf,
fornec_dest                       like nf_sup.cod_fornecedor,
ies_nf_aguard_nfe_dest            like nf_sup.ies_nf_aguard_nfe
end record,
m_permite_alterar_nfs_transito    char(01)

define p_orig_uf_frt_nf_i                like par_sup_pad.par_ies,
p_ies_forn_dif_pc                 like par_sup_pad.par_ies,
p_cod_fiscal_c                    like cod_fiscal_sup.cod_fiscal,
p_ies_orig_oper                   like estoque_operac.ies_origem,
p_cod_oper_ent_comp               char(04),
p_contador                        smallint,
p_cod_local_rec                   char(10),
p_ies_rec_item_cancel             char(01),
p_ies_contagem                    char(01),
p_ies_custo_grade                 char(01),
p_ies_bloq_cont                   char(01),
p_ies_prim_cnd                    smallint,
p_cod_gru_desp                    like aviso_rec.gru_ctr_desp_item,
p_ies_passou                      smallint,
p_tem_erro                        smallint,
p_cont_erros                      smallint,
p_ar_iss                          record like ar_iss.*,
p_nf_sup_erro                     record
empresa                           like nf_sup_erro.empresa,
num_aviso_rec                     like nf_sup_erro.num_aviso_rec,
num_seq                           like nf_sup_erro.num_seq,
des_pendencia_item                like nf_sup_erro.des_pendencia_item,
ies_origem_erro                   like nf_sup_erro.ies_origem_erro,
ies_erro_grave                    like nf_sup_erro.ies_erro_grave
end record

define p_ies_mod_contrato                like par_sup_pad.par_ies,
p_ies_grava_erro_4                like par_sup_pad.par_ies,
p_ies_situa_ar                    like aviso_rec.ies_situa_ar,
p_alt_val_nf_frt                  char(01),
p_nom_resp_aceite                 char(08),
p_mot_remes_terc                  like motivo_remessa.cod_motivo_remessa,
p_ies_transf_unid                 like par_sup_pad.par_ies,
p_ies_cfop99                      like par_sup_pad.par_ies,
m_cod_tip_desp_cons               like tipo_despesa.cod_tip_despesa,
m_cod_grp_desp_fat                like grupo_ctr_desp.gru_ctr_desp

define p_ies_item_estoq                  like ordem_sup.ies_item_estoq,
p_ies_insp_recebto                like ordem_sup.ies_insp_recebto

define p_stat_88                         smallint,
p_ies_imp_rendar                  char(01),
p_ies_imp_issr                    char(01),
p_ies_imp_ret_inssr               char(01),
p_ies_imp_inss_rurr               char(01),
m_controles                       char(300),
p_ies_busca_loclib                char(01),
p_ies_wis_instalado               char(01)

define p_base_ipi                 array[999] of record
val_liquido_item                  decimal(15,2)
end record ,
p_ies_canc_nc                     smallint,
p_ies_canc                        smallint,
p_ies_nfe_emit                    char(01),
p_aviso_rec_compl_sq              record like aviso_rec_compl_sq.*,
p_val_imposto                     like nf_sup.val_ipi_nf,
p_num_nf_dev                      like nf_consig_item.num_nff,
p_num_seq_dev                     like nf_consig_item.num_sequencia,
p_qtd_devolvida                   like nf_consig_dev.qtd_devolvida

define p_cod_oper_ent_ind                like par_sup_pad.par_txt,
p_oper_ent_ind_g                  like par_sup_pad.par_txt

define p_qtd_dig_cfop                    char(01),
m_count_seq                       smallint,
m_num_processo                    like processo_imp.num_processo,
m_ies_utiliz_provisao             char(01),
m_utiliz_nfm_import               char(01),
m_inicio_provisao                 decimal(6,0),
m_tipo_nf                         like nf_sup.ies_nf_aguard_nfe,
m_data_ent                        like nf_sup.dat_entrada_nf,
m_grupo_despesa_nfr               char(01),
m_exporta_nf                      char(01),
m_bloq_entr_data                  char(01),
m_bloq_entr_preco                 char(01),
m_ies_diverg_preco_c              char(01),
m_consis_diverg_preco             like sup_par_divg_rec.par_ind_especial, #733238#
m_parametro_val                   like sup_par_divg_rec.parametro_val,    #733238#
m_qtd_dias_nf_venc                decimal(3,0),
m_cod_emp_orig                    like empresa.cod_empresa,
m_nfr_import                      smallint,
m_ind_mark                        smallint

define ma_inf_ar                         array[999] of record
num_seq                           like aviso_rec.num_seq,
num_pedido                        like aviso_rec.num_pedido,
num_oc                            like aviso_rec.num_oc
end record

define m_cod_empresa_uni                 char(02),
m_cod_parametro                   char(18)

define m_ies_control_consig              char(01)

define m_ies_cnpj_insc                   char(01),
m_num_cgc_cpf                     like fornecedor.num_cgc_cpf,
m_ins_estadual                    like fornecedor.ins_estadual,
m_cnpj_nf_com_pc                  char(01),
m_cfop_nfr                        char(01),
m_cfop_nfs                        char(01),
m_serie_nfs                       char(01),
m_cont_insp_especial              char(01),
m_consiste_nf_integr              char(01) #os359707

define m_incid_icms_nfs                  char(01),
m_ies_anexa_dupl                  char(01),
m_prog_nfe                        like par_sup_pad.par_txt,
m_ies_cit_item                    char(01),
m_empr_utiliz_mp66                like par_sup_pad.par_ies,
m_pct_bc_pis                      like sup_pct_bc_imposto.pct_bas_calc,
m_transf_saida                    char(01),
m_dat_hor_proces                  like audit_ar.dat_hor_proces,
m_atualiza_nf_trans               char(01)

define m_ies_inf_aut_barra                like par_sup_pad.par_ies,
m_consulta_ord_descres             char(01),
m_ent_manual_transf                char(01), #os372636
m_proc_imp_rec_nfr_consig          char(01),
m_prog_conhec_frete                char(08)

define m_grava_sup0964                    smallint,
m_nf_aguard_nfe_ant                like nf_sup.ies_nf_aguard_nfe,
m_trata_nf_em_transito             char(01),
m_executou_sup3771                 smallint,
m_contr_terc_no_dep                char(01),
m_gerar_os_recb_mat_terc           char(01),
m_recalcula_impostos_nf_imp        char(01),
m_cons_dat_emis_ped                char(01),
m_utiliza_dds_fortaleza            char(01),
m_natureza                         char(01),
m_num_prog_arg                     char(08),
m_tipo_processo_arg                char(15),
m_alterou_preco                    smallint,
m_solicitou_mp                     smallint,
m_solicitou_ciap                   smallint,
m_confirmou_mp                     smallint,
m_confirmou_ciap                   smallint,
m_confirm_compex_mp                char(01),
m_confirm_compex_ciap              char(01),
m_cnd_pgto_sem_intr_cap            like cond_pgto_cap.cnd_pgto,
m_nfp_incl_apos_encerr             smallint,
m_integracao_cre                   smallint,
m_via_transporte_nota              like via_transporte.cod_via_transporte,
m_cod_via_transp                   like proc_imp_compl.cod_via_transp,
m_diver_nf                         char(01),
m_pct_toler_nf                     decimal(6,3),
m_diver_custo                      char(01),
m_pct_toler_custo                  decimal(6,3),
m_env_email_solic_rec_pc           char(01),
m_mov_qtd_ser                      char(01),
m_cfop_compl_dic_se                char(1),   # 409509
m_cons_modific                     char(01),
m_informa_peso_entrada_nf          char(01),
m_ies_msg_contr_terc               char(01), # 472270
m_ies_local_insp                   like par_sup_pad.par_ies,
m_visualizar_notas_em_transito     char(01),
m_permite_transf_duplicada_emp     char(01),
m_den_item                         like item.den_item,
m_peso_nf                          like sup_par_ar.parametro_val ,
m_funcao                           char(30),
m_consistir_oc_estrutura           char(01),
m_wms_instal                       char(1),  # wms - columbia
m_segmto_utilizacao                char(1),  # wms - columbia
m_utiliza_codf_deposit             char(1),  # wms - columbia
m_horario_alteracao_wms            datetime year to second, # wms - columbia
m_tempo_gasto_ditacao_nota         char(10), # wms - columbia
m_wms_depositante                  char(15), # wms - columbia
mr_troca_pgto                      record
resp_pgto_armazenagem       char(01),
outro_resp_pgto_armaz       char(15),
dias_prazo_armazenagem      smallint,
transf_pgto_apos_prazo      char(01)
end record,
m_cfop_nota_fiscal_provis          char(5),  # wms - columbia
m_cfop_nota_fiscal_definit         char(5),  # wms - columbia
m_cfop_compl_nota_fiscal_provis    char(5),  # wms - columbia
m_cfop_compl_nota_fiscal_definit   char(5),  # wms - columbia
m_tipo_documento                   char(1),  # wms - columbia
m_tipo_documento_old               char(1),  # wms - columbia,
m_item_interno                     like sup_par_itforn.item, # wms - columbia
m_alterou_tipo_modif               smallint,
m_grupo_desp_nfp_com_cred_nfm      like grupo_ctr_desp.gru_ctr_desp,
m_utiliz_regulariz_fiscal          char(01),
m_nf_tipo_x                        smallint, ### os 511148
m_devol_consig_venda_parcial       char(01), ### os 512218
m_devol_cliente_parcial            char(01),  ### os 509930
m_num_ar_relac                     like aviso_rec.num_aviso_rec, #os450170
m_cfop_serv                        smallint, #os450170
m_alterar                          smallint,
m_devol_nf_parcial_venda           smallint,
m_devol_consig_total               smallint, #--# declaracao - tdtsu1 #--#
m_inclui_observacao_item_ar        char(01),
m_abre_aut_tela_erros              char(01), #o.s. 529316
m_icms_ret_base_calc_pis_cofins    char(01), #542889
m_utiliza_nf_eletronica            char(01), #o.s 534866
m_validou_cfop                     smallint, #os 550997
m_exigir_dupl_nff_vencto_pc        char(01),  #os 561.763
m_emitente_nf_filial               like fornecedor.cod_fornecedor, #os 603111
m_possui_regime_filial             smallint,
m_is_clie_319                      smallint, ### tqaft6
m_nf_cap_fiscal                    char(1), ### mman-4490
m_cap_utiliz_var_camb_calc_reali   char(01) ### dmanentlgx-1985

#os490902
define ma_nf_erro                        array[500] of record
seleciona                         char(01),
dat_emis_nf                       like nf_sup.dat_emis_nf,
num_nf                            like nf_sup.num_nf,
ser_nf                            like nf_sup.ser_nf,
ssr_nf                            like nf_sup.ssr_nf,
cod_item                          like aviso_rec.cod_item
end record

define ma_aviso_rec                      array[500] of record
num_aviso_rec                     like aviso_rec.num_aviso_rec,
num_seq                           like aviso_rec.num_seq
end record

define m_data                            date,
m_user                            like usuario.nom_usuario,
m_altera_cndpgto_mod_nf_transito  char(01),
m_permite_ent_mesma_nfe_emp_dif   char(01), #555962
m_cod_item_cred_transf_icms       char(15),  #502143
m_dat_entrada_ant                 date,
m_reg_entr_doc_rec                like re.cod_regist_entrada, #778903
m_utiliza_num_nfe                 char(01), #762211
m_num_nf_eletronica               decimal(15,0), #762211
m_retorno_num_nfe                 smallint,  #ch-tfbgot
m_num_nff_aux                     like fat_nf_mestre.nota_fiscal ### tvihmo

#os490902
define m_qtd_dias_final_export           smallint #os 514411
define m_cons_val_ret_rem                char(01) #-- os 548208
#-- os 562700 inicio --#
define mr_tela                           record
num_nff                           like nf_sup.num_nf,
ser_nff                           like nf_sup.ser_nf,
ssr_nff                           like nf_sup.ssr_nf
end record
define mr_tela_relac_nf_rem_retorno      record
num_aviso_rec                     like aviso_rec.num_aviso_rec,
num_seq                           like aviso_rec.num_seq,
cod_fornecedor                    like item_em_terc.cod_fornecedor,
raz_social_reduz                  like fornecedor.raz_social_reduz,
cod_item                          like item_em_terc.cod_item,
den_item_reduz                    like item.den_item_reduz,
qtd_declarad_nf                   like aviso_rec.qtd_declarad_nf
end record
define ma_tela_relac_nf_rem_retorno      array[500] of record
dat_emis_nf                       like item_em_terc.dat_emis_nf,
num_nf                            like item_em_terc.num_nf,
num_sequencia                     like item_em_terc.num_sequencia,
qtd_saldo                         like item_em_terc.qtd_tot_remessa,
qtd_devolvida                     like aviso_rec.qtd_declarad_nf
end record
define ma_tela_relac_nf_compl            array[500] of record
ies_incl_contab                   like item_em_terc.ies_incl_contab
end record

define m_den_endereco                    char(15),
m_den_volume                      char(15),
m_den_dat_prod                    char(15),
m_den_dat_valid                   char(15),
m_den_peca                        char(15),
m_den_serie                       char(15),
m_den_comprimento                 char(15),
m_den_largura                     char(15),
m_den_altura                      char(15),
m_den_diametro                    char(15),
m_tot_qtd_devolvida               like item_em_terc.qtd_tot_recebida,
m_nf_eletronica_impr              smallint,#595717
m_dat_alteracao_local_rem_ret     date,     #732879 antonio
m_emp_trabalha_com_patr           char(02), #ch 721708
m_indicador_aduaneiro             char(01), #a24579
m_criou_temp_peso                 smallint  #a24579


define mr_dados_tela_ant                 record 
ser_nf                            like nf_sup.ser_nf,
ssr_nf                            like nf_sup.ssr_nf,
ies_nf_aguard_nfe                 like nf_sup.ies_nf_aguard_nfe,
cod_operac_estoq                  like aviso_rec.cod_operac_estoq ,
cod_operacao                      like nf_sup.cod_operacao     ,
cod_fiscal_compl                  like aviso_rec_compl.cod_fiscal_compl ,
dat_emis_nf                       like nf_sup.dat_emis_nf      ,
dat_entrada_nf                    like nf_sup.dat_entrada_nf   ,
cnd_pgto_nf                       like nf_sup.cnd_pgto_nf      ,
cod_mod_embar                     like nf_sup.cod_mod_embar    ,
num_nf                            like nf_sup.num_nf           , 
ies_especie_nf                    like nf_sup.ies_especie_nf     
end record

define m_dat_prx_fecha_est               date,
m_eh_modificacao                  smallint

define ma_grades                         array[05] of record
num_seq_controle                  smallint,
ies_grade                         char(02),
cod_grade                         like grade.cod_grade
end record

define mr_dados_tela                     record
qtd_total                         decimal(15,3),
seq_tabulacao                     smallint,
qtd_remessa                       decimal(15,3),
qtd_recebida                      decimal(15,3),
qtd_devolvida                     decimal(15,3)
end record

define mr_dados_telar                    record
qtd_total                         decimal(15,3),
seq_tabulacao                     smallint,
qtd_remessa                       decimal(15,3),
qtd_recebida                      decimal(15,3),
qtd_devolvida                     decimal(15,3)
end record

define mr_sup_itterc_grade               record like sup_itterc_grade.*,
m_ies_nf_remessa_x_especie        smallint

define m_informa_controles_sup3760       char(01),
m_transf_ativo_imob               smallint

define m_contagem_automatica             smallint

define m_permite_alt_inf_compl_nf_cap    char(500),
m_existe_cap                      smallint,
m_altera_nfm_7_para_6_aut         char(01),
m_mod_embarque_nfm_importacao     like modo_embarque.cod_mod_embar
define m_emissao_nf_tipo_7               char(1),
m_selec_itens_nfp_importacao      char(1),
m_utiliza_engenharia_grade        char(01),
m_credito_pis_cofins              char(01),
m_msg_nfm_total                   char(200),
m_desc_nf_rec                     char(01)

define m_decl_cq_it_pis                  smallint,
m_decl_cq_it_pis2                 smallint,
m_exclusao_sup376_perf            char(01),
m_valida_sup8028                  char(01),
m_declare_cq_drawback             smallint

define m_operacao_gtc                    smallint,
m_nf_anulacao                     like sup_par_ar.par_ind_especial,
m_finalidade                      char(1),
m_ies_transf_ai                   smallint,
m_anul_frete                      smallint,
m_tipo_frete                      char(3)

define m_nfe_cce                smallint,
m_status_nfe_cce         smallint,
m_indicador_nfe_cce      char(14),
m_protocolo_nfe_cce      like obf_carta_correcao_eletr.protocolo,
m_data_aut_prot_nfe_cce  like obf_carta_correcao_eletr.dat_hor_evento_rec,
m_existe_crer48          smallint,  #teoalv
m_valida_data_oc_ar      char(01),
m_inclui_item_nota       smallint,
m_integra_mensagem       smallint,
m_perm_ent_nf_item_wms_s_dimens char(01), #tpjeo6
m_num_nfe                decimal(15,0), ### manmat01-5083
m_num_nfe_r              decimal(15,0), ### manmat01-5083
m_nfd_cupom_fiscal       smallint,
m_existe_uf_urf          char(01)

define m_tem_obf_par_totvs_colab char(1)

define mr_array_transito        array[999] of record
num_seq                  like aviso_rec.num_seq,
ies_situa_ar             like aviso_rec.ies_situa_ar,
ies_liberacao_ar         like aviso_rec.ies_liberacao_ar,
ies_liberacao_cont       like aviso_rec.ies_liberacao_cont,
ies_liberacao_insp       like aviso_rec.ies_liberacao_insp,
ies_diverg_listada       like aviso_rec.ies_diverg_listada,
ies_item_estoq           like aviso_rec.ies_item_estoq,
cod_cla_fisc             like aviso_rec.cod_cla_fisc,
cod_unid_med_nf          like aviso_rec.cod_unid_med_nf,
ies_tip_incid_ipi        like aviso_rec.ies_tip_incid_ipi,
ies_bitributacao         like aviso_rec.ies_bitributacao,
qtd_recebida             like aviso_rec.qtd_recebida,
cod_fiscal_item          like aviso_rec.cod_fiscal_item,
gru_ctr_desp_item        like aviso_rec.gru_ctr_desp_item,
cod_local_estoq          like aviso_rec.cod_local_estoq,
ies_incid_icms_ite       like aviso_rec.ies_incid_icms_ite,
ies_contabil             like aviso_rec.ies_contabil,
cod_tip_despesa          like aviso_rec.cod_tip_despesa
end record

define m_cta_tran_unid            char(1),
m_considerar_conta_sup7240 char(01),
m_log_filial               char(01)

define m_preco_bruto    char(1)

define m_integ_cli_forn_transp_datasul char(01),
m_integ_codif_cli_forn_transp   char(01),
m_duplicata                     smallint,
m_num_nf                        decimal(15,0),
m_consiste_dia_ce_reinf         smallint

main
	defer interrupt
	options next     key control-f,
	previous key control-b

	if log_initapp("suprec") <> 0 then
		exit program #sem permiss�o de acesso
	end if

	let m_cod_empresa_orig = p_cod_empresa
	let p_cons_arg = false
	let g_devol_nf_parcial = false ### os 511148

	if num_args() > 0  then
		let m_num_prog_arg      = arg_val(1)
		let p_cod_empresa_arg   = arg_val(2)
		let p_num_aviso_rec_arg = arg_val(3)
		let m_tipo_processo_arg = arg_val(4)
		let p_cod_empresa = p_cod_empresa_arg

		if not log005_seguranca(p_user,"suprimen","sup3760","co") then
			exit program
		end if
	else
		let m_num_prog_arg      = null
		let p_cod_empresa_arg   = null
		let p_num_aviso_rec_arg = null
		let m_tipo_processo_arg = null
	end if

	if m_num_prog_arg = "sup0480x" or m_tipo_processo_arg = 'assume_erros' then
		initialize p_nf_sup to null
		let p_nf_sup.num_aviso_rec = p_num_aviso_rec_arg

		#--# tdw312 - criar tabelas temporarias para assumir os erros  #--#
		if not sup3760_leitura_parametro() then
			return
		end if
		#--# tdw312 - criar tabelas temporarias para assumir os erros  #--#

		call sup3760_assume_erros_nf()
		exit program
	end if

	initialize m_dat_entrada_ant  to null #798726#
	initialize p_cod_empresa_dest to null
	initialize m_nfe_cce               to null
	initialize m_status_nfe_cce        to null
	initialize m_indicador_nfe_cce     to null
	initialize m_protocolo_nfe_cce     to null
	initialize m_data_aut_prot_nfe_cce to null
	initialize m_preco_bruto           to null
	let m_nfe_cce = false

	whenever error continue
	select cod_empresa_destin
	into p_cod_empresa_dest
	from emp_orig_destino
	where emp_orig_destino.cod_empresa_orig = p_cod_empresa
	whenever error stop
	if sqlca.sqlcode <> 0         or
		p_cod_empresa_dest is null or
		p_cod_empresa_dest = "  "  then
		let p_cod_empresa_dest = p_cod_empresa
	end if

	call sup3762_m_versao_funcao()

	call sup3760_controle()
end main

#--------------------------#
function sup3760_controle()
#--------------------------#
	define l_num_prog_imp_ar  like par_sup_pad.par_txt,
	l_ies_armaz_itau   like par_sup_pad.par_ies,
	l_count            smallint,
	l_cont             smallint,
	l_ind              smallint,
	l_num_oc_ar        like aviso_rec.num_oc,
	l_prog_contagem    like par_sup_pad.par_txt,
	l_num_nf           like nf_sup.num_nf,
	l_parametro_ind    like obf_par_grp_desp.parametro_ind,
	l_gru_ctr_desp_item like aviso_rec.gru_ctr_desp_item,
	l_item_triang      smallint,
	l_val_frete        like aviso_rec.val_despesa_aces_i,
	l_grp_desp_st      like frete_sup.gru_ctr_desp_frete,
	l_triang_em_terc   smallint,
	l_is_clie_319      smallint,                           #vanderlei - os 402676 #
	l_status           smallint,
	l_mensagem         char(200), # wms - columbia
	l_continua         smallint,  # wms - columbia
	l_altera_tipo      smallint   # wms - columbia
	define l_ies_tem_inspecao   like item_pend.ies_tem_inspecao, #732912 antonio
	l_continua_item_pend smallint,                        #732912 antonio
	l_processa_v_nf_vendas smallint,
	l_regime_aduaneiro   char(03),
	l_permite_alterar  char(1), #os sdimco
	l_permite          smallint,
	l_permite_acesso_tipo6     smallint

	## 407088
	define l_cod_fornecedor   like nf_sup.cod_fornecedor
	define l_data             datetime year to second
	# ch 739942 - rafael f. b. - 11/01/2010 #
	define l_permite_modificar  smallint

	let m_log004 = true

	call log006_exibe_teclas("01", p_versao)
	call sup376_inicializa_variaveis_globais()

	let m_ind_transf_estoq   = false
	let m_num_processo       = -1
	let p_inclu_item         = "n"
	let p_ord_forn           = true
	let p_cons_data          = false
	let p_ies_achou_itsup    = false
	let p_ies_canc_nc        = false
	let p_qtd_dias_emis_doc  = 0
	let m_ver_aviso_rec      = false
	let m_criou_temp_peso    = false
	let m_valida_sup8028     = "s"
	initialize p_val_imposto to null

	if not sup3760_leitura_parametro() then
		return
	end if

	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 1                  #
	if m_wms_instal = 's' and m_utiliza_codf_deposit = 's' then
		open window w_sup37601 at 2,2 with form "sup3760o"
		attribute(border, message line last, prompt line last, comment line last)
	else
		open window w_sup37601 at 2,2 with form "sup37601"
		attribute(border, message line last, prompt line last, comment line last)
	end if
	#----------------#

	display "                                                                               " at 20,01

	if p_num_aviso_rec_arg is not null then
		call sup376_busca_argumen()
		if p_entrou = 1 then
			display p_cod_oper_ant at 7,74
			let p_cod_oper_ant = null
		end if
	end if

	menu "opcao"
	before menu
	if log_existe_epl('sup3760y_before_process_menu') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call sup3760y_before_process_menu()
	end if

	if log_existe_epl("supy163_verifica_cliente") then
	else
		hide option ":consulta_seriais"
	end if

	#-- os 562700 inicio --#
	if m_ies_nf_remessa_x_especie <> "0" then
	else
		hide option "(_relac_nf_remessa_retorno"
	end if

	#-- os 562700 fim --#
	if g_ies_wis_instalado = "s" then
	else
		hide option "-libera_wis"
	end if

	if m_perm_copia_nf = "s" then
	else
		hide option "@_copia_nf"
	end if

	if m_ies_control_consig = "s" then
	else
		hide option "%_fatur_x_reajuste"
	end if

	if m_contr_pes_rec = "s" then
	else
		hide option "<pesagens"
	end if

	if m_exporta_nf = "d" then
		hide option "/_cta_deb_fornec"
	end if

	{if m_ies_bloq_cc_os <> "5" and
	m_controla_gao = "n" then
	hide option "*_orcamento_contas"
end if}

if find4glfunction('supy9_verifica_bxa_est_aut') then
	if supy9_verifica_bxa_est_aut() then
		show option "[_efetua_baixa_aut"
	else
		hide option "[_efetua_baixa_aut"
	end if
else
	hide option "[_efetua_baixa_aut"
end if

# chamado 729881 - wms
if find4glfunction('wmsy18_vincula_q04') then
	show option "}_desvincula_q04"
else
	hide option "}_desvincula_q04"
end if
# fim chamado 729881

if m_permite_alterar_nfs_transito = "s" then
	show option "]_altera_ordem/pedido"
else
	hide option "]_altera_ordem/pedido"
end if
#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 22                 #
if m_wms_instal = "s" then
	hide option "5-relac_depos_fornec"
end if
#---------------#

if find4glfunction('supy64_cliente_915') then
	if not supy64_cliente_915() then #os490902
		hide option "j_aprova_erro_qtd_dias"
	end if
else
	hide option "j_aprova_erro_qtd_dias"
end if

# inicio chamado 759.393
if find4glfunction('y_sup3760_validacoes_apos_consistencias_nf') = false then
	hide option "integrar"
end if
# fim chamado 759.393

if m_ies_relac_nf_benef = "n" then
	hide option "+_relac_rem_x_ret"
end if

if m_utiliz_totvs_colab = "s" then
	show option ".consul_chave_acesso"
else
	hide option ".consul_chave_acesso"
end if

### tpivh1 - cto0130 � programa espec�fico do cliente cairu, a manuten��o deste fonte � de responsabilidade da aceex)
if find4glfunction('cto0130_controle') then
	show option "0-ar_ae"
else
	hide option "0-ar_ae"
end if

if not log_existe_epl('sup3760y_menu_outros') then
	hide option 'outros'
end if
let m_integra_mensagem  = false
call sup3760_save_cur_field_name('sup3760_menu_1')

command "incluir" "inclui nota fiscal "
display "                                                                               " at 20,01
display "                                                                               " at 10,01
display "   " at 5,54
message ""
let p_cod_empresa = m_cod_empresa_orig
if log005_seguranca(p_user,"suprimen","sup3760","in")  then
	let g_devol_nf_parcial       = false ### os 511148
	let m_alterar                = false
	let m_devol_nf_parcial_venda = false

	if log_existe_epl('sup3760y_before_process_menu_inclusao_aviso_rec') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: nf_sup.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: nf_sup.num_aviso_rec

		call log_setvar('funcao', "inclusao")
		#epl fun��o que est� sendo executada
		#epl tipo: char(20)

		call sup3760y_before_process_menu_inclusao_aviso_rec()
	end if

	call sup376_inclusao_aviso_rec()
	if m_wms_instal = 's' then
		if find4glfunction('wms6612_consulta_sup_par_ar') then
			if p_dados_tela.num_aviso_rec <> 0 then
				call wms6612_atualiza_sup_par_ar(p_dados_tela.num_aviso_rec,
				m_indicador_aduaneiro,
				m_tipo_documento)
			end if
			call wms6612_consulta_sup_par_ar(p_dados_tela.num_aviso_rec)
			returning l_regime_aduaneiro
			display l_regime_aduaneiro at 5,54 attribute(reverse)
		end if
	end if

	if g_nao_inclui then
		let m_nfe_cce = false
		call sup376_modificacao_aviso_rec()
	end if

	call sup3762_inicializa_variaveis()
	let g_devol_nf_parcial       = false
	let m_alterar                = false
	let m_devol_nf_parcial_venda = false

	if m_existe_crer48 then
		call crer48_cria_t_clientes_crer48()
	end if

end if
let int_flag = 0

command key("l") "incl.itens" "inclui um novo item na nota fiscal "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 33                 #
let l_continua = true
if m_wms_instal = "s" then
	call wms6135_permissao_alteracao_nf_receb(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	true) returning l_status, l_mensagem
	if not l_status then
		call log0030_processa_mensagem(l_mensagem clipped,"exclamation",0)
		let l_continua = false
	end if
end if
#---------------#
#wms - in�cio chamado 763456
if find4glfunction('wmsy18_permite_modificacao_item_nf_sup') then
	if not wmsy18_permite_modificacao_item_nf_sup(p_cod_empresa,p_dados_tela.num_aviso_rec, 0) then
		let l_continua = false
	end if
end if
#wms - fim chamado 763456

if l_continua then
	if m_integra_mensagem then
		call log0030_mensagem("nota integrada ao tradeeasy. n�o permite altera��o.","info")
		let l_continua = false
	end if
end if

if l_continua then
	### dmanentlgx-168
	if find4glfunction('obf50210_verifica_relac_manifesto') then
		if obf50210_verifica_relac_manifesto(p_cod_empresa, p_dados_tela.num_aviso_rec, p_dados_tela.ies_nf_aguard_nfe, "m") then
			let l_continua = false
		end if
	end if
end if

if l_continua then
	##os 578941
	if sup3760_nf_dev_relac_nf_saida(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		"inclusao") then
		call log0030_mensagem("nf de devolu��o cliente relacionada a nf de venda. n�o � permitido incluir novos itens.","exclamation")
		let l_continua = false
	end if
end if

#--inicio--os 502143 #
let l_is_clie_319 = false
if find4glfunction('supy101_cliente_319') then
	let l_is_clie_319 = supy101_cliente_319()
end if

if find4glfunction("supy117_nfe_transito_ja_impressa") then
	if supy117_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.ies_especie_nf, true) then
		let l_continua = false
	end if
end if

if  l_is_clie_319 = true  and (p_dados_tela.cod_operacao = '5.601' or p_dados_tela.cod_operacao = '6.601')
	and m_cod_item_cred_transf_icms = p_array[1].cod_item then
	call log0030_mensagem('nota fiscal de transfer�ncia de icms dever� ter apenas um item.','exclamation')
else
	if l_continua then
		if p_dados_tela.num_nf  is not null then
			if log005_seguranca(p_user,"suprimen","sup3760","in")  then
				if sup376_verifica_fechamento() then
					if sup3760_isprocesso_importacao() then
						call log0030_mensagem("a��o n�o permitida. nota fiscal complementar gerada atrav�s do processo de importa��o.","exclamation")
					else
						call sup376_consulta_dados()
						if p_ies_canc = false  then
							if sup376_nfe_emitida() then
								call log0030_mensagem(" nota fiscal ja impressa nao pode ser alterada ","exclamation")
							else
								let p_ies_nfe_emit = "n"

								whenever error continue
								select ies_nfe_emit
								into p_ies_nfe_emit
								from nfe_sup_compl
								where cod_empresa   = p_nf_sup.cod_empresa
								and num_aviso_rec = p_nf_sup.num_aviso_rec
								whenever error stop

								if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
									call log0030_processa_mensagem('select','nfe_sup_compl',false)
									return
								end if

								if p_ies_nfe_emit = "s" then
									if m_utiliza_nf_eletronica = 's' then
										call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa, p_nf_sup.num_aviso_rec, "excluir")
										returning p_status, m_msg
										if p_status then
											let m_msg = 'esta nota fiscal foi enviada para a sefaz e n�o poder� ser modificada.'
											call log0030_mensagem(m_msg,"excl")
											let p_ies_canc = true
										end if
									end if
								else
									if m_utiliza_nf_eletronica = 's' then
										call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa, p_nf_sup.num_aviso_rec, "excluir")
										returning p_status, m_msg
										if p_status then
											let m_msg = 'esta nota fiscal foi enviada para a sefaz e n�o poder� ser modificada.'
											call log0030_mensagem(m_msg,"excl")
											let p_ies_canc = true
										end if
									end if
								end if

								if p_ies_canc = false then
									### os 511148
									if sup3762_verifica_devol_nf_consig(p_nf_sup.ies_especie_nf,
										p_nf_sup.ies_nf_aguard_nfe,
										p_nf_sup.cod_empresa,
										p_nf_sup.num_nf,
										p_nf_sup.cod_fornecedor,
										" ") then
										if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
											"n") then
											if not p_ies_incl_cap then
												if p_dados_tela.num_aviso_rec is not null then
													call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
													if sup0631_verifica_relac("nf",
														p_nf_sup.num_nf,
														p_nf_sup.ser_nf,
														p_nf_sup.ssr_nf,
														p_nf_sup.cod_fornecedor) = true then
													else
														if p_dados_tela.ies_especie_nf = "tck" and
															sup376_existe_frete_relac() then
															call log0030_mensagem( " ticket com frete nao pode ser alterado ","exclamation")
														else
															call sup376_inclusao_item_aviso_rec()
														end if
													end if
												else
													call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
												end if
											else
												call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
											end if
										end if
									end if
								end if
							end if
						else
							call log0030_mensagem("nota fiscal cancelada.","exclamation")
						end if
					end if
				else
					call log0030_exibe_ultima_mensagem()
				end if
			end if
		else
			call log0030_mensagem(" consulte previamente para incluir itens ","exclamation")
		end if
	end if
	if m_wms_instal = 's' then
		if find4glfunction('wms6612_atualiza_sup_par_ar') then
			if p_dados_tela.num_aviso_rec is not null and
				p_dados_tela.num_aviso_rec <> 0 then
				if m_indicador_aduaneiro is null or m_indicador_aduaneiro = ' ' then
					let m_indicador_aduaneiro = wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec)
				end if
				call wms6612_atualiza_sup_par_ar(p_dados_tela.num_aviso_rec,
				m_indicador_aduaneiro,
				m_tipo_documento)
			end if
		end if
	end if
end if

command "consultar" "consulta nota fiscal"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
let int_flag = 0
let p_cod_empresa = m_cod_empresa_orig
let m_integra_mensagem  = false
if log005_seguranca(p_user,"suprimen","sup3760","co")  then
	let p_cons_arg = false
	call sup3760_inicializa_dados_array_pedido() ### tetkiv
	call sup376_consulta_aviso_rec("normal")
	if sup3762_busca_frete_sup() = false then
		let p_frete_sup.num_conhec = 0
	end if
	if find4glfunction('sup3762_verifica_integracao_mensagem') = true then
		let m_integra_mensagem = sup3762_verifica_integracao_mensagem(p_dados_tela.num_aviso_rec)
	else
		let m_integra_mensagem = false
	end if
	### teoalv - cria tabela tempor�ria chamada no crer48
	if m_existe_crer48 then
		call crer48_cria_t_clientes_crer48()
	end if
	if p_ies_cons then
	next option "seguinte"
end if
end if
let int_flag = 0

command "seguinte"   "exibe o proximo item encontrado na consulta"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
call sup3760_inicializa_dados_array_pedido() ### tetkiv
call sup376_paginacao("seguinte")

command "anterior"   "exibe o item anterior encontrado na consulta"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
call sup3760_inicializa_dados_array_pedido() ### tetkiv
call sup376_paginacao("anterior")

command key("@") "@_copia_nf" "permite copia de nota fiscal "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_dados_tela.num_nf is not null then
	if log005_seguranca(p_user,"suprimen","sup3760","ex")  then
		call sup376_copia_nf()
	end if
else
	error " consulte previamente para executar esta funcao"
end if

command "exclui_item"  "exclui um item da nota fiscal  "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01

let l_continua = true

if sup0812_verifica_nota_transferencia(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl) then
	if log0040_confirm(21,04, "esta � uma nota fiscal de transfer�ncia entre unidades. deseja realmente exclu�-la? ") = false then
		let l_continua = false
	end if
end if
#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 33                 #

if m_wms_instal = "s" then
	call wms6135_valida_exclusao_nf_wms(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	true) returning l_status, l_mensagem
	if not l_status then
		call log0030_processa_mensagem(l_mensagem clipped,"exclamation",0)
		let l_continua = false
	end if
end if
#---------------#

if find4glfunction("supy117_nfe_transito_ja_impressa") then
	if supy117_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.ies_especie_nf, true) then
		let l_continua = false
	end if
end if

if m_integra_mensagem then
	call log0030_mensagem("nota integrada ao tradeeasy. n�o permite excluir.","info")
	let l_continua = false
end if
if l_continua then
	if p_dados_tela.num_nf is not null then
		if log005_seguranca(p_user,"suprimen","sup3760","ex")  then
			if not sup3760_verifica_possui_anulacao_frete() then  ### tfnlwb
				if sup3760_isprocesso_importacao() then
					call log0030_mensagem("a��o n�o permitida. nota fiscal complementar gerada atrav�s do processo de importa��o.","exclamation")
				else
					if sup376_verifica_fechamento() then
						call sup376_consulta_dados()
						if p_ies_canc = false then
							let p_ies_nfe_emit = "n"

							whenever error continue
							select ies_nfe_emit
							into p_ies_nfe_emit
							from nfe_sup_compl
							where cod_empresa   = p_nf_sup.cod_empresa
							and num_aviso_rec = p_nf_sup.num_aviso_rec
							whenever error stop

							if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
								call log0030_processa_mensagem('select','nfe_sup_compl',false)
								return
							end if

							if p_ies_nfe_emit = "s" then
								if m_utiliza_nf_eletronica = 's' then
									call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa, p_nf_sup.num_aviso_rec, "excluir")
									returning p_status, m_msg
									if p_status then
										let m_msg = 'esta nota fiscal foi enviada para a sefaz e n�o poder� ser modificada.'
										call log0030_mensagem(m_msg,"excl")
										let p_ies_canc = true
									end if
								end if
							else
								if m_utiliza_nf_eletronica = 's' then
									call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa, p_nf_sup.num_aviso_rec, "excluir")
									returning p_status, m_msg
									if p_status then
										let m_msg = 'esta nota fiscal foi enviada para a sefaz e n�o poder� ser modificada.'
										call log0030_mensagem(m_msg,"excl")
										let p_ies_canc = true
									end if
								end if
							end if

							if p_ies_canc = false then
								if sup376_nfe_emitida() then
									call log0030_mensagem(" esta nota ja foi impressa, deve ser cancelada.","exclamation")
									let p_ies_canc = true
								end if
							end if
							if p_ies_canc = false then
								if (p_nf_sup.ies_incl_contab = "s" or p_nf_sup.ies_incl_contab = "m") then
									call sup376_verifica_lancamentos()
								end if

								if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, p_conta_lanc,
									"1", "n") then
									call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
									if sup0631_verifica_relac("nf",
										p_nf_sup.num_nf,
										p_nf_sup.ser_nf,
										p_nf_sup.ssr_nf,
										p_nf_sup.cod_fornecedor) = true then
									else
										if sup376_verifica_carta_correcao() = false and sup3760_existe_nota_debito_automatica() = false  then
											call sup376_deleta_ar_frete_cesta()
											if sup3760_verifica_devolucao("excl_item") = false then
												if m_gera_rsv_transf = "s" then
													### os 182871 ###
													if p_dados_tela.ies_nf_aguard_nfe = "8" then
														#exclui item
														for l_ind = 1 to 999

															initialize l_num_oc_ar to null
															select num_oc
															into l_num_oc_ar
															from aviso_rec
															where cod_empresa   = p_cod_empresa
															and num_aviso_rec = p_dados_tela.num_aviso_rec
															and num_seq       = l_ind
															if sqlca.sqlcode <> 0 then
																# nao tem mais sequencia.
																exit for
															end if

															select num_pedido_fornec
															into m_num_ped_fornec
															from prog_ordem_sup
															where cod_empresa      = p_cod_empresa
															and num_oc           = l_num_oc_ar
															and num_versao       = 001
															and num_prog_entrega = 001

															let m_pedido_venda = m_num_ped_fornec[1,6]
															if sup3760_busca_ped_venda() then
															else
																error " problemas na busca do pedido de venda"
																sleep 2
																return
															end if

															let l_cont = 0
															select count(*)
															into l_cont
															from ordem_montag_item, ordem_montag_mest
															where ordem_montag_item.cod_empresa = p_cod_emp_transf
															and ordem_montag_item.num_pedido  = m_pedido_venda1
															and ordem_montag_mest.cod_empresa = p_cod_emp_transf
															and ordem_montag_mest.num_om      = ordem_montag_item.num_om
															and ordem_montag_mest.ies_sit_om  = "n"
															if sqlca.sqlcode <> 0 or l_cont is null then
																let l_cont = 0
															end if
															if l_cont > 0 then
																message " opcao nao permitida, existe ordem de montagem p/ped origem" attribute(reverse)
																return
															end if
														end for
														if sup3760_verifica_nota_integrada_wms() = false then #1
															call sup376_exclusao_aviso_rec()
														else
															call log0030_mensagem(" este item ja foi incluido na wms","exclamation")
														end if
														call sup376_exibe_dados()
														call sup376_exibe_array()
													end if
												else
													if sup3760_verifica_nota_integrada_wms() = false then #1
														call sup376_exclusao_aviso_rec()
													else
														call log0030_mensagem(" este item ja foi incluido na wms","exclamation")
													end if
													call sup376_exibe_dados()
													call sup376_exibe_array()
												end if
												if p_dados_tela.ies_especie_nf = 'nfd' or p_ies_tip_entrada = '5'             then
													call sup3762_delete_ar_nf_item(p_cod_empresa,
													p_dados_tela.num_aviso_rec,
													l_ind)
												end if
											end if
										else
											call log0030_mensagem("antes de excluir o aviso de recebimento\n deve-se excluir a carta de correcao ","exclamation")
										end if
									end if
								end if
							end if
						else
							call log0030_mensagem("nota fiscal cancelada","exclamation")
						end if
					else
						call log0030_exibe_ultima_mensagem()
					end if
				end if
			else
				call log0030_mensagem("a��o n�o permitida. conhecimento de transporte possui anula��o de frete (op��o frete, op��o 5_anulacao_frete).","exclamation")
			end if
		end if
	else
		call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
	end if
end if

command key("6") "6-exclui_nota"  "exclui nota fiscal  "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 34                 #
let l_continua = true

if sup0812_verifica_nota_transferencia(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl) then
	if log0040_confirm(21,04, "esta � uma nota fiscal de transfer�ncia entre unidades. deseja realmente exclu�-la? ") = false then
		let l_continua = false
	end if
end if
if m_wms_instal = "s" then
	call wms6135_valida_exclusao_nf_wms(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	false) returning l_status, l_mensagem
	if not l_status then
		call log0030_processa_mensagem(l_mensagem clipped,"exclamation",0)
		let l_continua = false
	end if
end if
#---------------#
if find4glfunction("supy117_nfe_transito_ja_impressa") then
	if supy117_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.ies_especie_nf, true) then
		let l_continua = false
	end if
end if

if m_integra_mensagem then
	call log0030_mensagem("nota integrada ao tradeeasy. n�o permite excluir.","info")
	let l_continua = false
end if
if l_continua then
	if p_dados_tela.num_nf is not null then
		if log005_seguranca(p_user,"suprimen","sup3760","ex")  then
			if not sup3760_verifica_possui_anulacao_frete() then  ### tfnlwb
				#--inicio--ch732912 antonio#
				let l_continua_item_pend = true
				for l_ind = 1 to arraylength(p_array)
					if p_array[l_ind].cod_item is null then
						exit for
					else
						initialize l_ies_tem_inspecao to null
						whenever error continue
						select item_pend.ies_tem_inspecao
						into l_ies_tem_inspecao
						from item_pend
						where item_pend.cod_empresa = p_cod_empresa
						and item_pend.cod_item    = p_array[l_ind].cod_item
						whenever error stop
						if sqlca.sqlcode <> 0 and
							sqlca.sqlcode <> 100 then
							call log003_err_sql('leitura','item_pend')
						else
							if l_ies_tem_inspecao = 's' then
								if not log0040_confirm(19,22,"item com controle de inspe��o. favor contatar qualidade previamente. confirma exclus�o?") then
									let l_continua_item_pend = false
									exit for
								end if
							end if
						end if
					end if
				end for
				#---fim----ch732912#
				if sup376_verifica_fechamento() and l_continua_item_pend = true  then #732912 antonio
					call sup376_consulta_dados()
					if p_ies_canc = false then
						let p_ies_nfe_emit = "n"
						whenever error continue
						select ies_nfe_emit
						into p_ies_nfe_emit
						from nfe_sup_compl
						where cod_empresa   = p_nf_sup.cod_empresa
						and num_aviso_rec = p_nf_sup.num_aviso_rec
						whenever error stop
						if p_ies_nfe_emit = "s" then
							if m_utiliza_nf_eletronica = 's' then
								call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
								p_nf_sup.num_aviso_rec,
								"excluir") returning p_status, m_msg
								if p_status then
									call log0030_mensagem(m_msg,"excl")
									let p_ies_canc = true
								end if
							else
								call log0030_mensagem("esta nota deve ser cancelada.","exclamation")
								let p_ies_canc = true
							end if
						else
							#--inicio--os 534866 #
							if m_utiliza_nf_eletronica = 's' then
								call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
								p_nf_sup.num_aviso_rec,
								"excluir") returning p_status, m_msg

								if p_status then
									call log0030_mensagem(m_msg,"excl")
									let p_ies_canc = true
								end if
							end if
							#---fim----os 534866 #
						end if
						if p_ies_canc = false then
							if (p_nf_sup.ies_incl_contab = "s" or p_nf_sup.ies_incl_contab = "m") then
								call sup376_verifica_lancamentos()
							end if

							if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, p_conta_lanc,
								"1", "n") then
								call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
								if sup0631_verifica_relac("nf",
									p_nf_sup.num_nf,
									p_nf_sup.ser_nf,
									p_nf_sup.ssr_nf,
									p_nf_sup.cod_fornecedor) = true then
								else
									if sup376_verifica_carta_correcao() = false and sup3760_existe_nota_debito_automatica() = false  then
										call sup376_deleta_ar_frete_cesta()
										if sup3760_verifica_devolucao("excl") = false then
											if m_gera_rsv_transf = "s" then
												if p_dados_tela.ies_nf_aguard_nfe = "8" then
													#exclui nota
													for l_ind = 1 to 999

														initialize l_num_oc_ar to null
														select num_oc
														into l_num_oc_ar
														from aviso_rec
														where cod_empresa   = p_cod_empresa
														and num_aviso_rec = p_dados_tela.num_aviso_rec
														and num_seq       = l_ind
														if sqlca.sqlcode <> 0 then
															# nao tem mais sequencia.
															exit for
														end if

														select num_pedido_fornec
														into m_num_ped_fornec
														from prog_ordem_sup
														where cod_empresa      = p_cod_empresa
														and num_oc           = l_num_oc_ar
														and num_versao       = 001
														and num_prog_entrega = 001

														let m_pedido_venda = m_num_ped_fornec[1,6]

														if not sup3760_busca_ped_venda() then
															error " problemas na busca do pedido de venda"
															sleep 2
															return
														end if

														let l_cont = 0
														declare cq_busca_ped_orig cursor for
														select num_pedido_cli
														from pedidos
														where cod_empresa = p_cod_emp_transf
														and num_pedido  = m_pedido_venda1
														foreach cq_busca_ped_orig into m_ped_venda_dest
														select count(*)
														into l_cont
														from ordem_montag_item, ordem_montag_mest
														where ordem_montag_item.cod_empresa = p_cod_empresa
														and ordem_montag_item.num_pedido  = m_ped_venda_dest
														and ordem_montag_mest.cod_empresa = p_cod_empresa
														and ordem_montag_mest.num_om      = ordem_montag_item.num_om
														and ordem_montag_mest.ies_sit_om  = "n"

														if sqlca.sqlcode <> 0 or l_cont is null then
															let l_cont = 0
														end if
														if l_cont > 0 then
															exit foreach
														end if
													end foreach
													free cq_busca_ped_orig
													close cq_busca_ped_orig
												end for
												if l_cont > 0 then
													error " opcao nao permitida, existe ordem de montagem p/pedido ",m_ped_venda_dest clipped  attribute(reverse)
													sleep 2
												else
													if sup3760_verifica_nota_integrada_wms() = false then #2
														call sup376_exclusao_nota()
													else
														call log0030_mensagem("esta nota fiscal ja foi incluida na wms","exlclamation")
													end if
												end if
											else
												if sup3760_verifica_nota_integrada_wms() = false then #2
													call sup376_exclusao_nota()
												else
													call log0030_mensagem("esta nota fiscal ja foi incluida na wms","exlclamation")
												end if
											end if
										else
											if sup3760_verifica_nota_integrada_wms() = false then #2
												call sup376_exclusao_nota()
											else
												call log0030_mensagem("esta nota fiscal ja foi incluida na wms","exlclamation")
											end if
										end if
									end if
									if p_houve_erro then
										call log0030_mensagem("problema na exclus�o da nota.","info")
									end if
								else
									call log0030_mensagem(" antes de excluir o aviso de recebimento,\n deve-se excluir a carta de correcao ","exclamation")
								end if
							end if
						end if
					end if
				else
					call log0030_mensagem("nota fiscal cancelada","exclamation")
				end if
			else
				call log0030_exibe_ultima_mensagem()
			end if
		else
			call log0030_mensagem("a��o n�o permitida. conhecimento de transporte possui anula��o de frete (op��o frete, op��o 5_anulacao_frete).","exclamation")
		end if
	end if
else
	call log0030_mensagem("consulte previamente para executar esta funcao","exclamation")
end if
end if

command key("2") "2-cancelar"  "cancela notas fiscais de entrada."
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
let l_continua = true
if find4glfunction("supy117_nfe_transito_ja_impressa") then
	if supy117_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.ies_especie_nf, true) then
		let l_continua = false
	end if
end if

if m_integra_mensagem then
	call log0030_mensagem("nota integrada ao tradeeasy. n�o permite cancelar.","info")
	let l_continua = false
end if
if l_continua then
	if p_dados_tela.num_nf is not null then
		if log005_seguranca(p_user,"suprimen","sup3760","ex")  then
			if not sup3760_verifica_possui_anulacao_frete() then  ### tfnlwb
				if sup376_verifica_fechamento() then
					if l_continua then
						call sup376_consulta_dados()
						if p_ies_canc = false then
							let p_ies_canc = true
							let p_ies_nfe_emit = "n"
							whenever error continue
							select ies_nfe_emit
							into p_ies_nfe_emit
							from nfe_sup_compl
							where cod_empresa   = p_nf_sup.cod_empresa
							and num_aviso_rec = p_nf_sup.num_aviso_rec
							whenever error stop
							if p_ies_nfe_emit <> "s" then
								if m_utiliza_nf_eletronica = 's' then
									call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
									p_nf_sup.num_aviso_rec,
									"cancelar") returning p_status, m_msg

									if p_status then
										call log0030_mensagem(m_msg,"excl")
										let p_ies_canc = false
									end if
								else
									#---fim----os 534866 #
									if p_dados_tela.ies_nf_aguard_nfe = "6" then
										call log0030_mensagem("nota ainda n�o impressa, deve ser excluida","exclamation")
										let p_ies_canc = false
									else
										call log0030_mensagem("nota fiscal deve ser exclu�da","exclamation")
										let p_ies_canc = false
									end if
								end if
							else
								if m_utiliza_nf_eletronica = 's' then
									call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
									p_nf_sup.num_aviso_rec,
									"cancelar") returning p_status, m_msg


									if p_status then
										call log0030_mensagem(m_msg,"excl")
										let p_ies_canc = false
									end if

									#if p_dados_tela.ies_nf_aguard_nfe = "6" then
									#   call log0030_mensagem("nota ainda n�o processada pela sefaz.","exclamation")
									#   let p_ies_canc = false
									#else
									#   call log0030_mensagem("nota ainda n�o processada pela sefaz.","exclamation")
									#   let p_ies_canc = false
									#end if
								end if
							end if
						else
							call log0030_mensagem("nota fiscal cancelada","exclamation")
							let p_ies_canc = false
						end if

						if p_ies_canc = true then
							if (p_nf_sup.ies_incl_contab = "s" or p_nf_sup.ies_incl_contab = "m") then
								call sup376_verifica_lancamentos()
							end if

							if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, p_conta_lanc,
								"1", "n") then
								call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
								if sup0631_verifica_relac("nf",
									p_nf_sup.num_nf,
									p_nf_sup.ser_nf,
									p_nf_sup.ssr_nf,
									p_nf_sup.cod_fornecedor) = true then
								else
									if sup376_verifica_carta_correcao() = false and
										sup3760_existe_nota_debito_automatica() = false  then
										##colocado em coment�rio, pois na fun��o verifica_devolucao j�
										##est� verificando se h� abatimentos na duplicata ou se tem nc
										##j� utilizada. quando tem abatimento ou nc j� utilizada
										##n�o � permitido o cancelamento da nf, sen�o � feito o
										##cancelamento da nf, da nc e eliminado as tabelas
										##sup_nf_devol_cli, dev_mestre e dev_item. no caso do
										##cliente n�o ter interface com o cre, ser� apenas eliminado
										##o registro das tabelas sup_nf_devol_cli, dev_mestre e dev_item.
										##os 400008
										#if sup376_verifica_relacionamento_nfs() = false then
										call sup376_deleta_ar_frete_cesta()
										if sup3760_verifica_devolucao("cancel") = false then
											call sup376_cancela_nota_fiscal()
										end if
										#else
										#call log0030_mensagem(" antes de cancelar a nota, voce deve excluir relacionamento no sup5240","exclamation")
										#end if
									else
										call log0030_mensagem(" antes de cancelar a nota, voce deve excluir a carta de correcao ","exclamation")
									end if
								end if
#                              end if
							end if
						end if
					end if
				else
					call log0030_exibe_ultima_mensagem()
				end if
			else
				call log0030_mensagem("a��o n�o permitida. conhecimento de transporte possui anula��o de frete (op��o frete, op��o 5_anulacao_frete).","exclamation")
			end if
		end if
	else
		call log0030_mensagem("consulte previamente para executar esta funcao","exclamation")
	end if
end if

command "modificar" "modifica nota fiscal"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 33                 #
let l_continua = true
if m_wms_instal = "s" then
	call wms6135_permissao_alteracao_nf_receb(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	true) returning l_status, l_mensagem
	if not l_status then
		call log0030_processa_mensagem(l_mensagem clipped,"exclamation",0)
		let l_continua = false
	end if
end if
#---------------#
if m_integra_mensagem then
	if p_dados_tela.ies_nf_aguard_nfe <> "7" then
		call log0030_mensagem("nota integrada ao tradeeasy. s� � permitido modificar o tipo da nota e quando a nota estiver em tr�nsito.","info")
		let l_continua = false
	end if
end if

if not sup3760_nota_devolucao() then
	call log0030_mensagem("existe devolu��o a fornecedor - excluir registro no sup0460.","info")
	let l_continua = false
end if

if l_continua then
	if p_dados_tela.num_nf is not null  then
		if p_par_sup.ies_carta_correcao = "5" and
			sup3760_existe_nota_debito_automatica() = true and
			sup376_verifica_carta_correcao() = true then
			call log0030_mensagem("antes de modificar o aviso de recebimento\n deve-se excluir a carta de correcao e/ou nota de d�bito. ","exclamation")
		else
			let l_permite_modificar = true

			if sup3760_isprocesso_importacao() then
				if log0040_confirm_default(21,15,"nota fiscal complementar gerada atrav�s do processo de importa��o. modificar?","n") then
					let l_permite_modificar = true
				else
					let l_permite_modificar = false
				end if
			end if

			if l_permite_modificar = true then
				if not sup3760_usa_orcamento_online() then
					if log005_seguranca(p_user,"suprimen","sup3760","mo")  then
						let p_ies_aguard_nfe = " "
						call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)
						let p_ies_aguard_nfe = p_nf_sup.ies_nf_aguard_nfe
						if sup376_verifica_fechamento() or p_ies_aguard_nfe = "7" then
							call sup376_consulta_dados()
							if p_ies_canc = false then
								# ch 739942 - rafael f. b. - 11/01/2010 #
								let l_permite_modificar = false

								if m_permite_alt_inf_compl_nf_cap = "s" then
									if sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2", "n") then
										let m_existe_cap = true
									else
										let m_existe_cap = false
									end if

									if p_nf_sup.ies_incl_contab <> "s" and p_nf_sup.ies_incl_contab <> "m" then
										let l_permite_modificar = true
									end if
								else
									if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2", "n") then
										let l_permite_modificar = true
									else
										let l_permite_modificar = false
									end if
								end if

								if l_permite_modificar then
									initialize m_nfe_cce               to null
									initialize m_status_nfe_cce        to null
									initialize m_indicador_nfe_cce     to null
									initialize m_protocolo_nfe_cce     to null
									initialize m_data_aut_prot_nfe_cce to null

									if find4glfunction('obfr14_verifica_nfe_cce') then
										call obfr14_verifica_nfe_cce(p_cod_empresa,0,p_dados_tela.num_aviso_rec,false)
										returning m_status_nfe_cce, m_indicador_nfe_cce,
										m_protocolo_nfe_cce, m_data_aut_prot_nfe_cce
										let m_indicador_nfe_cce = m_indicador_nfe_cce[1,14]
										if m_status_nfe_cce = true
											and m_indicador_nfe_cce = 'cce_autorizada'
											and m_protocolo_nfe_cce is not null
											and m_protocolo_nfe_cce <> 0
											and m_data_aut_prot_nfe_cce is not null
											and m_data_aut_prot_nfe_cce <> ' ' then
											let m_nfe_cce = true
										else
											let m_nfe_cce = false
										end if
									end if

									#--inicio--vanderlei os 393937 #
									if not sup3760_nf_dev_relac_nf_saida(p_cod_empresa,
										p_dados_tela.num_aviso_rec,
										"modificacao") or m_nfe_cce = true then #tezpq1
										#---fim----vanderlei os 393937 #
										call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
										if sup0631_verifica_relac("nf",
											p_nf_sup.num_nf,
											p_nf_sup.ser_nf,
											p_nf_sup.ssr_nf,
											p_nf_sup.cod_fornecedor) = true then
										else
											if sup376_nfe_emitida() then
												if not sup3760_verifica_inspecao() then
													if p_dados_tela.ies_especie_nf = "tck" and
														sup376_existe_frete_relac() then
														call log0030_mensagem( " ticket com frete nao pode ser alterado ","exclamation")
													else
														call sup376_modificacao_aviso_rec()
														if m_wms_instal = "s" then
															if find4glfunction('wms6612_atualiza_sup_par_ar') then
																if p_dados_tela.num_aviso_rec is not null and
																	p_dados_tela.num_aviso_rec <> 0 then

																	call wms6612_atualiza_sup_par_ar(p_dados_tela.num_aviso_rec,
																	m_indicador_aduaneiro,
																	m_tipo_documento)

																end if
															end if
														end if
													end if
												else
													if m_nfe_cce = false then  #tpidos
														error "nf ja impressa e efetuada contagem nao pode ser alterada"
													end if
												end if
											else
												if p_dados_tela.ies_especie_nf = "tck" and
													sup376_existe_frete_relac() then
													call log0030_mensagem( " ticket com frete nao pode ser alterado ","exclamation")
												else
													call sup376_modificacao_aviso_rec()
													if m_wms_instal = "s" then
														if find4glfunction('wms6612_atualiza_sup_par_ar') then
															if p_dados_tela.num_aviso_rec is not null and
																p_dados_tela.num_aviso_rec <> 0 then
																call wms6612_atualiza_sup_par_ar(p_dados_tela.num_aviso_rec,
																m_indicador_aduaneiro,
																m_tipo_documento)
															end if
														end if
													end if
												end if
											end if
										end if
										#--inicio--vanderlei os 393937 #
									else
										call log0030_mensagem("nf de devolu��o cliente relacionada a nf de venda, n�o pode ser modificada.","exclamation")
									end if
									#---fim----vanderlei os 393937 #
								end if
							else
								call log0030_mensagem("nota fiscal cancelada","exclamation")
							end if
							if p_ies_bloq_cont = "s" then
								select ies_liberacao_cont
								from nf_sup
								where cod_empresa      = p_cod_empresa
								and nf_sup.aviso_rec = p_aviso_rec.num_aviso_rec
								and aviso_rec.ies_liberacao_cont = "s"
								and par_estoque.ies_custo_medio  = "d"
								and aviso_rec.ies_situa_ar       = "e"
								if sqlca.sqlcode = 0 then
									call log0030_mensagem("custo medio diario nao permite modificacao p/ recebimento com contagem efetuada","exclamation")
								end if
							end if
						else
							call log0030_exibe_ultima_mensagem()
						end if
					end if
				else
					call log0030_mensagem("orcamento online instalado, favor excluir contagem ","exclamation")
				end if
			end if
		end if
	else
		call log0030_mensagem(" consulte previamente para fazer a modificacao","exclamation")
	end if
end if

command key ("?") "?_relac_nfm_nfp" "relacionamento de nfm x nfp "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_dados_tela.num_nf        is not null then
	call log1200_executa_programa("sup2570",p_cod_empresa||" "||p_dados_tela.num_aviso_rec)
	call sup376_consulta_dados()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key ("q")"q-impostos" "abre o programa de manutencao dos impostos. "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
let p_sup449_cap = false
let p_sup449_mes = false
if p_dados_tela.num_aviso_rec is not null then
	if sup376_verifica_fechamento() then
		call sup376_consulta_dados()
		if sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2", "n") then
			let p_sup449_cap = true
		else
			call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
			if sup0631_verifica_relac("nf",
				p_nf_sup.num_nf,
				p_nf_sup.ser_nf,
				p_nf_sup.ssr_nf,
				p_nf_sup.cod_fornecedor) = true then
			end if
		end if
	else
		let p_sup449_mes = true
	end if
	if (p_cod_ret_imp is null or p_cod_ret_imp = " ") then
		let p_ies_imp_renda = "n"
	else
		let p_ies_imp_renda = "s"
	end if
	if p_dados_tela.ser_nf = " " or p_dados_tela.ser_nf is null then
		let p_dados_tela.ser_nf = "@"
	end if

	let comando3 = p_cod_empresa,   " ",
	p_dados_tela.num_nf,  " ",
	p_dados_tela.ser_nf,  " ",
	p_dados_tela.ssr_nf,  " ",
	p_dados_tela.ies_especie_nf, " ",
	p_sup449_mes, " ",
	p_sup449_cap," ",
	p_dados_tela.dat_entrada_nf ," ",
	p_ies_imp_renda," ",
	p_dados_tela.num_aviso_rec
	call log1200_executa_programa("sup4490",comando3)

	if p_dados_tela.ser_nf = "@" then
		let p_dados_tela.ser_nf = " "
	end if

	if p_sup449_mes = false and
		(p_sup449_cap = false or
		(p_sup449_cap = true
		and m_consiste_nf_integr = 's'
		and ((supr6_integracao_batch(p_cod_empresa) = false and
		supr6_data_posterior_data_corte_logix_10(p_cod_empresa,
		p_dados_tela.dat_entrada_nf) = true)
		or (m_nf_cap_fiscal = '1' or
		m_nf_cap_fiscal = '3' or
		m_nf_cap_fiscal = '4')))) then ### mman-4490, n�o estava perguntando se deseja recalcular impostos e contabilizando automaticamente / gerando livro autom�tico, se j� possuia registro no cap.
		if log005_seguranca(p_user,"suprimen","sup3760","mo") then
			if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
				m_consiste_nf_integr) then
				if p_par_estoque.ies_custo_medio = "d" then
					call sup0047_rateio_frete()
				end if

				#752783#
				let l_data = extend(current, year to second)
				let l_data = l_data - 3 units hour

				whenever error continue
				select dat_hor_proces
				from audit_ar
				where cod_empresa        = p_cod_empresa
				and num_aviso_rec      = p_dados_tela.num_aviso_rec
				and ies_tipo_auditoria = '4'
				and nom_usuario        = p_user ### tdxz28
				and dat_hor_proces     >= l_data
				and num_prog           in ("sup3790",
				"sup3800",
				"sup4040",
				"sup9060",
				"sup0212",
				"sup0105",
				"sup1083",
				"sup0819",
				"sup3810",
				"sup1255",
				"sup4491",
				"sup1478",
				"sup1701")
				whenever error stop
				if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
					if m_cons_modific = "s" then
						call sup376_processa_consistencia("s")
					else
						if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
						end if
					end if
				end if
				#---fim--- 752783#

				call sup0047_rateio_frete()
			end if
		end if
	end if
	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key ("n")"consiste"  "efetua consistencia dos valores da n.f."
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_dados_tela.num_nf        is not null then
	if sup376_verifica_fechamento() then
		call sup376_consulta_dados()
		if p_ies_canc = false then
			if log005_seguranca(p_user,"suprimen","sup3760","mo") then
				if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
					m_consiste_nf_integr) then
					if p_par_estoque.ies_custo_medio = "d" then
						call sup0047_rateio_frete()
					end if
					call sup376_processa_consistencia("s")
### tevcq6 - deletar a tabela w_supr12 cada vez que reconsistir nota
###          tabela tempor�ria usado em rateio de frete
					if find4glfunction('supr12_cria_temporaria_frete_ar') then
						whenever error continue
						delete from w_supr12 where 1=1
						whenever error stop

						if sqlca.sqlcode <> 0 then
							call log003_err_sql("delete","w_supr12")
						end if
					end if
					call sup0047_rateio_frete()
				end if
			end if
		else
			call log0030_mensagem("nota fiscal cancelada","exclamation")
		end if
	else
		call log0030_exibe_ultima_mensagem()
	end if
	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key ("r")"erros"    "consulta erros detectados na funcao consiste"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_dados_tela.num_nf        is not null then
	call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)
	let p_nom_resp_aceite_er = p_nf_sup.nom_resp_aceite_er
	call sup377_zoom_erros(p_cod_empresa, p_dados_tela.num_aviso_rec, p_nom_resp_aceite_er)
	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem("consulte previamente para executar esta funcao ","exclamation")
end if

command key ("u") "assumir erros" "assumir erros que foram detectados"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_dados_tela.num_nf is null then
	call log0030_mensagem(" consulte previamente para executar esta fun��o","exclamation")
else
	call sup3760_assume_erros_nf()
	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
end if

command key ("g") "contagem" "chama programa de contagem dos itens "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
### os237529 ###
initialize l_prog_contagem to null
select par_txt
into l_prog_contagem
from par_sup_pad
where par_sup_pad.cod_empresa   = p_cod_empresa
and par_sup_pad.cod_parametro = "prog_contagem"
if sqlca.sqlcode <> 0 or
	l_prog_contagem is null then
	let l_prog_contagem = " "
end if

if l_prog_contagem = "sup0799" then
	if p_dados_tela.num_nf is null then
		call log1200_executa_programa("sup0799","")
	else
		call log1200_executa_programa("sup0799",p_cod_empresa||" "||p_dados_tela.num_aviso_rec)
	end if
else
	if p_dados_tela.num_nf is null then
		call log1200_executa_programa("sup0530","")
	else
		call log1200_executa_programa("sup0530",p_cod_empresa||" "||p_dados_tela.num_aviso_rec||" 0 3760")
	end if
end if
call log006_exibe_teclas("01", p_versao)
current window is w_sup37601
call sup376_consulta_dados()
call sup3760_display_totitens_conhecimento()

command key ("o") "o_lancamentos" "chama programa de lancamentos contabeis manuais "
message ""
display "                                                                               " at 20,01

let comando3 = ""
if p_dados_tela.num_nf is not null then
	let p_cod_fornec144 = p_dados_tela.cod_fornecedor
	for p_ind8 = 1 to 10
		if p_dados_tela.cod_fornecedor[p_ind8] = " " then
			let p_cod_fornec144[p_ind8] = "y"
		end if
	end for
	if p_dados_tela.ser_nf is null or p_dados_tela.ser_nf = " " then
		let p_dados_tela.ser_nf = "@"
	end if
	let comando3 = p_dados_tela.num_nf, " ",
	p_dados_tela.ser_nf, " ",
	p_dados_tela.ssr_nf, " ",
	p_dados_tela.ies_especie_nf, " ",
	p_cod_fornec144, " ",
	p_dados_tela.num_aviso_rec, " ",
	p_cod_empresa
	if p_dados_tela.ser_nf = "@" then
		let p_dados_tela.ser_nf = " "
	end if
end if
call log1200_executa_programa("sup1440",comando3)

call log006_exibe_teclas("01", p_versao)
current window is w_sup37601
call sup376_consulta_dados()
call sup3760_display_totitens_conhecimento()

command key("1") "1_conta_aen" "chama programa de distribuicao por conta/area/linha de negocio"
message ""

if p_dados_tela.num_aviso_rec is not null then
	if sup376_verifica_fechamento() then
		call sup376_consulta_dados()
	end if

	let comando3 = p_dados_tela.num_aviso_rec, " ",
	p_array[1].seq, " ",
	p_cod_empresa
	call log1200_executa_programa("sup2370",comando3)

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta fun��o","exclamation")
end if

command key("y") "y-tot_nf_calc" "consulta valores calculados."
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01

if p_dados_tela.num_nf is not null then
	if find4glfunction('fin80153_processa_parametro_financeiro_11') then
		call fin80153_inicializa_variaveis()
		call fin80153_processa_parametro_financeiro_11()
		let l_permite = fin80153_permite_nf_c_msm_num_ser_ssr()
	end if
	if l_permite = true then
		if find4glfunction('sup3820_set_ies_especie_nf') then
			call sup3820_set_ies_especie_nf(p_dados_tela.ies_especie_nf)
		end if
	end if
	call sup382_consulta_valores_calculados(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf, p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor, p_dados_tela.num_aviso_rec)
	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command  key("7") "7_inf_compl_nf" "consulta informacoes complementares da nf."
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
let p_sup_cap = false
let p_sup_mes = false
if p_dados_tela.num_aviso_rec is not null then
	if sup376_verifica_fechamento() then
		call sup376_consulta_dados()
		if ((p_nf_sup.ies_incl_cap = "s"  or p_nf_sup.ies_incl_cap = "b") and p_ies_pagamento = "2") or
			(p_nf_sup.ies_incl_contab = "s" or p_nf_sup.ies_incl_contab = "m") then
			let p_sup_cap = true
		end if
		call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
		if sup0631_verifica_relac("nf",
			p_nf_sup.num_nf,
			p_nf_sup.ser_nf,
			p_nf_sup.ssr_nf,
			p_nf_sup.cod_fornecedor) = true then
		end if
	else
		let p_sup_mes = true
	end if

	let comando3 = p_dados_tela.num_aviso_rec," ",
	p_sup_mes, " ",
	p_sup_cap, " ",
	p_cod_empresa
	call log1200_executa_programa("sup3840",comando3)

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601

	#os546681
	#retirado coment�rios da chamada sup376_busca_argumen()
	#quando � feito entrada de valores de frete atrav�s da opcao 7_inf_compl_nf e voltando
	#a tela principal, n�o estava atualizando os valores de frete ja calculados.
	let p_cod_empresa_arg   = p_cod_empresa
	let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
	call sup376_busca_argumen()

	#atribuido false para p_cons_arg para que n�o cancele a pagina��o nesse caso conforme
	#coment�rio acima
	let p_cons_arg = false
	#fim os546681

	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()

	if sup376_verifica_fechamento() then
		if p_ies_canc = false then
			if log005_seguranca(p_user,"suprimen","sup3760","mo") then
				if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",m_consiste_nf_integr) then

					#752783#
					let l_data = extend(current, year to second)
					call log_consoledebugmessage('hora normal     '||l_data)
					let l_data = l_data - 3 units hour
					call log_consoledebugmessage('hora modificada '||l_data)

					whenever error continue
					select dat_hor_proces
					from audit_ar
					where cod_empresa        = p_cod_empresa
					and num_aviso_rec      = p_dados_tela.num_aviso_rec
					and ies_tipo_auditoria = '4'
					and nom_usuario        = p_user ### tdxz28
					and dat_hor_proces     >= l_data
					and num_prog           = "sup3840"
					whenever error stop
					if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
						if m_cons_modific = "s" then
							if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
								p_cod_empresa,
								p_dados_tela.num_aviso_rec) then
								call sup376_processa_consistencia("s")
							else
								call sup376_processa_consistencia("i")
							end if
						else
							if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
							end if
						end if
					end if
					#---fim--- 752783#
				end if
			end if
		end if
	end if
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key("p")  "inf_compl_item" "manutencao dos dados dos itens da n.f."
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_dados_tela.num_nf   is not null then
	call sup376_consulta_dados()

	let comando3 = p_cod_empresa, " ",p_dados_tela.num_aviso_rec
	call log1200_executa_programa("sup0740",comando3)

	call sup376_exibe_dados()
	call sup376_exibe_array()

	let int_flag = 0
	if sup376_verifica_fechamento() then
		if p_ies_canc = false then
			if log005_seguranca(p_user,"suprimen","sup3760","mo") then
				if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2", m_consiste_nf_integr) then
					if p_par_estoque.ies_custo_medio = "d" then
						call sup0047_rateio_frete()
					end if

					#752783#
					let l_data = extend(current, year to second)
					let l_data = l_data - 3 units hour

					whenever error continue
					select dat_hor_proces
					from audit_ar
					where cod_empresa        = p_cod_empresa
					and num_aviso_rec      = p_dados_tela.num_aviso_rec
					and ies_tipo_auditoria = '4'
					and nom_usuario        = p_user ### tdxz28
					and dat_hor_proces     >= l_data
					and num_prog           = "sup0740"
					whenever error stop
					if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
						if m_cons_modific = "s" then
							call sup376_processa_consistencia("n")
						else
							if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
							end if
						end if
					end if
					#---fim--- 752783#
					call sup0047_rateio_frete()
				end if
			end if
		end if
	else
		if m_inclui_observacao_item_ar = "n" then #-- os 521861 --#
			call log0030_exibe_ultima_mensagem()
		end if
	end if

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key("x") "x-info_fiscal_item" "manutencao das informacoes do item "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
let p_sup_cap = false
let p_sup_mes = false
if p_dados_tela.num_aviso_rec is not null then
	if sup376_verifica_fechamento() then
		call sup376_consulta_dados()

		if p_nf_sup.ies_incl_contab = "s" or p_nf_sup.ies_incl_contab = "m" then
			let p_ies_incl_cap = true
		else
			let p_ies_incl_cap = false
		end if
		if p_ies_incl_cap = true then
			let p_sup_cap = true
		else
			call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
			if sup0631_verifica_relac("nf",
				p_nf_sup.num_nf,
				p_nf_sup.ser_nf,
				p_nf_sup.ssr_nf,
				p_nf_sup.cod_fornecedor) = true then
			end if
		end if
	else
		let p_sup_mes = true
	end if

	let comando3 = p_dados_tela.num_aviso_rec," ",
	p_sup_mes, " ",
	p_sup_cap, " ",
	p_cod_empresa
	call log1200_executa_programa("sup3870",comando3)

	#809554
	let l_data = extend(current, year to second)
	let l_data = l_data - 3 units hour

	whenever error continue
	select dat_hor_proces
	from audit_ar
	where cod_empresa        = p_cod_empresa
	and num_aviso_rec      = p_dados_tela.num_aviso_rec
	and ies_tipo_auditoria = '4'
	and nom_usuario        = p_user ### tdxz28
	and dat_hor_proces     >= l_data
	and num_prog           = "sup3870"
	whenever error stop
	if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
		if m_cons_modific = "s" then
			call sup376_processa_consistencia("s")
		else
			if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
			end if
		end if
	end if
	#---fim--- 809554#

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

error " "

command key("k") "k-imprime_ar" "imprime aviso de recebimento "
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01

let l_num_prog_imp_ar = sup376_busca_par_sup_pad("num_progr_imp_ar",3)
if sqlca.sqlcode <> 0 or l_num_prog_imp_ar is null or l_num_prog_imp_ar = " "   then
	let l_num_prog_imp_ar = "sup1542"
end if
if p_dados_tela.num_nf   is not null  then
	let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
else
	let comando3 = ""
end if
call log1200_executa_programa(l_num_prog_imp_ar,comando3)

call log006_exibe_teclas("01", p_versao)
current window is w_sup37601
call sup376_consulta_dados()
call sup3760_display_totitens_conhecimento()

command key("=") "=_lista_nfe" "impressao de nota fiscal de entrada "
message ""
display "                                                                               " at 20,01
initialize m_prog_nfe to null
whenever error continue
select par_txt
into m_prog_nfe
from par_sup_pad
where cod_empresa   = p_cod_empresa
and cod_parametro = "num_progr_nfe"
whenever error stop
if sqlca.sqlcode = 0 and m_prog_nfe is not null and m_prog_nfe <> "  " then
	call log1200_executa_programa(m_prog_nfe,"")
else
	error " programa de impressao nfe nao parametrizado(sup7670) "
end if

command key ("h") "h-mat_terceiros"  "controle/manutencao de materiais de/em terceiros"
message ""
if p_dados_tela.ser_nf is null or p_dados_tela.ser_nf = " " then
	let p_dados_tela.ser_nf = "@"
end if

call sup3762_busca_fornecedor_triangulacao(p_dados_tela.num_aviso_rec, p_array[1].seq) returning l_cod_fornecedor
let comando3 = p_dados_tela.num_nf, " ",
p_dados_tela.ser_nf, " ",
p_dados_tela.ssr_nf, " ",
p_dados_tela.ies_especie_nf, " ",
l_cod_fornecedor, " ",
p_dados_tela.num_aviso_rec, " ",
p_array[1].seq, " ",
p_cod_empresa

call log1200_executa_programa("sup3763",comando3)
if p_dados_tela.ser_nf = "@" then
	let p_dados_tela.ser_nf = " "
end if

call log006_exibe_teclas("01", p_versao)
current window is w_sup37601
call sup376_consulta_dados()
call sup3760_display_totitens_conhecimento()

command key ("v") "v_nf_vendas"  "chama programa para inclusao de nota de saida para nf's de devolucao"
message ""

if p_dados_tela.num_aviso_rec is not null then
	let l_processa_v_nf_vendas = true
	if log_existe_epl('sup3760y_before_process_v_nf_vendas') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl c�digo da empresa
		#epl tipo: aviso_rec.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl n�mero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		call log_setvar('processa_v_nf_vendas',l_processa_v_nf_vendas)
		#epl processa op��o v_nf_vendas
		#epl tipo: smallint

		if sup3760y_before_process_v_nf_vendas() then
			let l_processa_v_nf_vendas = log_getvar('processa_v_nf_vendas')
		end if
	end if

	#dmansuplgx-495
	if p_ies_tip_entrada is null or p_ies_tip_entrada = " " then
		call sup0686_retorna_tip_obj_entrada(p_dados_tela.cod_operacao,
		p_dados_tela.cod_fiscal_compl)
		returning l_status,
		p_ies_tip_entrada,
		m_ies_obj_entrada
	end if

	if l_processa_v_nf_vendas then
		if (p_dados_tela.ies_especie_nf = "nfr"  or p_dados_tela.ies_especie_nf = "nfe") and p_dados_tela.ies_nf_aguard_nfe = "x" then
			let comando3 = p_dados_tela.num_aviso_rec, " ",p_cod_empresa
			call log1200_executa_programa("sup5241",comando3)
		else
			if  p_dados_tela.ies_especie_nf = "nfr" and (p_dados_tela.ies_nf_aguard_nfe = "1" or p_dados_tela.ies_nf_aguard_nfe = "6")
				and m_exst_rel_fre_indt then
				let comando3 = p_dados_tela.num_aviso_rec, " ",p_cod_empresa
				call log1200_executa_programa("sup5242",comando3)
			else
				if  p_dados_tela.ies_especie_nf <> "nfd" and p_ies_tip_entrada <> '5' and p_dados_tela.ies_nf_aguard_nfe = "6" then
					let comando3 = p_dados_tela.num_aviso_rec, " ",p_cod_empresa
					call log1200_executa_programa("obf9000",comando3)
				else
					let comando3 = p_dados_tela.num_aviso_rec, " ",p_cod_empresa
					call log1200_executa_programa("sup5240",comando3)
				end if
			end if
		end if

		if log_existe_epl('sup3760y_after_process_sup5240') then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl codigo da empresa
			#epl tipo: ordem_sup.cod_empresa

			call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
			#epl numero do ar
			#epl tipo: aviso_rec.num_aviso_rec

			call sup3760y_after_process_sup5240()

			if log_getvar('processa_contagem') then
				if m_cons_modific = "s" then
					call sup376_processa_consistencia("n")
				else
					if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
					end if
				end if
			end if
		end if

		#760363
		if find4glfunction('supy62_nf_dev_saida') then
			call supy62_nf_dev_saida(p_dados_tela.cod_empresa,
			p_dados_tela.num_aviso_rec,
			m_utiliza_nf_eletronica,
			true,
			false)
		end if
		#760363
	end if

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente ","exclamation")
end if

command key("8") "8_os_investimento" "inclui registros na tabela ar_os"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_par_sup_compl.ies_pat_instalado = "s" then
	if p_dados_tela.num_nf   is not null  then
		let comando3 = p_cod_empresa, " ",p_dados_tela.num_aviso_rec
	else
		let comando3 = ""
	end if
	call log1200_executa_programa("sup5380",comando3)

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem("modulo de patrimonio nao instalado","exclamation")
end if

command key("w") "w_relaciona_nfe" "relacionamento de nf de entrada(nfe) com nf"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if p_dados_tela.num_nf     is not null then
	let p_num_ar376 = p_dados_tela.num_aviso_rec
	call sup376_consulta_dados()
	if p_ies_canc = false then
		if p_nf_sup.ies_especie_nf = "nfe" then
			if sup376_nfe_emitida() then
				call log0030_mensagem(" atencao !!! nota fiscal ja impressa nao pode ser alterada ","exclamation")
				#inicio: os sdimco
				let l_permite_alterar = 'n'
				let comando3 = p_dados_tela.num_aviso_rec," ", l_permite_alterar
				call log1200_executa_programa("sup5400",comando3)
				#fim: os sdimco
			else
				call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
				if sup0631_verifica_relac("nf",
					p_nf_sup.num_nf,
					p_nf_sup.ser_nf,
					p_nf_sup.ssr_nf,
					p_nf_sup.cod_fornecedor) = true then
				else
					if p_dados_tela.ies_especie_nf = "tck" and sup376_existe_frete_relac() then
						call log0030_mensagem( " ticket com frete nao pode ser alterado ","exclamation")
					else
						if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
							"n") then
							if p_nf_sup.ies_nf_com_erro = "n" or
								(p_nf_sup.ies_nf_com_erro = "s" and
								(p_nf_sup.nom_resp_aceite_er is not null and
								p_nf_sup.nom_resp_aceite_er <> " ")) then

								#inicio: os sdimco
								let l_permite_alterar = 's'
								#fim: os sdimco

								let comando3 = p_dados_tela.num_aviso_rec," ", l_permite_alterar
								call log1200_executa_programa("sup5400",comando3)
								if sup376_verifica_fechamento() then
									if p_par_estoque.ies_custo_medio = "d" then
										call sup0047_rateio_frete()
									end if

									if m_cons_modific = "s" then
										call sup376_processa_consistencia("n")
									else
										if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
										end if
									end if
								end if

								select count(*)
								into p_tem_erro
								from nf_sup_erro
								where nf_sup_erro.empresa = p_cod_empresa
								and nf_sup_erro.num_aviso_rec = p_dados_tela.num_aviso_rec
								and nf_sup_erro.ies_origem_erro <> "4"
								if p_tem_erro > 0 then
									call log0030_mensagem(" foram detectados erros na consistencia da nota fiscal ","exclamation")
									#o.s. 529316
									if p_dados_tela.num_nf is not null
										and m_abre_aut_tela_erros = "s" then
										call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)
										let p_nom_resp_aceite_er = p_nf_sup.nom_resp_aceite_er
										call sup377_zoom_erros(p_cod_empresa, p_dados_tela.num_aviso_rec, p_nom_resp_aceite_er)
									end if
									#o.s. 529316
								else
									call log0030_mensagem(" nao foram detectados erros na consistencia da nota fiscal ","exclamation")
								end if
							else
								call log0030_mensagem("nfe com erro.","info")
								#inicio: os sdimco
								let l_permite_alterar = 'n'
								let comando3 = p_dados_tela.num_aviso_rec," ", l_permite_alterar
								call log1200_executa_programa("sup5400",comando3)
								#fim: os sdimco
							end if

							call sup376_consulta_dados()
							let p_dados_tela.ies_nf_aguard_nfe = p_nf_sup.ies_nf_aguard_nfe
							call log006_exibe_teclas("01 02 03 07", p_versao)
							current window is w_sup37601
							display by name p_dados_tela.ies_nf_aguard_nfe
						else
							#inicio: os sdimco
							let l_permite_alterar = 'n'
							let comando3 = p_dados_tela.num_aviso_rec," ", l_permite_alterar
							call log1200_executa_programa("sup5400",comando3)
							#fim: os sdimco
						end if
					end if
				end if
			end if
		else
			call log0030_mensagem("nota fiscal nao e' de entrada (nfe)","exclamation")
		end if
	else call log0030_mensagem("nota fiscal cancelada","exclamation")
	end if

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key("9") "9_compl_nfe" "informacoes complementares da nfe"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01

let comando3 = p_cod_empresa, " ",p_dados_tela.num_aviso_rec
call log1200_executa_programa("sup7540",comando3)

call log006_exibe_teclas("01", p_versao)
current window is w_sup37601
call sup376_consulta_dados()
call sup3760_display_totitens_conhecimento()

command "duplicatas" "relaciona as duplicatas com nff"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
let p_nf_sup.cod_empresa = p_cod_empresa
let p_nf_sup.num_nf      = p_dados_tela.num_nf
let p_nf_sup.ser_nf      = p_dados_tela.ser_nf
let p_nf_sup.ssr_nf      = p_dados_tela.ssr_nf
let p_nf_sup.cod_fornecedor = p_dados_tela.cod_fornecedor

if p_dados_tela.num_aviso_rec is not null then
	call sup376_consulta_dados()
	if p_ies_pagamento <> "3" then
		if (p_nf_sup.ies_incl_cap = "s" or p_nf_sup.ies_incl_cap = "b") and p_ies_pagamento = "2" then
			let p_ies_incl_cap = true
		else
			let p_ies_incl_cap = false
		end if
		if p_dados_tela.num_aviso_rec is not null then
			let comando3 = p_nf_sup.num_aviso_rec, " ",p_ies_incl_cap, " ",p_cod_empresa
			call log1200_executa_programa("sup0990",comando3)
		else
			call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
		end if
	else
		call log0030_mensagem(" nota fiscal sem pagamento ","exclamation")
	end if

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

### tpivh1 - cto0130 � programa espec�fico do cliente cairu, a manuten��o deste fonte � de responsabilidade da aceex)
command key ("0") "0-ar_ae" "chama programa de manutencao da aviso_rec_ae"
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
if find4glfunction('cto0130_controle') then
	if p_dados_tela.num_aviso_rec is not null then
		let comando3 = p_dados_tela.num_aviso_rec
		call log1200_executa_programa("cto0130",comando3)

		if p_dados_tela.num_nf is not null then
			if sup376_verifica_fechamento() then
				call sup376_consulta_dados()
				if p_ies_canc = false then
					if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
						m_consiste_nf_integr) then
						if p_par_estoque.ies_custo_medio = "d" then
							call sup0047_rateio_frete()
						end if

						if m_cons_modific = "s" then
							call sup376_processa_consistencia("n")
						else
							if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
							end if
						end if

						call sup0047_rateio_frete()
					end if
				else
					call log0030_mensagem("nota fiscal cancelada","exclamation")
				end if
			else
				call log0030_exibe_ultima_mensagem()
			end if
		else
			call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
		end if

		call log006_exibe_teclas("01", p_versao)
		current window is w_sup37601
		call sup376_consulta_dados()
		call sup3760_display_totitens_conhecimento()
	else
		call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
	end if
end if

command key("#") "#_datas_fabricacao" "chama o programa de manutencao das datas de fabricacao. "
if p_dados_tela.num_aviso_rec is not null then
	let p_ies_dat_fabr_ar = sup376_busca_par_sup_pad("ies_dat_fabr_ar",1)
	if p_ies_dat_fabr_ar = "s" then
		let comando3 = p_cod_empresa," ", p_dados_tela.num_aviso_rec," ", "c"
		call log1200_executa_programa("sup8030",comando3)
	else
		call log0030_mensagem(" funcao nao permitida. verifique o programa sup8740. ","exclamation")
	end if
	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup376_consulta_dados()
	call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente antes de executar esta funcao. ","exclamation")
end if

command key("$") "$-nf c/ contrato" "inclui nota fiscal com contrato"
display "                                                                               " at 20,01
display "                                                                               " at 10,01
message ""
if p_ies_mod_contrato = "n" then
	call log0030_mensagem(" modulo de contratos de servicos nao instalado. ","exclamation")
else
	if log005_seguranca(p_user,"suprimen","sup8720","in")  then
		call log1200_executa_programa("sup8720","")
		call log006_exibe_teclas("01", p_versao)
		current window is w_sup37601
		call sup376_consulta_dados()
		call sup3760_display_totitens_conhecimento()
	end if
end if

command key("&") "&_desconto_acrescimo" "manutencao dos descontos/acrescimos dos itens"
message ""
if p_dados_tela.num_aviso_rec is not null then
	menu "opcao"
	before menu
	call sup3760_save_cur_field_name('sup3760_menu_2')
	command key("&") "&_desconto_acrescimo" "chama o programa de manutencao dos descontos/acrescimos dos itens"
	message ""

	case p_dados_tela_f.ies_desc_acres
	when "t"
	let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
	call log1200_executa_programa("sup2490",comando3)

	let p_cod_empresa_arg = p_cod_empresa
	let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
	call sup376_busca_argumen()
	when "i"
	let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
	call log1200_executa_programa("sup9010",comando3)

	let p_cod_empresa_arg = p_cod_empresa
	let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
	call sup376_busca_argumen()
	when "s"
	let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
	call log1200_executa_programa("sup9010",comando3)

	let p_cod_empresa_arg = p_cod_empresa
	let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
	call sup376_busca_argumen()
	otherwise
	let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
	call log1200_executa_programa("sup9010",comando3)

	let p_cod_empresa_arg = p_cod_empresa
	let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
	call sup376_busca_argumen()
end case

if sup1149_efetua_rateio_contabil() then
	call sup1149_rateio_pela_dest_ordem_sup("sup3760") returning p_status
end if
if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2","n") then
	if m_cons_modific = "s" then
		call sup376_processa_consistencia("n")
	else
		if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
		end if
	end if

	call sup0047_rateio_frete()
end if
call sup376_exibe_array()

command key("d") "descontos_cont�beis" "chama o programa de manutencao dos descontos cont�beis dos itens"
message ""
let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
call log1200_executa_programa("sup1545",comando3)

if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2","n") then
	if m_cons_modific = "s" then
		call sup376_processa_consistencia("n")
	else
		call sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec)returning p_status
	end if

	call sup0047_rateio_frete()
end if
call sup376_exibe_array()

command "fim"        "retorna ao menu anterior"
exit menu

command key ("f11") "sobre" "informa��es sobre a aplica��o (f11)."
call log_info_sobre(sourcename(),p_versao)

end menu
call log006_exibe_teclas("01", p_versao)
current window is w_sup37601
call sup376_consulta_dados()
call sup3760_display_totitens_conhecimento()
else
	call log0030_mensagem(" consulte previamente antes de executar esta funcao ","exclamation")
end if

command key("3") "3-pedagio" "pedagio sobre o frete"
message ""
if p_dados_tela.num_nf        is not null then
	if p_dados_tela.ies_especie_nf = "con" then
		if p_nf_sup.ser_nf is null or
			p_nf_sup.ser_nf = " " then
			let p_nf_sup.ser_nf = "@"
		end if

		let comando3 = p_nf_sup.cod_empresa      ," ",
		p_nf_sup.num_nf           ," ",
		p_nf_sup.ser_nf           ," ",
		p_nf_sup.ssr_nf           ," ",
		p_nf_sup.ies_especie_nf   ," ",
		p_nf_sup.cod_fornecedor   ," "
		call log1200_executa_programa("sup9204",comando3)

		if p_nf_sup.ser_nf = "@" then
			let p_nf_sup.ser_nf = " "
		end if

		call log006_exibe_teclas("01", p_versao)
		current window is w_sup37601
		call sup376_consulta_dados()
		call sup3760_display_totitens_conhecimento()
	else
		call log0030_mensagem(" controle exclusivo para notas de conhecimento de frete ","exclamation")
	end if
else
	call log0030_mensagem(" consulte previamente para executar essa funcao ","exclamation")
end if

command key("4") "4-depositante" "dados do depositante da nota "
message ""
if p_dados_tela.num_nf        is not null then
	let l_permite_acesso_tipo6 = false

	if log_existe_epl('sup3760y_before_acesso_opcao_4') then
		call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
		#epl tipo da nota fiscal
		#epl tipo: nf_sup.ies_nf_aguard_nfe

		call sup3760y_before_acesso_opcao_4()

		let l_permite_acesso_tipo6 = log_getvar('permite_acesso_tipo6')
	end if

	whenever error continue
	select ar_depos.cod_depositante
	from ar_depos
	where ar_depos.cod_empresa   = p_cod_empresa and
	ar_depos.num_aviso_rec = p_nf_sup.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode = 0 or p_dados_tela.ies_nf_aguard_nfe = "a" or l_permite_acesso_tipo6 = true then
		select par_sup_pad.par_ies
		into l_ies_armaz_itau
		from par_sup_pad
		where par_sup_pad.cod_empresa   = p_cod_empresa
		and par_sup_pad.cod_parametro = "ies_armaz_itau"
		if sqlca.sqlcode <> 0 or
			l_ies_armaz_itau is null or
			l_ies_armaz_itau = " " then
			let l_ies_armaz_itau = "n"
		end if

		if l_ies_armaz_itau = "s" then
			if p_dados_tela.ies_nf_aguard_nfe = "a" or
				p_dados_tela.ies_nf_aguard_nfe = "4" or
				l_permite_acesso_tipo6         = true then
				let comando3 = p_nf_sup.cod_empresa      ," ",
				p_nf_sup.num_aviso_rec    ," "
				call log1200_executa_programa("sup9205",comando3)
			end if
		else
			#if p_dados_tela.ies_nf_aguard_nfe = "a" then
			let comando3 = p_nf_sup.cod_empresa      ," ",
			p_nf_sup.num_aviso_rec    ," "
			call log1200_executa_programa("sup9205",comando3)
			#end if
		end if
		call log006_exibe_teclas("01", p_versao)
		current window is w_sup37601
		call sup376_consulta_dados()
		call sup3760_display_totitens_conhecimento()
	else
		#--------------------------#
		# altera��o wms os: 450083 #
		#--------------------------#
		# passo 21                 #
		if m_wms_instal = "s" and m_segmto_utilizacao = "o" then
			call log0030_mensagem("op��o dispon�vel somente para documentos provis�rios.","exclamation")
		else
			call log0030_mensagem(" opcao exclusiva para notas com origem fornecedor. ","exclamation")
		end if
	end if
else
	call log0030_mensagem(" consulte previamente para executar essa funcao","exclamation")
end if

command key("5") "5-relac_depos_fornec" "relaciona depositante com o fornecedor "
message ""
if p_dados_tela.num_nf is not null then
	whenever error continue
	select ar_fornec_depos.num_ar_depos
	from ar_fornec_depos
	where ar_fornec_depos.cod_empresa   = p_cod_empresa and
	ar_fornec_depos.num_ar_fornec = p_nf_sup.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode = 0 or p_dados_tela.ies_nf_aguard_nfe = "b" then
		let comando3 = p_nf_sup.cod_empresa      ," ",
		p_nf_sup.num_aviso_rec    ," "
		call log1200_executa_programa("sup9206",comando3)
	else
		call log0030_mensagem("opcao exclusiva para notas com origem depositante ","exclamation")
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem(" consulte previamente para executar essa funcao ","exclamation")
end if

command key("*") "*forncedor_triangulacao" "relaciona o fornecedor ao item enviado."
message ""
if p_dados_tela.num_nf is not null then
	call sup3760_fornecedor_relac_triangulacao(p_cod_empresa, p_dados_tela.num_aviso_rec, ' ')
returning l_item_triang, l_triang_em_terc

	if l_item_triang = true then
		call sup3760_fornecedor_triangulacao(l_triang_em_terc, false)
		current window is w_sup37601
	else
		call log0030_mensagem('o relacionamento no controle de terceiros n�o � triangula��o.\n fun��o n�o permitida','exclamation')
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
end if

command key("-") "-libera_wis" "permite liberacao da ar consultada para interface wis "
if p_dados_tela.num_nf        is not null then
	if log005_seguranca(p_user,"suprimen","sup3760","ex")  then
		if sup376_verifica_dados_wis() then
		else
			call sup376_libera_wis()
		end if
		### dmanentlgx-1769 - display do numero da nota completo
		call sup3760_display_num_nfe_cte() ### trxyyh
	else
		call log0030_mensagem(" consulte previamente para executar essa funcao ","exclamation")
	end if
end if
command key("%") "%_fatur_x_reajuste" "relaciona remessa para faturamento e reajuste consignacao."
if log005_seguranca(p_user,"suprimen","sup3760","in")  then
	let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
	call log1200_executa_programa("sup1344",comando3)

	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
end if

command key("<") "<pesagens" "exibe dados relativos as pesagens efetuadas."
if p_dados_tela.num_nf        is not null then
	if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
		if log005_seguranca(p_user,"suprimen","sup3760","in")  then
			whenever error continue
			let m_num_pesagem = 0
			select count(*)
			into m_num_pesagem
			from sup_ctr_balanca
			where empresa           = p_cod_empresa
			and num_docum         = p_nf_sup.num_nf
			and serie_nota_fiscal = p_nf_sup.ser_nf
			and subserie_nf       = p_nf_sup.ssr_nf
			and fornecedor        = p_nf_sup.cod_fornecedor
			and seq_nota_fiscal   > 0
			and tip_pesagem       = "1"
			and aviso_recebto     is not null
			if m_num_pesagem > 0 then
				call sup376_exibe_dados_pesagem()
			else
				error " nao existem pesagens relativas a essa nf "
			end if
			whenever error stop
		end if
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem(" consulte previamente para fazer a modificacao","exclamation")
end if

command key("/") "/_cta_deb_fornec" "relaciona banco/agencia/conta para a nota fiscal."
if p_dados_tela.num_nf is not null then
	if log005_seguranca(p_user,"suprimen","sup3760","mo")  then
		call sup3762_inf_conta_corrente("m") returning p_status
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem(" consulte previamente para executar essa funcao ","exclamation")
end if

command key(">") ">_nota_origem" "relaciona nota origem para a nota fiscal complementar."
if p_dados_tela.num_nf is not null then
	if log005_seguranca(p_user,"suprimen","sup3760","mo")  then
		call sup3762_inf_nota_origem("menu")
		if sup376_verifica_fechamento() then
			if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
				m_consiste_nf_integr) then

				if m_cons_modific = "s" then
					call sup376_processa_consistencia("n")
				else
					if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
					end if
				end if

			end if
		end if
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem(" consulte previamente para executar essa funcao ","exclamation")
end if

command key (")") ")_textos_ar" "incluir textos relacionados ao a.r"
message ""
if p_dados_tela.num_aviso_rec is not null then
	let comando3 = p_cod_empresa      ," ",
	p_dados_tela.num_aviso_rec
	call log1200_executa_programa("sup1065",comando3)

	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key ("{") "{_ar_grade" "consulta grades/dimensional do aviso de recebimento"
message ""
if p_dados_tela.num_aviso_rec is not null then
	if sup3766_consulta_grade(p_cod_empresa,
		p_dados_tela.num_aviso_rec) = false then
		call log0030_mensagem(" problemas na consulta das grades/dimensional ","exclamation")
	end if
	current window is w_sup37601
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
end if

command key ("[") "[_efetua_baixa_aut" "efetua a baixa autom�tica da(s) fam�lia(s)."
message ""
if p_dados_tela.num_aviso_rec is not null then
	if find4glfunction('supy9_efetua_bxa_est_aut') then
		if not supy9_efetua_bxa_est_aut() then
			call log0030_mensagem("efetua��o de baixa autom�tica cancelada.","exclamation")
		end if
	end if
	current window is w_sup37601
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem("consulte previamente para executar esta fun��o.","exclamation")
end if

command key ("]") "]_altera_ordem/pedido" "altera oc/pc de notas fiscais em tr�nsito."
message ""
if p_dados_tela.num_aviso_rec is not null then
	if p_dados_tela.ies_nf_aguard_nfe = "7" then
		call sup3760_modifica_oc_pc()
		current window is w_sup37601
	else
		call log0030_mensagem('nota fiscal n�o est� em tr�nsito.','exclamation')
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem("consulte previamente para executar esta fun��o.","exclamation")
end if

command key ("}") "}_desvincula_q04" "desvincula documento q04 do ar"
message ""
if find4glfunction('wmsy18_desvincula_q04') then
	if p_dados_tela.ies_especie_nf <> 'nfd' then
		call log0030_mensagem("op��o v�lida apenas para notas fiscais de devolu��o (nfd).","exclamation")
	else
		if not wmsy18_desvincula_q04(p_cod_empresa, p_dados_tela.num_aviso_rec,'ar') then
		end if
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
end if

command "zoom" "consulta as informa��es relacionadas a nota fiscal"  #rafael - os312341
if log005_seguranca(p_user,"suprimen","sup3760","co")  then
	call sup3760_zoom()
end if
call log006_exibe_teclas("01",p_versao)
current window is w_sup37601
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key ("t")"frete" "consulta informa��es relacionadas ao frete"
if log005_seguranca(p_user,"suprimen","sup3760","co")  then
	call sup3760_fretes()
end if
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key("b") "b_relaciona_nf" "relaciona notas fiscais." #os450170
message " "
if log005_seguranca(p_user,"suprimen","sup3760","co") then
	call sup3760_relaciona_nf()
end if

call log006_exibe_teclas("01",p_versao)
current window is w_sup37601
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key(":") ":consulta_seriais"
let comando3 = p_cod_empresa      ," ",
p_dados_tela.num_nf," ",
p_dados_tela.ser_nf," ",
p_dados_tela.ssr_nf," ",
p_dados_tela.ies_especie_nf," ",
p_dados_tela.cod_fornecedor
call log1200_executa_programa("sup8028",comando3)
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key("j") "j_aprova_erro_qtd_dias" "aprova erro quantidade de dias. " #os490902
message " "

if log005_seguranca(p_user,"suprimen","sup3760","in") then
	if sup3760_verifica_usuario() then
		call sup3760_aprova_erro_qtd_dias()
	else
		call log0030_mensagem('usu�rio n�o tem permiss�o para aprova��o de erro.','exclamation')
	end if
end if

call log006_exibe_teclas("01",p_versao)
current window is w_sup37601
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key("(") "(_relac_nf_remessa_retorno" "relaciona nf(nfe ou nfr) com nf de remessa."
message ""
call sup3760_controla_nf_remessa_retorno()
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key("_") "integrar" "efetua a integra��o da nota fiscal."
message ""
if p_dados_tela.num_aviso_rec is not null then
	if find4glfunction('y_sup3760_validacoes_apos_consistencias_nf') then
		call y_sup3760_validacoes_apos_consistencias_nf(p_cod_empresa, p_dados_tela.num_aviso_rec, "i")
	end if
	### dmanentlgx-1769 - display do numero da nota completo
	call sup3760_display_num_nfe_cte() ### trxyyh
else
	call log0030_mensagem("consulte previamente para executar esta fun��o.","exclamation")
end if

command key("+") "+_relac_rem_x_ret" "relaciona ar de remessa com  ar de retorno."
message ""
if p_dados_tela.num_aviso_rec is not null then
	if find4glfunction('sup1277_seleciona_nf_remessa') then
		if sup1277_seleciona_nf_remessa(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			'') then
			if m_cons_modific = "s" then
				call sup376_processa_consistencia("n")
			else
				if sup3731_gera_erro_consistencia(p_nf_sup.num_aviso_rec) = false then
				end if
			end if
		end if
		### dmanentlgx-1769 - display do numero da nota completo
		call sup3760_display_num_nfe_cte() ### trxyyh
	else
		call log0030_mensagem("fun��o sup1277 n�o encontrada no rpo.","exclamation")
	end if
else
	call log0030_mensagem("consulte previamente para executar esta fun��o.","exclamation")
end if

command key(".") ".consul_chave_acesso" "consulta as nfs de fornecedores pela chave de acesso."
message ""
display "                                                                               " at 20,01
display "                                                                               " at 10,01
let int_flag = 0
let p_cod_empresa = m_cod_empresa_orig
if log005_seguranca(p_user,"suprimen","sup3760","co")  then
	let p_cons_arg = false
	call sup376_consulta_aviso_rec("chave_acesso")
	if sup3762_busca_frete_sup() = false then
		let p_frete_sup.num_conhec = 0
	end if
	if p_ies_cons then
	next option "seguinte"
end if
end if
let int_flag = 0
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key ("'") "outros" "menu espec�fico."
message ""
call log_setvar('cod_empresa', p_cod_empresa)
#epl c�digo da empresa
#epl tipo: aviso_rec.cod_empresa

call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
#epl n�mero do ar
#epl tipo: aviso_rec.num_aviso_rec

call log_setvar('num_nf', p_dados_tela.num_nf)
#epl n�mero da nota fiscal
#epl tipo: nf_sup.num_nf

call log_setvar('ser_nf', p_dados_tela.ser_nf)
#epl s�rie da nota fiscal
#epl tipo: nf_sup.ser_nf

call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
#epl subserie da nota fiscal
#epl tipo: nf_sup.ssr_nf

call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
#epl esp�cie da nota fiscal
#epl tipo: nf_sup.ies_especie_nf

call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
#epl c�digo do fornecedor da nota fiscal
#epl tipo: nf_sup.cod_fornecedor

call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
#epl tipo da nota fiscal
#epl tipo: nf_sup.ies_nf_aguard_nfe

call log_setvar('cod_operacao', p_dados_tela.cod_operacao)
#epl c�digo de opera��o
#epl tipo: nf_sup.cod_operacao

if log_existe_epl('sup3760y_menu_outros') then
	call sup3760y_menu_outros()
end if
current window is w_sup37601
### dmanentlgx-1769 - display do numero da nota completo
call sup3760_display_num_nfe_cte() ### trxyyh

command key ("f11") "sobre" "informa��es sobre a aplica��o (f11)."
call log_info_sobre(sourcename(),p_versao)

command "fim" "retorna ao menu anterior"
exit menu
end menu

close window w_sup37601
end function

#-----------------------------------------------#
private function sup3760_display_totitens_conhecimento()
#-----------------------------------------------#
	display " nr. itens: ", p_tot_itens ," "  at 20,02 attribute(reverse)
	if p_nf_sup.num_conhec <> 0 then
		display " conhecimento: ",p_nf_sup.num_conhec," " at 20,20 attribute(reverse)
		call sup3760_mostra_conhec_sup_frete_x()
	end if
end function

# tdkjr0 - declarar cursores utilizados na consist�ncia de nota fiscal
#-----------------------------------------------#
function sup3760_declara_cursores_consistencia()
#-----------------------------------------------#
	define l_sql_stmt           char(2000)

	if not m_decl_cq_it_pis then
		let l_sql_stmt = "select num_seq, val_liquido_item, cod_item, ",
		" val_frete, ies_tip_incid_ipi, ",
		" val_ipi_decl_item, val_ipi_calc_item, ",
		" gru_ctr_desp_item, cod_cla_fisc, ",
		" qtd_declarad_nf, num_oc ",
		" from aviso_rec ",
		" where cod_empresa   = ? ",
		" and num_aviso_rec = ? "
		whenever error continue
		prepare var_it_pis from l_sql_stmt
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("prepare","var_itens_nota")
		end if

		whenever error continue
		declare cq_it_pis cursor with hold for var_it_pis
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> notfound and sqlca.sqlcode <> -284 then
			call log003_err_sql('select','aviso_rec(1)')
		end if

		free var_it_pis

		let m_decl_cq_it_pis = true
	end if

	if not m_decl_cq_it_pis2 then
		let l_sql_stmt = " select num_seq ",
		" from aviso_rec ",
		" where cod_empresa = ? ",
		" and num_aviso_rec = ? "

		whenever error continue
		prepare var_it_pis2 from l_sql_stmt
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("prepare","var_itens_nota")
		end if

		whenever error continue
		declare cq_it_pis2 cursor with hold for var_it_pis2
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> notfound and sqlca.sqlcode <> -284 then
			call log003_err_sql('select','aviso_rec(2)')
		end if

		free var_it_pis2

		let m_decl_cq_it_pis2 = true
	end if

end function

#------------------------------------------#
function sup3760_verifica_controle_insp()
#------------------------------------------#
	define l_msg                   char(100),
	l_ies_item_estoq        char(01),
	l_ies_liberacao_cont    char(01),
	l_ies_liberacao_insp    char(01)

	initialize l_msg to null

	let l_msg = 'executa a fun��o em andamento?'

	if p_num_seq is null then

		whenever error continue
		declare cq_verifica_insp cursor for
		select aviso_rec.ies_item_estoq,
		aviso_rec.ies_liberacao_cont,
		aviso_rec.ies_liberacao_insp
		from aviso_rec
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare","cq_verifica_insp")
		end if


		whenever error continue
		foreach cq_verifica_insp into l_ies_item_estoq,
		l_ies_liberacao_cont,
		l_ies_liberacao_insp

		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			call log003_err_sql("foreach cursor","cq_cfop_itens1")
		end if

		if l_ies_item_estoq = 's' then
			if l_ies_liberacao_cont = 's' or l_ies_liberacao_insp = 's' then
				let l_msg = 'nota fiscal com contagem/inspe��o efetuada. deseja excluir?'
				exit foreach
			end if
		end if

	end foreach
	whenever error stop
else
	call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq)

	if p_aviso_rec.ies_item_estoq = 's' then
		if p_aviso_rec.ies_liberacao_cont = 's' or p_aviso_rec.ies_liberacao_insp = 's' then
			let l_msg = 'nota fiscal com contagem/inspe��o efetuada. deseja excluir?'
		end if
	end if
end if

return l_msg
end function

#-------------------------------------#
function sup376_inclusao_aviso_rec()
#-------------------------------------#
	define p_ind_insert        smallint,
	p_par_forn          char(01),
	l_sucesso           smallint,
	l_item_wms          smallint,
	l_grupo_desp        like item_sup.gru_ctr_desp,
	l_ies_pagamento     like cond_pgto_cap.ies_pagamento,
	l_ind               smallint,
	l_ies_obj_entrada   like cod_fiscal_sup.ies_obj_entrada,
	l_insp_ret_benef    char(01),
	l_status            smallint,
	l_uni_feder         like empresa.uni_feder,
	l_cod_uni_feder     like fornecedor.cod_uni_feder,
	l_tran_unid_cod     char(01),
	l_cod_fiscal1       like item_sup.cod_fiscal,
	l_cfop_destino      like aviso_rec.cod_fiscal_item,
	l_achou_item        smallint,
	l_fornec_compex     smallint,
	l_is_clie_319       smallint ,
	l_contrato          like wms_contrato.contrato,       # wms - columbia
	l_trans_contrato    like wms_contrato.trans,          # wms - columbia
	l_tip_estoque       like wms_tip_estoque.tip_estoque, # wms - columbia
	l_comando           char(100),
	l_sqlcode           smallint, # wms - columbia
	l_item_triang                 smallint,
	l_triang_em_terc              smallint,
	l_informa_cliente_triang_con  char(01),
	l_msg                         varchar(200),
	l_num_di_compl                decimal(15,0)

	define l_obtem_num_aviso_rec         smallint,
	l_inicializa_variaveis        smallint,
	l_inicializa_campos           smallint,
	l_mostra_msg                  smallint,
	l_cod_empresa_orig            char(02),
	l_ies_regra_cotacao           like sup_par_ped_compra.parametro_ind,
	l_val_cotacao_fixa            like sup_par_ped_compra.parametro_num,
	l_dat_vigencia                like sup_par_ped_compra.parametro_dat,
	l_cod_operacao                like estoque_operac.cod_operacao

	initialize l_ies_regra_cotacao, l_val_cotacao_fixa, l_dat_vigencia to null
	initialize l_uni_feder,l_cod_uni_feder,l_tran_unid_cod,l_cod_fiscal1 to null

	let m_ies_transf_ai = false ### teydru

	let l_obtem_num_aviso_rec  = true
	let l_inicializa_variaveis = true
	let l_inicializa_campos    = true
	let l_mostra_msg           = true

	if log_existe_epl('sup3760y_before_process_inclusao_aviso_rec') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('obtem_num_aviso_rec', l_obtem_num_aviso_rec)
		#epl indicador se obtem o numero do ultimo ar
		#epl tipo: smallint

		call log_setvar('inicializa_variaveis', l_inicializa_variaveis)
		#epl indicador se inicializa as vari�veis
		#epl tipo: smallint

		call log_setvar('inicializa_campos', l_inicializa_campos)
		#epl indicador se inicializa os campos
		#epl tipo: smallint

		call log_setvar('mostra_msg', l_mostra_msg)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call sup3760y_before_process_inclusao_aviso_rec()

		let l_obtem_num_aviso_rec  = log_getvar('obtem_num_aviso_rec')
		let l_inicializa_variaveis = log_getvar('inicializa_variaveis')
		let l_inicializa_campos    = log_getvar('inicializa_campos')
		let l_mostra_msg           = log_getvar('mostra_msg')
	end if

	let p_ind_insert = 0
	let int_flag = 0
	let p_houve_erro = 0
	let g_ies_transf_benef = false
	let m_valida_sup8028     = "s"

	if l_inicializa_variaveis then
		call sup3760_initialize_ar()

		initialize p_formonlyr.*   to null
		initialize p_dados_telar.* to null
		initialize m_num_nfe_r     to null

		let p_ies_imp_renda = "n"
		let g_nao_inclui    = false
	end if

	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 12                 #
	if m_wms_instal = "s" then
		call wms6133_cria_tt_valid_prim_nf_dep()
	end if
	#---------------#

	call log085_transacao("begin")

	if l_obtem_num_aviso_rec then
		if sup376_obtem_num_aviso_rec() = false then
			call log0030_mensagem(" parametros n�o encontrados","exclamation")
			call log085_transacao("rollback")
			return
		else
			call log085_transacao("commit")
			if sqlca.sqlcode <> 0 then
				initialize p_msg to null
				let p_msg = "erro na efetiva��o dos dados. sqlca.sqlcode = ", sqlca.sqlcode clipped
				call log0030_mensagem(p_msg,"stop")
				call log085_transacao("rollback") #os596059
				return
			end if
		end if
	end if

	if l_inicializa_campos then
		call sup376_inicializa_campos_nf()

		initialize l_status, p_ies_tip_entrada, m_ies_obj_entrada to null
		let m_ind_transf_estoq   = false
		clear form
	end if

	let p_houve_erro = false

	while true
		if sup3760_entrada_dados("inclusao") then
			if g_nao_inclui = false then

				if l_mostra_msg then
					message " aguarde ... efetuando inclusao da nota fiscal ... " attribute(reverse)
				end if

				if p_dados_tela.ies_especie_nf = "nfr" and p_dados_tela.ies_nf_aguard_nfe = "a" then
					call sup3760_informa_nf_cobraca()
					current window is w_sup37601
				end if
				if m_devol_consig_venda_parcial = "s" or m_devol_cliente_parcial      = "s" then
					if g_devol_nf_parcial = true then
						if m_alterar = true then
							call sup3762_busca_items_devol_parcial() # busca os item selecionado na nota.
						else
							let m_nf_tipo_x = false
							if sup376_insere_array("inclusao") = false then #entrada de dado, permite digitar os itens.
								call log0030_mensagem("n�o foi inclu�do item para nota","excla")
								error " inclusao cancelada. "
								clear form
								return
							end if
						end if

						call set_count(arraylength(p_array))
						for l_ind = 1 to arraylength(p_array)
							if l_ind > 4 then
								exit for #limite de 4 linhas na tela
							end if
							display  p_array[l_ind].* to s_sup37601[l_ind].*
						end for

						call sup376_insere_totais("inclusao") returning l_status

						if m_devol_nf_parcial_venda = true then
							if p_dados_tela_f.val_ipi_nf         = 0 and
								p_dados_tela_f.val_tot_icms_nf_d  = 0 and
								p_dados_tela_f.val_tot_nf_d       = 0 then

								insert into sup_par_ar
								(empresa,
								aviso_recebto,
								seq_aviso_recebto,
								parametro,
								par_ind_especial,
								parametro_texto,
								parametro_val,
								parametro_dat)
								values (p_cod_empresa,
								p_dados_tela.num_aviso_rec,
								0,
								'devol_parcial_venda',
								null,
								null,
								null,
								today)
							end if
						end if

						let p_nf_sup.val_tot_nf_d      = p_dados_tela_f.val_tot_nf_d
						let p_nf_sup.val_tot_icms_nf_d = p_dados_tela_f.val_tot_icms_nf_d
						let p_nf_sup.val_ipi_nf        = p_dados_tela_f.val_ipi_nf

						display by name p_dados_tela_f.*
					end if

					if m_devol_consig_venda_parcial = "n" and m_devol_cliente_parcial = "s" then
						let  m_nf_tipo_x  = false
					end if
				else
					let  m_nf_tipo_x  = false
				end if

				call log085_transacao("begin")

				if m_integracao_cre = true then
					whenever error continue
					insert into sup_par_ar values(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					0,
					"integra_cre",
					"s",
					null,
					null,
					null)
					whenever error stop

					if sqlca.sqlcode <> 0 then
						call log003_err_sql("inclusao","sup_par_ar5")
						let p_houve_erro = true
					end if
				end if

				let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
				if l_cod_empresa_orig is not null then
					let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
				end if

				let p_ies_pagamento = p_cond_pgto_cap.ies_pagamento


				if (m_operacao_gtc = 1 or m_operacao_gtc = 3)
					and (p_dados_tela.ies_especie_nf = 'nfd' or p_ies_tip_entrada = '5')
					and m_nf_anulacao = '1' then
					whenever error continue
					insert into sup_par_ar (empresa,
					aviso_recebto,
					seq_aviso_recebto,
					parametro,
					par_ind_especial,
					parametro_texto,
					parametro_val,
					parametro_dat)
					values(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					0,
					"anulacao_tms",
					1,
					null,
					0,
					null)
					whenever error stop
				end if
				initialize l_status, p_ies_tip_entrada, m_ies_obj_entrada to null
				if p_dados_tela.cod_fiscal_compl is null then
					let p_dados_tela.cod_fiscal_compl = 0
				end if

				call sup0686_retorna_tip_obj_entrada(p_dados_tela.cod_operacao,
				p_dados_tela.cod_fiscal_compl)
				returning l_status,
				p_ies_tip_entrada,
				m_ies_obj_entrada
				#-------------nfe_vendas ou nfr--------------#
				if p_nfe_vendas = true or m_nf_tipo_x  = true then
					call sup376_inicializa_vendas_tela(m_cod_emp_orig)
					if g_devol_nf_parcial = true then
						call sup3762_busca_items_devol_parcial()
					else
						if not sup1561_carrega_dados_faturamento_unico_para_nf(m_cod_emp_orig,
							"venda",
							p_ies_prim_cnd,
							g_devol_nf_parcial,
							mr_tela.*,
							m_devol_nf_parcial_venda,
							g_devol_consig_total,
							' ') then
							let p_houve_erro = true
							exit while
						end if

						for l_ind = 1 to arraylength(p_array)
							if l_ind > 4 then
								exit for #limite de 4 linhas na tela
							end if
							display  p_array[l_ind].* to s_sup37601[l_ind].*
						end for
					end if
					if m_cod_emp_orig is not null and m_cod_emp_orig <> " " then
						case g_ies_tip_controle
						when "2" let p_dados_tela.ies_especie_nf    = "nfr"
						let p_dados_tela.ies_nf_aguard_nfe = "t"
						when "3" let p_dados_tela.ies_especie_nf    = "nfr"
						let p_dados_tela.ies_nf_aguard_nfe = "1"
						when "4" let p_dados_tela.ies_especie_nf    = "nfr"
						let p_dados_tela.ies_nf_aguard_nfe = "1"
					end case
					let p_nf_sup.ies_especie_nf    = p_dados_tela.ies_especie_nf
					let p_nf_sup.ies_nf_aguard_nfe = p_dados_tela.ies_nf_aguard_nfe
					display by name p_dados_tela.ies_especie_nf,
					p_dados_tela.ies_nf_aguard_nfe
				end if
				if m_gera_rsv_transf = "s" and p_dados_tela.ies_nf_aguard_nfe = "8" then
					for l_ind = 1 to arraylength(p_array)
						if p_array[l_ind].cod_item is null and
							p_array[l_ind].qtd_declarad_nf is null then
							exit for
						end if

						let p_qtd_array = p_array[l_ind].qtd_declarad_nf

						### daudt ###
						if sup376_verifica_controla_valor(p_array_compl[l_ind].num_oc) = false then

							call sup386_popup_ordens_reservada(p_cod_empresa,
							p_array[l_ind].cod_item,
							p_array_compl[l_ind].num_pedido,
							p_array_compl[l_ind].num_oc,
							p_array_compl[l_ind].num_prog_entrega,
							p_qtd_array,
							"n" ,
							"inclusao",
							p_dados_tela.num_aviso_rec,
							p_array[l_ind].seq,
							l_ind)
							returning p_soma_reserva2, p_ies_reservou, p_ord_forn
							current window is w_sup37601
						else

							call sup861_popup_ordens_val_reserv(p_cod_empresa,
							p_array[l_ind].cod_item,
							p_array_compl[l_ind].num_pedido,
							p_array_compl[l_ind].num_oc,
							p_array_compl[l_ind].num_prog_entrega,
							p_val_array,
							"n",
							"inclusao",
							p_dados_tela.num_aviso_rec,
							p_array[l_ind].seq, l_ind)
							returning p_val_soma_reserva2, p_ies_reservou, p_ord_forn
						end if
					end for
				end if
			else
				#-------------nfe_importacao--------------#
				if (p_par_sup_compl.ies_mod_importacao = "s" or
					p_par_sup_compl.ies_mod_importacao = "l") then
					if p_dados_tela.cod_operacao[1] = "7" then
						if p_cod_pais_emp <> p_fornecedor.cod_pais and
							(p_dados_tela.ies_especie_nf = "nfe" or
							p_dados_tela.ies_especie_nf = "nfp") then
							if m_ies_utiliz_provisao = "s" and
								m_utiliz_nfm_import = "n" and
								m_num_processo >= m_inicio_provisao then
								let p_nf_sup.ies_situa_import = "e"
							else
								if m_nfp_incl_apos_encerr then
									let p_nf_sup.ies_situa_import = "e"
								else
									let p_nf_sup.ies_situa_import = "a"
								end if
							end if
							let p_aviso_rec_compl.ies_incl_import = "n"
						else
							if p_cod_pais_emp <> p_fornecedor.cod_pais and
								p_dados_tela.ies_especie_nf = "nfm" then
								let p_nf_sup.ies_situa_import = "a"       #alteracao_nfm_nfp
								let p_aviso_rec_compl.ies_incl_import = "n"
							end if
						end if
					else
						if m_nfr_import then
							if m_ies_utiliz_provisao = "s" and
								m_utiliz_nfm_import = "n" and
								m_num_processo >= m_inicio_provisao then
								let p_nf_sup.ies_situa_import = "e"
							else
								if m_nfp_incl_apos_encerr then
									let p_nf_sup.ies_situa_import = "e"
								else
									let p_nf_sup.ies_situa_import = "a"
								end if
							end if
							let p_aviso_rec_compl.ies_incl_import = "n"
						else
							let p_nf_sup.ies_situa_import = " "
						end if
					end if
				else
					let p_nf_sup.ies_situa_import = " "
				end if
			end if

			let p_cont_aut_terc  = false
			let p_aguarda_fatura = "n"
			let m_solicitou_mp   = false
			let m_solicitou_ciap = false
			let m_confirmou_mp   = true
			let m_confirmou_ciap = true
			let l_achou_item     = false
			let l_fornec_compex  = false

			call sup3760_verifica_fornec_incl_regime_compex(p_cod_empresa,
			p_dados_tela.dat_emis_nf,
			p_dados_tela.cod_fornecedor)
			returning l_fornec_compex

			for p_ind = 1 to arraylength(p_array)

				let l_achou_item = true

				### os 457685 ###
				if p_array[p_ind].qtd_declarad_nf is null
					#nota complementar de imposto s� tem um item nao preenchido..
					or (sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec)
					and (p_array[p_ind].cod_item is null or p_array[p_ind].cod_item = " ")
					and  p_array[p_ind].seq is null) then #--# nfc de imposto sem item n�o estava inserindo a aviso_rec #--#
					exit for
				end if
				### os 457685 ###

				if p_array[p_ind].cod_item is null then
					let p_array[p_ind].cod_item = " "
				end if

				if p_nfe_vendas = true and m_cod_emp_orig is not null and m_cod_emp_orig <> " "
					and (g_ies_tip_controle = "3" or g_ies_tip_controle = "4") then
					let p_array_compl[p_ind].move_estoque   = "n"
					let p_array_compl[p_ind].ies_item_estoq = "n"
				end if

				if p_array_compl[p_ind].ies_liberacao_insp is null then
					### quando o usuario nao passa pelo codigo de todos os itens
					### da nf, algumas variaveis ficavam nulas, causando problemas
					### os 190406/199090
					if sup3762_verifica_material_ipi(false) = false then
						let p_array_compl[p_ind].ies_item_estoq = "n"
						let p_array_compl[p_ind].move_estoque   = "n"
						let p_array_compl[p_ind].ies_liberacao_insp = "n"
						let p_array_compl[p_ind].ies_controle_lote  = "n"
						let p_array_compl[p_ind].cod_local_estoq    = " "
						let p_array_compl[p_ind].cod_cla_fisc = " "
						let p_array_compl[p_ind].pct_ipi_tabela = 0
					end if
				end if

### duvida paula - copiado da v0410 cliente 413, na v0410 padr�o n�o faz if abaixo.
				if p_array[p_ind].cod_item is not null and
					p_array[p_ind].qtd_declarad_nf is not null then
					let p_ind_insert = p_ind_insert + 1
					call sup376_inicializa_campos_ar()
					if p_nfe_import = true or p_nfm_import = true then
					else
						let p_aviso_rec.val_despesa_aces_i = 0
					end if

					call sup376_move_campos_ar()
					if p_nfe_vendas = true and m_cod_emp_orig is not null and
						m_cod_emp_orig <> " " and (g_ies_tip_controle = "3" or
						g_ies_tip_controle = "4") then
						if not sup3762_gera_indicar_ret_terc(m_cod_emp_orig) then
							let p_houve_erro = true
							exit for
						end if
					end if
					if p_dados_tela.ies_especie_nf <> "nfd" and
						p_array_compl[p_ind].num_pedido > 0  then
						call sup376_inclui_ar_ped()
					end if
					let p_parametros = null

					if p_dados_tela.ies_especie_nf = "nfr" or
						p_dados_tela.ies_nf_aguard_nfe = "b" or
						(p_dados_tela.ies_nf_aguard_nfe = "8" and m_gera_rsv_transf = "s") then
						if sup3760_verifica_param_item_rastreab() = false then
							let p_houve_erro = true
							exit for
						end if

						let p_par_forn = null
						call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
						p_aviso_rec.cod_item,
						p_dados_tela.dat_emis_nf,
						p_dados_tela.num_aviso_rec) returning p_par_forn
						if p_par_forn = "3" then
							let p_aguarda_fatura = "s"
						end if

						if p_par_forn = "1" then
							let p_cont_aut_terc = true
							if p_par_sup_compl_1.cod_tip_desp_terc is not null and
								p_par_sup_compl_1.cod_tip_desp_terc <> " " then
								let p_aviso_rec.cod_tip_despesa = p_par_sup_compl_1.cod_tip_desp_terc
							end if
						end if

						call sup376_busca_parametros_item(p_array[p_ind].cod_item)
						let p_parametros = p_item_parametro.parametros[2,2]
						if p_parametros = "2" then
							if p_par_sup_compl_1.cod_tip_desp_banc is not null and
								p_par_sup_compl_1.cod_tip_desp_banc <> " " then
								let p_aviso_rec.cod_tip_despesa = p_par_sup_compl_1.cod_tip_desp_banc
							end if
						end if

						if p_par_forn = "3" and
							m_ies_armaz_itau <> "s" and
							p_dados_tela.ies_nf_aguard_nfe <> "7" then  #736225 antonio/carla
							let p_dados_tela.ies_nf_aguard_nfe = "4"
							if find4glfunction('supy160_cliente_318')then
								if p_dados_tela.ies_nf_aguard_nfe <> "a" then
									if sup376_gera_item_d_terc() = false then
										let p_houve_erro = true
									end if
								end if
							else
								if sup376_gera_item_d_terc() = false then
									let p_houve_erro = true
								end if
							end if
							let p_aviso_rec.ies_item_estoq = "n"
							let p_aviso_rec.ies_situa_ar   = "c"
							let p_aviso_rec.ies_liberacao_cont = "n"
							let p_array_compl[p_ind].move_estoque = "n"
							if p_par_sup_compl_1.cod_tip_desp_cons is not null and
								p_par_sup_compl_1.cod_tip_desp_cons <> " " then
								let p_aviso_rec.cod_tip_despesa = p_par_sup_compl_1.cod_tip_desp_cons
							end if
						else
							if p_dados_tela.ies_nf_aguard_nfe = "t" then
								if find4glfunction('supy160_cliente_318')then
									if p_dados_tela.ies_nf_aguard_nfe <> "a" then
										if sup376_gera_item_d_terc() = false then
										end if
									end if
								else
									if sup376_gera_item_d_terc() = false then
									end if
								end if
							end if
						end if

						if (p_parametros = "6" and
							((p_dados_tela.ies_nf_aguard_nfe = "a" and
							m_contr_terc_no_dep = 'n') or
							(p_dados_tela.ies_nf_aguard_nfe = "b" and
							m_contr_terc_no_dep = 's'))) then
							if find4glfunction('supy160_cliente_318')then
								if p_dados_tela.ies_nf_aguard_nfe <> "a" then
									if sup376_gera_item_d_terc() = false then
									end if
								end if
							else
								if sup376_gera_item_d_terc() = false then
								end if
							end if
						end if
					else
						if p_dados_tela.ies_nf_aguard_nfe = "t" then
							if find4glfunction('supy160_cliente_318')then
								if p_dados_tela.ies_nf_aguard_nfe <> "a" then
									if sup376_gera_item_d_terc() = false then
										let p_houve_erro = true
									end if
								end if
							else
								if sup376_gera_item_d_terc() = false then
									let p_houve_erro = true
								end if
							end if
						end if
					end if


### os    283971
					if m_ies_obj_entrada = "99" and
						p_dados_tela_f.val_tot_icms_nf_d = 0  and
						p_dados_tela_f.val_ipi_nf        = 0 then
					else
### not   as de remessa de consignacao se material de uso/consumo (grupo de despesa - objetivo),
### dev   e considerar o objetivo do codigo fiscal e n�o do grupo de despesa.
						if p_dados_tela.ies_nf_aguard_nfe = "4" then
							call sup376_busca_bitributacao()
						end if
					end if

					if p_dados_tela.ies_nf_aguard_nfe = "2" or
						p_dados_tela.ies_nf_aguard_nfe = "5" then
						let p_aviso_rec.ies_liberacao_insp = "s"
					end if

					#512218
					if (p_dados_tela.ies_especie_nf = "nfr"    or
						(p_dados_tela.ies_especie_nf = "nfe"    and
						p_dados_tela.ies_nf_aguard_nfe = "x")) and
						m_ies_obj_entrada = "99" then
						let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
					end if

##### o   .s. 245661
					if p_dados_tela.ies_especie_nf = "nfr" then
						if p_dados_tela.ies_nf_aguard_nfe = "4" then
							if p_aviso_rec.ies_incid_icms_ite <> "e" then
								let p_aviso_rec.gru_ctr_desp_item = p_cod_grp_desp_nfr
							end if
							let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]

							if m_pc_nf_consig = "s" then
								if p_aviso_rec.num_oc is null or p_aviso_rec.num_oc = 0 then
									let p_houve_erro = true
									let l_msg = 'dever� ser informado pedido de compra (nf remessa consignacao)'
									call log0030_mensagem(l_msg,'exclamation')
									exit for
								end if
							end if
						else
							if m_ies_obj_entrada = "99" and
								p_dados_tela_f.val_tot_icms_nf_d = 0  and
								p_dados_tela_f.val_ipi_nf        = 0   then
#######   ############ os 180603
								if m_grupo_despesa_nfr = "s" and
									p_dados_tela.ies_especie_nf = "nfr" and
									(p_aviso_rec.num_oc = 0 or p_aviso_rec.num_oc is null) then
									if p_ies_pagamento = 3 then
									else
										let p_aviso_rec.gru_ctr_desp_item    = m_ies_obj_entrada
									end if
								else
									let p_aviso_rec.gru_ctr_desp_item    = m_ies_obj_entrada
								end if
							end if
						end if
					end if


					if p_dados_tela.ies_especie_nf    = "nfr" and
						p_dados_tela.ies_nf_aguard_nfe = "4"   and
						p_dados_tela_f.val_ipi_nf     <> 0     and
						(p_ies_obj_entrada_fisc = "3" or  p_ies_obj_entrada_fisc = "4") then
					else
						if p_dados_tela.ies_especie_nf = "nfr" and
							p_ies_achou_itsup  = false then
							let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
						else
							if p_ies_cfop99 = "s" and m_ies_obj_entrada = "99" then
								if (p_dados_tela.ies_especie_nf = "nfd" or
									p_ies_tip_entrada = "5") and
									((p_array_compl[p_ind].ies_tip_item = "c" or
									p_array_compl[p_ind].ies_tip_item = "b") or
									p_ies_achou_itsup = false) then
									let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
								end if
							end if
						end if
					end if

					if p_ies_cfop99 = "s" and m_ies_obj_entrada = "99" then
						let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
						let p_aviso_rec_compl_sq.cod_fiscal_compl  = p_dados_tela.cod_fiscal_compl
					end if

					call sup376_inclui_dest_entrega(p_array[p_ind].val_liquido_item)

					let p_aviso_rec.num_seq = p_array[p_ind].seq
					if p_dados_tela.ies_especie_nf = "nfr" or
						p_dados_tela.ies_especie_nf = "nfd" or
						p_dados_tela.ies_especie_nf = "nfc" then

						let p_aviso_rec.ies_liberacao_ar = "2"
						let p_aviso_rec.ies_diverg_listada = "s"
						if p_array_compl[p_ind].move_estoque = "s" then
							let p_aviso_rec.ies_situa_ar = "c"
							let p_aviso_rec.ies_item_estoq   = "s"
							let p_aviso_rec.ies_liberacao_ar = "1"
						end if
					end if

					#--------------------relac nfe-----------------------#
					if p_dados_tela.ies_nf_aguard_nfe = "2" then
						let p_aviso_rec.ies_item_estoq = "n"
						let p_aviso_rec.ies_contabil = "n"
					end if

					#--------------------class. fiscal-----------------------#
					if p_aviso_rec.ies_item_estoq = "n" then
						if p_aviso_rec.cod_cla_fisc_nf is not null and
							p_aviso_rec.cod_cla_fisc_nf <> " " then
							let p_aviso_rec.cod_cla_fisc = p_aviso_rec.cod_cla_fisc_nf
						end if
					end if

					if p_aviso_rec.num_oc <> 0 then
						let p_cod_secao_rec = null
						initialize p_ordem_sup.* to null
						call sup3762_busca_ordem_sup(p_aviso_rec.cod_empresa,
						p_aviso_rec.num_oc)
						let p_cod_secao_rec    = p_ordem_sup.cod_secao_receb

						if p_array_compl[p_ind].move_estoque is null or
							p_array_compl[p_ind].move_estoque = " " then
							let p_ies_item_estoq = p_ordem_sup.ies_item_estoq
						else
							let p_ies_item_estoq = p_array_compl[p_ind].move_estoque
						end if

						let p_ies_insp_recebto = p_ordem_sup.ies_insp_recebto
						if p_cod_secao_rec is not null and
							p_cod_secao_rec <> " " then
							let p_aviso_rec.cod_local_estoq = p_cod_secao_rec
						end if
						let p_aviso_rec.ies_item_estoq = p_ies_item_estoq
					end if

					if p_dados_tela.ies_nf_aguard_nfe = "5" then
						let p_aviso_rec.ies_liberacao_cont = "n"
						let p_aviso_rec.ies_liberacao_insp = "s"
						let p_aviso_rec.ies_situa_ar       = "e"
						let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
					else
						call sup376_analisa_contagem_inspecao()
					end if

					if p_aviso_rec.num_oc <> 0 then
						if p_aviso_rec.ies_item_estoq = "n" then
#### os    286425 - nfr consignacao com oc relacionada (obedece inspecao cadastrada para material)
							if p_ies_insp_recebto is not null and
								((p_ies_insp_recebto <> "4") or
								(p_ies_insp_recebto = "4" and
								p_dados_tela.ies_nf_aguard_nfe = "4")) then
								let p_aviso_rec.ies_liberacao_insp = "n"
								let p_aviso_rec.ies_liberacao_cont = "n"
								if p_par_sup_compl.ies_conta_ok_n_est = "2" or
									(p_par_sup_compl.ies_conta_ok_n_est = "3" and
									p_dados_tela.ies_especie_nf = "nfs") then
									let p_aviso_rec.ies_situa_ar = "i"
								else
									let p_aviso_rec.ies_situa_ar = "c"
								end if
							else
								let p_aviso_rec.ies_liberacao_insp = "s"
							end if

							if p_cod_oper_ent_comp is not null and
								p_cod_oper_ent_comp <> " "     then

								initialize p_contador to null
								select count(*)
								into p_contador
								from estrutura_vdp_hp
								where estrutura_vdp_hp.cod_empresa = p_aviso_rec.cod_empresa
								and estrutura_vdp_hp.cod_item    = p_aviso_rec.cod_item

								if sqlca.sqlcode <> 0 or
									p_contador is null then
									let p_contador = 0
								end if

								if p_contador > 0 then
									if p_aviso_rec.ies_situa_ar = "c" then
										let p_aviso_rec.ies_situa_ar = "i"
									end if
									let p_aviso_rec.ies_liberacao_cont = "n"
								end if

							end if
						end if
					end if

					## 404133
					if g_ies_transf_benef = true and
						(g_ies_retorno_ind = true or
						g_ret_sem_ind = true) and
						p_aviso_rec.ies_item_estoq = "n" then
						if sup3760_gera_item_ret_terc() = false then
							let p_houve_erro = true
							exit for
						end if
					end if
					if p_nfe_import = true or
						p_nfm_import = true or ### os 511148
						p_nfe_vendas = true or
						m_nf_tipo_x = true or
						p_ies_nf_transf = true or
						g_ies_nf_permuta = true then
						call sup376_calcula_val_liquido("inclusao")
					end if

					if p_dados_tela.ies_especie_nf = "nfm" then
						let p_aviso_rec.ies_situa_ar = "e"
						let p_aviso_rec.ies_item_estoq = "n"
						#let p_aviso_rec.ies_liberacao_cont = "s"
						let p_aviso_rec.ies_liberacao_insp = "s" #tewrer 10.12.2012}#chamado aaa878
						let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
					end if

					if p_aviso_rec.cod_unid_med_nf is null then
						let p_aviso_rec.cod_unid_med_nf = " "
					end if

					if p_aviso_rec.cod_item is not null and
						p_aviso_rec.cod_item <> " " then
						call vdp3188_item_sob_controle_wis(p_cod_empresa,p_aviso_rec.cod_item)
						returning l_sucesso,l_item_wms
					end if

					if p_dados_tela.ies_especie_nf = "nfs" then
						if m_incid_icms_nfs is null or m_incid_icms_nfs = " " then
						else
							let p_aviso_rec.ies_incid_icms_ite = m_incid_icms_nfs
						end if
					end if

					if sup376_tem_classificacao_sucata(p_aviso_rec.cod_item) then
						let p_aviso_rec.ies_item_estoq = "n"
					end if

					if p_dados_tela.ies_nf_aguard_nfe = "4" then
						if sup376_verifica_armazem_itau() then
							let p_aviso_rec.ies_item_estoq = "s"
						end if
					end if

					if g_ies_retorno_ind = true then

						if p_dados_tela.ies_especie_nf = "nfr" or p_ies_tip_entrada = "5" then

							let l_insp_ret_benef = null

							select avf_parametro.reserva[3,3]
							into l_insp_ret_benef
							from avf_parametro
							where avf_parametro.empresa = p_aviso_rec.cod_empresa

							if sqlca.sqlcode <> 0       or
								l_insp_ret_benef is null or
								l_insp_ret_benef = " " then
								let l_insp_ret_benef = "n"
							end if

							if l_insp_ret_benef <> "s" then
								let p_aviso_rec.ies_situa_ar = "e"
								let p_aviso_rec.ies_liberacao_cont = "s"
								let p_aviso_rec.ies_liberacao_insp = "s"
								let p_aviso_rec.ies_liberacao_ar = "2"
							end if

						else
							let p_aviso_rec.ies_situa_ar = "e"
							let p_aviso_rec.ies_liberacao_cont = "s"
							let p_aviso_rec.ies_liberacao_insp = "s"
							let p_aviso_rec.ies_liberacao_ar = "2"
						end if

					end if

					if m_gera_rsv_transf = "s" and
						p_dados_tela.ies_nf_aguard_nfe = "8" then
						let p_aviso_rec.ies_situa_ar = "i"
						let p_aviso_rec.ies_liberacao_cont = "n"
						let p_aviso_rec.qtd_recebida = p_aviso_rec.qtd_declarad_nf
					end if

					#536059
					if p_dados_tela.ies_especie_nf  = 'nfr' and
						p_dados_tela.ies_nf_aguard_nfe     = 'b'   then
						let p_aviso_rec.ies_situa_ar       = 'e'
						let p_aviso_rec.ies_liberacao_cont = 's'
						let p_aviso_rec.ies_liberacao_insp = 's'
						let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
						let p_aviso_rec.qtd_liber          = p_aviso_rec.qtd_declarad_nf
					end if

					#808022
					if p_aviso_rec.num_oc is null or p_aviso_rec.num_oc = 0 then
						if (p_par_sup_compl.ies_conta_ok_n_est = "2" or
							(p_par_sup_compl.ies_conta_ok_n_est = "3" and
							p_dados_tela.ies_especie_nf = "nfs") and
							m_cont_insp_especial = 's') or p_dados_tela.ies_especie_nf = "nfc" then
							if p_aviso_rec.ies_item_estoq = 'n'
								and p_dados_tela.ies_nf_aguard_nfe <> 't'
								and p_dados_tela.ies_nf_aguard_nfe <> "4" then
								let p_aviso_rec.ies_liberacao_cont = 's'
### telmbi - verifica se o item n�o estoque sem oc/pc tem controle de gao, neste caso deve chamar o sup0530
### (ies_liberacao_cont deve manter como "n")
								if sup3760_permite_alteracao_gao() then
									let p_aviso_rec.ies_situa_ar       = 'e'
									let p_aviso_rec.ies_liberacao_cont = 's'
									let p_aviso_rec.ies_liberacao_insp = 's'
									let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
									let p_aviso_rec.qtd_liber          = p_aviso_rec.qtd_declarad_nf
								else
									let p_aviso_rec.ies_liberacao_cont = 'n'
								end if
							end if
						end if
					end if
					#fim 808022

					if p_aviso_rec.ies_incid_icms_ite is null then
						let p_aviso_rec.ies_incid_icms_ite = " "
					end if

					if p_aviso_rec.ies_tip_incid_ipi is null then
						let p_aviso_rec.ies_tip_incid_ipi = " "
					end if

					if m_ind_transf_estoq then
						let p_aviso_rec.ies_contabil   = "s" #sdjajs
						let p_aviso_rec.ies_item_estoq = "n"
					end if

					if sup0812_verifica_nota_transferencia(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						p_dados_tela.num_nf,
						p_dados_tela.ser_nf,
						p_dados_tela.ssr_nf,
						p_dados_tela.cod_fornecedor,
						p_dados_tela.cod_operacao,
						p_dados_tela.cod_fiscal_compl) = true then
						whenever error continue
						select par_ies
						into l_tran_unid_cod
						from par_sup_pad
						where cod_empresa = p_cod_empresa
						and cod_parametro = "tran_unid_cod_fisc"
						whenever error stop
						if sqlca.sqlcode <> 0 or
							l_tran_unid_cod is null then
							let l_tran_unid_cod = "n"
						end if

						if l_tran_unid_cod = "s" then
							whenever error continue
							select uni_feder
							into l_uni_feder
							from empresa
							where cod_empresa = p_cod_empresa

							select cod_uni_feder
							into l_cod_uni_feder
							from fornecedor
							where cod_fornecedor = p_dados_tela.cod_fornecedor

							if l_uni_feder = l_cod_uni_feder then
								let p_aviso_rec.cod_fiscal_item[1] = "1"
							else
								let p_aviso_rec.cod_fiscal_item[1] = "2"
							end if

							select cod_fiscal
							into l_cod_fiscal1
							from item_sup
							where cod_empresa = p_cod_empresa
							and cod_item    = p_aviso_rec.cod_item
							whenever error stop

							let p_aviso_rec.cod_fiscal_item[2] = "."
							let p_aviso_rec.cod_fiscal_item[3,5] = l_cod_fiscal1
						end if
					end if

					call sup3760_verifica_codigo_fiscal_item(p_dados_tela.cod_operacao,
					p_dados_tela.ies_nf_aguard_nfe)

					if p_dados_tela.ies_nf_aguard_nfe = "5" and
						p_dados_tela.ies_especie_nf = "nfc" then
						call sup3760_busca_grupo_x_tipo_despesa()
					end if

					#--inicio--vanderlei os 393178 #
					if sup3760_item_bonificado(p_cod_empresa,
						p_aviso_rec.num_aviso_rec,
						p_aviso_rec.num_seq,
						"item_bonificacao") = 'b' then
						let p_aviso_rec.ies_total_nf = 'n'
					end if
					#---fim----vanderlei os 393178 #

					call sup3760_verifica_cfop_destino(p_dados_tela.cod_operacao)
					returning p_status, l_cfop_destino

					if p_status then
						let p_aviso_rec.cod_fiscal_item = l_cfop_destino
					end if

					if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
						p_cod_empresa,
						p_dados_tela.num_aviso_rec) then
						if p_array[p_ind].cod_item is null then
							let p_array[p_ind].cod_item = " "
						end if
						if p_array[p_ind].den_item is null then
							let p_array[p_ind].den_item = " "
						end if
						if p_array[p_ind].qtd_declarad_nf is null then
							let p_array[p_ind].qtd_declarad_nf = 0
						end if
						if p_array[p_ind].cod_unid_med_nf is null then
							let p_array[p_ind].cod_unid_med_nf = " "
						end if
						if p_array[p_ind].pre_unit_nf is null then
							let p_array[p_ind].pre_unit_nf = 0
						end if
						if p_array[p_ind].val_liquido_item is null then
							let p_array[p_ind].val_liquido_item = 0
						end if
						if p_array[p_ind].cod_cla_fisc_nf is null then
							let p_array[p_ind].cod_cla_fisc_nf = " "
						end if
						if p_array[p_ind].pct_ipi is null then
							let p_array[p_ind].pct_ipi = 0
						end if

						if p_aviso_rec.num_seq = 1 then
							let p_aviso_rec.val_ipi_decl_item = p_dados_tela_f.val_ipi_nf
							let p_aviso_rec.val_icms_item_d = p_dados_tela_f.val_tot_icms_nf_d
						end if
					end if

					if p_aviso_rec.val_base_c_ipi_it is null then
						let p_aviso_rec.val_base_c_ipi_it   = 0
					end if

					if p_aviso_rec.val_ipi_calc_item is null then
						let p_aviso_rec.val_ipi_calc_item   = 0
					end if

					if p_aviso_rec.val_base_c_item_c is null then
						let p_aviso_rec.val_base_c_item_c   = 0
					end if

					call sup3760_verifica_insp_nfr()

					whenever error continue
					insert into aviso_rec values (p_aviso_rec.*)
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("inclusao","aviso_rec")
						let p_houve_erro = true
						exit for
					else
						if find4glfunction('supr87_verif_item_x_fornec') then
							if not supr87_verif_item_x_fornec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_aviso_rec.num_seq,
								p_aviso_rec.cod_item, p_dados_tela.cod_fornecedor) then
								let p_houve_erro = true
							end if
						end if

						if m_cred_st_fat = "s"    #os. 479344
							or m_cred_st_fat = "e" then
							if not sup2621_verifica_nota_transferencia(p_aviso_rec.*, p_dados_tela.cod_fornecedor) then
							end if
						end if                    #os. 479344

						### os277425 ###
						if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
							p_cod_empresa,
							p_dados_tela.num_aviso_rec) = false and
							sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
							p_cod_empresa,
							p_dados_tela.num_aviso_rec) = false then
							if sup3766_processa_movtos_estoque(p_cod_empresa,
								p_dados_tela.num_aviso_rec,
								p_aviso_rec.num_seq,
								p_aviso_rec.cod_item) = false then
								error " problemas na inclus�o dos controles de grade/dimensional "
								let p_houve_erro = true
							end if
						end if
						### fim os277425 ###
					end if


					#inicio tfopim
					if log_existe_epl('sup3760y_after_process_insert_aviso_rec') then
						call log_setvar('cod_empresa', p_cod_empresa)
						#epl codigo da empresa
						#epl tipo: aviso_rec.cod_empresa

						call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
						#epl numero do ar
						#epl tipo: aviso_rec.num_aviso_rec

						call log_setvar('num_seq', p_aviso_rec.num_seq)
						#epl numero da sequencia do ar
						#epl tipo: aviso_rec.num_seq

						call log_setvar('num_oc', p_aviso_rec.num_oc)
						#epl numero da oc
						#epl tipo: aviso_rec.num_oc

						call log_setvar('cod_item', p_aviso_rec.cod_item)
						#epl c�digo do item
						#epl tipo: aviso_rec.cod_item

						call log_setvar('houve_erro', p_houve_erro)
						#epl indicador se houve erro no processamento
						#epl tipo: smallint

						call log_setvar('ies_situa_ar', p_aviso_rec.ies_situa_ar)
						#epl situa��o do ar
						#epl tipo: char(01)

						call sup3760y_after_process_insert_aviso_rec()
						let p_houve_erro = log_getvar('houve_erro')
					end if
					#fim tfopim

					if not sup1031_grava_audit_ar(p_aviso_rec.num_aviso_rec,
						p_aviso_rec.num_seq,
						"sup3760","1") then
						let p_houve_erro = true
						exit for
					end if

					#trnoc7
					initialize m_num_oc_ant to null
					initialize m_num_pedido_ant to null
					call sup376_grava_seq_adicao_imp()

					if find4glfunction('supy23_atualiza_oc_pd_fluxo_caixa') then
						if not supy23_atualiza_oc_pd_fluxo_caixa(p_ordem_sup.cod_empresa,
							p_ordem_sup.cod_item,
							p_ordem_sup.num_oc,
							p_ordem_sup.cod_fornecedor,
							p_ordem_sup.cnd_pgto,
							p_ordem_sup.cod_mod_embar,
							p_ordem_sup.cod_moeda,
							p_aviso_rec.pre_unit_nf) then
							let p_houve_erro = true
							exit for
						end if
					end if

					if sup0812_verifica_nota_transferencia(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						p_dados_tela.num_nf,
						p_dados_tela.ser_nf,
						p_dados_tela.ssr_nf,
						p_dados_tela.cod_fornecedor,
						p_dados_tela.cod_operacao,
						p_dados_tela.cod_fiscal_compl) = true then
						call sup376_verifica_cod_fiscal_item()
					end if

					let p_dados_telar.* = p_dados_tela.*
					let m_num_nfe_r = m_num_nfe
					let p_formonlyr.* = p_formonly.*

					if m_gera_rsv_transf = "s" and p_dados_tela.ies_nf_aguard_nfe  = "8" then
						call sup3760_carrega_strib_nfe()
					end if

					let p_aviso_rec_compl_sq.cod_empresa       = p_aviso_rec.cod_empresa
					let p_aviso_rec_compl_sq.cod_empresa_estab = p_aviso_rec.cod_empresa_estab
					let p_aviso_rec_compl_sq.num_aviso_rec     = p_aviso_rec.num_aviso_rec
					let p_aviso_rec_compl_sq.num_seq           = p_aviso_rec.num_seq
					let p_aviso_rec_compl_sq.val_base_d_ipi_it = 0

					if p_aviso_rec_compl_sq.cod_fiscal_compl is null then
						let p_aviso_rec_compl_sq.cod_fiscal_compl = 0
					end if
					let p_aviso_rec_compl_sq.dat_ini_garantia = null
					let p_aviso_rec_compl_sq.dat_fim_garantia = null

					insert into aviso_rec_compl_sq values (p_aviso_rec_compl_sq.*)
					if sqlca.sqlcode <> 0  then
						call log003_err_sql("inclusao","aviso_rec_compl_sq")
						let p_houve_erro = true
					end if

					if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
						whenever error continue
						update sup_ctr_balanca
						set aviso_recebto     = p_aviso_rec.num_aviso_rec
						where empresa           = p_cod_empresa
						and num_docum         = p_dados_tela.num_nf
						and serie_nota_fiscal = p_dados_tela.ser_nf
						and subserie_nf       = p_dados_tela.ssr_nf
						and fornecedor        = p_dados_tela.cod_fornecedor
						and seq_nota_fiscal   = p_aviso_rec.num_seq
						and tip_pesagem       = "1"
						whenever error stop
					end if

					#--------------------------#
					# altera��o wms os: 450083 #
					#--------------------------#
					# passo 28                 #

					if not p_houve_erro then
						if m_wms_instal = "s" then
							call wms0004_item_sob_controle_wms(p_cod_empresa, p_aviso_rec.cod_item) returning l_sqlcode, l_status
							if l_sqlcode = false then
								let p_houve_erro = true
							end if
							if l_status and p_houve_erro = false then
								if p_dados_tela.ies_nf_aguard_nfe = "a" or
									p_dados_tela.ies_nf_aguard_nfe = "b" then
									call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
									m_wms_depositante,
									today,
									0) returning l_contrato, l_status
									if l_contrato <> "0" then
										let l_trans_contrato = wmst15_wms_contrato_busca_transacao(p_cod_empresa,
										l_contrato)
										if wmsm15_wms_contrato_leitura(p_cod_empresa,
											l_trans_contrato,
											true,1) then
											# passo 28.1 #
											if wmsm15_wms_contrato_get_altera_tip_estoque_nota_fiscal() = "n" then
												let l_tip_estoque = wmst129_retorna_tip_estoque_padrao(p_cod_empresa,
												m_wms_depositante,
												0)
												whenever error continue
												insert into sup_par_ar (empresa,
												aviso_recebto,
												seq_aviso_recebto,
												parametro,
												par_ind_especial,
												parametro_texto,
												parametro_val,
												parametro_dat)
												values (p_cod_empresa,
												p_aviso_rec.num_aviso_rec, #p_nf_sup.num_aviso_rec,
												p_aviso_rec.num_seq,
												"tip_estoque",
												null,
												l_tip_estoque,
												null,
												null)
												whenever error stop
												if sqlca.sqlcode <> 0 then
													call log003_err_sql("inclusao","sup_par_ar - wms")
													let p_houve_erro = true
												end if
											end if
										end if
									else
										call log0030_processa_mensagem("n�o existe contrato ativo para este depositante.","exclamation",0)
										let p_houve_erro = true
									end if
								end if
							end if
						end if
					end if
					# fim -----------------------------------------#
					if p_nfe_import = true then
						if not sup376_rateio_desp_aces() then
							let p_houve_erro = true
							exit for
						end if
						call sup376_grava_aviso_rec_proc_imp()

						if p_dados_tela.dat_entrada_nf >= "01/05/2004" then
							call sup3760_grava_ar_piscofim()
							if p_houve_erro = true then
								exit for
							end if
						end if
					end if
					{awc} call sup376_gera_iss()
				else
					exit for
				end if

				if p_nfm_import = true then
					whenever error continue
					insert into sup_par_ar (empresa          ,
					aviso_recebto    ,
					seq_aviso_recebto,
					parametro        ,
					par_ind_especial ,
					parametro_texto  ,
					parametro_val    ,
					parametro_dat  )
					values (p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					p_ind,
					"valor_ii",
					null,
					null,
					p_array_imp[p_ind].val_ii,
					null)
					whenever error stop
					if sqlca.sqlcode <> 0 then
						let p_houve_erro = true
						exit for
					end if
				end if

				### os331455
				let p_array_compl1[p_ind].cod_tip_despesa = p_aviso_rec.cod_tip_despesa
				### os331455 ###

				if l_fornec_compex then
					call sup3760_verifica_regime_compex(p_cod_empresa,
					p_aviso_rec.num_aviso_rec,
					p_aviso_rec.num_seq,
					p_aviso_rec.cod_item)
				end if
			end for

			if l_achou_item = false then
				error "nao foram encontrados itens para nota fiscal!"
				sleep 3
				let p_houve_erro = true
			end if

			if p_houve_erro then
				call sup3760_initialize_ar()

				initialize p_dados_telar.* to null
				initialize m_num_nfe_r     to null ### trxyyh
				initialize p_formonlyr.*   to null

				call log0030_exibe_ultima_mensagem()

				clear form
				error " inclusao cancelada. "

				let p_houve_erro = true
				call log085_transacao("rollback")
				return
			end if

			### gravando/atualizando item_de_terc para transferencia de beneficiamento ###
			if (p_dados_tela.cod_emp_benef is not null and
				p_dados_tela.cod_emp_benef <> " ") and m_transf_saida <> "s" then

				let comando3 = p_cod_empresa             ," ",
				p_dados_tela.cod_emp_benef," ",
				p_dados_tela.num_nf
				call log1200_executa_programa("sup2480",comando3)
			end if

			#-----------------inclusao de ar complementar--------------#
			let p_aviso_rec_compl.cod_empresa     = p_cod_empresa
			let p_aviso_rec_compl.num_aviso_rec   = p_dados_tela.num_aviso_rec
			let p_aviso_rec_compl.cod_transpor    = null
			let p_aviso_rec_compl.den_transpor    = null
			let p_aviso_rec_compl.num_placa_veic  = null
			let p_aviso_rec_compl.num_di          = null
			if g_ies_transf_benef = false or
				g_ies_transf_benef is null then
				if p_ies_cod_operac is null or
					p_ies_cod_operac = "n" or
					p_ies_cod_operac = " " then
					let p_dados_tela.cod_operac_estoq = " "
				end if
			end if

			if p_dados_tela.cod_operacao[1] = "5" then
				let p_cod_fiscal_c = "1.",p_dados_tela.cod_operacao[3,5]
			end if
			if p_dados_tela.cod_operacao[1] = "6" then
				let p_cod_fiscal_c = "2.",p_dados_tela.cod_operacao[3,5]
			end if
			if p_dados_tela.cod_operacao[1] = "7" then
				let p_cod_fiscal_c = "3.",p_dados_tela.cod_operacao[3,5]
			end if

			if p_dados_tela.cod_fiscal_compl is null then
				let p_dados_tela.cod_fiscal_compl = 0
			end if

			if sup0812_verifica_nota_transferencia(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				p_dados_tela.num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.cod_fornecedor,
				p_dados_tela.cod_operacao,
				p_dados_tela.cod_fiscal_compl) = true and
				p_dados_tela.cod_operacao[1,1] <> "3" then
				if p_dados_tela.cod_operac_estoq is null or
					p_dados_tela.cod_operac_estoq = " "
					then
					let p_dados_tela.cod_operac_estoq = p_oper_trans_unid
				end if
				if p_ies_obt_inf_com = "s" then
					let p_aviso_rec_compl.cod_empresa_orig = p_cod_emp_transf
				end if
			end if

			if p_dados_tela.cod_emp_benef is not null and
				p_dados_tela.cod_emp_benef <> " " then
				if p_dados_tela.ies_nf_aguard_nfe = "8" then
					let p_aviso_rec_compl.cod_empresa_orig = p_dados_tela.cod_emp_benef
				end if
			end if

			##o.s 186311
			if p_dados_tela.ies_nf_aguard_nfe = "p" then
				if p_dados_tela.cod_operac_estoq is null or
					p_dados_tela.cod_operac_estoq = " " then
					let p_dados_tela.cod_operac_estoq = g_operac_permuta
				end if
			end if
			let p_aviso_rec_compl.cod_operacao    = p_dados_tela.cod_operac_estoq

			initialize p_aviso_rec_compl.cod_moeda_forn to null
			if p_ies_indexacao = "n" then
				if p_cod_moeda_ped is not null and
					p_par_con.cod_moeda_padrao <> p_cod_moeda_ped and
					p_fornecedor.cod_pais = p_cod_pais_emp then
					let p_aviso_rec_compl.cod_moeda_forn = p_cod_moeda_ped
				end if
			else
				let p_aviso_rec_compl.cod_moeda_forn = p_cod_moeda_ped #798794#
			end if

			if p_aviso_rec_compl.cod_moeda_forn = 0
				then let p_aviso_rec_compl.cod_moeda_forn = null
			end if

			let p_aviso_rec_compl.cod_fiscal_compl = p_dados_tela.cod_fiscal_compl
			if p_aviso_rec_compl.cod_fiscal_compl is null then
				let p_aviso_rec_compl.cod_fiscal_compl = 0
			end if
			# os 489183 #
			let p_aviso_rec_compl.ies_situacao = "n"
			if p_nfe_import = true or
				p_nfm_import = true then
				let p_aviso_rec_compl.num_di = p_processo_imp.num_di
			end if
			# os 489183 #

			let p_aviso_rec_compl.filial = p_dados_tela.filial

			call supm44_aviso_rec_compl_leitura(p_cod_empresa,p_dados_tela.num_aviso_rec,true,1)
			returning l_status

			call supm44_aviso_rec_compl_set_num_placa_veic(p_aviso_rec_compl.num_placa_veic)
			call supm44_aviso_rec_compl_set_num_di(p_aviso_rec_compl.num_di)
			call supm44_aviso_rec_compl_set_ies_incl_import(p_aviso_rec_compl.ies_incl_import)
			call supm44_aviso_rec_compl_set_num_lote_pat(p_aviso_rec_compl.num_lote_pat)
			if find4glfunction('supr91_verifica_nf_armazem') then
				if supr91_verifica_nf_armazem(p_cod_empresa, p_cod_fiscal_c, ' ') then
					let p_aviso_rec_compl.cod_operacao = supr91_retorna_oper_nf_armazem(p_cod_empresa)
				end if
			end if
			call supm44_aviso_rec_compl_set_cod_operacao(p_aviso_rec_compl.cod_operacao)
			call supm44_aviso_rec_compl_set_cod_empresa_orig(p_aviso_rec_compl.cod_empresa_orig)
			call supm44_aviso_rec_compl_set_cod_moeda_forn(p_aviso_rec_compl.cod_moeda_forn)
			call supm44_aviso_rec_compl_set_num_embarque(p_aviso_rec_compl.num_embarque)
			call supm44_aviso_rec_compl_set_ies_situacao(p_aviso_rec_compl.ies_situacao)
			call supm44_aviso_rec_compl_set_nom_usuario(p_aviso_rec_compl.nom_usuario)
			call supm44_aviso_rec_compl_set_dat_proces(p_aviso_rec_compl.dat_proces)
			call supm44_aviso_rec_compl_set_hor_operac(p_aviso_rec_compl.hor_operac)
			call supm44_aviso_rec_compl_set_cod_fiscal_compl(p_aviso_rec_compl.cod_fiscal_compl)
			if find4glfunction('supm44_aviso_rec_compl_set_filial') then
				call supm44_aviso_rec_compl_set_filial(p_aviso_rec_compl.filial)
			end if

			if l_status then
				let p_aviso_rec_compl.cod_transpor = supm44_aviso_rec_compl_get_cod_transpor()
				let p_aviso_rec_compl.den_transpor = supm44_aviso_rec_compl_get_den_transpor()

				if not supm44_aviso_rec_compl_modifica(true,true) then
					let p_houve_erro = true
				end if
			else
				call supm44_aviso_rec_compl_set_cod_empresa(p_aviso_rec_compl.cod_empresa)
				call supm44_aviso_rec_compl_set_num_aviso_rec(p_aviso_rec_compl.num_aviso_rec)
				call supm44_aviso_rec_compl_set_cod_transpor(p_aviso_rec_compl.cod_transpor)
				call supm44_aviso_rec_compl_set_den_transpor(p_aviso_rec_compl.den_transpor)

				if not supm44_aviso_rec_compl_inclui(true,false) then
					let p_houve_erro = true
				end if
			end if

			if find4glfunction('supr_multimoedas_atualiza_campos_multimoeda_nf') then ### dmanentlgx-1984
				if not supr_multimoedas_atualiza_campos_multimoeda_nf(p_cod_empresa, p_array_compl[1].num_pedido, p_dados_tela.num_aviso_rec) then
					let p_houve_erro = true
				end if
			end if


### inicio tebl05 - inclui sup_par_ar num_decl_import caso possua este parametro para o processo de importa��o.

			initialize l_num_di_compl to null
			whenever error continue
			select parametro_val
			into l_num_di_compl
			from imp_par_proc_item
			where empresa = p_cod_empresa
			and processo_import = p_processo_imp.num_processo
			and pedido_compra   = 0
			and ordem_compra    = 0
			and parametro       = 'num_decl_import'
			whenever error stop
			if sqlca.sqlcode = 0 and
				l_num_di_compl is not null then
				whenever error continue
				delete sup_par_ar
				where sup_par_ar.empresa           = p_cod_empresa
				and sup_par_ar.parametro         = 'num_decl_import'
				and sup_par_ar.aviso_recebto     = p_aviso_rec_compl.num_aviso_rec
				and sup_par_ar.seq_aviso_recebto = 0
				whenever error stop
				if sqlca.sqlcode = 0 then
					whenever error continue
					insert into sup_par_ar values(p_cod_empresa,
					p_aviso_rec_compl.num_aviso_rec,
					0,
					"num_decl_import",
					null,
					null,
					l_num_di_compl,
					today)
					whenever error stop
				end if
			end if
### fim tebl05

			if p_nfe_import = true or p_nfm_import = true then
				if p_processo_imp.num_aviso_rec is null or
					p_processo_imp.num_aviso_rec = " " then
					update processo_imp
					set num_aviso_rec = p_dados_tela.num_aviso_rec,
					ies_situacao = "5"
					where cod_empresa  = p_processo_imp.cod_empresa
					and num_processo = p_processo_imp.num_processo
					and num_versao   = p_processo_imp.num_versao
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("atualizacao","processo_imp")
						let p_houve_erro = true
					end if
				end if
			end if

			#tfnsot - comentado - repassado para sup0782/sup1084
			#tfd050
			#call sup3760_verifica_icms_st(p_cod_empresa, p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq)
			#tfd050

			if sup376_inclusao_nf_sup()  then

				if m_nfp_incl_apos_encerr then
					if not sup3760_grava_ind_nfp_incl_apos_encerr() then
						let p_houve_erro = true
					end if
				end if

				let p_dados_tela.* = p_dados_telar.*
				let m_num_nfe = m_num_nfe_r
				let p_formonly.* = p_formonlyr.*

				if p_ies_cod_operac = "s" then
				else
					if g_ies_transf_benef = true then
					else
						let p_dados_tela.cod_operac_estoq = null
					end if
				end if

				current window is w_sup37601
				display by name p_dados_tela.*
				if p_ies_cod_operac = "s" then
				else
					if g_ies_transf_benef = true then
					else
						let p_dados_tela.cod_operac_estoq = p_dados_telar.cod_operac_estoq
					end if
				end if
				display by name p_dados_tela_f.*,
				p_formonly.raz_social,
				p_formonly.des_cnd_pgto,
				p_formonly.tex_tip_frete
				let p_ies_cons = false

				call sup376_verifica_inclusao_vencimento_nff()
				#--#796313 - espindola - projeto totvs colaboracao #--#
				#--#atualiza monitor de integracao (caso existir documento)
				if m_utiliz_totvs_colab = "s" then
					if m_num_nfe is not null and m_num_nfe <> ' ' then
						let m_num_nf = m_num_nfe
					else
						let m_num_nf = p_nf_sup.num_nf
					end if

					if not sup13429_integra_erp_monitor(p_nf_sup.cod_empresa,    m_num_nf,
						p_nf_sup.ser_nf,         p_nf_sup.ssr_nf,
						p_nf_sup.cod_fornecedor, p_nf_sup.dat_emis_nf,
						"inclusao") then
						let p_houve_erro = true
					end if
				end if

				whenever error continue
				select empresa
				from nf_sup_erro
				where nf_sup_erro.empresa            = p_cod_empresa
				and nf_sup_erro.num_aviso_rec      = p_nf_sup.num_aviso_rec
				and nf_sup_erro.num_seq            = 0
				and nf_sup_erro.des_pendencia_item = "falta efetuar consistencia"
				and nf_sup_erro.ies_origem_erro    = "1"
				whenever error stop
				if sqlca.sqlcode = notfound then

					whenever error continue
					insert into nf_sup_erro (empresa,
					num_aviso_rec,
					num_seq,
					des_pendencia_item,
					ies_origem_erro,
					ies_erro_grave )
					values (p_nf_sup.cod_empresa,
					p_nf_sup.num_aviso_rec,
					0,
					"falta efetuar consistencia",
					"1",
					"s")
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("inclusao","nf_sup_erro")
						let p_houve_erro = true
					end if
				end if

				if not fcl1150_integra_ar_fcx(p_nf_sup.cod_empresa,
					p_nf_sup.num_aviso_rec,"in") then
					let p_houve_erro = true
				end if

				if (m_gerar_os_recb_mat_terc = 's') then
					if (p_nf_sup.ies_especie_nf = 'nfr') and
						(p_nf_sup.ies_nf_aguard_nfe = 't') then
						if ate0074_inclusao_os(p_nf_sup.num_nf,
							p_nf_sup.ser_nf,
							p_nf_sup.ssr_nf,
							p_nf_sup.ies_especie_nf,
							p_nf_sup.cod_fornecedor,
							p_nf_sup.dat_entrada_nf,
							p_nf_sup.num_aviso_rec,
							's') then
							let p_houve_erro = true
							exit while
						end if
					end if
				end if

				exit while
			else
				message ""
				call log0030_mensagem("inclus�o cancelada.","exclamation")

				call sup3760_initialize_ar()

				initialize p_dados_telar.* to null
				initialize m_num_nfe_r     to null
				initialize p_formonlyr.*   to null

				clear form
				call log085_transacao("rollback")
				return
			end if
		else
			return
		end if
	else
		### dmanentlgx-2152 - deleta registros sup_par_ar quando cancela a inclus�o (para que n�o fique lixo nesta tabela de ar que n�o foi efetivado).
		call sup3760_deleta_registros_inclusao_nota(p_dados_tela.cod_empresa, p_dados_tela.num_aviso_rec)

		call sup3760_initialize_ar()

		initialize p_dados_telar.* to null
		initialize m_num_nfe_r     to null
		initialize p_formonlyr.*   to null

		call log0030_exibe_ultima_mensagem()

		clear form
		display "                                                                               " at 10,01
		error " inclusao cancelada. "
		let p_houve_erro = true
		return
	end if
end while

#--inicio--vanderlei os 383999 #
if sup1481_nfc_compl_imposto(p_nf_sup.ies_especie_nf,
	p_cod_empresa,
	p_nf_sup.num_aviso_rec) = false and
	sup1481_nfc_compl_valor(p_nf_sup.ies_especie_nf,
	p_cod_empresa,
	p_nf_sup.num_aviso_rec) = false then
	if not sup0064_controla_grade_dimensional(p_cod_empresa,
		p_aviso_rec.cod_item,
		p_nf_sup.num_aviso_rec,
		p_aviso_rec.num_seq) then
		error " inclusao cancelada. "
		let p_houve_erro = 1
	end if
end if
#---fim----vanderlei os 383999 #

#--inicio--os 502143 #
let l_is_clie_319 = false
if find4glfunction('supy101_cliente_319') then
	let l_is_clie_319 = supy101_cliente_319()
end if

if l_is_clie_319 = true          and
	(p_dados_tela.cod_operacao = '5.601'  or
	p_dados_tela.cod_operacao = '6.601')  and
	m_cod_item_cred_transf_icms = p_array[1].cod_item then

	if find4glfunction('supy101_insert_sup_par_ar') then
		if supy101_insert_sup_par_ar(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.num_nf,
			p_dados_tela_f.val_tot_nf_d,
			p_aviso_rec.num_seq,
			p_dados_tela.cod_fornecedor,
			'inclusao',
			m_serie_branca) = false  then

			let l_msg = 'obrigatorio informar nota de sa�da para item ', p_array[1].cod_item clipped, "."
			call log0030_mensagem(l_msg,'exclamation')
			clear form
			display "                                                                               " at 10,01
			error " inclusao cancelada. "
			let p_houve_erro = true
		end if
	end if

end if
#---fim----os 502143 #


#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 3                  #
if m_wms_instal = "s" and p_houve_erro = false then
	let m_tempo_gasto_ditacao_nota = sup3760_tempo_gasto(current year to second,
	m_horario_alteracao_wms)
	whenever error continue
	insert into sup_par_ar (empresa,
	aviso_recebto,
	seq_aviso_recebto,
	parametro,
	par_ind_especial,
	parametro_texto,
	parametro_val,
	parametro_dat)
	values
	(p_cod_empresa,
	p_nf_sup.num_aviso_rec,
	0,
	"tempo_digitacao_nf",
	null,
	m_tempo_gasto_ditacao_nota,
	null,
	null)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","sup_par_ar - wms")
		let p_houve_erro = true
	end if

	# passo 20 #
	if p_houve_erro = false then
		# if( p_dados_tela.ies_nf_aguard_nfe <> "b") or (p_dados_tela.ies_nf_aguard_nfe = "b" and m_possui_regime_filial = true ) then
		if m_wms_depositante = " "  or m_wms_depositante is null then
			let m_wms_depositante = p_dados_tela.cod_fornecedor
		end if
		whenever error continue
		delete from ar_depos
		where cod_empresa     = p_cod_empresa
		and num_aviso_rec   = p_nf_sup.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("delete","ar_depos - wms")
			let p_houve_erro = true
		end if
		whenever error continue
		insert into ar_depos (cod_empresa,
		num_aviso_rec,
		cod_depositante)
		values (p_cod_empresa,
		p_nf_sup.num_aviso_rec,
		m_wms_depositante)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","ar_depos - wms")
			let p_houve_erro = true
		end if
		# end if
	end if

	if p_houve_erro = false then
		if mr_troca_pgto.resp_pgto_armazenagem is not null then
			if find4glfunction('wms6521_atualiza_dados_troca_pagamento') then
				if not wms6521_atualiza_dados_troca_pagamento(p_cod_empresa,
					p_nf_sup.num_aviso_rec,
					mr_troca_pgto.resp_pgto_armazenagem,
					mr_troca_pgto.outro_resp_pgto_armaz,
					mr_troca_pgto.dias_prazo_armazenagem,
					mr_troca_pgto.transf_pgto_apos_prazo,
					0) then
					let p_houve_erro = true
				end if
			end if
			initialize mr_troca_pgto.* to null
		end if
	end if

	# passo 26 #
	if p_houve_erro = false then
		whenever error continue
		insert into sup_par_ar (empresa,
		aviso_recebto,
		seq_aviso_recebto,
		parametro,
		par_ind_especial,
		parametro_texto,
		parametro_val,
		parametro_dat)
		values (p_cod_empresa,
		p_nf_sup.num_aviso_rec,
		0,
		"possui_identif_saida",
		"n",
		null,
		null,
		null)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","sup_par_ar - wms")
			let p_houve_erro = true
		end if
	end if

	# passo 27 #
	if p_houve_erro = false then
		whenever error continue
		insert into sup_par_ar (empresa,
		aviso_recebto,
		seq_aviso_recebto,
		parametro,
		par_ind_especial,
		parametro_texto,
		parametro_val,
		parametro_dat)
		values (p_cod_empresa,
		p_nf_sup.num_aviso_rec,
		0,
		"nf_receb_edi",
		"n",
		null,
		null,
		null)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","sup_par_ar - wms")
			let p_houve_erro = true
		end if
	end if

	# os 547161
	if p_houve_erro = false and
		m_segmto_utilizacao = "o" then
		if m_tipo_documento = "d" then
			if not sup3760_insere_nf_regular_fiscal() then
				let p_houve_erro = true
			end if
		end if
	end if

end if
#---------------#

display by name p_nf_sup.ies_nf_aguard_nfe
#724910#
#epl supy150 criado pela actvs, totvs n�o possui c�digos#
if find4glfunction("supy150_efetiva_inclusao_nf") then
	if supy150_efetiva_inclusao_nf(p_cod_empresa, p_nf_sup.num_aviso_rec) = false then
		let p_houve_erro = true
	end if
end if

# chamado 729881 - wms
if m_wms_instal = 's' then
	if find4glfunction("wmsy18_grava_ar_q04") then
		if m_wms_gravou_q04 then
			if not wmsy18_grava_ar_q04(p_cod_empresa, p_nf_sup.num_aviso_rec, m_wms_q04) then
				let p_houve_erro = true
			end if
		end if
	end if
end if

if log_existe_epl('sup3760y_before_process_commit_inclusao_nf') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: aviso_rec.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('num_seq', p_aviso_rec.num_seq)
	#epl numero da sequencia do ar
	#epl tipo: aviso_rec.num_seq

	call log_setvar('num_oc', p_aviso_rec.num_oc)
	#epl numero da oc
	#epl tipo: aviso_rec.num_oc

	call log_setvar('num_nf', p_nf_sup.num_nf)
	#epl numero da nota fiscal
	#epl tipo: nf_sup.num_nf

	call log_setvar('ser_nf', p_nf_sup.ser_nf)
	#epl numero da serie da nota fiscal
	#epl tipo: nf_sup.ser_nf

	call log_setvar('ssr_nf', p_nf_sup.ssr_nf)
	#epl numero da subserie da nota fiscal
	#epl tipo: nf_sup.ssr_nf

	call log_setvar('ies_especie_nf', p_nf_sup.ies_especie_nf)
	#epl esp�cie da nota fiscal
	#epl tipo: nf_sup.ies_especie_nf

	call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
	#epl codigo do fornecedor
	#epl tipo: nf_sup.cod_fornecedor

	call log_setvar('dat_entrada_nf', p_dados_tela.dat_entrada_nf)
	#epl data de entrada da nota
	#epl tipo: nf_sup.dat_entrada_nf

	call log_setvar('ies_nf_aguard_nfe', p_nf_sup.ies_nf_aguard_nfe)
	#epl esp�cie da nota fiscal
	#epl tipo: nf_sup.ies_especie_nf

	call log_setvar('houve_erro', p_houve_erro)
	#epl indicador se houve erro no processamento
	#epl tipo: smallint

	#########
	##trsvoc novos parametros
	call log_setvar('funcao', m_funcao)
	#epl opera��o que est� sendo executada (inclus�o)
	#epl tipo: char(20)

	call log_setvar('wms_instal', m_wms_instal)
	#epl codigo do fornecedor
	#epl tipo: nf_sup.cod_fornecedor


	call log_setvar('depositante', m_wms_depositante)
	#epl codigo do fornecedor
	#epl tipo: nf_sup.cod_fornecedor
	#### fim trsvoc
	call sup3760y_before_process_commit_inclusao_nf()
	let p_houve_erro = log_getvar('houve_erro')
	current window is w_sup37601
end if

#---fim--- 724910#
if p_houve_erro = false then
	#729150#
	#epl y_sup3760_validacoes_apos_consistencias_nf criado pela actvs#
	if log_existe_epl("y_sup3760_validacoes_apos_consistencias_nf") then
		call log_consoledebugmessage('inicio do processo do epl y_sup3760_validacoes_apos_consistencias_nf')
		whenever error continue
		select nf_sup_erro.des_pendencia_item
		from nf_sup_erro
		where nf_sup_erro.empresa       = p_cod_empresa
		and nf_sup_erro.num_aviso_rec = p_nf_sup.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode = 100 then
			call y_sup3760_validacoes_apos_consistencias_nf(p_cod_empresa, p_nf_sup.num_aviso_rec,"i")
			returning l_status
		else
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("leitura","nf_sup_erro")
			end if
		end if
	end if
	#---fim--- 729150#

	whenever error continue
	call log085_transacao("commit")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		initialize p_msg to null
		let p_msg ="erro na efetiva��o dos dados. sqlca.sqlcode = ", sqlca.sqlcode clipped
		call log0030_mensagem(p_msg,"stop")
		call log085_transacao("rollback") #os596059
		return
	else
		if p_nfe_import = true then
			call imp0024_mov_even(p_cod_empresa,p_processo_imp.num_processo,
			27," ",today)
		end if
		if sup3760_informa_peso() = true then
			if m_peso_nf is not null and m_peso_nf <> " " then
				display " nr. itens: ", p_tot_itens ," "  at 20,02 attribute(reverse)
				display "peso nf: ", m_peso_nf ," "       at 22,02 attribute(reverse)
			else
				display "                           "  at 22,02
			end if
		else
			initialize m_peso_nf to null
			display "                           "  at 22,02
		end if

		if l_mostra_msg then
			message " inclusao da nota fiscal efetuada com sucesso. " attribute(reverse)
		end if
		call sup376_funcoes_apos_inclusao()
		# passo 28 #
		if p_dados_tela.ies_nf_aguard_nfe = "a" or
			p_dados_tela.ies_nf_aguard_nfe = "b" then
			call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
			m_wms_depositante,
			today,
			0) returning l_contrato, l_status
			if l_contrato <> "0" then
				let l_trans_contrato = wmst15_wms_contrato_busca_transacao(p_cod_empresa,
				l_contrato)
				if wmsm15_wms_contrato_leitura(p_cod_empresa,
					l_trans_contrato,
					true,1) then
					# passo 28.1 #
					if wmsm15_wms_contrato_get_altera_tip_estoque_nota_fiscal() <> "n" then
						# passo 28.2 #
						let l_comando = p_cod_empresa clipped,"' ",
						p_nf_sup.num_aviso_rec,
						" 's' ",
						" 's' "
						call log1200_executa_programa("wms6132",l_comando)
					end if
				end if
			else
				call log0030_processa_mensagem("n�o existe contrato ativo para este depositante.","exclamation",0)
				let p_houve_erro = true
			end if
		end if

		call sup376_exibe_array()
	end if
else
	call log085_transacao("rollback")
end if

if p_houve_erro = false then
	if log_existe_epl('sup3760y_after_process_inclusao_aviso_rec') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		call sup3760y_after_process_inclusao_aviso_rec()
		current window is w_sup37601

		if m_cons_modific = "s" then
			call sup376_processa_consistencia("n")
		else
			if sup3731_gera_erro_consistencia(p_nf_sup.num_aviso_rec) = false then
			end if
		end if
	end if
end if

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if p_houve_erro = false and m_wms_instal = 's' then
	# passo 16 #
	if p_houve_erro = false then
		if not wms6133_grava_dados_validacao_primeira_nf() then
			let p_houve_erro = true
		end if
	end if
end if
#---------------#

if (p_nfe_vendas  = true or m_nf_tipo_x = true)  and ### os 511148
	p_houve_erro = false then
	call set_count(arraylength(p_array))

	for l_ind = 1 to 4
		if l_ind > arraylength(p_array) then
			call arrayadditem(p_array,1)
			initialize p_array[l_ind].* to null
		end if
		display  p_array[l_ind].* to s_sup37601[l_ind].*
	end for
end if

end function

#-- os 548208 inicio --#
#-------------------------------------------------#
function sup3760_verifica_aviso_rec_relacionamento(l_num_aviso_rec_simbolico, l_num_aviso_rec)
#-------------------------------------------------#
	define l_num_aviso_rec_simbolico  like aviso_rec.num_aviso_rec,
	l_num_aviso_rec            like aviso_rec.num_aviso_rec,
	l_num_seq                  like aviso_rec.num_seq,
	l_num_oc                   like aviso_rec.num_oc,
	l_num_oc_relac             like aviso_rec.num_oc,
	l_cod_item                 like aviso_rec.cod_item,
	l_cod_fiscal_item          like aviso_rec.cod_fiscal_item,
	l_cfop_retr                smallint,
	l_cfop_serv                smallint,
	l_pos                      smallint,
	l_cfop                     char(03),
	l_tipo                     char(20)

	let l_cfop_retr = false
	let l_cfop_serv = false

	whenever error continue
	declare cq_aviso_rec_simbolico cursor with hold for
	select aviso_rec.num_seq,
	aviso_rec.num_oc,
	aviso_rec.cod_item,
	aviso_rec.cod_fiscal_item
	from aviso_rec
	where aviso_rec.cod_empresa    = p_cod_empresa
	and aviso_rec.num_aviso_rec  = l_num_aviso_rec_simbolico
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_aviso_rec_simbolico")
	end if

	whenever error continue
	open cq_aviso_rec_simbolico
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open","cq_aviso_rec_simbolico")
	end if

	while true
		whenever error continue
		fetch cq_aviso_rec_simbolico into l_num_seq,
		l_num_oc,
		l_cod_item,
		l_cod_fiscal_item
		whenever error stop
		if sqlca.sqlcode <> 0 then
			if sqlca.sqlcode <> 100 then
				call log003_err_sql("fetch","cq_aviso_rec_simbolico")
			end if
			exit while
		end if
		let l_pos  = length(l_cod_fiscal_item)

		if l_pos < 5 then
			continue while
		end if

		let l_cfop = l_cod_fiscal_item[l_pos-2,l_pos]

		whenever error continue
		select fim_cfop_nf_retn
		from sup_cfop_retn_serv
		where empresa          = p_cod_empresa
		and fim_cfop_nf_retn = l_cfop
		whenever error stop
		if sqlca.sqlcode <> 0 then
			if sqlca.sqlcode <> notfound then
				call log003_err_sql('select','sup_cfop_retn_serv')
			end if
		else
			let l_cfop_retr = true
		end if

		if l_cfop_retr = true then
			let l_num_oc = sup3760_busca_num_oc(l_num_aviso_rec)
			whenever error continue
			select 1
			from estrut_ordem_sup
			where estrut_ordem_sup.cod_empresa   = p_cod_empresa
			and estrut_ordem_sup.num_oc        = l_num_oc
			and estrut_ordem_sup.cod_item_comp = l_cod_item
			whenever error stop
			if sqlca.sqlcode = 100 then
				let m_num_ar_relac = l_num_aviso_rec_simbolico
				call sup3760_inclui_nf_sup_erro(l_num_seq,"1","s","o item de retorno simb�lico � diferente do item da estrutura da ordem de compra.")
				exit while
			end if
		end if
	end while
	close cq_aviso_rec_simbolico
	free  cq_aviso_rec_simbolico

	whenever error continue
	declare cq_aviso_rec_n_simbolico cursor with hold for
	select aviso_rec.cod_fiscal_item
	from aviso_rec
	where aviso_rec.cod_empresa    = p_cod_empresa
	and aviso_rec.num_aviso_rec  = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_aviso_rec_n_simbolico")
	end if

	whenever error continue
	open cq_aviso_rec_n_simbolico
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open","cq_aviso_rec_n_simbolico")
	end if

	while true
		whenever error continue
		fetch cq_aviso_rec_n_simbolico into l_cod_fiscal_item

		whenever error stop
		if sqlca.sqlcode <> 0 then
			if sqlca.sqlcode <> 100 then
				call log003_err_sql("fetch","cq_aviso_rec_n_simbolico")
			end if
			exit while
		end if

		let l_pos  = length(l_cod_fiscal_item)

		if l_pos < 5 then
			continue while
		end if

		let l_cfop = l_cod_fiscal_item[l_pos-2,l_pos]

		whenever error continue
		select fim_cfop_nf_retn
		from sup_cfop_retn_serv
		where empresa            = p_cod_empresa
		and final_cfop_nf_serv = l_cfop
		whenever error stop
		if sqlca.sqlcode <> 0 then
			if sqlca.sqlcode <> notfound then
				call log003_err_sql('select','sup_cfop_retn_serv')
			end if
		else
			let l_cfop_serv = true
		end if

	end while
	close cq_aviso_rec_n_simbolico
	free  cq_aviso_rec_n_simbolico

	if l_cfop_retr = true and l_cfop_serv = false then
		let m_num_ar_relac = l_num_aviso_rec_simbolico
		call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop servi�o")
	else
		if l_cfop_retr = false and l_cfop_serv = true then
			let m_num_ar_relac = l_num_aviso_rec
			call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop retorno simbolico")
		else
			if l_cfop_retr = false and l_cfop_serv = false then
				call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop servi�o")
				call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop retorno simbolico")
			end if
		end if
	end if

end function

#--------------------------------#
function sup3760_busca_num_oc(l_num_aviso_rec)
#--------------------------------#
	define l_num_aviso_rec        like aviso_rec.num_aviso_rec,
	l_num_oc               like aviso_rec.num_oc

	whenever error continue
	select unique(num_oc)
	into l_num_oc
	from aviso_rec
	where aviso_rec.cod_empresa   = p_cod_empresa
	and aviso_rec.num_aviso_rec = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("selecao","aviso_rec")
		end if
	end if

return l_num_oc

end function
#--------------------------------------------------------------------#
function sup3760_existe_relacionamento(l_num_aviso_rec)
#--------------------------------------------------------------------#
	define l_num_aviso_rec        like aviso_rec.num_aviso_rec,
	l_num_aviso_rec_relac  like aviso_rec.num_aviso_rec

	whenever error continue
	select sup_par_ar.parametro_val
	into l_num_aviso_rec_relac
	from sup_par_ar
	where sup_par_ar.empresa           = p_cod_empresa
	and sup_par_ar.seq_aviso_recebto = 1
	and sup_par_ar.parametro         = "final_cfop"
	and sup_par_ar.aviso_recebto     = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode = 0 then
		return l_num_aviso_rec_relac
	else
		return l_num_aviso_rec
	end if

end function
#------------------------------------------#
function sup3760_verifica_cfop_retr_serv_relac()
#------------------------------------------#
	define l_cod_fiscal_item like aviso_rec.cod_fiscal_item,
	l_cfop_retr       smallint,
	l_cfop_serv       smallint,
	l_pos             smallint,
	l_cfop            char(03),
	l_cod_item        like aviso_rec.cod_item,
	l_num_oc          like aviso_rec.num_oc,
	l_num_oc_relac    like aviso_rec.num_oc,
	l_num_seq         like aviso_rec.num_seq

	whenever error continue
	declare cq_cfop_itens1 cursor for
	select aviso_rec.cod_fiscal_item,
	aviso_rec.num_seq,
	aviso_rec.cod_item,
	aviso_rec.num_oc
	from aviso_rec
	where cod_empresa   = p_aviso_rec.cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode != 0 then
		call log003_err_sql("declare","cq_cfop_itens1")
	end if

	let l_cfop_retr = false
	let l_cfop_serv = false

	whenever error continue
	foreach cq_cfop_itens1 into l_cod_fiscal_item,
	l_num_seq,
	l_cod_item,
	l_num_oc
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("foreach cursor","cq_cfop_itens1")
	end if

	if l_num_oc is not null
		and l_num_oc <> " "
		and l_num_oc <> 0 then
		let l_num_oc_relac = l_num_oc
	end if

	let l_pos  = length(l_cod_fiscal_item)

	if l_pos < 5 then
		continue foreach
	end if

	let l_cfop = l_cod_fiscal_item[l_pos-2,l_pos]

	whenever error continue
	select fim_cfop_nf_retn
	from sup_cfop_retn_serv
	where empresa          = p_cod_empresa
	and fim_cfop_nf_retn = l_cfop
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> notfound then
			call log003_err_sql('select','sup_cfop_retn_serv')
		end if
	else
		let l_cfop_retr = true
		whenever error continue
		select estrut_ordem_sup.cod_item_comp
		from estrut_ordem_sup
		where estrut_ordem_sup.cod_empresa   = p_cod_empresa
		and estrut_ordem_sup.num_oc        = l_num_oc_relac
		and estrut_ordem_sup.cod_item_comp = l_cod_item
		whenever error stop
		if sqlca.sqlcode = 100 then
			let m_num_ar_relac = p_aviso_rec.num_aviso_rec
			call sup3760_inclui_nf_sup_erro(l_num_seq,"1","s","o item de retorno simb�lico � diferente do item da estrutura da ordem de compra.")
		end if
	end if

	whenever error continue
	select fim_cfop_nf_retn
	from sup_cfop_retn_serv
	where empresa            = p_cod_empresa
	and final_cfop_nf_serv = l_cfop
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> notfound then
			call log003_err_sql('select','sup_cfop_retn_serv')
		end if
	else
		let l_cfop_serv = true
	end if

	if  l_cfop_retr = true
		and l_cfop_serv = true then
		exit foreach
	end if
end foreach
whenever error stop

let m_num_ar_relac = p_aviso_rec.num_aviso_rec
if l_cfop_retr = true and l_cfop_serv = false then
	call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop servi�o")
else
	if l_cfop_retr = false and l_cfop_serv = true then
		call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop retorno simbolico")
	else
		if l_cfop_retr = false and l_cfop_serv = false then
			call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop servi�o")
			call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop retorno simbolico")
		end if
	end if
end if

free cq_cfop_itens1

end function

#-- os 548208 fim --#
#-------------------------------------#
function sup376_obtem_num_aviso_rec()
#-------------------------------------#
	define l_prx_num_ar like par_sup_pad.par_val

	initialize m_dat_hor_proces to null

	whenever error continue
	declare cm_par_sup cursor for
	select par_val into p_dados_tela.num_aviso_rec
	from par_sup_pad
	where cod_empresa = p_cod_empresa
	and cod_parametro = "num_prx_ar"
	for update
		open cm_par_sup
		fetch cm_par_sup
		whenever error stop
		if sqlca.sqlcode = 0 then
			if p_dados_tela.num_aviso_rec > 999998 then
				let l_prx_num_ar = 1
			else
				let l_prx_num_ar = p_dados_tela.num_aviso_rec + 1
			end if
			whenever error continue
			update par_sup_pad
			set par_val = l_prx_num_ar
			where current of cm_par_sup
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("modificacao","par_sup_pad")
				close cm_par_sup
				return false
			else
				let m_dat_hor_proces = current
				close cm_par_sup
				return true
			end if
		else
			call log003_err_sql("leitura","par_sup_pad")
			close cm_par_sup
			return false
		end if

	end function

#------------------------------------------#
function sup376_grava_aviso_rec_proc_imp()
#------------------------------------------#
	let p_ar_proc_imp.cod_empresa     = p_aviso_rec.cod_empresa
	let p_ar_proc_imp.num_processo    = p_processo_imp.num_processo
	let p_ar_proc_imp.num_aviso_rec   = p_aviso_rec.num_aviso_rec
	let p_ar_proc_imp.num_seq         = p_aviso_rec.num_seq
	let p_ar_proc_imp.num_pedido      = p_aviso_rec.num_pedido
	let p_ar_proc_imp.num_oc          = p_aviso_rec.num_oc
	let p_ar_proc_imp.quantidade      = p_aviso_rec.qtd_declarad_nf
	let p_ar_proc_imp.val_ii          = p_array_imp[p_ind].val_ii
	let p_ar_proc_imp.val_desp_aces   = p_array_imp[p_ind].val_desp_imp
	let p_ar_proc_imp.val_outras_desp = 0
	let p_ar_proc_imp.val_da_icms     = 0
	insert into aviso_rec_proc_imp
	values (p_ar_proc_imp.*)
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","aviso_rec_proc_imp")
		let p_houve_erro = true
	end if

end function

#-------------------------------------#
function sup376_grava_seq_adicao_imp() #trnoc7
#-------------------------------------#
	define l_num_versao        like processo_imp.num_versao,
	l_num_adicao_di     like proc_item.num_adicao_di,
	l_cod_fabric_produt like proc_item.cod_fabric_produt,
	l_seq_item_adicao   like imp_par_proc_item.parametro_val,
	l_num_oc            like aviso_rec.num_oc,
	l_num_pedido        like aviso_rec.num_pedido,
	l_num_draw          like drawback.num_draw, ### tsmpfn
	l_sql_stmt          char(1000)

	if m_num_oc_ant is null and m_num_pedido_ant is null then
		let l_num_oc     = p_aviso_rec.num_oc
		let l_num_pedido = p_aviso_rec.num_pedido
	else  #fun��o copia nf #trogvb
		let l_num_oc     = m_num_oc_ant
		let l_num_pedido = m_num_pedido_ant
	end if

	whenever error continue
	select num_versao
	into l_num_versao
	from processo_imp
	where cod_empresa     = p_aviso_rec.cod_empresa
	and num_processo    = p_processo_imp.num_processo
	and ies_versao_atual = 's'
	whenever error stop
	if sqlca.sqlcode = 0 then
		whenever error continue
		select num_adicao_di, cod_fabric_produt
		into l_num_adicao_di, l_cod_fabric_produt
		from proc_item
		where cod_empresa  = p_aviso_rec.cod_empresa
		and num_processo = p_processo_imp.num_processo
		and num_versao   = l_num_versao
		and num_pedido   = l_num_pedido
		and num_oc       = l_num_oc
		whenever error stop
		if sqlca.sqlcode = 0 then
			whenever error continue
			select parametro_val
			from sup_par_ar
			where empresa           = p_aviso_rec.cod_empresa
			and aviso_recebto     = p_aviso_rec.num_aviso_rec
			and seq_aviso_recebto = p_aviso_rec.num_seq
			and parametro         = "num_adicao_di"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_val     = l_num_adicao_di
				where empresa           = p_aviso_rec.cod_empresa
				and aviso_recebto     = p_aviso_rec.num_aviso_rec
				and seq_aviso_recebto = p_aviso_rec.num_seq
				and parametro         = "num_adicao_di"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("update","sup_par_ar")
					let p_houve_erro = true
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_aviso_rec.cod_empresa,
				p_aviso_rec.num_aviso_rec,
				p_aviso_rec.num_seq,
				"num_adicao_di",
				null,
				null,
				l_num_adicao_di,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar")
					let p_houve_erro = true
				end if
			end if

			whenever error continue
			select parametro_texto
			from sup_par_ar
			where empresa           = p_aviso_rec.cod_empresa
			and aviso_recebto     = p_aviso_rec.num_aviso_rec
			and seq_aviso_recebto = p_aviso_rec.num_seq
			and parametro         = "fabricante_item"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_texto   = l_cod_fabric_produt
				where empresa           = p_aviso_rec.cod_empresa
				and aviso_recebto     = p_aviso_rec.num_aviso_rec
				and seq_aviso_recebto = p_aviso_rec.num_seq
				and parametro         = "fabricante_item"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("update","sup_par_ar(imp)")
					let p_houve_erro = true
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_aviso_rec.cod_empresa,
				p_aviso_rec.num_aviso_rec,
				p_aviso_rec.num_seq,
				"fabricante_item",
				null,
				l_cod_fabric_produt,
				null,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp)")
					let p_houve_erro = true
				end if
			end if
		end if

		whenever error continue
		select parametro_val
		into l_seq_item_adicao
		from imp_par_proc_item
		where empresa         = p_aviso_rec.cod_empresa
		and processo_import = p_processo_imp.num_processo
		and pedido_compra   = l_num_pedido
		and ordem_compra    = l_num_oc
		and parametro       = "seq_item_adicao"
		whenever error stop
		if sqlca.sqlcode = 0 then
			whenever error continue
			select parametro_val
			from sup_par_ar
			where empresa           = p_aviso_rec.cod_empresa
			and aviso_recebto     = p_aviso_rec.num_aviso_rec
			and seq_aviso_recebto = p_aviso_rec.num_seq
			and parametro         = "seq_item_adicao"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_val     = l_seq_item_adicao
				where empresa           = p_aviso_rec.cod_empresa
				and aviso_recebto     = p_aviso_rec.num_aviso_rec
				and seq_aviso_recebto = p_aviso_rec.num_seq
				and parametro         = "seq_item_adicao"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("update","sup_par_ar(imp)")
					let p_houve_erro = true
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_aviso_rec.cod_empresa,
				p_aviso_rec.num_aviso_rec,
				p_aviso_rec.num_seq,
				"seq_item_adicao",
				null,
				null,
				l_seq_item_adicao,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp)")
					let p_houve_erro = true
				end if
			end if
		end if

		### tsmpfn (busca ato concess�rio drawback)
		### grava um unico drawback para sequencia de item/oc
		if m_declare_cq_drawback = false then
			let l_sql_stmt =  'select drawback.num_draw ',
			' from draw_processo, drawback ',
			' where draw_processo.cod_empresa  = ? ',
			' and draw_processo.num_processo = ? ',
			' and draw_processo.ordem_compra = ? ',
			' and drawback.cod_empresa  = draw_processo.cod_empresa ',
			' and drawback.num_draw_int = draw_processo.num_draw_int '
			whenever error continue
			prepare var_query12 from l_sql_stmt
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("prepare","var_query12")
			end if

			whenever error continue
			declare cq_drawback cursor for var_query12
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("declare","cq_nf_it_ser")
			end if
			let m_declare_cq_drawback = true
		end if

		whenever error continue
		open cq_drawback using p_aviso_rec.cod_empresa, p_processo_imp.num_processo, l_num_oc
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("open","cq_drawback")
		end if

		while true

			whenever error continue
			fetch cq_drawback into l_num_draw
			whenever error stop
			if sqlca.sqlcode <> 0 then
				if sqlca.sqlcode <> 100 then
					call log003_err_sql ("select", "draw_processo")
					let p_houve_erro = true
					return false
				else
					exit while
				end if
			else
				whenever error continue
				select parametro_texto
				from sup_par_ar
				where empresa           = p_aviso_rec.cod_empresa
				and aviso_recebto     = p_aviso_rec.num_aviso_rec
				and seq_aviso_recebto = p_aviso_rec.num_seq
				and parametro         = "num_drawback"
				whenever error stop

				if sqlca.sqlcode = 0 then
					whenever error continue
					update sup_par_ar
					set parametro_texto   = l_num_draw
					where empresa           = p_aviso_rec.cod_empresa
					and aviso_recebto     = p_aviso_rec.num_aviso_rec
					and seq_aviso_recebto = p_aviso_rec.num_seq
					and parametro         = "num_drawback"
					whenever error stop

					if sqlca.sqlcode <> 0 then
						call log003_err_sql("update","sup_par_ar(num_drawback)")
						let p_houve_erro = true
					end if
				else
					whenever error continue
					insert into sup_par_ar values(p_aviso_rec.cod_empresa,
					p_aviso_rec.num_aviso_rec,
					p_aviso_rec.num_seq,
					"num_drawback",
					null,
					l_num_draw,
					null,
					null)
					whenever error stop

					if sqlca.sqlcode <> 0 then
						call log003_err_sql("insert","sup_par_ar(num_drawback)")
						let p_houve_erro = true
					end if
				end if
			end if
		end while
	end if
end function

#------------------------------------#
function sup3760_grava_ar_piscofim()
#------------------------------------#
	define lr_piscofins_imp        record
	num_seq               like aviso_rec.num_seq,
	val_bc_pis_import     like sup_ar_piscofim.val_bc_pis_import,
	val_bc_cofins_imp     like sup_ar_piscofim.val_bc_cofins_imp,
	pct_pis_import        like sup_ar_piscofim.pct_pis_import,
	pct_cofins_import     like sup_ar_piscofim.pct_cofins_import,
	pct_red_pis_import    like sup_ar_piscofim.pct_red_pis_import,
	pct_red_cofins_imp    like sup_ar_piscofim.pct_red_cofins_imp,
	val_pis_import        like sup_ar_piscofim.val_pis_import,
	val_cofins_import     like sup_ar_piscofim.val_cofins_import,
	calc_piscofins_imp    char(01),
	motivo_calc_piscofins char(57),
	pct_extravio_granel   decimal(5,3),
	quantidade            like aviso_rec_proc_imp.quantidade,
	val_icms_ret          like ar_subst_tribut.val_icms_dev_ret ### trweo1
end record

initialize lr_piscofins_imp.* to null
whenever error continue
select *
into lr_piscofins_imp.*
from w_piscofins_imp
where num_seq = p_aviso_rec.num_seq
whenever error stop

if sqlca.sqlcode = 0 then
	whenever error continue
	insert into sup_ar_piscofim values (p_cod_empresa,
	p_aviso_rec.num_aviso_rec,
	lr_piscofins_imp.num_seq,
	lr_piscofins_imp.val_bc_pis_import,
	lr_piscofins_imp.val_bc_cofins_imp,
	lr_piscofins_imp.pct_pis_import,
	lr_piscofins_imp.pct_cofins_import,
	lr_piscofins_imp.pct_red_pis_import,
	lr_piscofins_imp.pct_red_cofins_imp,
	lr_piscofins_imp.val_pis_import,
	lr_piscofins_imp.val_cofins_import)
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","sup_ar_piscofim")
		let p_houve_erro = true
	end if

	whenever error continue
	insert into sup_par_ar values(p_cod_empresa,
	p_aviso_rec.num_aviso_rec,
	lr_piscofins_imp.num_seq,
	"calc_piscofins_imp",
	lr_piscofins_imp.calc_piscofins_imp,
	lr_piscofins_imp.motivo_calc_piscofins,
	null,
	null)
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","sup_par_ar1")
		let p_houve_erro = true
	end if

	whenever error continue
	insert into sup_par_ar values(p_cod_empresa,
	p_aviso_rec.num_aviso_rec,
	lr_piscofins_imp.num_seq,
	"pct_extravio_granel",
	null,
	null,
	lr_piscofins_imp.pct_extravio_granel,
	null)
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","sup_par_ar2")
		let p_houve_erro = true
	end if

	whenever error continue
	insert into sup_par_ar values(p_cod_empresa,
	p_aviso_rec.num_aviso_rec,
	lr_piscofins_imp.num_seq,
	"val_icms_dev_ret",
	null,
	null,
	lr_piscofins_imp.val_icms_ret, ### trweo1
	null)
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","sup_par_ar2")
		let p_houve_erro = true
	end if
end if

end function

#---------------------------------------#
function sup376_funcoes_apos_inclusao()
#---------------------------------------#
	define p_prog                  char(08),
	p_par_forn              char(01),
	p_ind_oc                integer,
	l_ies_armaz_itau        char(01),
	l_impostos_nf_conforme  char(01),
	l_manutencao_impostos   smallint,
	l_argumento             like empresa.cod_empresa,
	l_ies_especie_nf        like nf_sup.ies_especie_nf,
	l_conhec                like sup_frete_x_nf_entrada.conhec,
	l_serie_conhec          like sup_frete_x_nf_entrada.serie_conhec,
	l_subserie_conhec       like sup_frete_x_nf_entrada.subserie_conhec,
	l_transportador         like sup_frete_x_nf_entrada.transportador,
	l_val_frete             like frete_sup.val_frete,
	l_dat_entrada_conhec    like frete_sup.dat_entrada_conhec,
	l_tip_frete             like frete_sup.tip_frete,
	l_passou                smallint,
	l_num_seq               like aviso_rec.num_seq
## 407088
	define l_cod_fornecedor        like nf_sup.cod_fornecedor
	define l_num_aviso_rec           like aviso_rec.num_aviso_rec, #-- os 548208
	l_num_aviso_rec_simbolico like aviso_rec.num_aviso_rec, #-- os 548208
	l_num_oc                  like aviso_rec.num_oc #-- os 548208

	define l_executa_funcao_cap5440  smallint,
	l_relaciona_duplicatas    smallint,
	l_relaciona_fornec_depos  smallint,
	l_consiste_nf             smallint,
	l_retorno_epl             smallint

	let l_executa_funcao_cap5440 = true
	let l_relaciona_duplicatas   = true
	let l_relaciona_fornec_depos = true
	let l_consiste_nf            = true

	if log_existe_epl('sup3760y_before_process_funcoes_apos_inclusao') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: nf_sup.cod_empresa

		call log_setvar('executa_funcao_cap5440', l_executa_funcao_cap5440)
		#epl indicador para executar ou n�o a fun��o do cap5440
		#epl tipo: smallint

		call log_setvar('relaciona_duplicatas', l_relaciona_duplicatas)
		#epl indicador para chamar ou n�o o sup0990
		#epl tipo: smallint

		call log_setvar('relaciona_fornec_depos', l_relaciona_fornec_depos)
		#epl indicador se chama ou n�o o sup9206
		#epl tipo: smallint

		call log_setvar('consiste_nf', l_consiste_nf)
		#epl indicador se chama a consist�ncia nesta fun��o
		#epl tipo: smallint

		call sup3760y_before_process_funcoes_apos_inclusao()

		let l_executa_funcao_cap5440 = log_getvar('executa_funcao_cap5440')
		let l_relaciona_duplicatas   = log_getvar('relaciona_duplicatas')
		let l_relaciona_fornec_depos = log_getvar('relaciona_fornec_depos')
		let l_consiste_nf            = log_getvar('consiste_nf')
	end if

	#--inicio--vanderlei os  #
	call sup3760_relac_fornec_triang_cadastr_sup0220(p_nf_sup.cod_empresa,
	p_nf_sup.num_aviso_rec,
	p_nf_sup.cod_fornecedor)
returning p_status

	if not p_status then
		let p_houve_erro = true
	end if
	#---fim----vanderlei os  #
	if p_dados_tela.ies_especie_nf = "nfp" then
		let comando3 = p_cod_empresa," ",p_dados_tela.num_aviso_rec
		call log1200_executa_programa("sup2570",comando3)
	end if

	if m_nf_aguard_nfe_ant = "7" and ## 774472 (s� ir� verificar e trocar nfm para tipo 6 caso tenha recebido todas as nfp(s) como tipo 6)
		p_dados_tela.ies_nf_aguard_nfe <> "7" then
		if m_altera_nfm_7_para_6_aut = 's' and
			p_dados_tela.ies_especie_nf = 'nfp' then
			call sup3760_verifica_nfm_total()
		end if
	end if
	#ler par�metro e verificar se a quantidade da nfm foi totalmente atendida

	if l_executa_funcao_cap5440 then
		#--inicio--vanderlei os 393937/408549 #
		call cap544_verifica_documento_des(p_nf_sup.cod_empresa,
		p_nf_sup.num_nf,
		p_nf_sup.ser_nf,
		p_nf_sup.ssr_nf,
		p_nf_sup.ies_especie_nf,
		p_nf_sup.cod_fornecedor)  # os253418
		#---fim----vanderlei os 393937/408549 #
	end if

	initialize l_impostos_nf_conforme to null
	call log2250_busca_parametro(p_cod_empresa,"impostos_nota_conforme")
returning l_impostos_nf_conforme, p_status

	if l_impostos_nf_conforme is null then
		let l_impostos_nf_conforme = '4'
	end if

	let l_manutencao_impostos = false

	case l_impostos_nf_conforme
	when '1'
	if sup3760_verifica_despesa_itens() then
		let l_manutencao_impostos = true
	end if
	when '2'
	if p_nf_sup.ies_especie_nf = 'nfs' then
		let l_manutencao_impostos = true
	end if
	when '3'
	if sup3760_verifica_despesa_itens() or
		p_nf_sup.ies_especie_nf = 'nfs' then
		let l_manutencao_impostos = true
	end if
	when '4'
	if p_dados_tela.ies_impostos = "s" then
		let l_manutencao_impostos = true
	end if
end case

if m_utiliza_dds_fortaleza = "s" then
	if p_nf_sup.ies_especie_nf = "nf" or p_nf_sup.ies_especie_nf = "nff"
		or p_nf_sup.ies_especie_nf = "nfs" or p_nf_sup.ies_especie_nf = "doc"
		or p_nf_sup.ies_especie_nf = "rec"   then

		call sup3760_verifica_controle_dds_fortaleza()
	end if
end if

if l_manutencao_impostos then
	# os97061   -   deisi
	call cap544_manutencao_impostos("sup3760","inclusao")
	if int_flag = 1 then
		let p_houve_erro = true
	end if
end if

current window is w_sup37601
case p_dados_tela_f.ies_desc_acres
when "t"
let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
call log1200_executa_programa("sup2490",comando3)
let p_cod_empresa_arg = p_cod_empresa
let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
call sup376_busca_argumen()
when "i"
let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
call log1200_executa_programa("sup9010",comando3)
let p_cod_empresa_arg = p_cod_empresa
let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
call sup376_busca_argumen()
end case

### os331455 ###
if sup1149_efetua_rateio_contabil() then
	if sup1149_rateio_contabil(p_dados_tela.num_aviso_rec) = false then
		let p_houve_erro = true
	end if
end if
### fim os331455 ###

call sup376_inclui_frete()
call sup376_manut_item_terc()
if ((p_ies_tip_entrada = "6" or
	p_ies_tip_entrada = "4") or
	(sup0812_verifica_nota_transferencia(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl) = false and
	p_ies_tip_entrada = "2")) and
	(m_wms_instal = "n"      or
	(m_wms_instal = "s"      and
	p_dados_tela.ies_nf_aguard_nfe <> "a"   and
	p_dados_tela.ies_nf_aguard_nfe <> "b")) then
	if p_cont_aut_terc = true then
		let p_par_forn = null
		call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
		"",
		p_dados_tela.dat_emis_nf,
		p_dados_tela.num_aviso_rec) returning p_par_forn
		if p_dados_tela.ies_especie_nf = "nfr" and p_par_forn = "3"  then
		else
			if p_dados_tela.ser_nf is null or
				p_dados_tela.ser_nf = " " then
				let p_dados_tela.ser_nf = "@"
			end if
			## os 407088
			call sup3762_busca_fornecedor_triangulacao(p_dados_tela.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor

			let l_retorno_epl = false

			if log_existe_epl("sup3760y_before_abre_controle_terceiros_automatico") then
				call log_setvar('retorno_epl', false)
				call sup3760y_before_abre_controle_terceiros_automatico()
				let l_retorno_epl  = log_getvar('retorno_epl')
			end if

			if l_retorno_epl = false then
				let comando3 = p_dados_tela.num_nf," ",
				p_dados_tela.ser_nf," ",
				p_dados_tela.ssr_nf," ",
				p_dados_tela.ies_especie_nf," ",
				l_cod_fornecedor," ",
				"@"," ","@"," ","@"," ",
				p_cod_empresa
				if p_dados_tela.ser_nf = "@" then
					let p_dados_tela.ser_nf = " "
				end if
				call log1200_executa_programa("sup2270",comando3)
			end if
		end if
	else
		let p_par_forn = null
		call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
		"",
		p_dados_tela.dat_emis_nf,
		p_dados_tela.num_aviso_rec) returning p_par_forn
		if p_dados_tela.ies_especie_nf    = "nfr" and
			p_par_forn                     = "3"   and
			p_dados_tela.ies_nf_aguard_nfe <> "t" then
		else
			if p_dados_tela.ies_nf_aguard_nfe <> "t" and
				#inicio os.472270
				(p_mot_remes_terc is null or
				p_mot_remes_terc = " " or
				m_ies_msg_contr_terc = "s") then
				#fim os.472270
				if p_dados_tela.ies_nf_aguard_nfe <> "4" and
					p_dados_tela.ies_nf_aguard_nfe <> "5" then
					if  p_dados_tela.ies_nf_aguard_nfe = "a"
						#or   p_dados_tela.ies_nf_aguard_nfe = "b")#534641
						and sup3760_existe_cadastro_triangulacao()
						and p_dados_tela.ies_especie_nf = "nfr" then
						call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor

						let l_retorno_epl = false

						if log_existe_epl("sup3760y_before_abre_controle_terceiros_automatico") then
							call log_setvar('retorno_epl', false)
							call sup3760y_before_abre_controle_terceiros_automatico()
							let l_retorno_epl  = log_getvar('retorno_epl')
						end if

						if l_retorno_epl = false then
							let comando3 = p_dados_tela.num_nf," ",
							p_dados_tela.ser_nf," ",
							p_dados_tela.ssr_nf," ",
							p_dados_tela.ies_especie_nf," ",
							l_cod_fornecedor," ",
							"@"," ","@"," ","@"," ",
							p_cod_empresa
							call log1200_executa_programa("sup2270",comando3)
						end if
					else
						let l_retorno_epl = false
						if log_existe_epl("sup3760y_before_controlar_terceiros") then
							call log_setvar('retorno_epl', false)
							call sup3760y_before_controlar_terceiros()
							let l_retorno_epl  = log_getvar('retorno_epl')
						end if

						if l_retorno_epl = false then
							error "controlar terceiros ??? " attribute (reverse)
							if log004_confirm(21,43) then
								#-- os 562700 inicio --#
								error "material da empresa ??? " attribute (reverse)
								let l_cod_fornecedor = p_dados_tela.cod_fornecedor
								let l_passou = false
								if log004_confirm(21,43) then
									let p_prog = "sup2290"
									let l_argumento = p_cod_empresa
									#-- os 562700 inicio --#
									if m_ies_nf_remessa_x_especie <> 0 then
										if (m_ies_nf_remessa_x_especie = 1
											and p_dados_tela.ies_especie_nf = "nfr")
											or (m_ies_nf_remessa_x_especie = 2
											and p_dados_tela.ies_especie_nf = "nfe")
											or (m_ies_nf_remessa_x_especie = 3
											and (p_dados_tela.ies_especie_nf = "nfe"
											or p_dados_tela.ies_especie_nf = "nfr") ) then
											call sup3760_controla_nf_remessa_retorno()
											let l_passou = true
										end if
									end if
									#-- os 562700 fim --#
								else
									let p_prog = "sup2270"
									let l_argumento = "@"
									## os 407088
									call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor
								end if

								if not l_passou then
									if p_dados_tela.ser_nf is null or p_dados_tela.ser_nf = " " then
										let p_dados_tela.ser_nf = "@"
									end if
									let comando3 = p_dados_tela.num_nf," ",
									p_dados_tela.ser_nf," ",
									p_dados_tela.ssr_nf," ",
									p_dados_tela.ies_especie_nf," ",
									l_cod_fornecedor," ",
									"@"," ",l_argumento," ","@"," ",
									p_cod_empresa
									if p_dados_tela.ser_nf = "@" then
										let p_dados_tela.ser_nf = " "
									end if
									call log1200_executa_programa(p_prog,comando3)
								end if
							end if
						end if
					end if
				end if #os.472270
			end if
		end if
	end if
end if

let m_duplicata = sup3762_get_m_duplicata()

if m_duplicata is null or m_duplicata = "" then
	let m_duplicata = false
end if

if not m_duplicata then
	if m_exigir_duplicata_nfs = "s" then
		if  p_nf_sup.ies_especie_nf = "nfs"
			and p_ies_pagamento = "2"  then

			if l_relaciona_duplicatas then
				if log0040_confirm(21,15,"relaciona duplicatas com n.f.s?") then
					if p_nf_sup.ies_incl_cap = "s" then
						let p_ies_incl_cap = true
					else
						let p_ies_incl_cap = false
					end if
					let comando3 = p_dados_tela.num_aviso_rec, " ",
					p_ies_incl_cap, " ",
					p_cod_empresa
					call log1200_executa_programa("sup0990",comando3)
				end if
			end if
		end if
	end if

	if m_exigir_dupl_nff_vencto_pc = "n" then #os 561.763
		if p_nf_sup.ies_especie_nf = "nff" and p_ies_pagamento = "2"  then
			if l_relaciona_duplicatas then
				if log0040_confirm(21,15,"relaciona duplicatas com n.f.f?") then
					if p_nf_sup.ies_incl_cap = "s" then
						let p_ies_incl_cap = true
					else
						let p_ies_incl_cap = false
					end if
					let comando3 = p_dados_tela.num_aviso_rec, " ",
					p_ies_incl_cap, " ",
					p_cod_empresa
					call log1200_executa_programa("sup0990",comando3)
				end if
			end if
		end if
	end if
end if

let p_ar_os = false
if p_par_sup_compl.ies_pat_instalado = "s" then
	declare cq_ar_seq_os cursor for
	select *
	from aviso_rec
	where aviso_rec.cod_empresa    = p_cod_empresa
	and aviso_rec.num_aviso_rec  = p_dados_tela.num_aviso_rec
	foreach cq_ar_seq_os into p_aviso_rec.*
	if sup376_verifica_ar_seq() = true then
		let p_ar_os_esp.cod_empresa    = p_cod_empresa
		let p_ar_os_esp.num_aviso_rec  = p_aviso_rec.num_aviso_rec
		let p_ar_os_esp.num_seq        = p_aviso_rec.num_seq
		let p_ar_os_esp.seq_esp        = 1
		let p_ar_os_esp.txt_especif    = p_aviso_rec.den_item
		let p_ar_os = true
		insert into ar_os_esp values (p_ar_os_esp.*)
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","ar_os_esp")
		end if
	end if
end foreach
free cq_ar_seq_os
if p_ar_os = true then
	let comando3 = p_cod_empresa, " ",p_dados_tela.num_aviso_rec
	call log1200_executa_programa("sup5380",comando3)
end if
end if

let p_ies_dat_fabr_ar = sup376_busca_par_sup_pad("ies_dat_fabr_ar",1)
if p_ies_dat_fabr_ar = "s" then
	if sup376_verifica_ars() = true then
		let comando3 = p_cod_empresa," ", p_dados_tela.num_aviso_rec," ", "i"
		call log1200_executa_programa("sup8030",comando3)
	end if
end if

#controle de fornecedor/depositante
# 534641
# controle de depositante
current window is w_sup37601

whenever error continue
select ar_depos.cod_depositante
from ar_depos
where ar_depos.cod_empresa = p_cod_empresa
and ar_depos.num_aviso_rec = p_nf_sup.num_aviso_rec
if sqlca.sqlcode <> - 206 then
	select par_sup_pad.par_ies
	into l_ies_armaz_itau
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = "ies_armaz_itau"
	if sqlca.sqlcode <> 0 or
		l_ies_armaz_itau is null or
		l_ies_armaz_itau = " " then
		let l_ies_armaz_itau = "n"
	end if

	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 23                 #
	if m_wms_instal <> "s" then
		if l_ies_armaz_itau = "s" then
			if p_dados_tela.ies_nf_aguard_nfe = "a" or p_dados_tela.ies_nf_aguard_nfe = "4" then
				let comando3 = p_nf_sup.cod_empresa," ",p_nf_sup.num_aviso_rec
				call log1200_executa_programa("sup9205",comando3)
			end if
		else
			if p_dados_tela.ies_nf_aguard_nfe = "a" then
				let comando3 = p_nf_sup.cod_empresa," ",p_nf_sup.num_aviso_rec
				call log1200_executa_programa("sup9205",comando3)
			end if
		end if
	end if
	#---------------#
end if
whenever error stop

# relaciona fornecedor e depositante
whenever error continue
select ar_depos.cod_depositante
from ar_depos
where ar_depos.cod_empresa = p_cod_empresa
and ar_depos.num_aviso_rec = p_nf_sup.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> - 206 then
	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 23                 #
	if m_wms_instal <> "s" then
		if p_dados_tela.ies_nf_aguard_nfe = "b" then
			if l_relaciona_fornec_depos then
				let comando3 = p_nf_sup.cod_empresa," ",p_nf_sup.num_aviso_rec
				call log1200_executa_programa("sup9206",comando3)
			end if
		end if
	end if
end if
whenever error stop

#### os 240477 - efetua rateio antes caso empresa trabalhe com custo medio diario
#### (contagem automatica) para considerar o valor do frete no custeio do material
if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
	m_consiste_nf_integr) then
	call sup0047_rateio_frete()
	if l_consiste_nf then
		#se alterou o valor do frete, dever� consistir novamente para incluir as tabelas de impostos do frete
		if m_cons_modific = "s" or p_aviso_rec.val_frete > 0 then
			call sup376_processa_consistencia("i")
		else
			if sup3731_gera_erro_consistencia(p_nf_sup.num_aviso_rec) = false then
			end if
		end if
	end if

	if find4glfunction('supr78_verifica_pis_cofins_itens') = true then
		call supr78_verifica_pis_cofins_itens(p_cod_empresa, p_dados_tela.num_aviso_rec)
	end if

	if find4glfunction('supr78_sugere_cst_item_nf') = true then
		call sup3760_declara_cursores_consistencia()
		whenever error continue
		open cq_it_pis2 using p_cod_empresa, p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("open","cq_it_pis")
		end if

		while true

			whenever error continue
			fetch cq_it_pis2 into l_num_seq
			whenever error stop
			if sqlca.sqlcode <> 0 then
				if sqlca.sqlcode <> 100 then
					call log003_err_sql("fetch","cq_it_pis2")
					let p_houve_erro = true
				end if
				exit while
			end if
			call supr78_sugere_cst_item_nf(p_cod_empresa, p_dados_tela.num_aviso_rec, l_num_seq)
		end while
		close cq_it_pis2
	end if
end if

#--inicio--vanderlei os 404565 #
# -- fun��o retorna um se o sup3760 chamou o sup4510, caso contr�rio zero  -- #
if sup4510_get_exec_sup4510() and
	sup1481_nfc_compl_imposto(p_nf_sup.ies_especie_nf,
	p_cod_empresa,
	p_nf_sup.num_aviso_rec) = false then

	#reverte movimenta��o do gao
	call sup0772_verifica_saldo_contas_fr_abat(p_cod_empresa,
	p_frete_sup.num_conhec,
	p_frete_sup.ser_conhec,
	p_frete_sup.ssr_conhec,
	p_frete_sup.cod_transpor,
	p_frete_sup.val_frete,
	p_frete_sup.dat_entrada_conhec,
	sup4510_tip_frete(p_frete_sup.tip_frete),
	"sup0580",
	0)
returning p_status, m_msg


	#os457682na inclus�o nunca vai ter mais de um frete j� relacionado, por isso
	#apenas chama o sup0772 para o frete da frete_sup..
	call sup0772_verifica_saldo_contas_fr_inclui(p_cod_empresa,
	p_frete_sup.num_conhec,
	p_frete_sup.ser_conhec,
	p_frete_sup.ssr_conhec,
	p_frete_sup.cod_transpor,
	p_frete_sup.val_frete,
	p_frete_sup.dat_entrada_conhec,
	sup4510_tip_frete(p_frete_sup.tip_frete),
	"sup0580",
	0)
returning p_status, p_msg
	if not p_status then
		call log0030_mensagem(p_msg,"exclamation")
		let int_flag = 1 # -- retorna nulo -- #
	end if
end if

#---fim----vanderlei os 404565 #
#--os 548208 inicio --#
if m_cons_val_ret_rem = "a" then

	call sup3760_existe_relacionamento(p_aviso_rec.num_aviso_rec) returning l_num_aviso_rec

	#existe relacionamento
	if l_num_aviso_rec <> p_aviso_rec.num_aviso_rec then
		let l_num_oc = sup3760_busca_num_oc(l_num_aviso_rec)
		let l_num_aviso_rec_simbolico = p_aviso_rec.num_aviso_rec

		if l_num_oc is null
			or l_num_oc = " " then
			let l_num_oc = sup3760_busca_num_oc(p_aviso_rec.num_aviso_rec)
			let l_num_aviso_rec_simbolico = l_num_aviso_rec
			call sup3760_verifica_aviso_rec_relacionamento(l_num_aviso_rec_simbolico, p_aviso_rec.num_aviso_rec)
		else
			call sup3760_verifica_aviso_rec_relacionamento(l_num_aviso_rec_simbolico, l_num_aviso_rec)
		end if
	else
		call sup3760_verifica_cfop_retr_serv_relac()
	end if
end if
#--os 548208 fim --#

if m_env_email_solic_rec_pc = 's' or
	m_env_email_solic_rec_pc = '2' then
	call sup1468_cria_temps()
	call sup3760_busca_especie_nf(p_cod_empresa,
	p_dados_tela.num_aviso_rec)
returning l_ies_especie_nf
	if l_ies_especie_nf is not null and
		l_ies_especie_nf <> ' ' and
		l_ies_especie_nf <> 'nfs' then
		call sup3760_prepara_envio_email(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		'liberacao')
	end if
end if

if log_existe_epl("sup3760y_after_process_funcoes_apos_inclusao") then
	call sup3760y_after_process_funcoes_apos_inclusao()
end if

end function

#--------------------------------------------------------#
function sup3760_prepara_envio_email(l_cod_empresa,
	l_num_aviso_rec,
	l_funcao)
#--------------------------------------------------------#
	define l_cod_empresa      like aviso_rec.cod_empresa,
	l_num_aviso_rec    like aviso_rec.num_aviso_rec,
	l_num_seq          like aviso_rec.num_seq,
	l_num_pedido       like aviso_rec.num_pedido,
	l_cod_tip_despesa  like aviso_rec.cod_tip_despesa,
	l_par_val          like par_sup_pad.par_val,
	l_funcao           char(15),
	l_status           smallint

	initialize l_par_val to null

	call supm5_par_sup_pad_leitura(l_cod_empresa ,
	'tip_desp_cons_fat',
	false,
	true)
returning l_status

	if l_status then
		let l_par_val = supm5_par_sup_pad_get_par_val()
	end if

	whenever error continue
	declare cq_aviso_rec_2 cursor for
	select num_pedido,
	num_seq,
	cod_tip_despesa
	from aviso_rec
	where aviso_rec.cod_empresa   = l_cod_empresa
	and aviso_rec.num_aviso_rec = l_num_aviso_rec
	and aviso_rec.num_pedido    > 0
	group by num_pedido,
	num_seq,
	cod_tip_despesa
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql('declare','cq_aviso_rec_2')
		return
	end if

	whenever error continue
	foreach cq_aviso_rec_2 into l_num_pedido,
	l_num_seq,
	l_cod_tip_despesa
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_aviso_rec_2")
		exit foreach
	end if

	if l_par_val is not null and
		l_par_val <> ' ' then
		if l_cod_tip_despesa = l_par_val then
			continue foreach
		end if
	end if

	call sup3760_envia_dados_email(l_cod_empresa,
	l_num_pedido,
	l_num_aviso_rec,
	l_num_seq,
	l_funcao)
	whenever error continue
end foreach
whenever error stop
free cq_aviso_rec_2

call sup1468_gerencia_envio_emails()

end function

#----------------------------------------------------#
function sup3760_envia_dados_email(l_cod_empresa,
	l_num_pedido,
	l_num_aviso_rec,
	l_num_seq,
	l_funcao)
#----------------------------------------------------#
	define l_cod_empresa      like aviso_rec.cod_empresa,
	l_num_pedido       like aviso_rec.num_pedido,
	l_num_aviso_rec    like aviso_rec.num_aviso_rec,
	l_num_seq          like aviso_rec.num_seq,
	l_funcao           char(15),
	l_status           smallint,
	l_mensagem         char(200),
	l_rotina           char(01)

	let l_rotina = "4" # recebimento de pedido de compra. os 480557

	call sup1468_grava_envio_email_2(l_num_aviso_rec,l_num_seq,true) #os 480557

	call sup1468_grava_envio_email(l_cod_empresa,
	l_num_pedido,
	m_env_email_solic_rec_pc,
	p_user,
	'sup3760',
	l_funcao,
	l_rotina) #os 480557
end function

#---------------------------------------#
function sup376_processa_divergencias()
#---------------------------------------#
	whenever error continue
	select *
	from audit_ar
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_prog      = "sup6981"
	whenever error stop
	if sqlca.sqlcode = 0 or
		sqlca.sqlcode = -284 then
		#analisando divergencias recebimento x compras

		if sup0682e_verifica_divergencias(p_cod_empresa,
			p_dados_tela.num_aviso_rec) = false then
			call log0030_mensagem("problemas na verificacao de divergencias.","exclamation")
			let p_houve_erro = true
		end if
	else
		let comando3 = p_cod_empresa," ",p_dados_tela.num_aviso_rec
		call log1200_executa_programa("sup0682",comando3)
	end if
end function

#-------------------------------#
function sup3760_pedido_aberto()
#-------------------------------#
	define l_ind    smallint,
	l_status smallint

	let l_status = false

	for l_ind = 1 to p_ind
		if p_array_compl[l_ind].num_pedido is null or p_array_compl[l_ind].num_pedido = '' then
			exit for
			let l_ind = l_ind -1
		end if

		if not sup3760_pedido_ordem_valido(p_array_compl[l_ind].num_pedido,
			p_array_compl[l_ind].num_oc) then
			let l_status = true
			exit for
		end if
	end for

return l_status, p_array_compl[l_ind].num_pedido
end function

#---------------------------------------#
function sup3760_entrada_dados(l_funcao)
#---------------------------------------#
	define l_resposta                 smallint,
	l_dat_ant                  like nf_sup.dat_entrada_nf,
	l_cgc_fornec               like fornecedor.num_cgc_cpf,
	l_devol_consig_total       smallint,
	l_nf_hist                  char(06),
	l_cgc_cliente              like clientes.num_cgc_cpf,
	l_msg_erro                 char(100),
	l_sql_stmt                 char(1500),
	l_funcao                   char(30),
	p_tip_embalag              char(1),
	p_seta                     char(04),
	p_dif_fornec               smallint,
	p_conta_estab              smallint,
	p_cnd_pgto_salva           like cond_pgto_cap.cnd_pgto,
	p_tipo_nota_ant            like nf_sup.ies_nf_aguard_nfe,
	l_cod_fornecedor           like pedido_sup.cod_fornecedor,
	l_cnd_pgto_ped             like pedido_sup.cnd_pgto,
	l_pergunta                 char(01),
	l_primeira_vez             smallint,
	l_conta_benef              smallint,
	p_fornec_aux               char(15),
	l_cgc_raiz_ped             char(11),
	l_cgc_raiz                 char(11),
	l_ies_situa_import         like nf_sup.ies_situa_import,
	l_ies_nfe_emit             like nfe_sup_compl.ies_nfe_emit,
	l_num_oc                   like ordem_sup.num_oc,
	l_ind                      smallint,
	l_houve_erro               smallint,
	l_status                   smallint,
	l_dat_fim_valid            date,
	l_usuario_aceite           char(08),
	l_sup0964                  smallint,
	l_dat_prx_venc             date,
	l_data_venc                date,
	l_nf_mestre_ser            smallint,
	l_nf_mestre                smallint,
	l_nf_mestre_hist           smallint,
	l_cod_item                 like fat_nf_item.item,
	l_qtd_item                 like nf_item.qtd_item,
	l_cod_unid_med             like fat_nf_item.unid_medida,
	l_pre_unit_nf              like fat_nf_item.preco_unit_liquido,
	l_val_liq_item             like fat_nf_item.val_liquido_item,
	p_cod_fiscal               char(04),
	la_array_cfop              array[100] of
	record
	cod_fiscal  char(05)
end record,
l_ind_cfop                 smallint,
l_diferente                smallint,
l_achou                    smallint,
l_ies_dia_semana           like semana.ies_dia_semana,
l_cnd_pgto                 like pedido_sup.cnd_pgto,
l_qtd_solic                like ordem_sup.qtd_solic,
l_cod_fiscal2              char(05),
l_desc_imposto             char(14),
l_dat_emis_ant             like nf_sup.dat_emis_nf,
l_nota_fiscal              like sup_oc_nota_fiscal.nota_fiscal,
l_serie_nota_fiscal        like sup_oc_nota_fiscal.serie_nota_fiscal,
l_subserie_nf              like sup_oc_nota_fiscal.subserie_nf,
l_dat_entrada_nf_ant       like nf_sup.dat_entrada_nf,
l_nf_tp8_assume_dt_emissao char(01),
l_dat_envio_hist           like fat_nf_mestre_hist.dat_envio_hist,
l_trans_nota_fiscal        like fat_nf_mestre.trans_nota_fiscal

define l_cond_pedido       char(01),
l_existe_h_tab      smallint,      #os 414316 #
l_den_existe_h_tab  char(14),      #os 414316 #
l_cont              smallint,
l_possui_compon     smallint,
l_tip_documento     char(01),      #os 450083
l_ies_tip_entrada   like cod_fiscal_sup.ies_tip_entrada,
l_msg               char(200),
l_count             smallint,
l_cod_fiscal        like cod_fiscal_sup.cod_fiscal,
l_cod_fisc_ant      like aviso_rec.cod_fiscal_item,
l_nf_transito_gera_nfe like sup_par_ar.par_ind_especial, ### tsrei1
l_cod_operacao      like estoque_operac.cod_operacao

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
define l_parametro            char(1),
l_parametro_cfop       char(3),
l_parametro_cfop_compl char(3),
l_tipo                 char(1),
l_altera_tipo          smallint,
l_altera_tipo_deposit  smallint,
l_continua             smallint,
l_raz_social           char(50),
l_altera_fornecedor    smallint,
l_cod_pais_uni_feder   char(3),
l_cod_pais_fornecedor  char(3),
l_contrato             like wms_contrato.contrato,
l_cgc                  like empresa.num_cgc,
l_ins_estadual         like empresa.ins_estadual,
l_deposit              like fornecedor.cod_fornecedor,
l_valida_pc            smallint,
l_acessou_herc         smallint,
l_pergunta_terceirizacao smallint,
l_atualiza_array       smallint,
l_abriu_tela           smallint,
l_next_field           char(20),
l_ser_nf_epl           char(20),
l_retorno              smallint,
l_permite_alterar_tipo_nota_7    smallint,
l_permite_alterar_tipo_nota_b    smallint,
l_status_epl                     char(01),
l_retorno_epl          smallint,
l_cnpj_cpf             like fornecedor.num_cgc_cpf,
l_num_pedido           like pedido_sup.num_pedido

define l_mensagem             char(300) #ch 721708

define l_alt_cod_operacao     smallint,
l_trans_nf_fiscal      like fat_nf_mestre.trans_nota_fiscal

define l_proc_integracao   like sup_mon_integracao.proc_integracao,
l_sserie_ad         like ad_mestre.ssr_nf

define l_contribte            smallint, #terbd0
l_permite              smallint,
l_cod_empresa_orig     char(02)

define l_id_estrangeiro     like vdp_cli_fornec_cpl.iden_estrangeiro,
l_achou_tip          smallint,
l_ins_estadual_ar    like sup_par_ar.parametro_texto,
l_ind_ie_dest        like sup_par_ar.parametro_val,
l_num_nfe_aux        char(15) ### tqfxnr

define l_valida_cfop_transf smallint

define l_ret_merc_nao_entregue char(01),
l_dat_emis_reinf        like nf_sup.dat_emis_nf,
l_altera_cond_pagto     smallint

let l_permite_alterar_tipo_nota_7 = true
let l_permite_alterar_tipo_nota_b = true
let l_status_epl                  = "0"

if log_existe_epl('sup3760y_before_process_entrada_dados') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('status', l_status_epl)
	#epl status do retorno da epl
	#epl tipo: char(01)

	call sup3760y_before_process_entrada_dados()
	let l_status_epl = log_getvar('status')

	case l_status_epl
	when "0" # n�o faz nada, continua a execu��o da fun��o
	when "1" return true
	when "2" return false
end case

end if

let m_grava_sup0964  = false
let l_nf_mestre_ser  = false
let l_nf_mestre      = false
let l_nf_mestre_hist = false
let l_abriu_tela     = false
let l_pergunta_terceirizacao = false

initialize m_msg_nfm_total to null ##sdizen
initialize m_funcao to null

let p_funcao_menu = l_funcao
let l_primeira_vez = true
let l_houve_erro = false
let m_funcao = l_funcao
let l_cod_fisc_ant   = " "

initialize m_indicador_aduaneiro  to null
initialize p_seta, l_desc_imposto to null
initialize m_num_nf_eletronica to null

if l_funcao = "modificacao" then
	let p_entra_array = "n"
	let p_entra_tot   = "n"
	let l_ies_nfe_emit = "n"
	if sup376_nfe_emitida() then
		let l_ies_nfe_emit = "s"
	end if

	let g_modifica_nf_transito = true
end if

if l_funcao = "inclusao" then
	call sup3760_initialize_ar()

	initialize m_nf_aguard_nfe_ant to null
	let p_ies_imp_renda = null
	let p_ies_imp_iss   = "n"
	let p_ies_imp_ret_inss = null
	let p_base_calc_ret_inss = null
	let p_ies_imp_inss_rur   = null
	let p_base_calc_inss_rur = null
	let p_cod_ret_imp        = null
	let p_cod_ret_iss        = null

	let g_modifica_nf_transito = false
end if

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup37601

if l_funcao = "inclusao" then
	call sup376_inicializa_input()
	let p_dados_tela.ies_impostos = "n"
end if

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#

if m_wms_instal = "s" then
	if find4glfunction('wms6612_create_table') then
		call wms6612_create_table()
		let m_criou_temp_peso = true
	end if
	# armazena o hor�rio de digita��o da nota
	# passo 3
	let m_horario_alteracao_wms = current year to second

	# inicialmente permite que seja alterado o campo tipo da nota
	let l_altera_tipo         = true
	let l_altera_tipo_deposit = true

	# passo 4 #
	if m_segmto_utilizacao = "o" then

		## 841966 restringir modifica��o do tipo de documento wms em algumas situa��es
		#retirar if e else do find4gl function
		if find4glfunction('wms6612_retorna_indicador_aduaneiro_ar') then
			if wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) <> 't' then
				if  l_funcao <> "modificacao"
					or (l_funcao = "modificacao" and sup3760_verifica_permissao_troca_tipo_docum_wms(p_aviso_rec.cod_empresa,
					p_aviso_rec.num_aviso_rec)) then

					call sup3760_wms_tipo_documento(m_segmto_utilizacao,l_funcao) returning l_altera_tipo,
					l_continua
					if l_continua = false then
						return false
					end if

					if m_tipo_documento_old = "p" or
						m_tipo_documento_old = "d" then
						if m_tipo_documento     = "n" then
							display by name p_dados_tela.ies_nf_aguard_nfe
						end if
					end if
				end if
			end if
		else
			if  l_funcao <> "modificacao"
				or (l_funcao = "modificacao" and sup3760_verifica_permissao_troca_tipo_docum_wms(p_aviso_rec.cod_empresa,
				p_aviso_rec.num_aviso_rec)) then

				call sup3760_wms_tipo_documento(m_segmto_utilizacao,l_funcao) returning l_altera_tipo,
				l_continua
				if l_continua = false then
					return false
				end if

				if m_tipo_documento_old = "p" or
					m_tipo_documento_old = "d" then
					if m_tipo_documento     = "n" then
						display by name p_dados_tela.ies_nf_aguard_nfe
					end if
				end if
			end if
		end if

	end if

	# passo 5 #
	call log2250_busca_parametro(p_cod_empresa,"iden_emit_cnpj_inscr_estadual") returning l_parametro, l_status
	let l_altera_fornecedor = true
	if l_parametro = "s" then
		call sup3760_wms_emit_cnpj_inscr_estadual() returning p_dados_tela.cod_fornecedor,
		l_raz_social,
		l_continua
		if l_continua then
			let l_altera_fornecedor = false
			display l_raz_social to raz_social
		else
			return false
		end if
	end if

	call log006_exibe_teclas("01 02 03 07", p_versao)
	current window is w_sup37601
end if
#---------------#

let p_nfe_vendas = false
let p_nfe_import = false
let p_nfm_import = false
let m_nfr_import = false
let m_finalidade = 'n' ### tewxk6 (definir finalidade como n - normal)
let m_nfd_cupom_fiscal = false ### try819

let p_entrou_pedido = "n"
initialize m_preco_bruto to null

if l_funcao = "modificacao" then
	let p_ies_aguard_nfe = p_dados_tela.ies_nf_aguard_nfe
	if sup3760_nfr_consignatario("modificacao") then
		let m_nfr_import = true
	end if
	let l_cod_fisc_ant = p_dados_tela.cod_operacao #o.s. 550997

	# ch 739942 - rafael f. b. - 12/01/2010 #
	let l_alt_cod_operacao = false

	if m_permite_alt_inf_compl_nf_cap = "s" and m_existe_cap then
		let l_alt_cod_operacao = true
	end if
end if

let m_nfp_incl_apos_encerr = false

let p_ies_prim_cnd = true
let p_cnd_pgto_salva = p_dados_tela.cnd_pgto_nf

let m_transf_ativo_imob = false

initialize p_ies_forn_dif_pc to null
let p_ies_forn_dif_pc = sup376_busca_par_sup_pad("ies_forn_dif_pc",1)
let p_dif_fornec = false
display "    " at 8,70
initialize p_dados_tela.cod_emp_benef, l_dat_emis_ant to null

let int_flag = 0
input by name p_dados_tela.* without defaults

before field cod_empresa
call sup3760_botao_zoom("on",3,68)

if l_funcao = "inclusao"  then
	if p_dados_tela.cod_empresa is null  then
		let p_dados_tela.cod_empresa = p_cod_empresa
		let p_dados_tela.dat_entrada_nf = today
		display by name p_dados_tela.cod_empresa,
		p_dados_tela.dat_entrada_nf
	end if
end if
if l_funcao = "modificacao" then
	if m_integra_mensagem then
		if p_dados_tela.ies_nf_aguard_nfe = "7" then
		next field ies_nf_aguard_nfe
	else
		call log0030_mensagem("nota integrada ao tradeeasy. s� � permitido modificar o tipo da nota e quando a nota estiver em tr�nsito.","info")
		let l_continua = false
	end if
end if

if log_existe_epl('sup3760y_before_field_cod_empresa') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl indicador do tipo da nota fiscal
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	let l_status = true
	call log_setvar('status', l_status)
	#epl status do retorno
	#epl tipo: smallint

	let l_next_field = null
	call log_setvar('next_field', l_next_field)
	#epl next field para campo
	#epl tipo: char(20)

	call sup3760y_before_field_cod_empresa()
	let l_status = log_getvar('status')
	let l_msg_erro   = log_getvar('msg_erro')
	let l_next_field = log_getvar('next_field')

	if not l_status then
		if l_msg_erro is not null then
			call log0030_mensagem(l_msg_erro, "excl")
		end if
		return false
	end if

	if l_next_field is not null then
		case l_next_field
		when "ies_nf_aguard_nfe" next field ies_nf_aguard_nfe
	end case
end if
end if

# ch 739942 - rafael f. b. - 12/01/2010 #
if l_alt_cod_operacao then
next field cod_empresa_estab
end if

call sup3760_backup_dados_tela()

if find4glfunction("supy117_nfe_transito_ja_impressa") then
	if supy117_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.ies_especie_nf,
		false) then
	next field ies_nf_aguard_nfe
end if
end if

next field filial
end if
next field cod_empresa_estab

call sup3760_save_cur_field_name('cod_empresa')

before field cod_empresa_estab
# ch 739942 - rafael f. b. - 12/01/2010 #
if l_funcao = "modificacao" then
	if l_alt_cod_operacao then
	next field num_aviso_rec
end if
end if
let p_conta_estab = 0
select count(*)
into p_conta_estab
from par_sup_re
where par_sup_re.cod_empresa = p_cod_empresa
and par_sup_re.cod_empresa_estab is not null
if p_conta_estab is null or
	p_conta_estab = " "   then
	let p_conta_estab = 0
end if
if p_conta_estab = 0 then
next field filial
end if

if p_conta_estab > 0 and
	p_dados_tela.cod_empresa_estab is null then
	### os 483118
	### se empresa trabalha com conceito de estabelecimento e estiver incluindo nota em empresa ex: 01
	### e no sup1420 possui cadastro para a empresa 01 estabelecimento 02 e estabelecimento nulo,
	### se n�o informar estabelecimento na nota este deve permanecer em branco e n�o mais assumir como
	### estabelecimento a pr�pria empresa (por isso foi incluido o select abaixo)
	whenever error continue
	select cod_empresa_estab
	into p_dados_tela.cod_empresa_estab
	from par_sup_re
	where par_sup_re.cod_empresa = p_cod_empresa
	and par_sup_re.cod_empresa_estab = p_cod_empresa
	whenever error stop
	if sqlca.sqlcode <> 0 then
		initialize p_dados_tela.cod_empresa_estab to null
	end if
end if
call sup3760_botao_zoom("on",3,68)

call sup3760_save_cur_field_name('cod_empresa_estab')

after field cod_empresa_estab
if p_dados_tela.cod_empresa_estab is not null then
	if sup376_verifica_cod_emp_estab() then
		error "estabelecimento nao cadastrado para a empresa"
	next field cod_empresa_estab
else
	call sup3760_botao_zoom("off",3,68)
end if
end if

before field filial
### dmanentlgx-692 - s� entra no campo filial se tabela log_filial existe e se possui registro (cadastro empresa).
if m_log_filial = 'n' then
	if l_funcao = "modificacao" then
		if sup3760_nfe_transito_ja_impressa(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.cod_operacao,
			p_nf_sup.dat_entrada_nf) then
		next field ies_nf_aguard_nfe
	end if
	#-- fim 610336

	let l_dat_emis_ant = p_dados_tela.dat_emis_nf
	if l_ies_nfe_emit = "s" then
	next field dat_entrada_nf
end if
if p_dados_tela.ies_nf_aguard_nfe <> "7" then
next field ies_nf_aguard_nfe
else
next field ser_nf
end if
else
next field cod_fornecedor
end if
end if
call sup3760_botao_zoom("on",3,68)
call sup3760_save_cur_field_name('filial')

after field filial
if p_dados_tela.filial is not null then
	if find4glfunction('log_filial_select') then
		if not log_filial_select(p_dados_tela.filial,null,true,false) then
		next field filial
	else
		if find4glfunction('log_filial_get_empresa_logix') then
			if p_cod_empresa <> log_filial_get_empresa_logix() then
				call log0030_mensagem("filial pertence a outra empresa logix.","exclamation")
			next field filial
		end if
	end if
	call sup3760_botao_zoom("off",3,68)
end if
end if
else
	### dmanentlgx-692
	call log0030_mensagem("filial deve ser informada.","exclamation")
next field filial
end if
if l_funcao = "modificacao" then
	if sup3760_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.cod_operacao,
		p_nf_sup.dat_entrada_nf) then
	next field ies_nf_aguard_nfe
end if
#-- fim 610336

let l_dat_emis_ant = p_dados_tela.dat_emis_nf
if l_ies_nfe_emit = "s" then
next field dat_entrada_nf
end if
if p_dados_tela.ies_nf_aguard_nfe <> "7" then
next field ies_nf_aguard_nfe
else
next field ser_nf
end if
end if

before field num_aviso_rec
# ch 739942 - rafael f. b. - 12/01/2010 #
if l_funcao = "modificacao" then
	if l_alt_cod_operacao then
	next field cod_fornecedor
end if
end if

let m_ver_aviso_rec = false
select num_aviso_rec
from nf_sup
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
if sqlca.sqlcode = 0 then
	call log0030_mensagem('n�mero de aviso de recebimento j� utilizado, efetuar nova inclus�o. \nrecomenda-se avisar equipe de ti.','exclamation')
	let m_ver_aviso_rec = true
	exit input
end if
next field cod_fornecedor
call sup3760_save_cur_field_name('num_aviso_rec')

before field cod_fornecedor
#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if m_wms_instal = "s" then
	# passo 6 #
	if m_tipo_documento = "p" or m_tipo_documento = "d" then  #teyllr
		if l_altera_fornecedor = false then
		next field num_nf
	end if
end if
end if
#---------------#
if l_funcao = "modificacao" then
next field cod_operacao
end if
call sup3760_botao_zoom("on",3,68)
if l_funcao = "inclusao" then
	initialize p_ordens      to null
	initialize p_ordens_p1   to null
	initialize p_ordens_p2   to null
	initialize p_ordens_p3   to null
	initialize p_ordens_p4   to null
	initialize p_ordens_p5   to null
	initialize p_ordens_p6   to null
	initialize p_ordens_p7   to null
	initialize p_ordens_p8   to null

	initialize p_ordens_p9    to null
	initialize p_ordens_p10   to null
	initialize p_ordens_p11   to null
	initialize p_ordens_p12   to null
	initialize p_ordens_p13   to null
	initialize p_ordens_p14   to null
	initialize p_ordens_p15   to null
	initialize p_ordens_p16   to null

	initialize p_pedidos     to null
	initialize p_pedidos_p1  to null
	initialize p_pedidos_p2  to null
	initialize p_pedidos_p3  to null
	initialize p_pedidos_p4  to null
	initialize p_pedidos_p5  to null
	initialize p_pedidos_p6  to null

	initialize p_pedidos_p7   to null
	initialize p_pedidos_p8   to null
	initialize p_pedidos_p9   to null
	initialize p_pedidos_p10  to null
	initialize p_pedidos_p11  to null
	initialize p_pedidos_p12  to null

	initialize p_prog_ordem  to null
	initialize p_prog_ordem1 to null
	initialize p_prog_ordem2 to null
	initialize p_prog_ordem3 to null
	initialize p_prog_ordem4 to null

	initialize p_prog_ordem5 to null
	initialize p_prog_ordem6 to null
	initialize p_prog_ordem7 to null
	initialize p_prog_ordem8 to null

	initialize p_array       to null
	initialize p_array_compl to null
end if
if p_ies_pc_ant_fornec = "n" then
else
	if p_dif_fornec = false
		then
		if sup376_entrada_pedido_ordem(l_funcao) = false then
			initialize p_fornec_aux to null
			exit input
		end if
		if g_modifica_nf_transito = true then
			if log_existe_epl("sup3760y_before_process_mostra_nf_transito2") then
				call log_setvar("fornecedor",p_dados_tela.cod_fornecedor)
				call sup3760y_before_process_mostra_nf_transito2()
				current window is w_sup37601
			end if
			let g_nao_inclui = true
			return true
		end if

		let p_entrou_pedido = "n"
		if p_pedidos is not null then
			call sup376_busca_infor_pedidos()
		end if

		let p_fornec_aux = p_dados_tela.cod_fornecedor

		#### os344679 - estava dando problema quando p_ies_forn_dif_pc
		### igual a 'r' e m_cnpj_nf_com_pc = 'n' e p_ies_pc_ant_fornec = 's'
		### pois n�o trazia o c�digo do fornecedor do pc.
		#if p_ies_forn_dif_pc = "r" and m_cnpj_nf_com_pc = "n" then
		#   initialize p_dados_tela.cod_fornecedor to null
		#end if
	end if
end if
if m_wms_instal = "s" then  #teyllr
	if l_altera_fornecedor = false then
	next field num_nf
end if
end if
call sup3760_save_cur_field_name('cod_fornecedor')

after field cod_fornecedor
#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if m_wms_instal = "s" then
	# passo 7 #
	call sup3760_wms_busca_cfop(m_segmto_utilizacao)
	display by name p_dados_tela.*
end if
#---------------#
call sup3760_botao_zoom("off",3,68)
if p_dados_tela.cod_fornecedor is not null then
## 394170
	if log_existe_epl("sup3760y_after_field_cod_fornecedor") then
		call log_setvar("cod_fornecedor", p_dados_tela.cod_fornecedor)
		call log_setvar("cnd_pgto", p_dados_tela.cnd_pgto_nf) ### trmxud

		if not sup3760y_after_field_cod_fornecedor() then
		next field cod_fornecedor
	end if

	let p_dados_tela.cnd_pgto_nf = log_getvar('cnd_pgto') ### trmxud
end if
if m_cnpj_nf_com_pc = "s" and
	p_ies_forn_dif_pc = "n" then
	if p_dados_tela.cod_fornecedor <> g_cod_forn_sup3850 then
		error "fornecedor do pedido eh diferente do fornecedor da nota fiscal."
		let p_dados_tela.cod_fornecedor = g_cod_forn_sup3850
	next field cod_fornecedor
end if
end if
##o.s 286008 mult.ins.estaduais
call sup1049_verifica_registros(p_cod_empresa,
p_dados_tela.cod_fornecedor,
p_dados_tela.num_aviso_rec,
"inclusao")
current window is w_sup37601
##o.s 286008 mult.ins.estaduais

##o.s.426421 via transporte
if l_funcao = "inclusao" then
	call sup3760_via_transporte(p_cod_empresa,
	p_dados_tela.cod_fornecedor)
	current window is w_sup37601
end if
##o.s.426421 via transporte

if sup376_verifica_fornecedor() = false
	then
	if find4glfunction('sup3762_formata_codigo_digitado_para_busca_por_cpf_cnpj') = true then
		call sup3762_formata_codigo_digitado_para_busca_por_cpf_cnpj(p_dados_tela.cod_fornecedor)
		returning l_cnpj_cpf
		whenever error continue
		select *
		into p_clientes.*
		from clientes
		where clientes.num_cgc_cpf = l_cnpj_cpf
		whenever error stop
	else
		##foi mantida a compatibilidade para o caso do sup3760 ser enviado sem o sup3762...
		##no futuro poder� ser retirada a condi��o
		if p_ies_cod_cgc = "1"
			then let p_cgc_cpf1 = p_dados_tela.cod_fornecedor[1,3]
			let p_cgc_cpf2 = p_dados_tela.cod_fornecedor[4,6]
			let p_cgc_cpf3 = p_dados_tela.cod_fornecedor[7,9]
			let p_cgc_cpf4 = p_dados_tela.cod_fornecedor[10,13]
			let p_cgc_cpf5 = p_dados_tela.cod_fornecedor[14,15]

			whenever error continue
			select *
			into p_clientes.*
			from clientes
			where clientes.num_cgc_cpf[1,3]   = p_cgc_cpf1 and
			clientes.num_cgc_cpf[5,7]   = p_cgc_cpf2 and
			clientes.num_cgc_cpf[9,11]  = p_cgc_cpf3 and
			clientes.num_cgc_cpf[13,16] = p_cgc_cpf4 and
			clientes.num_cgc_cpf[18,19] = p_cgc_cpf5
			whenever error stop
		end if
	end if

	if sqlca.sqlcode = 0
		then
		#se codifica��o no logix for cpf/cnpj e n�o estiver integrado com o datasul
		#ou se codifica��o no logix for cpf/cnpj e integra��o com datasul e codifica��o via cnpj/cpf
		if ((p_ies_cod_cgc = "1" and m_integ_cli_forn_transp_datasul = 'n')
			or (p_ies_cod_cgc = "1" and m_integ_cli_forn_transp_datasul = 's' and m_integ_codif_cli_forn_transp = '2'))
			then if find4glfunction('sup3762_formata_codigo_digitado_para_busca_por_cpf_cnpj') = true then
			#atribui para tela o c�digo formatado apartir do cnpj/cpf encontrado
			#pois na tela o usu�rio pode digitado com ou sem o '0' no in�cio do c�digo
			let p_dados_tela.cod_fornecedor = l_cnpj_cpf[1,3] clipped,
			l_cnpj_cpf[5,7] clipped,
			l_cnpj_cpf[9,11] clipped,
			l_cnpj_cpf[13,16] clipped,
			l_cnpj_cpf[18,19] clipped
		end if
	else
		#somente permitir� cadastrar o fornecedor a partir do cliente se a codifica��o do fornecedor for autom�tica
		#ou se integrado ao datasul com controle de c�digo no datasul
		if p_ies_cod_fornec = 'a'
			or (m_integ_cli_forn_transp_datasul = 's' and m_integ_codif_cli_forn_transp = '1' ) then
			let l_msg = "foi encontrado o cliente: ",p_clientes.cod_cliente clipped, ' - ',
			p_clientes.nom_reduzido clipped,
			". cadastrar fornecedor a partir deste cliente? "
			if not log0040_confirm(21,04, l_msg ) then
				initialize p_dados_tela.cod_fornecedor to null
			next field cod_fornecedor
		end if

		#se possui integra��o com datasul e o controle de codifica��o est� no datasul
		#busca o c�digo a ser gerado
		if m_integ_cli_forn_transp_datasul = 's' and m_integ_codif_cli_forn_transp  = '1' then
			if not log0850_transacao_ativa() then
				call log085_transacao("begin")
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("begin transaction","sup3760_entrada_dados()")
				next field cod_fornecedor
			end if
		end if

		#mensagem eai para pedir c�digo ao datasul
		#existindo cnpj e cpf ser� o mesmo c�digo do fornecedor e n�o ser� disparada mensagem
		call vdpr249_get_codigo(p_clientes.num_cgc_cpf,
		p_clientes.ins_estadual,
		0)
		returning l_status, p_dados_tela.cod_fornecedor

		if l_status then
			if log0850_transacao_ativa() then
				call log085_transacao("commit")
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("commit transaction","sup3760_entrada_dados()")
				next field cod_fornecedor
			end if
		end if
	else
		if log0850_transacao_ativa() then
			call log085_transacao("rollback")
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback transaction","sup3760_entrada_dados()")
			end if
		end if
	next field cod_fornecedor
end if
else
	call vdp90076_determina_codificacao(p_cod_empresa,'f','n','n',null,'s',null,false)
returning l_status, p_dados_tela.cod_fornecedor

	if not l_status
		or p_dados_tela.cod_fornecedor is null
		or p_dados_tela.cod_fornecedor = ' ' then
		error " n�o foi poss�vel determinar o fornecedor. "
		initialize p_dados_tela.cod_fornecedor to null
	next field cod_fornecedor
end if
end if
else
	error " fornecedor nao cadastrado "
	initialize p_dados_tela.cod_fornecedor to null
next field cod_fornecedor
end if
end if

let p_nom_reduz_cli = p_clientes.nom_reduzido[1,10]
select cod_uni_feder
into p_cod_unid_feder
from cidades
where cidades.cod_cidade = p_clientes.cod_cidade

call sup376_busca_uni_feder(p_cod_unid_feder)
let p_cod_pais = gr_uni_feder.cod_pais
let p_cod_uni_feder   = p_cod_unid_feder

if sup376_testa_nulo_clientes() = true then
next field cod_fornecedor
end if

if not log0850_transacao_ativa() then
	call log085_transacao("begin")
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("begin transaction","sup3760_entrada_dados()")
	next field cod_fornecedor
end if
end if

call sup3762_insert_fornecedor()

if g_ies_wms_instalado = 's' then
	if find4glfunction('wmsr170_cadastro_automatico_conta_padrao_fornecedor') = true then
		if not wmsr170_cadastro_automatico_conta_padrao_fornecedor(p_cod_empresa,p_dados_tela.cod_fornecedor, false) then
			error " n�o foi poss�vel efetuar o cadastro autom�tico da conta cont�bil do fornecedor. "
		end if
	end if
end if

#realiza integra��o do fornecedor rec�m cadastrado caso possua integra��o com outros sistemas.
if find4glfunction('vdpr239_prepara_envio_mensagem_eai') = true then
	if not vdpr239_prepara_envio_mensagem_eai("in", p_dados_tela.cod_fornecedor, "fornecedor", 0) then
		error " erro ao tentar efetuar integra��o do cadastro de fornecedor."
		if log0850_transacao_ativa() then
			call log085_transacao("rollback")
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback transaction","sup3760_entrada_dados()")
			next field cod_fornecedor
		end if
	end if
end if
end if

if log0850_transacao_ativa() then
	call log085_transacao("commit")
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("commit transaction","sup3760_entrada_dados()")
	next field cod_fornecedor
end if
end if
else error " fornecedor nao cadastrado "
	initialize p_dados_tela.cod_fornecedor to null
next field cod_fornecedor
end if
else if p_ies_fornec_ativo = "i"
	then error " entrada nao permitida para fornecedor inativo "
next field cod_fornecedor
else
	#atribui para a tela o c�digo do fornecedor recuperado na fun��o sup3762_busca_info_fornecedor
	let p_dados_tela.cod_fornecedor = p_fornecedor.cod_fornecedor
end if
end if
else
	error " fornecedor deve ser informado "
next field cod_fornecedor
end if

if p_ies_pc_ant_fornec = "n" then
	let p_fornec_aux = p_dados_tela.cod_fornecedor
	if sup376_entrada_pedido_ordem(l_funcao) = false then
		initialize p_fornec_aux to null
		exit input
	end if
	if p_pedidos is not null then
		call sup376_busca_infor_pedidos()
	end if
else
	if p_dados_tela.cod_fornecedor <> p_fornec_aux then
		whenever error continue
		select * from pedido_sup_fornec
		where cod_empresa    = p_cod_empresa
		and num_pedido     = p_array_pedidos[1].num_pedido
		and cod_fornecedor = p_dados_tela.cod_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 then
			if p_ies_forn_dif_pc = "r" then
				### os 511148
				initialize l_status to null
				call sup3762_busca_num_cgc_cpf_fornecedor(p_fornec_aux) returning l_cgc_raiz_ped, l_status
				if l_status = false then
					let l_cgc_raiz_ped = "y"
				end if

				initialize l_status to null
				call sup3762_busca_num_cgc_cpf_fornecedor(p_dados_tela.cod_fornecedor) returning l_cgc_raiz, l_status
				if l_status = false then
					let l_cgc_raiz_ped = "x"
				end if

				if l_cgc_raiz <> l_cgc_raiz_ped then
					error "fornecedor do pedido difere do fornecedor informado"
				next field cod_fornecedor
			else
				error "pedido do mesmo fornecedor, porem de outro estabelecimento." attribute (reverse)
				if log004_confirm(18,40)
					then
				else
				next field cod_fornecedor
			end if
		end if
	else
		error "fornecedor do pedido difere do fornecedor informado"
		let p_dif_fornec = true
		if p_ies_forn_dif_pc = "n" then
		next field cod_fornecedor
	end if
	if p_ies_forn_dif_pc = "s" then
		if sup376_pc_consignacao() = false then
			if log004_confirm(18,40) then
			else
			next field cod_fornecedor
		end if
	else
		error "fornec. do pedido (consignacao) difere do fornec. informado"
	next field cod_fornecedor
end if
end if
end if
end if
end if
end if
if p_dados_tela.cod_fornecedor is not null then
	if m_ies_cnpj_insc = "s" then
		call sup3760_display_num_nfe_cte() ### trxyyh
		call sup3760_busca_cnpj_insc(p_cod_empresa, #801178#
		p_dados_tela.num_aviso_rec, #801178#
		p_dados_tela.cod_fornecedor)
		if (m_num_cgc_cpf is not null and m_num_cgc_cpf <> " ") or
			(m_ins_estadual is not null and m_ins_estadual <> " ") then
			display "cnpj/cpf: ",m_num_cgc_cpf  at 10,21 attribute(reverse)
			display "ins.est.: ",m_ins_estadual at 10,51 attribute(reverse)
		else
			display "cnpj/cpf:                     "  at 10,21 attribute(reverse)
			display "ins.est.:                  " at 10,51 attribute(reverse)
		end if
	end if
else
	display "                                                             "  at 10,20
end if

if g_cod_forn_sup3850 is null
	or g_cod_forn_sup3850 = " " then
	if g_modifica_nf_transito = false then
		if m_visualizar_notas_em_transito = "s" then
			if sup3760_mostra_nf_transito(p_dados_tela.cod_fornecedor) then
				let g_nao_inclui = true
				return true
			end if
			if g_modifica_nf_transito then
				let g_nao_inclui = true
				return true
			end if
			let int_flag = false
		end if
	end if
end if

let m_emitente_nf_filial  = p_dados_tela.cod_fornecedor

before field num_nf
#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if m_wms_instal = "s" then
	# passo 7 #
	call sup3760_wms_busca_cfop(m_segmto_utilizacao)
	display by name p_dados_tela.*
end if
if m_wms_instal = 's' then
	if m_tipo_documento = "n" then
		if find4glfunction('wms6612_verifica_depositante_aduaneiro') then
			if p_dados_tela.cod_fornecedor is not null and
				p_dados_tela.cod_fornecedor <> ' ' then
				call wms6612_verifica_depositante_aduaneiro(p_dados_tela.cod_fornecedor,true)
				returning p_status, m_indicador_aduaneiro

			end if
		end if
		current window is w_sup37601
	end if
end if

#---------------#
#--------------------------#
# altera��o wms os: 578930 #
#--------------------------#
if m_segmento = "i" then
	whenever error continue
	select fornecedor.cod_fornecedor
	into l_deposit
	from fornecedor
	inner join empresa
	on empresa.num_cgc      = fornecedor.num_cgc_cpf
	and empresa.ins_estadual = fornecedor.ins_estadual
	where empresa.cod_empresa = p_cod_empresa
	and fornecedor.ies_fornec_ativo = 'a'
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_deposit = null
	end if
	let m_wms_depositante = l_deposit
end if
#---------------#

call sup3760_botao_zoom("on",3,68)
if l_funcao = "modificacao" then
next field cod_operacao
end if

if l_funcao = "inclusao" then ### dmanentlgx-2152
	whenever error continue
	delete from sup_par_ar
	where empresa = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = 0
	and parametro in ('nf_duplicada','fr_duplicado')
	whenever error stop
	if sqlca.sqlcode <> 0 then
	end if
end if

if p_array_pedidos[1].num_pedido > 0 and p_dados_tela.num_nf is null then
	if m_existe_tab_oc_nf then
		call sup6516_busca_nf_pedido(p_cod_empresa,p_array_pedidos[1].num_pedido)
		returning l_nota_fiscal, l_serie_nota_fiscal, l_subserie_nf
		if l_nota_fiscal > 0 then
			let p_dados_tela.num_nf = l_nota_fiscal
			let p_dados_tela.ser_nf = l_serie_nota_fiscal
			let p_dados_tela.ssr_nf = l_subserie_nf
			display by name p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf
		end if
	end if
end if
if m_utiliza_num_nfe = 's' then #762211
	#m_utiliza_nf_eletronica = 's' then #--# teunq3 #--#
	if sup3760_informa_num_nfe('inclusao') = false then
		exit input
	else
		#---in�cio ch tfbgot---#
		if m_retorno_num_nfe = true then
			let m_retorno_num_nfe = false
		next field cod_fornecedor
	else
	next field ser_nf
end if
#---fim ch tfbgot---#
end if
end if

call sup3760_save_cur_field_name('num_nfe')

after field num_nf
call sup3760_botao_zoom("off",3,68)
if p_dados_tela.num_nf is  null  then
	error "informe o numero da nota."
next field num_nf
else
	if p_dados_tela.num_nf > 9999999 then #espindola
		error "nr.da nota fiscal invalido. nao pode ser maior que 9999999"
	next field num_nf
end if
if p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0 then
	error "nr.da nota fiscal invalido. nao pode ser 0"
next field num_nf
end if
end if

before field ser_nf
call sup3760_botao_zoom("off",3,68)
if l_funcao = "modificacao" then
	# ch 739942 - rafael f. b. - 12/01/2010 #
	if p_dados_tela.ies_nf_aguard_nfe <> "7" or
		l_alt_cod_operacao then
	next field cod_operacao
end if
end if

if p_dados_tela.ies_nf_aguard_nfe = "7" and
	m_atualiza_nf_trans = "n" then
next field ies_nf_aguard_nfe #se parametro = n nao deixar alterar.
end if
call sup3760_save_cur_field_name('ser_nf')

after field ser_nf
if m_serie_branca = "s" then
	if p_dados_tela.ser_nf is null then
		let p_dados_tela.ser_nf = " "
	end if
else
	if p_dados_tela.ser_nf is null or
		p_dados_tela.ser_nf = " " then
		error "informe o numero da serie da nota."
	next field ser_nf
end if
end if

before field ssr_nf
if l_funcao = "modificacao" then
	if l_alt_cod_operacao then
	next field ies_especie_nf
end if
end if
call sup3760_save_cur_field_name('ssr_nf')

after field ssr_nf
if p_dados_tela.ssr_nf is null or
	p_dados_tela.ssr_nf = " " then
	error " informe o numero da sub-serie da nota."
next field ssr_nf
end if
if not sup3760_consiste_pedido_nf() then
next field num_nf
end if

before field ies_especie_nf
call sup3760_botao_zoom("off",3,68)

if log_existe_epl('sup3760y_before_field_ies_especie_nf') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: nf_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
	#epl codigo do fornecedor
	#epl tipo: nf_sup.cod_fornecedor

	call log_setvar('funcao', l_funcao)
	#epl fun��o a ser executada
	#epl tipo: char(20)

	call sup3760y_before_field_ies_especie_nf()
end if

if l_funcao = "modificacao" then
	if p_dados_tela.ies_nf_aguard_nfe <> "7" or
		l_alt_cod_operacao then
	next field cod_operacao
end if
end if

if p_dados_tela.ies_nf_aguard_nfe = "7" and
	m_atualiza_nf_trans = "n" then
next field cod_operacao #se parametro = n nao deixar alterar.
end if
call sup3760_save_cur_field_name('ies_especie_nf')

after field ies_especie_nf
if  p_dados_tela.ies_especie_nf is not null
	and p_dados_tela.ies_especie_nf <> ' ' then
	if p_dados_tela.ies_especie_nf[1,1] = ' ' then
		let p_dados_tela.ies_especie_nf = p_dados_tela.ies_especie_nf[2,3]
		display by name p_dados_tela.ies_especie_nf
	end if
end if
if l_funcao = "modificacao" then
	if mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf or
		mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf or
		mr_dados_tela_ant.ies_especie_nf <> p_dados_tela.ies_especie_nf then
		if sup3760_nota_existe() then
			call log0030_mensagem('nota fiscal j� cadastrada.','exclamation')
		next field ser_nf
	end if
end if
else
	### manmat01-5083
	### verifica se numero da nota � maior que 9 digitos, caso afirmativo deve verificar se a especie � nf ou nfs (somente
	### nestes casos ser� permitido entrar com numero de nota maior que 9 digitos (caso de notas de servi�o emitidas por municipio).
	###
	### tqfxnr - depois de incluida nota fiscal verifica se nota j� existe e se empresa permite entrada de nota
	### com mais de 6 d�gitos ser� verificada se nota j� existe montando novamente o numero da nota.
	if m_utiliza_num_nfe = 's' then #762211
		if m_num_nf_eletronica is not null and
			m_num_nf_eletronica > 0 then
			let l_num_nfe_aux = m_num_nf_eletronica
			if length(l_num_nfe_aux) > 9 then
				if (p_dados_tela.ies_especie_nf = "nf" or
					p_dados_tela.ies_especie_nf = "nfs" or
					p_dados_tela.ies_especie_nf = "nff" or
					p_dados_tela.ies_especie_nf = "nfc" or
					p_dados_tela.ies_especie_nf = "doc" or
					p_dados_tela.ies_especie_nf = "rec") then ### mman-13720
				else
					call log0030_mensagem('numero de nota com mais de 9 posi��es permitido, apenas para nf/nff/nfs/nfc/doc/rec.','exclamation')
				next field num_nf
			end if
		end if
		if length(l_num_nfe_aux) >= 7 then
			case
			when length(l_num_nfe_aux) = 7
			let p_dados_tela.num_nf = m_num_nf_eletronica
			when length(l_num_nfe_aux) = 8
			let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
			when length(l_num_nfe_aux) = 9
			let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
			when length(l_num_nfe_aux) = 10
			let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
			when length(l_num_nfe_aux) = 11
			let p_dados_tela.num_nf = l_num_nfe_aux[5,11]
			when length(l_num_nfe_aux) = 12
			let p_dados_tela.num_nf = l_num_nfe_aux[6,12]
			when length(l_num_nfe_aux) = 13
			let p_dados_tela.num_nf = l_num_nfe_aux[7,13]
			when length(l_num_nfe_aux) = 14
			let p_dados_tela.num_nf = l_num_nfe_aux[8,14]
			when length(l_num_nfe_aux) = 15
			let p_dados_tela.num_nf = l_num_nfe_aux[9,15]
		end case

		call log_consoledebugmessage("linha 8589 l_funcao: "||l_funcao)
		if not sup3760_valida_num_nf_eletronica(1) then
		next field num_nf
	end if
end if
end if
end if

if sup3760_nota_existe() then
	call log0030_mensagem('nota fiscal j� cadastrada.','exclamation')
next field num_nf
end if
end if
call sup3760_existe_h_frete_sup(p_cod_empresa, p_dados_tela.cod_fornecedor, p_dados_tela.num_nf,
p_dados_tela.ser_nf, p_dados_tela.ssr_nf)
returning l_den_existe_h_tab

let l_permite = false
if find4glfunction('fin80153_processa_parametro_financeiro_11') then
	call fin80153_inicializa_variaveis()
	call fin80153_processa_parametro_financeiro_11()
	let l_permite = fin80153_permite_nf_c_msm_num_ser_ssr()
end if
if l_permite = false then
	whenever error continue
	select num_conhec from frete_sup
	where frete_sup.cod_empresa  = p_cod_empresa
	and frete_sup.cod_transpor = p_dados_tela.cod_fornecedor
	and frete_sup.num_conhec   = p_dados_tela.num_nf
	and frete_sup.ser_conhec   = p_dados_tela.ser_nf
	and frete_sup.ssr_conhec   = p_dados_tela.ssr_nf
	whenever error stop
	if (sqlca.sqlcode = 0 or l_den_existe_h_tab is not null) and
		p_dados_tela.ies_especie_nf <> 'nfs' then #a88484
		error "nota fiscal ja incluida como conhecimento de frete.", l_den_existe_h_tab clipped
	next field cod_fornecedor
end if
end if

if l_funcao = "modificacao" then
	if m_permite_ent_mesma_nfe_emp_dif = 's' and
		p_dados_tela.ies_especie_nf = 'nfe' then
		if p_dados_tela.ser_nf <> p_dados_telar.ser_nf
			or p_dados_tela.ssr_nf <> p_dados_telar.ssr_nf
			or p_dados_tela.ies_especie_nf <> p_dados_telar.ies_especie_nf then
			if sup376_verifica_nota_fiscal(l_funcao) then
			next field num_nf
		end if
	end if
else
	if p_dados_tela.ser_nf <> p_dados_telar.ser_nf
		or p_dados_tela.ssr_nf <> p_dados_telar.ssr_nf
		or p_dados_tela.ies_especie_nf <> p_dados_telar.ies_especie_nf then #809554
		if sup376_verifica_nota_fiscal(l_funcao) then
		next field num_nf
	end if
end if
end if
else
	if sup376_verifica_nota_fiscal(l_funcao) then
	next field num_nf
end if
end if

if p_dados_tela.ies_especie_nf is not null and
	p_dados_tela.ies_especie_nf <> " " then
	call sup376_valida_oc_fat(p_cod_empresa, p_dados_tela.ies_especie_nf, m_cod_grp_desp_fat, p_tip_desp_cons_fat)
returning l_status, l_num_oc, l_num_pedido
	if l_status then
		let l_msg = 'oc:', l_num_oc clipped, ' pedido: ', l_num_pedido, ' s�o de consigna��o. esp�cie dever� ser nf ou nff.'
		call log0030_mensagem(l_msg,'exclamation')
	next field ies_especie_nf
end if
else
	error " informe a especie da nota fiscal."
next field ies_especie_nf
end if

if log_existe_epl("sup3760y_after_field_ies_especie_nf") then
	call log_setvar("ies_especie_nf", p_dados_tela.ies_especie_nf)
	call log_setvar("ser_nf", p_dados_tela.ser_nf)

	if not sup3760y_after_field_ies_especie_nf() then
	next field ser_nf
end if
end if

if not sup3760_consiste_ser_nf(p_dados_tela.ser_nf) then
	### tvqwx0 - retirada verifica��o variavel m_ser_nfe para que n�o valide apenas s�rie num�rica.
	call log0030_mensagem('s�rie da nota fiscal inv�lida conforme legisla��o de icms nacional.\ns�o v�lidos somente 1 � 9,b,c,d,u,bu,cu,du,(branco) e as s�ries cadastradas no sup1371.','exclamation')
next field ser_nf
end if

if p_dados_tela.ies_especie_nf = "nfs" and m_serie_nfs is not null and m_serie_nfs <> " " then
	if p_dados_tela.ser_nf <> m_serie_nfs then
		if log0040_confirm(12,15,"serie informada difere serie padrao p/ nfs.deseja altera-la?") then
			let p_dados_tela.ser_nf = m_serie_nfs
			display by name p_dados_tela.ser_nf
		end if
	end if
end if

if p_dados_tela.ies_especie_nf = "nfm" or
	p_dados_tela.ies_especie_nf = "nfp" then
	if sup376_verif_conta_nfm() then
	else
		error "nao existe conta contabil especifica para nfm, cadastrada no sup1400"
	next field ies_especie_nf
end if
end if

let m_num_nf_cap = p_dados_tela.num_nf

call sup3760_existe_cap_h_ad_mestre(p_cod_empresa, m_num_nf_cap, p_dados_tela.cod_fornecedor,
p_dados_tela.ser_nf, p_dados_tela.ssr_nf)
returning l_existe_h_tab

if find4glfunction('fin80151_busca_nf_cap_ad_mestre_compl') then
	call fin80151_busca_nf_cap_ad_mestre_compl(p_cod_empresa,
	p_dados_tela.cod_fornecedor,
	m_num_nf_cap,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.ies_especie_nf)
returning l_status
	#tfqoen - se existir a tabela nova, por�m n�o estiver usando o conceito novo do cap,
	#dever� verificar somente a ad_mestre
	if not l_status then
		whenever error continue
		select num_nf
		from ad_mestre
		where ad_mestre.cod_empresa    = p_cod_empresa
		and ad_mestre.num_nf         = m_num_nf_cap
		and ad_mestre.ser_nf         = p_dados_tela.ser_nf
		and ad_mestre.ssr_nf         = p_dados_tela.ssr_nf
		and ad_mestre.cod_fornecedor = p_dados_tela.cod_fornecedor
		#and ad_mestre.dat_emis_nf    = p_dados_tela.dat_emis_nf           #os 414314 #
		whenever error stop
	end if
	#tfqoen
else
	whenever error continue
	select num_nf
	from ad_mestre
	where ad_mestre.cod_empresa    = p_cod_empresa
	and ad_mestre.num_nf         = m_num_nf_cap
	and ad_mestre.ser_nf         = p_dados_tela.ser_nf
	and ad_mestre.ssr_nf         = p_dados_tela.ssr_nf
	and ad_mestre.cod_fornecedor = p_dados_tela.cod_fornecedor
	#and ad_mestre.dat_emis_nf    = p_dados_tela.dat_emis_nf           #os 414314 #
	whenever error stop
end if

if sqlca.sqlcode = 0 or l_existe_h_tab then
	if l_existe_h_tab then                                             #os 414316 #
		error "nota existente no hist�rico do cap." attribute (reverse)
	else
		error "nota existente na tabela ad_mestre." attribute (reverse)
	end if
	if not log004_confirm(12,43) then
	next field num_nf
end if
end if
if p_dados_tela.ies_especie_nf = "nfr" or
	p_dados_tela.ies_especie_nf = "nfp" then
	let l_cond_pedido = " "
	###os335542
	if p_entrou_pedido = "s" then
		whenever error continue
		select cnd_pgto
		from cond_pgto_cap
		where cnd_pgto      = p_dados_tela.cnd_pgto_nf
		and ies_pagamento = "3"
		whenever error stop
		if sqlca.sqlcode = 0 then
			let l_cond_pedido = "3"
		else
			let l_cond_pedido = "2"
		end if
	end if

	if p_entrou_pedido = "n" or l_cond_pedido <> "3" then
		if sup3760_busca_cond_pgto_sem_pgto() then
			display p_dados_tela.cnd_pgto_nf to cnd_pgto_nf
		else
			declare cq_cnd_nfr cursor for
			select cnd_pgto
			from cond_pgto_cap
			where cond_pgto_cap.ies_pagamento = "3"
			order by cnd_pgto desc
			foreach cq_cnd_nfr into p_dados_tela.cnd_pgto_nf
			display p_dados_tela.cnd_pgto_nf to cnd_pgto_nf
			exit foreach
		end foreach
	end if
end if
#eduardo o.s.335542
else
	### os457685 ###
	call sup3762_exibe_condicao_pagamento()
end if

if p_dados_tela.ies_especie_nf = "nfc" then
	call sup3760_inclui_modifica_classif_nfc(l_funcao)
returning l_status

	if l_status = false then
		if l_funcao = "modificacao" then
		next field ies_nf_aguard_nfe
	else
	next field ies_especie_nf
end if
end if
end if

before field ies_nf_aguard_nfe
#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if m_wms_instal = "s" then
	if l_altera_tipo         = false or
		l_altera_tipo_deposit = false then
		if fgl_lastkey() = fgl_keyval("up") or
			fgl_lastkey() = fgl_keyval("left") then
		next field ies_especie_nf
	else
	next field cod_operac_estoq
end if
end if
end if
#---------------#
if l_funcao = "modificacao" then
	let mr_dados_tela_ant.ies_nf_aguard_nfe = p_dados_tela.ies_nf_aguard_nfe

	let l_status = true
	if log_existe_epl('sup3760y_before_field_ies_nf_aguard_nfe') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
		#epl indicador do tipo da nota fiscal
		#epl tipo: nf_sup.ies_nf_aguard_nfe

		call log_setvar('status', l_status)
		#epl status do retorno
		#epl tipo: smallint

		call sup3760y_before_field_ies_nf_aguard_nfe()
		let l_status     = log_getvar('status')
		let l_msg_erro   = log_getvar('msg_erro')
		let l_next_field = log_getvar('next_field')

		if not l_status then
			if l_msg_erro is not null then
				call log0030_mensagem(l_msg_erro, "excl")
			end if
			return false
		end if
	end if
	# ch 739942 - rafael f. b. - 12/01/2010 #
	if l_alt_cod_operacao then
	next field cod_operac_estoq
end if

if (p_dados_tela.ies_nf_aguard_nfe = "4" or
	p_dados_tela.ies_nf_aguard_nfe = "5") and
	p_nf_sup.ies_nf_aguard_nfe <> "7"  then
next field cod_operacao
end if

if p_dados_tela.ies_especie_nf = "nfc" then
	call sup3760_inclui_modifica_classif_nfc(l_funcao)
returning l_status
	if l_status = false then
		if l_funcao = "modificacao" then
		next field ies_nf_aguard_nfe
	else
	next field ies_especie_nf
end if
end if
end if
end if

let p_tip_embalag = sup376_busca_par_sup_pad("ies_nf_tipo_nove",1)
if sqlca.sqlcode = 0 then
	if p_tip_embalag = "s" then
		let p_dados_tela.ies_nf_aguard_nfe = "9"
		display by name p_dados_tela.ies_nf_aguard_nfe
	end if
end if

call sup3760_save_cur_field_name('ies_nf_aguard_nfe')

after field ies_nf_aguard_nfe
if log_existe_epl('sup3760y_valid_after_field_ies_especie_nf') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: nf_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl tipo da nota fiscal
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('ies_nf_aguard_nfe_ant', p_dados_telar.ies_nf_aguard_nfe)
	#epl tipo da nota fiscal
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('funcao', l_funcao)
	#epl fun�ao a ser executada
	#epl tipo: char(20)

	call log_setvar('permite_alterar_tipo_nota_7', l_permite_alterar_tipo_nota_7)
	#epl indicador se permite alterar o tipo da nota 7
	#epl tipo: smallint

	call log_setvar('permite_alterar_tipo_nota_b', l_permite_alterar_tipo_nota_b)
	#epl indicador se permite alterar o tipo da nota b
	#epl tipo: smallint

	call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
	#epl especie da nota fiscal
	#epl tipo: nf_sup.ies_especie_nf

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl tipo da nota fiscal
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('cod_operacao', p_dados_tela.cod_operacao)
	#epl codigo da opera��o
	#epl tipo: nf_sup.cod_operacao

	let l_status = true
	call log_setvar('status', l_status)
	#epl status de retorno da epl
	#epl tipo: smallint

	let l_next_field = null
	call log_setvar('next_field', l_next_field)
	#epl next field para campo
	#epl tipo: char(20)

	call sup3760y_valid_after_field_ies_especie_nf()

	let l_status     = log_getvar('status')
	let l_next_field = log_getvar('next_field')
	let l_permite_alterar_tipo_nota_7 = log_getvar('permite_alterar_tipo_nota_7')
	let l_permite_alterar_tipo_nota_b = log_getvar('permite_alterar_tipo_nota_b')
	let p_dados_tela.cod_operac_estoq = log_getvar('cod_operac_estoq')

	if l_status = false then
		if l_next_field is not null then
		next field ies_nf_aguard_nfe
	end if
end if
end if

#534641
let l_acessou_herc = false
if fgl_lastkey() <> fgl_keyval("up") and
	fgl_lastkey() <> fgl_keyval("left") then
	if p_dados_tela.ies_especie_nf = "nfr" and
		p_dados_tela.ies_nf_aguard_nfe = "a" then
		if sup3760_verifica_fornec_depos(p_dados_tela.cod_fornecedor) then
			call log0030_mensagem("fornecedor � igual ao �nico depositante, nota n�o pode ser tipo a","info")
		next field ies_nf_aguard_nfe
	end if
	if p_dados_tela.ies_especie_nf = "nfr" and
		p_dados_tela.ies_nf_aguard_nfe = "a" then
		if not sup3760_verifica_necessita_pc(p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			"a") then
			call log0030_mensagem("fornecedor n�o permite entrada sem pedido de compra","info")
		next field ies_nf_aguard_nfe
	end if
end if

#if find4glfunction('supy160_cliente_318')then
#   if not log0040_confirm_default(0,0,"esta nota nfr tipo a dever� ser impressa?","n") then
#      call supy160_bloqueia_impressao_nf(p_cod_empresa, p_dados_tela.num_aviso_rec,'n')
#   else
#      call supy160_bloqueia_impressao_nf(p_cod_empresa, p_dados_tela.num_aviso_rec,'s')
#   end if
#end if

if p_dados_tela.ies_especie_nf = "nfr" and
	p_dados_tela.ies_nf_aguard_nfe = "b" then
	if not sup3760_verifica_necessita_pc(p_dados_tela.cod_fornecedor,
		p_dados_tela.cod_operacao,
		"b") then
		call log0030_mensagem("fornecedor n�o permite entrada sem pedido de compra","info")
	next field ies_nf_aguard_nfe
end if
end if
end if
end if

#--# 828042 - espindola #--#
if l_funcao = "inclusao" then
	if log_existe_epl('sup3760y_before_pergunta_terceirizacao') then
		call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
		#epl esp�cie da nota fiscal
		#epl tipo: nf_sup.ies_nf_aguard_nfe

		call log_setvar('pergunta_terceirizacao', l_pergunta_terceirizacao)
		#epl esp�cie da nota fiscal
		#epl tipo: nf_sup.ies_nf_aguard_nfe

		call sup3760y_before_pergunta_terceirizacao()

		let l_pergunta_terceirizacao = log_getvar('pergunta_terceirizacao')
	end if

	if not l_pergunta_terceirizacao then
		if p_dados_tela.ies_nf_aguard_nfe = "a" or p_dados_tela.ies_nf_aguard_nfe = "b" then
			if p_dados_tela.ies_especie_nf <> "nfr" then
				let l_pergunta_terceirizacao = true
				if not log0040_confirm(5,10,'esp�cie da nf n�o ir� controlar terceiriza��o (diferente de nfr), confirma?') then
				next field ies_especie_nf
			end if
		end if
	end if
end if
end if
#--# 828042 - espindola #--#

if find4glfunction("supy117_nfe_transito_ja_impressa") then
	if supy117_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.ies_especie_nf, false) then
		if p_dados_tela.ies_nf_aguard_nfe <> "6"
			and p_dados_tela.ies_nf_aguard_nfe <> "7" then
			call log0030_mensagem("nota fiscal j� impressa. o tipo s� pode ser alterado para 6.","info")

		next field ies_nf_aguard_nfe
	else
		#--inicio--os 595717 #
		### dmanentlgx-6654 - n�o estava setando variavel m_nf_eletronica_impr, utilizada para chamada do sup3771.

		call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
		p_nf_sup.num_aviso_rec,
		"excluir") returning p_status, m_msg
		if p_status then
			let m_nf_eletronica_impr = true
		end if

		if l_funcao = "modificacao"   and
			m_nf_eletronica_impr = true then
			if supy117_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
				p_nf_sup.ies_especie_nf) = true  then
			next field dat_entrada_nf
		else
			exit input
		end if
	else
		exit input
	end if
	#---fim----os 595717 #
end if
end if
else
	# inicio 610336
	if sup3760_nfe_transito_ja_impressa(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.cod_operacao,
		p_nf_sup.dat_entrada_nf) = true then
		if p_dados_tela.ies_nf_aguard_nfe <> "6"
			and p_dados_tela.ies_nf_aguard_nfe <> "7" then
			call log0030_mensagem("nota fiscal j� impressa. o tipo s� pode ser alterado para 6.","info")

		next field ies_nf_aguard_nfe
	else
		#--inicio--os 595717 #
		### dmanentlgx-6654 - n�o estava setando variavel m_nf_eletronica_impr, utilizada para chamada do sup3771.
		call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
		p_nf_sup.num_aviso_rec,
		"excluir") returning p_status, m_msg
		if p_status then
			let m_nf_eletronica_impr = true
		end if
		if l_funcao = "modificacao"   and
			m_nf_eletronica_impr = true then
			if sup3760_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
				p_nf_sup.cod_operacao) = false then
				exit input
			else
				if sup3760_consiste_nf_transito() and l_funcao = "modificacao" and ##os 369029
					m_nf_aguard_nfe_ant = "7" and p_dados_tela.ies_nf_aguard_nfe <> "7" and
					sup3760_verifica_inspecao() = false then
					let p_dados_tela.dat_entrada_nf = today
					display by name p_dados_tela.dat_entrada_nf
				end if
			next field dat_entrada_nf
		end if
	else
		exit input
	end if
	#---fim----os 595717 #
end if
end if
# fim 610336
end if

#--# valida��o klin #--#
if  l_funcao = "modificacao"
	and m_nf_aguard_nfe_ant = "7"
	and p_dados_tela.ies_nf_aguard_nfe <> "7"
	and m_utiliza_engenharia_grade = "s"
	and m_utiliza_nf_eletronica = "s"
	and p_dados_tela.ies_especie_nf <> "nfd" then
	if sup0812_verifica_nota_transferencia(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_dados_tela.num_nf,
		p_dados_tela.ser_nf,
		p_dados_tela.ssr_nf,
		p_dados_tela.cod_fornecedor,
		p_dados_tela.cod_operacao,
		p_dados_tela.cod_fiscal_compl) = true then
		if not sup3760_verifica_sit_fiscal_nf_saida(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_cod_emp_transf) then
		next field ies_nf_aguard_nfe
	end if
end if
end if
#--# valida��o klin #--#

#534641
initialize p_dados_tela.cod_emp_benef to null

if p_dados_tela.ies_nf_aguard_nfe = "d" then
	if p_dados_tela.ies_especie_nf = "nfr" then
		if m_tem_valid_fim then
			if today > m_dat_fim_valid then
				let p_dados_tela.cod_operacao = "5.949"
			else
				let p_dados_tela.cod_operacao = "5.99"
			end if
		else
			let p_dados_tela.cod_operacao = "5.99"
		end if
	else
		error "tipo d deve ser utilizado para notas de especie nfr."
	next field ies_especie_nf
end if
end if

if p_dados_tela.ies_nf_aguard_nfe = "p" then
	if p_dados_tela.ies_especie_nf = "nfd" then
		error "tipo p nao pode ser utilizado para notas de especie nfd."
	next field ies_nf_aguard_nfe
end if
if g_nat_oper_permuta is null then
	error "falta parametrizar natureza de operacao para permuta (sup1400)."
next field ies_nf_aguard_nfe
end if
if g_operac_permuta is null then
	error "falta parametrizar operacao de estoque para permuta (sup5110)."
next field ies_nf_aguard_nfe
end if
end if
if l_funcao = "modificacao" then
	if p_dados_tela.ies_nf_aguard_nfe <>  mr_dados_tela_ant.ies_nf_aguard_nfe then
		if p_dados_tela.ies_nf_aguard_nfe = "4" or
			p_dados_tela.ies_nf_aguard_nfe = "5" then
			error " tipos 4 ou 5 sao valores gerados automaticamente."

			let p_dados_tela.ies_nf_aguard_nfe =  mr_dados_tela_ant.ies_nf_aguard_nfe
		next field ies_nf_aguard_nfe
	end if
end if
else
	if p_dados_tela.ies_nf_aguard_nfe = "4" or
		p_dados_tela.ies_nf_aguard_nfe = "5" then
		error " tipos 4 ou 5 sao valores gerados automaticamente."

		let p_dados_tela.ies_nf_aguard_nfe = " "
	next field ies_nf_aguard_nfe
end if
end if

#512218
if l_funcao = "inclusao"                 and
	p_dados_tela.ies_especie_nf   = "nfe" and
	p_dados_tela.ies_nf_aguard_nfe= "x"   then
	call sup3762_busca_cnd_pgto_nf()
end if


if p_dados_tela.ies_nf_aguard_nfe = "9" and
	p_tip_embalag <> "s"
	then error " para este codigo, parametro no sup8740 nao esta ativado "
next field ies_nf_aguard_nfe
end if

if p_dados_tela.ies_nf_aguard_nfe = "t" and
	(p_mot_remes_terc is null or
	p_mot_remes_terc = "  ") then
	error " para controle de terceiros , ativar o codigo do motivo de remessa no sup8740 "
next field ies_nf_aguard_nfe
end if

if p_dados_tela.ies_nf_aguard_nfe is null or
	p_dados_tela.ies_nf_aguard_nfe = " " then
	error "informe indicador de relac. entre nf x nfe"
next field ies_nf_aguard_nfe
end if
if l_funcao = "inclusao" then
	if p_dados_tela.ies_nf_aguard_nfe = "3" then
		error " codigo invalido, inclusao so' permite 1, 2, 4, 5, 6, 7 ou 8"
	next field ies_nf_aguard_nfe
end if
end if
if p_dados_tela.ies_nf_aguard_nfe = "4" then
	if p_dados_tela.ies_especie_nf <> "nfr" then
		error "codigo 4 so' e' valido para nfr"
	next field ies_nf_aguard_nfe
end if
end if
if p_dados_tela.ies_nf_aguard_nfe = "5" then
	if p_dados_tela.ies_especie_nf = "nfr" then
		error "codigo 5 nao e' valido para nfr"
	next field ies_nf_aguard_nfe
end if
end if
if p_dados_tela.ies_especie_nf = "nfe" then
	if p_dados_tela.ies_nf_aguard_nfe = "2" then
		error "codigo invalido para nota fiscal de entrada (nfe)"
	next field ies_nf_aguard_nfe
end if
end if

#---------------- material em transito --------------#
if l_funcao = "modificacao" then
	select ies_nf_aguard_nfe
	from nf_sup
	where nf_sup.cod_empresa   = p_cod_empresa
	and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
	and nf_sup.ies_nf_aguard_nfe = "7"
	if sqlca.sqlcode = 0 then
		if m_wms_instal = "s" then
			if p_dados_tela.ies_nf_aguard_nfe <> "1" and
				p_dados_tela.ies_nf_aguard_nfe <> "t" and
				p_dados_tela.ies_nf_aguard_nfe <> "7" and
				p_dados_tela.ies_nf_aguard_nfe <> "6" and
				p_dados_tela.ies_nf_aguard_nfe <> "a" and
				p_dados_tela.ies_nf_aguard_nfe <> "b" then

				if l_permite_alterar_tipo_nota_7 then
					error " somente e' permitido o valor (1 ou t ou 6 ou a ou b) para entrada de material em transito. "
				next field ies_nf_aguard_nfe
			end if
		end if
	else
		if p_dados_tela.ies_nf_aguard_nfe <> "1" and
			p_dados_tela.ies_nf_aguard_nfe <> "t" and
			p_dados_tela.ies_nf_aguard_nfe <> "7" and
			p_dados_tela.ies_nf_aguard_nfe <> "6" then

			if l_permite_alterar_tipo_nota_7 then
				error " somente e' permitido o valor (1 ou t ou 6) para entrada de material em transito. "
			next field ies_nf_aguard_nfe
		end if
	end if
end if
end if
end if

if sup3760_consiste_nf_transito() and l_funcao = "modificacao" and ##os 369029
	m_nf_aguard_nfe_ant = "7" and p_dados_tela.ies_nf_aguard_nfe <> "7" and
	sup3760_verifica_inspecao() = false then
	let p_dados_tela.dat_entrada_nf = today
	display by name p_dados_tela.dat_entrada_nf
end if

if p_dados_tela.ies_nf_aguard_nfe = "8" then
	let l_conta_benef = 0
	whenever error continue
	select count(*)
	into l_conta_benef
	from nf_sup
	where cod_empresa       = p_cod_empresa
	and num_nf            = p_dados_tela.num_nf
	and ser_nf            = p_dados_tela.ser_nf #607290
	and cod_fornecedor    = p_dados_tela.cod_fornecedor
	and (ies_nf_aguard_nfe = "8")
	whenever error stop
	if l_conta_benef > 0 then
		error "ja' existe transferencia de beneficiamento para este numero de nf."
	next field num_nf
end if

if l_funcao <> "inclusao" then
next field cod_operacao
end if
end if

#511148
if sup3762_verifica_nf_devol_consig_vendas(p_dados_tela.num_nf,p_dados_tela.ser_nf, p_dados_tela.ssr_nf) = false then
next field num_nf
end if

#--------------------nfe_vendas-----------------#
let p_nfe_vendas = false
let m_nf_tipo_x  = false ### os 511148

### tvihmo - busca numero da nota da sup_par_ar parametro 'num_nf_eletronica'
if m_num_nf_eletronica is not null and
	m_num_nf_eletronica > 0 then
	if m_num_nf_eletronica > '999999999' then ### nf 15 digitos caso numero da nota for maior que 9 d�gitos assume num_nf tela (variavel utilizada na busca de informa��es no vdp).
		let m_num_nff_aux = p_dados_tela.num_nf
	else
		let m_num_nff_aux = m_num_nf_eletronica
	end if
else
	let m_num_nff_aux = p_dados_tela.num_nf
end if

call log2250_busca_parametro(p_cod_empresa,"ret_merc_nao_entregue")
returning l_ret_merc_nao_entregue, l_status

if not l_status or
	l_ret_merc_nao_entregue is null or
	l_ret_merc_nao_entregue = ' ' then
	let l_ret_merc_nao_entregue = 'n'
end if

if l_funcao = 'inclusao' and
	(p_dados_tela.ies_especie_nf = "nfd" and
	(p_dados_tela.ies_nf_aguard_nfe = "6" or
	p_dados_tela.ies_nf_aguard_nfe = "1" or
	p_dados_tela.ies_nf_aguard_nfe = "7")) and
	l_ret_merc_nao_entregue = 's' then
	if log0040_confirm_default(18,10,"retorno de mercadoria n�o entregue?","n") then
		call sup3760_retorno_merc_nao_entregue()
	end if
end if

if l_funcao = 'inclusao' and
	(p_dados_tela.ies_especie_nf = "nfe" or
	(p_dados_tela.ies_especie_nf = "nfd" and
	(p_dados_tela.ies_nf_aguard_nfe = "6" or
	p_dados_tela.ies_nf_aguard_nfe = "1" or
	p_dados_tela.ies_nf_aguard_nfe = "a" or #791419
	p_dados_tela.ies_nf_aguard_nfe = "7" or
	p_dados_tela.ies_nf_aguard_nfe = "9"))) then
	if p_entrou_pedido = "n" then

		initialize l_cgc_fornec to null
		### os 511148
		call sup3762_busca_num_cgc_cpf_fornecedor(p_dados_tela.cod_fornecedor) returning l_cgc_fornec, l_status

		initialize l_status to null

		let l_achou = false
		initialize l_trans_nf_fiscal to null ### try819

		whenever error continue
		### try819 - verifica se empresa trabalha com cupom fiscal
		### se a s�rie estiver cadastrada na fat_info_fecha_cf deve pesquisa se � nota normal ou cupom fiscal
		if p_dados_tela.ies_especie_nf = "nfd" then
			### try819 - pesquisa o tip_nota na vdp_num_docum (eliminada a verifica��o na fat_info_fecha_cf, lembrando que mesmo assim deve ter registro para que seja apresentada informa��o na gera��o do bloco c do sped fiscal)
			### verifica se possui registro na vdp_num_docum com tip_nota fatprdsv (faturamento normal)
			whenever error continue
			select empresa
			from vdp_num_docum
			where empresa = p_cod_empresa
			and tip_docum = "fatprdsv"
			and serie_docum = p_dados_tela.ser_nf
			and subserie_docum = p_dados_tela.ssr_nf
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				### verifica se possui registro na vdp_num_docum com tip_nota fatecf (cupom fiscal)
				### obs: para trabalhar com devolu��o cupom fiscal dever� ter este casdastro no vdp0741
				###      (orientar cliente caso n�o possua registro para a s�rie de cupom que est� sendo devolvida)
				select empresa
				from vdp_num_docum
				where empresa = p_cod_empresa
				and tip_docum = "fatecf"
				and serie_docum = p_dados_tela.ser_nf
				and subserie_docum = p_dados_tela.ssr_nf
				whenever error stop
				if sqlca.sqlcode = 0 then
					if log0040_confirm(0,0,'� devolu��o de cupom fiscal?') then
						let m_nfd_cupom_fiscal = true
					end if
				end if
			else
				### verifica se possui registro na vdp_num_docum com tip_nota fatecf (cupom fiscal)
				### obs: para trabalhar com devolu��o cupom fiscal dever� ter este casdastro no vdp0741
				###      (orientar cliente caso n�o possua registro para a s�rie de cupom que est� sendo devolvida)
				whenever error continue
				select empresa
				from vdp_num_docum
				where empresa = p_cod_empresa
				and tip_docum = "fatecf"
				and serie_docum = p_dados_tela.ser_nf
				and subserie_docum = p_dados_tela.ssr_nf
				whenever error stop
				if sqlca.sqlcode = 0 then
					let m_nfd_cupom_fiscal = true
				end if
			end if
			whenever error stop
		end if

		if m_nfd_cupom_fiscal = true then
			whenever error continue
			insert into sup_par_ar (empresa,
			aviso_recebto,
			seq_aviso_recebto,
			parametro,
			par_ind_especial,
			parametro_texto,
			parametro_val,
			parametro_dat)
			values(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"devol_cupom_fiscal",
			1,
			null,
			0,
			null)
			whenever error stop
			select fat_nf_mestre.trans_nota_fiscal ### try819
			into l_trans_nf_fiscal               ### try819
			from fat_nf_mestre, clientes
			where fat_nf_mestre.empresa            = p_cod_empresa
			and fat_nf_mestre.nota_fiscal        = m_num_nff_aux ### tvihmo
			and fat_nf_mestre.serie_nota_fiscal  = p_dados_tela.ser_nf
			and fat_nf_mestre.subserie_nf        = p_dados_tela.ssr_nf
			and fat_nf_mestre.tip_nota_fiscal    = "fatecf" ### try819
			and fat_nf_mestre.sit_nota_fiscal    = "n"
			and clientes.cod_cliente             = fat_nf_mestre.cliente
			and clientes.num_cgc_cpf             = l_cgc_fornec
			and clientes.ies_situacao in ("s","a")
		else
			select fat_nf_mestre.trans_nota_fiscal ### try819
			into l_trans_nf_fiscal               ### try819
			from fat_nf_mestre, clientes
			where fat_nf_mestre.empresa            = p_cod_empresa
			and fat_nf_mestre.nota_fiscal        = m_num_nff_aux ### tvihmo
			and fat_nf_mestre.serie_nota_fiscal  = p_dados_tela.ser_nf
			and fat_nf_mestre.subserie_nf        = p_dados_tela.ssr_nf
			and fat_nf_mestre.tip_nota_fiscal    = "fatprdsv"
			and fat_nf_mestre.sit_nota_fiscal    = "n"
			and clientes.cod_cliente             = fat_nf_mestre.cliente
			and clientes.num_cgc_cpf             = l_cgc_fornec
			and clientes.ies_situacao in ("s","a")
		end if
		whenever error stop
		if sqlca.sqlcode = 0 then
			let l_achou = true
		else
			if sqlca.sqlcode <> notfound then
				call log003_err_sql("leitura","fat_nf_mestre")
			end if
		end if

		if l_achou then
			let l_nf_mestre_ser = true
			### os 511148
			if (p_dados_tela.ies_especie_nf    = "nfe" or
				p_dados_tela.ies_especie_nf    = "nfr") and
				p_dados_tela.ies_nf_aguard_nfe = "x"   then

				if m_devol_consig_venda_parcial = "s"  then ##os587025
					let m_nf_tipo_x =  true
				end if
			else
				if fgl_lastkey() <> fgl_keyval("up")   and
					fgl_lastkey() <> fgl_keyval("left") then
					if p_nfe_vendas = false then
						if log0040_confirm(18,10,"existe nf sa�da para esta nfe/nfd. considerar dados?") then
							let g_ind_nfe = 0
							let l_acessou_herc = true
							call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'1') ### os 509930
							returning g_devol_nf_parcial,
							m_alterar,
							m_devol_nf_parcial_venda, mr_tela.*

							call log006_exibe_teclas("01 02 03 07", p_versao)
							current window is w_sup37601

							let p_nfe_vendas = true

							### os 358438
							if p_dados_tela.ies_especie_nf = "nfd" and
								p_dados_tela.ies_nf_aguard_nfe = "9" then
								call sup376_registra_impressao_nfd_tipo_9()
							end if
						end if
					end if
				end if
				call log006_exibe_teclas("01 02 03 07", p_versao)
				current window is w_sup37601
			end if

		else
			if l_achou then
				let l_resposta = false
				let l_nf_mestre = true

				### os 511148
				if (p_dados_tela.ies_especie_nf    = "nfe" or
					p_dados_tela.ies_especie_nf    = "nfr") and
					p_dados_tela.ies_nf_aguard_nfe  = "x"   then

					if m_devol_consig_venda_parcial = "s"  then ##os587025
						let m_nf_tipo_x =  true
					end if
					let l_nf_mestre  = true
				else
					if fgl_lastkey() <> fgl_keyval("up")   and
						fgl_lastkey() <> fgl_keyval("left") then
						if p_nfe_vendas = false then
							if log0040_confirm(18,10,"existe nf sa�da para esta nfe/nfd. considerar dados?") then
								let g_ind_nfe = 0
								let l_acessou_herc = true
								call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'1') ### os 509930
								returning g_devol_nf_parcial,
								m_alterar,
								m_devol_nf_parcial_venda, mr_tela.*

								call log006_exibe_teclas("01 02 03 07", p_versao)
								current window is w_sup37601

								let p_nfe_vendas = true
								let l_nf_mestre  = true
								### os 358438
								if p_dados_tela.ies_especie_nf = "nfd" and
									p_dados_tela.ies_nf_aguard_nfe = "9" then
									call sup376_registra_impressao_nfd_tipo_9()
								end if
							end if
						end if
						if (m_gera_rsv_transf = "s" and
							p_dados_tela.ies_nf_aguard_nfe = "8") then
						else
							### os 511148
							call sup3762_busca_cnd_pgto_nf()
						end if
						if sup376_verifica_cnd_pgto()
							then
						end if
					end if
					call log006_exibe_teclas("01 02 03 07", p_versao)
					current window is w_sup37601
				end if
			else
				whenever error continue
				### try819 - se a s�rie estiver cadastrada na fat_info_fecha_cf deve pesquisa se � nota normal ou cupom fiscal
				if m_nfd_cupom_fiscal = true then
					select fat_nf_mestre_hist.trans_nota_fiscal
					into l_trans_nf_fiscal
					from fat_nf_mestre_hist, clientes
					where fat_nf_mestre_hist.empresa            = p_cod_empresa
					and fat_nf_mestre_hist.nota_fiscal        = m_num_nff_aux ### tvihmo
					and fat_nf_mestre_hist.serie_nota_fiscal  = p_dados_tela.ser_nf
					and fat_nf_mestre_hist.subserie_nf        = p_dados_tela.ssr_nf
					and fat_nf_mestre_hist.tip_nota_fiscal    = "fatecf" ### try819
					and fat_nf_mestre_hist.sit_nota_fiscal    = "n"
					and clientes.cod_cliente                  = fat_nf_mestre_hist.cliente
					and clientes.num_cgc_cpf                  = l_cgc_fornec
					and clientes.ies_situacao in ("s","a")
				else
					select fat_nf_mestre_hist.trans_nota_fiscal
					into l_trans_nf_fiscal
					from fat_nf_mestre_hist, clientes
					where fat_nf_mestre_hist.empresa            = p_cod_empresa
					and fat_nf_mestre_hist.nota_fiscal        = m_num_nff_aux ### tvihmo
					and fat_nf_mestre_hist.serie_nota_fiscal  = p_dados_tela.ser_nf
					and fat_nf_mestre_hist.subserie_nf        = p_dados_tela.ssr_nf
					and fat_nf_mestre_hist.tip_nota_fiscal    = "fatprdsv" ### try819
					and fat_nf_mestre_hist.sit_nota_fiscal    = "n"
					and clientes.cod_cliente                  = fat_nf_mestre_hist.cliente
					and clientes.num_cgc_cpf                  = l_cgc_fornec
					and clientes.ies_situacao in ("s","a")
				end if
				whenever error stop
				if sqlca.sqlcode = 0 then
					let l_achou = true
				else
					if sqlca.sqlcode <> notfound then
						call log003_err_sql("leitura","fat_nf_mestre_hist")
					end if
				end if

				if l_achou then
					let l_nf_mestre_hist = true

					if (p_dados_tela.ies_especie_nf    = "nfe" or
						p_dados_tela.ies_especie_nf    = "nfr") and
						p_dados_tela.ies_nf_aguard_nfe = "x"   then

						if m_devol_consig_venda_parcial = "s"  then ##os587025
							let m_nf_tipo_x =  true
						end if
					else
						if fgl_lastkey() <> fgl_keyval("up")   and
							fgl_lastkey() <> fgl_keyval("left") then
							if log0040_confirm(18,5,"existe hist�rico nf sa�da para esta nfe. considerar dados?") then
								let g_ind_nfe = 0
								let l_acessou_herc = true
								call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'1') ### os 509930
								returning g_devol_nf_parcial,
								m_alterar,
								m_devol_nf_parcial_venda, mr_tela.*

								call log006_exibe_teclas("01 02 03 07", p_versao)
								current window is w_sup37601

								let p_nfe_vendas = true
								let l_nf_mestre_hist = true

								### os 358438
								if p_dados_tela.ies_especie_nf = "nfd" and
									p_dados_tela.ies_nf_aguard_nfe = "9" then
									call sup376_registra_impressao_nfd_tipo_9()
								end if
								### os 511148
								call sup3762_busca_cnd_pgto_nf()

								if sup376_verifica_cnd_pgto()then

								end if
								#if p_ies_cod_operac = "n" or
								#   p_ies_cod_operac = " " or
								#   p_ies_cod_operac is null then
								#   next field dat_emis_nf
								#else
								#   next field cod_operac_estoq
								#end if
							end if
						end if
						call log006_exibe_teclas("01 02 03 07", p_versao)
						current window is w_sup37601
					end if
				end if
			end if
		end if

		#herc
		if find4glfunction("supy146_informa_nf_saida") then
			let g_ind_nfe = 0
			if l_acessou_herc = false then
				call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'0') ### os 509930
				returning g_devol_nf_parcial,
				m_alterar,
				m_devol_nf_parcial_venda, mr_tela.*
				current window is w_sup37601


				if g_devol_nf_parcial = true then
					call sup3762_busca_items_devol_parcial()
					display p_array[1].* to s_sup37601[1].*
					display p_array[2].* to s_sup37601[2].*
					display p_array[3].* to s_sup37601[3].*
					display p_array[4].* to s_sup37601[4].*
				else
					if not sup1561_carrega_dados_faturamento_unico_para_nf(m_cod_emp_orig,
						"venda",
						p_ies_prim_cnd,
						g_devol_nf_parcial,
						mr_tela.*,
						m_devol_nf_parcial_venda,
						g_devol_consig_total,
						' ') then
						let p_houve_erro = true
						exit input
					end if
					display p_array[1].* to s_sup37601[1].*
					display p_array[2].* to s_sup37601[2].*
					display p_array[3].* to s_sup37601[3].*
					display p_array[4].* to s_sup37601[4].*
				end if
			end if
		end if
		#herc
	end if
end if

#--------------------nfr-----------------#
if l_funcao = 'inclusao' and
	(p_dados_tela.ies_especie_nf = "nfr" and
	(p_dados_tela.ies_nf_aguard_nfe = "6")) then
	let p_nfe_vendas = false
	let m_nf_tipo_x  = false  ### os 511148
	if p_entrou_pedido = "n" then
		initialize l_cgc_fornec to null
		### os 511148
		call sup3762_busca_num_cgc_cpf_fornecedor(p_dados_tela.cod_fornecedor) returning l_cgc_fornec, l_status

		initialize l_status to null
		initialize l_trans_nf_fiscal to null ### try819

		whenever error continue
		let l_achou = false
		whenever error continue
		select fat_nf_mestre.trans_nota_fiscal ### try819
		into l_trans_nf_fiscal               ### try819
		from fat_nf_mestre, clientes
		where fat_nf_mestre.empresa            = p_cod_empresa
		and fat_nf_mestre.nota_fiscal        = m_num_nff_aux ### tvihmo
		and fat_nf_mestre.serie_nota_fiscal  = p_dados_tela.ser_nf
		and fat_nf_mestre.subserie_nf        = p_dados_tela.ssr_nf
		and fat_nf_mestre.tip_nota_fiscal    = "fatprdsv"
		and fat_nf_mestre.sit_nota_fiscal    = "n"
		and clientes.cod_cliente             = fat_nf_mestre.cliente
		and clientes.num_cgc_cpf             = l_cgc_fornec
		and clientes.ies_situacao in ("s","a")
		whenever error stop
		if sqlca.sqlcode = 0 then
			let l_achou = true
		else
			if sqlca.sqlcode <> notfound then
				call log003_err_sql("leitura","fat_nf_mestre")
			end if
		end if
		if l_achou then
			if p_nfe_vendas = false then
				if log0040_confirm(18,10,"existe nf sa�da para esta nfr. considerar dados?") then
					let p_nfe_vendas = true
					let l_nf_mestre_ser = true

					#tqbj97
					call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'1')
					returning g_devol_nf_parcial,
					m_alterar,
					m_devol_nf_parcial_venda, mr_tela.*
				end if
			end if
			if p_ies_cod_operac = "n" or
				p_ies_cod_operac = " " or
				p_ies_cod_operac is null then
			next field cod_operacao #os537680
		else
		next field cod_operac_estoq
	end if
else
	whenever error continue
	select fat_nf_mestre_hist.trans_nota_fiscal
	into l_trans_nf_fiscal
	from fat_nf_mestre_hist, clientes
	where fat_nf_mestre_hist.empresa            = p_cod_empresa
	and fat_nf_mestre_hist.nota_fiscal        = m_num_nff_aux ### tvihmo
	and fat_nf_mestre_hist.serie_nota_fiscal  = p_dados_tela.ser_nf
	and fat_nf_mestre_hist.subserie_nf        = p_dados_tela.ssr_nf
	and fat_nf_mestre_hist.tip_nota_fiscal    = "fatprdsv"
	and fat_nf_mestre_hist.sit_nota_fiscal    = "n"
	and clientes.cod_cliente                  = fat_nf_mestre_hist.cliente
	and clientes.num_cgc_cpf                  = l_cgc_fornec
	and clientes.ies_situacao in ("s","a")
	whenever error stop
	if sqlca.sqlcode = 0 then
		let l_achou = true
	else
		if sqlca.sqlcode <> notfound then
			call log003_err_sql("leitura","fat_nf_mestre_hist")
		end if
	end if
	if l_achou then
		if log0040_confirm(18,5,"existe hist�rico nf sa�da para esta nfr. considerar dados?") then
			let p_nfe_vendas = true
			let l_nf_mestre_hist = true

			### os 511148
			call sup3762_busca_cnd_pgto_nf()

			if sup376_verifica_cnd_pgto() then
			end if

			if p_ies_cod_operac = "n" or
				p_ies_cod_operac = " " or
				p_ies_cod_operac is null then
			next field cod_operacao #os537680
		else
		next field cod_operac_estoq
	end if
end if
end if
end if
end if
end if

if l_funcao = "modificacao" then
	if l_permite_alterar_tipo_nota_b then
		if p_ies_aguard_nfe <>  p_dados_tela.ies_nf_aguard_nfe and
			p_ies_aguard_nfe <> "7" then
			let p_dados_tela.ies_nf_aguard_nfe = p_ies_aguard_nfe
			display by name p_dados_tela.ies_nf_aguard_nfe
			call log0030_mensagem("operacao nao permitida. excluir nota fiscal","exclamation")
		end if
	end if
end if
let p_ies_nf_transf = false
let m_transf_ativo_imob = false
if p_ies_obt_inf_com = "s" and
	l_funcao = "inclusao"  then
	if p_par_estoque.ies_modulo_vdp = "s" then
		if p_dados_tela.ies_especie_nf <> "nfd" and
			sup0812_verifica_nota_transferencia(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			p_dados_tela.cod_fiscal_compl) = true then
			if not sup3762_verifica_destinatario_nota() then
				call log0030_mensagem("nota fiscal de saida n�o existe para a empresa origem.","exclamation") ### teltp5
			next field num_nf
		end if
		if g_ies_tip_controle = "j" then ### tsfws2
			error " nf de transf.de imobilizado entre unidades, com origem da empresa ",p_cod_emp_transf,". "
		else
			error " nota fiscal de transferencia entre unidades, com origem da empresa ",p_cod_emp_transf,". "
		end if
		if log004_confirm(14,42) = true then
			if p_ies_obt_inf_com = "s" then
				let p_aviso_rec_compl.cod_empresa_orig = p_cod_emp_transf
			end if
			### parametro lorenzetti os228406
			if m_transf_estoq ="s" then
				error " movimentar estoque ??? "
				if sup0769_confirm(14,42) = false then
					let m_ind_transf_estoq = true
				end if
			end if

			### os 154880 ###
			if g_ies_tip_controle = "j" then
				let m_transf_ativo_imob = true
			end if
			### fim os 154880 ###
			if not sup1561_carrega_dados_faturamento_unico_para_nf(p_cod_emp_transf,
				"transferencia",
				p_ies_prim_cnd,
				g_devol_nf_parcial,
				mr_tela.*,
				m_devol_nf_parcial_venda,
				g_devol_consig_total,
				' ') then
				let int_flag = 1
				exit input
			end if

			let p_ies_nf_transf = true
			let int_flag = false
			let l_cond_pedido = " "
			#eduardo o.s.335542
			if p_entrou_pedido = "s" then
				whenever error continue
				select cnd_pgto
				from cond_pgto_cap
				where cnd_pgto      = p_dados_tela.cnd_pgto_nf
				and ies_pagamento = "3"
				whenever error stop
				if sqlca.sqlcode = 0 then
					let l_cond_pedido = "3"
				else
					let l_cond_pedido = "2"
				end if
			end if

			if p_entrou_pedido = "n" or l_cond_pedido <> "3" then
				### os 511148
				call sup3762_busca_cnd_pgto_nf()
			end if
			#eduardo o.s.335542
			if sup376_verifica_cnd_pgto()
				then
			end if
		next field dat_emis_nf
	else
		let p_ies_nf_transf = false
		if m_ent_manual_transf = "n" then #os372636
			let int_flag = true
			exit input
		end if
		whenever error continue
		insert into sup_par_ar (empresa, aviso_recebto, seq_aviso_recebto,
		parametro, par_ind_especial, parametro_texto,
		parametro_val, parametro_dat)
		values (p_cod_empresa, p_dados_tela.num_aviso_rec, "1",
		"transf_unid_manual", null, p_user, null, today)
		whenever error stop
	end if
end if
end if
end if

let g_ies_transf_benef = false
if sup3762_verifica_operacao_srig() then
	let g_ies_transf_benef = true
	if p_ies_cod_operac = "n" or
		p_ies_cod_operac = " " or
		p_ies_cod_operac is null then
		select cod_operacao
		from estoque_operac_ar
		where estoque_operac_ar.cod_empresa  = p_cod_empresa
		and estoque_operac_ar.cod_operacao = p_dados_tela.cod_operac_estoq
		if sqlca.sqlcode <> 0 then
			error " operacao de estoque ",p_dados_tela.cod_operac_estoq ," nao cadastrada na tabela estoque_operac_ar. "
		next field ies_nf_aguard_nfe
	end if
end if
end if

let g_ies_nf_permuta = false
if l_funcao = "inclusao" and g_nat_oper_permuta is not null and
	p_dados_tela.ies_especie_nf <> "nfd" then
	if sup3762_verifica_nota_permuta() then
		error " nota fiscal de permuta entre empresas, com origem da empresa ",g_cod_emp_permuta,". "
		if log004_confirm(14,42) = true then
			if not sup1561_carrega_dados_faturamento_unico_para_nf(g_cod_emp_permuta,
				"permuta",
				p_ies_prim_cnd,
				g_devol_nf_parcial,
				mr_tela.*,
				m_devol_nf_parcial_venda,
				g_devol_consig_total,
				' ') then
				let p_retorno_3760 = false
				let int_flag = 1
				exit input
			end if

			let g_ies_nf_permuta = true
			let int_flag = false
			### os 511148
			call sup3762_busca_cnd_pgto_nf()

			if sup376_verifica_cnd_pgto() then
			end if
		next field dat_emis_nf
	else
		let g_ies_nf_permuta = false
		let int_flag = true
		exit input
	end if
end if
end if

if m_transf_saida = "s" then
	let m_cod_emp_orig = " "
	if p_nfe_vendas     = false and
		m_nf_tipo_x      = false and ### os 511148
		p_ies_nf_transf  = false and
		g_ies_nf_permuta = false and g_ies_transf_benef = false then
		call sup3762_verifica_dados_empresa_origem()
		returning p_status, m_cod_emp_orig, g_ies_tip_controle
		if p_status = true then
			error " nota fiscal de terceiro, com origem na empresa ",m_cod_emp_orig,". "
			if log004_confirm(14,42) = true then
				let p_nfe_vendas   = true
				case g_ies_tip_controle
				when "2" let p_dados_tela.ies_especie_nf    = "nfr"
				let p_dados_tela.ies_nf_aguard_nfe = "t"
				when "3" let p_dados_tela.ies_especie_nf    = "nfr"
				let p_dados_tela.ies_nf_aguard_nfe = "1"
				when "4" let p_dados_tela.ies_especie_nf    = "nfr"
				let p_dados_tela.ies_nf_aguard_nfe = "1"
			end case
			display by name p_dados_tela.ies_especie_nf,
			p_dados_tela.ies_nf_aguard_nfe
		else
			initialize m_cod_emp_orig, g_ies_tip_controle to null
		end if
	end if
end if
end if

if p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0 then
	error "nr.da nota fiscal invalido. nao pode ser 0"
next field num_nf
end if

### os 511148
let l_devol_consig_total = false
let l_nf_hist            = null
if l_funcao = "inclusao" then   ### os 512218
	if m_devol_consig_venda_parcial = "s"  then
		if (p_dados_tela.ies_especie_nf    = "nfr"  or
			p_dados_tela.ies_especie_nf    = "nfe") and
			p_dados_tela.ies_nf_aguard_nfe = "x"    then
			call sup3762_devol_consig_venda_parcial()
			returning l_devol_consig_total,
			l_nf_hist,
			g_devol_nf_parcial,
			m_alterar

			call sup3762_busca_cnd_pgto_nf()

			if l_devol_consig_total = true then
				let  m_nf_tipo_x  = true
			end if
		next field cod_operac_estoq
	end if
end if
end if
#a24579
if m_wms_instal = 's' then
	if m_tipo_documento = "n" then
		if find4glfunction('wms6612_verifica_tipo_nota') then
			if not wms6612_verifica_tipo_nota(p_dados_tela.ies_nf_aguard_nfe, m_indicador_aduaneiro) then
			next field ies_nf_aguard_nfe
		end if
	end if
end if
end if

let l_status = true
let l_atualiza_array = false

if log_existe_epl('sup3760y_after_field_ies_nf_aguard_nfe') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('ies_aguard_nfe_ant', p_ies_aguard_nfe)
	#epl indicador do tipo de nota antes da modifica��o
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl indicador do tipo de nota
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
	#epl esp�cie da nota fiscal
	#epl tipo: nf_sup.ies_especie_nf

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: nf_sup.num_aviso_rec

	call log_setvar('l_funcao', l_funcao)
	#epl indicador se � inclusao ou modificacao
	#epl tipo: smallint

	call log_setvar("condicao",p_dados_tela.cnd_pgto_nf)
	#epl condi��o de pagamento da nota
	#epl tipo: nf_sup.cnd_pgto_nf

	call log_setvar("embarque",p_dados_tela.cod_mod_embar)
	#epl modo de embarque
	#epl tipo: nf_sup.cod_mod_embar

	call log_setvar('status', l_status)
	#epl status do retorno
	#epl tipo: smallint

	call log_setvar('atualiza_array', l_atualiza_array)
	#epl atualiza o array
	#epl tipo: smallint

	call log_setvar('cod_operacao',p_dados_tela.cod_operacao)
	#epl c�digo da opera��o
	#epl tipo: char(05)

	call log_setvar('cod_fiscal_compl',p_dados_tela.cod_fiscal_compl)
	#epl c�digo fiscal complementar
	#epl tipo: integer

	call log_setvar('abriu_tela',l_abriu_tela)
	#epl abriu tela
	#epl tipo: smallint

	call sup3760y_after_field_ies_nf_aguard_nfe()
	current window is w_sup37601

	let l_status                       = log_getvar('status')
	let l_abriu_tela                   = log_getvar('abriu_tela')
	let l_atualiza_array               = log_getvar('atualiza_array')
	let l_next_field                   = log_getvar('next_field')
	let p_dados_tela.ies_nf_aguard_nfe = log_getvar('ies_nf_aguard_nfe')
	let p_dados_tela.cnd_pgto_nf       = log_getvar("condicao")
	let p_dados_tela.cod_mod_embar     = log_getvar("embarque")

	display by name p_dados_tela.ies_nf_aguard_nfe
	display by name p_dados_tela.cnd_pgto_nf
	display by name p_dados_tela.cod_mod_embar

	if not l_status then
		if l_next_field is not null then
			case l_next_field
			when "exit_input" exit input
			when "ies_especie_nf" next field ies_especie_nf
		end case
	end if
end if

if l_atualiza_array then
	display p_array[1].* to s_sup37601[1].*
	display p_array[2].* to s_sup37601[2].*
	display p_array[3].* to s_sup37601[3].*
	display p_array[4].* to s_sup37601[4].*
end if
end if
if m_integra_mensagem then
	if l_funcao = "modificacao" and p_dados_tela.ies_nf_aguard_nfe <> "7" then
	next field dat_entrada_nf
end if
end if

before field cod_operac_estoq
# ch 739942 - rafael f. b. - 12/01/2010 #
if l_funcao = "modificacao" then
	if l_alt_cod_operacao then
	next field cod_emp_benef
end if
end if

if p_ies_cod_operac is null or
	p_ies_cod_operac = "n" or
	p_ies_cod_operac = " " or
	p_dados_tela.ies_nf_aguard_nfe = "5" then
	if fgl_lastkey() <> fgl_keyval("up") then
	next field cod_operacao
else
next field ies_nf_aguard_nfe
end if
end if
if l_funcao <> "modificacao" and
	(p_dados_tela.cod_operac_estoq is null or
	p_dados_tela.cod_operac_estoq = " ") then
	if(p_dados_tela.ies_especie_nf = "nfd" or        #eduardo o.s.301125
		(p_ies_tip_entrada = "5"             and
		p_dados_tela.ies_especie_nf <> "nfc")) then
		call sup376_busca_operacao_estoque("dev")
	else
		if sup0812_verifica_nota_transferencia(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			p_dados_tela.cod_fiscal_compl) = true then
			call sup376_busca_operacao_estoque("transf")
			if g_ies_transf_benef = false then
			next field cod_operac_estoq
		end if
	else
		##o.s 186311
		if p_dados_tela.ies_nf_aguard_nfe = "p" then
			call sup376_busca_operacao_estoque("permuta")
		else
			call sup376_busca_operacao_estoque("nor")
		end if
	end if
end if

display by name p_dados_tela.cod_operac_estoq
else
	if p_ies_cod_operac is null and fgl_lastkey() = fgl_keyval("up") and
		p_dados_tela.ies_nf_aguard_nfe = "7" then
	next field ies_especie_nf
end if
if sup376_verifica_contagem_itens_ar() then
next field cod_operacao
end if
end if
call sup3760_botao_zoom("on",3,68)

call sup3760_save_cur_field_name('cod_operac_estoq')

after field cod_operac_estoq
call sup3760_botao_zoom("off",3,68)
if p_dados_tela.cod_operac_estoq is null then
	error " informe o codigo de operacao de estoque. "
next field cod_operac_estoq
else
	if sup376_verifica_operac_estoque() = false then
	next field cod_operac_estoq
end if
end if

before field cod_emp_benef
# ch 739942 - rafael f. b. - 12/01/2010 #
if l_funcao = "modificacao" then
	if l_alt_cod_operacao then
	next field cod_operacao
end if
end if

if p_dados_tela.ies_nf_aguard_nfe <> "8" then
	if fgl_lastkey() <> fgl_keyval("up")
		then if p_ies_cod_operac is null or
		p_ies_cod_operac = "n" or
		p_ies_cod_operac = " "
		then next field cod_operacao
	else next field cod_operac_estoq
	end if
else
next field ies_nf_aguard_nfe
end if
display "    " at 8,70
else display "emp:" at 8,70
end if
call sup3760_save_cur_field_name('cod_emp_benef')

after field cod_emp_benef
if p_dados_tela.cod_emp_benef is null then
	error " informe o c�digo da empresa de origem do beneficiamento."
next field cod_emp_benef
else
	if p_cod_empresa = p_dados_tela.cod_emp_benef then
		error " empresa origem do beneficiamento igual `a empresa destino."
	next field cod_emp_benef
end if
if sup376_verifica_emp_benef() = false then
	error " empresa origem do beneficiamento nao cadastrada."
next field cod_emp_benef
else
	### os 511148
	if sup3762_verifica_emp_benef_cnpj_fornec() = false  then ### os 514073
	next field cod_fornecedor
end if

#-- transferencia de notas de beneficiamento --#
let m_nf_tipo_x  = false  ### os 511148
let p_nfe_vendas = false
let p_nfe_import = false
let p_nfm_import = false
if p_dados_tela.ies_nf_aguard_nfe = "8" and
	l_funcao = 'inclusao' then
	if p_entrou_pedido = "n" or
		### os 182871 ###
		m_gera_rsv_transf = "s" then

		initialize l_nf_tp8_assume_dt_emissao to null
		call log2250_busca_parametro(p_cod_empresa,"nf_tipo8_assume_data_emissao")
		returning l_nf_tp8_assume_dt_emissao, p_status
		if l_nf_tp8_assume_dt_emissao is null then
			let l_nf_tp8_assume_dt_emissao = "n"
		end if

		let l_dat_entrada_nf_ant = p_dados_tela.dat_entrada_nf

		let l_achou = false
		initialize l_dat_envio_hist, l_trans_nota_fiscal to null
		whenever error continue
		declare cq_fat_nf_mst_benef cursor for
		select date(fat_nf_mestre.dat_hor_emissao),
		date(fat_nf_mestre.dat_hor_emissao),
		trans_nota_fiscal
		from fat_nf_mestre
		where fat_nf_mestre.empresa            = p_dados_tela.cod_emp_benef
		and fat_nf_mestre.nota_fiscal        = m_num_nff_aux ### tvihmo
		and fat_nf_mestre.serie_nota_fiscal  = p_dados_tela.ser_nf
		and fat_nf_mestre.subserie_nf        = p_dados_tela.ssr_nf
		and fat_nf_mestre.tip_nota_fiscal    = "fatprdsv"
		and fat_nf_mestre.sit_nota_fiscal    = "n"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare cursor","cq_fat_nf_mst_benef")
		end if
		whenever error continue
		open cq_fat_nf_mst_benef
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("open cursor","cq_fat_nf_mst_benef")
		end if
		whenever error continue
		fetch cq_fat_nf_mst_benef into p_dados_tela.dat_emis_nf,
		p_dados_tela.dat_entrada_nf,
		l_trans_nota_fiscal
		whenever error stop
		if sqlca.sqlcode = 0 then
			if l_nf_tp8_assume_dt_emissao <> "s" then
				let p_dados_tela.dat_entrada_nf = l_dat_entrada_nf_ant
			end if
			let p_nfe_vendas = true

			call supr6_busca_cod_fiscal_fat_nf_item_fisc(p_dados_tela.cod_emp_benef,
			l_trans_nota_fiscal,0,
			l_dat_envio_hist,
			false)
			returning l_status, p_cod_fiscal

			let l_achou = true
		else
			if sqlca.sqlcode <> notfound then
				call log003_err_sql("fetch cursor","cq_fat_nf_mst_benef")
			end if
		end if
		whenever error continue
		close cq_fat_nf_mst_benef
		free cq_fat_nf_mst_benef
		whenever error stop

		if l_achou = false then
			whenever error continue
			declare cq_fat_nf_mst_h_benef cursor for
			select date(fat_nf_mestre_hist.dat_hor_emissao),
			date(fat_nf_mestre_hist.dat_hor_emissao),
			trans_nota_fiscal,
			dat_envio_hist
			from fat_nf_mestre_hist
			where fat_nf_mestre_hist.empresa            = p_dados_tela.cod_emp_benef
			and fat_nf_mestre_hist.nota_fiscal        = m_num_nff_aux ### tvihmo
			and fat_nf_mestre_hist.serie_nota_fiscal  = p_dados_tela.ser_nf
			and fat_nf_mestre_hist.subserie_nf        = p_dados_tela.ssr_nf
			and fat_nf_mestre_hist.tip_nota_fiscal    = "fatprdsv"
			and fat_nf_mestre_hist.sit_nota_fiscal    = "n"
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("declare cursor","cq_fat_nf_mst_h_benef")
			end if
			whenever error continue
			open cq_fat_nf_mst_h_benef
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("open cursor","cq_fat_nf_mst_h_benef")
			end if
			whenever error continue
			fetch cq_fat_nf_mst_h_benef into p_dados_tela.dat_emis_nf,
			p_dados_tela.dat_entrada_nf,
			l_trans_nota_fiscal,
			l_dat_envio_hist
			whenever error stop
			if sqlca.sqlcode = 0 then
				if l_nf_tp8_assume_dt_emissao <> "s" then
					let p_dados_tela.dat_entrada_nf = l_dat_entrada_nf_ant
				end if
				let p_nfe_vendas = true

				call supr6_busca_cod_fiscal_fat_nf_item_fisc(p_dados_tela.cod_emp_benef,
				l_trans_nota_fiscal,0,
				l_dat_envio_hist,
				false)
				returning l_status, p_cod_fiscal

				let l_achou = true
			else
				if sqlca.sqlcode <> notfound then
					call log003_err_sql("fetch cursor","cq_fat_nf_mst_h_benef")
				end if
			end if

			if l_achou = false then
				call log0030_mensagem("nota fiscal informada n�o existe na empresa origem do beneficiamento.","exclamation")
			next field num_nf
		end if
	end if
	let p_dados_tela.cod_operacao[1]    = p_cod_fiscal[1]
	let p_dados_tela.cod_operacao[2]    = "."
	let p_dados_tela.cod_operacao[3,5]  = p_cod_fiscal[2,4]
	display by name p_dados_tela.*
end if
end if
end if
end if

before field cod_operacao
call sup3760_botao_zoom("on",3,68)
#801808
if m_wms_instal = 's'  then
	if l_funcao = 'inclusao' and
		(p_dados_tela.ies_especie_nf = "nfe" or
		(p_dados_tela.ies_especie_nf = "nfd" and
		(p_dados_tela.ies_nf_aguard_nfe = "6" or
		p_dados_tela.ies_nf_aguard_nfe = "1" or
		p_dados_tela.ies_nf_aguard_nfe = "a" or
		p_dados_tela.ies_nf_aguard_nfe = "7" or
		p_dados_tela.ies_nf_aguard_nfe = "9"))) then
		if p_entrou_pedido = "n" then

			initialize l_cgc_fornec to null
			call sup3762_busca_num_cgc_cpf_fornecedor(p_dados_tela.cod_fornecedor) returning l_cgc_fornec, l_status

			initialize l_status to null
			initialize l_trans_nf_fiscal to null

			let l_achou = false

			whenever error continue
			### try819 - se a s�rie estiver cadastrada na fat_info_fecha_cf deve pesquisa se � nota normal ou cupom fiscal
			if m_nfd_cupom_fiscal = true then
				select fat_nf_mestre.trans_nota_fiscal ### try819
				into l_trans_nf_fiscal                    ### try819
				from fat_nf_mestre, clientes
				where fat_nf_mestre.empresa            = p_cod_empresa
				and fat_nf_mestre.nota_fiscal        = m_num_nff_aux ### tvihmo
				and fat_nf_mestre.serie_nota_fiscal  = p_dados_tela.ser_nf
				and fat_nf_mestre.subserie_nf        = p_dados_tela.ssr_nf
				and fat_nf_mestre.tip_nota_fiscal    = "fatecf" ### try819
				and fat_nf_mestre.sit_nota_fiscal    = "n"
				and clientes.cod_cliente             = fat_nf_mestre.cliente
				and clientes.num_cgc_cpf             = l_cgc_fornec
				and clientes.ies_situacao in ("s","a")
			else
				select fat_nf_mestre.trans_nota_fiscal ### try819
				into l_trans_nf_fiscal                    ### try819
				from fat_nf_mestre, clientes
				where fat_nf_mestre.empresa            = p_cod_empresa
				and fat_nf_mestre.nota_fiscal        = m_num_nff_aux ### tvihmo
				and fat_nf_mestre.serie_nota_fiscal  = p_dados_tela.ser_nf
				and fat_nf_mestre.subserie_nf        = p_dados_tela.ssr_nf
				and fat_nf_mestre.tip_nota_fiscal    = "fatprdsv" ### try819
				and fat_nf_mestre.sit_nota_fiscal    = "n"
				and clientes.cod_cliente             = fat_nf_mestre.cliente
				and clientes.num_cgc_cpf             = l_cgc_fornec
				and clientes.ies_situacao in ("s","a")
			end if
			whenever error stop
			if sqlca.sqlcode = 0 then
				let l_achou = true
			else
				if sqlca.sqlcode <> notfound then
					call log003_err_sql("leitura","fat_nf_mestre")
				end if
			end if

			if l_achou then
				let l_nf_mestre_ser = true
				if (p_dados_tela.ies_especie_nf    = "nfe" or
					p_dados_tela.ies_especie_nf    = "nfr") and
					p_dados_tela.ies_nf_aguard_nfe = "x"   then

					if m_devol_consig_venda_parcial = "s"  then ##os587025
						let m_nf_tipo_x =  true
					end if
				else
					if fgl_lastkey() <> fgl_keyval("up")   and
						fgl_lastkey() <> fgl_keyval("left") then
						if p_nfe_vendas = false then
							if log0040_confirm(18,10,"existe nf sa�da para esta nfe/nfd. considerar dados?") then
								let g_ind_nfe = 0
								let l_acessou_herc = true
								call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'1') ### os 509930
								returning g_devol_nf_parcial,
								m_alterar,
								m_devol_nf_parcial_venda, mr_tela.*

								call log006_exibe_teclas("01 02 03 07", p_versao)
								current window is w_sup37601

								let p_nfe_vendas = true

								### os 358438
								if p_dados_tela.ies_especie_nf = "nfd" and
									p_dados_tela.ies_nf_aguard_nfe = "9" then
									call sup376_registra_impressao_nfd_tipo_9()
								end if
							end if
						end if
					end if
					call log006_exibe_teclas("01 02 03 07", p_versao)
					current window is w_sup37601
				end if

			else
				if l_achou then
					let l_resposta = false
					let l_nf_mestre = true

					### os 511148
					if (p_dados_tela.ies_especie_nf    = "nfe" or
						p_dados_tela.ies_especie_nf    = "nfr") and
						p_dados_tela.ies_nf_aguard_nfe  = "x"   then

						if m_devol_consig_venda_parcial = "s"  then ##os587025
							let m_nf_tipo_x =  true
						end if
						let l_nf_mestre  = true
					else
						if fgl_lastkey() <> fgl_keyval("up")   and
							fgl_lastkey() <> fgl_keyval("left") then
							if p_nfe_vendas = false then
								if log0040_confirm(18,10,"existe nf sa�da para esta nfe/nfd. considerar dados?") then
									let g_ind_nfe = 0
									let l_acessou_herc = true
									call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'1') ### os 509930
									returning g_devol_nf_parcial,
									m_alterar,
									m_devol_nf_parcial_venda, mr_tela.*

									call log006_exibe_teclas("01 02 03 07", p_versao)
									current window is w_sup37601

									let p_nfe_vendas = true
									let l_nf_mestre  = true
									### os 358438
									if p_dados_tela.ies_especie_nf = "nfd" and
										p_dados_tela.ies_nf_aguard_nfe = "9" then
										call sup376_registra_impressao_nfd_tipo_9()
									end if
								end if
							end if
							if (m_gera_rsv_transf = "s" and
								p_dados_tela.ies_nf_aguard_nfe = "8") then
							else
								### os 511148
								call sup3762_busca_cnd_pgto_nf()
							end if
							if sup376_verifica_cnd_pgto()
								then
							end if
						end if
						call log006_exibe_teclas("01 02 03 07", p_versao)
						current window is w_sup37601
					end if
				else
					whenever error continue
					### try819 - se a s�rie estiver cadastrada na fat_info_fecha_cf deve pesquisa se � nota normal ou cupom fiscal
					if m_nfd_cupom_fiscal = true then
						select fat_nf_mestre_hist.trans_nota_fiscal
						into l_trans_nf_fiscal
						from fat_nf_mestre_hist, clientes
						where fat_nf_mestre_hist.empresa            = p_cod_empresa
						and fat_nf_mestre_hist.nota_fiscal        = m_num_nff_aux ### tvihmo
						and fat_nf_mestre_hist.serie_nota_fiscal  = p_dados_tela.ser_nf
						and fat_nf_mestre_hist.subserie_nf        = p_dados_tela.ssr_nf
						and fat_nf_mestre_hist.tip_nota_fiscal    = "fatecf" ### try819
						and fat_nf_mestre_hist.sit_nota_fiscal    = "n"
						and clientes.cod_cliente                  = fat_nf_mestre_hist.cliente
						and clientes.num_cgc_cpf                  = l_cgc_fornec
						and clientes.ies_situacao in ("s","a")
					else
						select fat_nf_mestre_hist.trans_nota_fiscal
						into l_trans_nf_fiscal
						from fat_nf_mestre_hist, clientes
						where fat_nf_mestre_hist.empresa            = p_cod_empresa
						and fat_nf_mestre_hist.nota_fiscal        = m_num_nff_aux ### tvihmo
						and fat_nf_mestre_hist.serie_nota_fiscal  = p_dados_tela.ser_nf
						and fat_nf_mestre_hist.subserie_nf        = p_dados_tela.ssr_nf
						and fat_nf_mestre_hist.tip_nota_fiscal    = "fatprdsv" ### try819
						and fat_nf_mestre_hist.sit_nota_fiscal    = "n"
						and clientes.cod_cliente                  = fat_nf_mestre_hist.cliente
						and clientes.num_cgc_cpf                  = l_cgc_fornec
						and clientes.ies_situacao in ("s","a")
					end if
					whenever error stop
					if sqlca.sqlcode = 0 then
						let l_achou = true
					else
						if sqlca.sqlcode <> notfound then
							call log003_err_sql("leitura","fat_nf_mestre_hist")
						end if
					end if

					if l_achou then
						let l_nf_mestre_hist = true

						if (p_dados_tela.ies_especie_nf    = "nfe" or
							p_dados_tela.ies_especie_nf    = "nfr") and
							p_dados_tela.ies_nf_aguard_nfe = "x"   then

							if m_devol_consig_venda_parcial = "s"  then ##os587025
								let m_nf_tipo_x =  true
							end if
						else
							if fgl_lastkey() <> fgl_keyval("up")   and
								fgl_lastkey() <> fgl_keyval("left") then
								if log0040_confirm(18,5,"existe hist�rico nf sa�da para esta nfe. considerar dados?") then
									let g_ind_nfe = 0
									let l_acessou_herc = true
									call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'1') ### os 509930
									returning g_devol_nf_parcial,
									m_alterar,
									m_devol_nf_parcial_venda, mr_tela.*

									call log006_exibe_teclas("01 02 03 07", p_versao)
									current window is w_sup37601

									let p_nfe_vendas = true
									let l_nf_mestre_hist = true

									### os 358438
									if p_dados_tela.ies_especie_nf = "nfd" and
										p_dados_tela.ies_nf_aguard_nfe = "9" then
										call sup376_registra_impressao_nfd_tipo_9()
									end if
									### os 511148
									call sup3762_busca_cnd_pgto_nf()

									if sup376_verifica_cnd_pgto()then

									end if
								end if
							end if
							call log006_exibe_teclas("01 02 03 07", p_versao)
							current window is w_sup37601
						end if
					end if
				end if
			end if
			if find4glfunction("supy146_informa_nf_saida") then
				let g_ind_nfe = 0
				if l_acessou_herc = false then
					call sup3762_devolucao_cliente_parcial(m_devol_cliente_parcial,'0') ### os 509930
					returning g_devol_nf_parcial,
					m_alterar,
					m_devol_nf_parcial_venda, mr_tela.*
					current window is w_sup37601

					if g_devol_nf_parcial = true then
						call sup3762_busca_items_devol_parcial()
						display p_array[1].* to s_sup37601[1].*
						display p_array[2].* to s_sup37601[2].*
						display p_array[3].* to s_sup37601[3].*
						display p_array[4].* to s_sup37601[4].*
					else
						if not sup1561_carrega_dados_faturamento_unico_para_nf(m_cod_emp_orig,
							"venda",
							p_ies_prim_cnd,
							g_devol_nf_parcial,
							mr_tela.*,
							m_devol_nf_parcial_venda,
							g_devol_consig_total,
							' ') then
							let p_houve_erro = true
							exit input
						end if
						display p_array[1].* to s_sup37601[1].*
						display p_array[2].* to s_sup37601[2].*
						display p_array[3].* to s_sup37601[3].*
						display p_array[4].* to s_sup37601[4].*
					end if
				end if
			end if
		end if
	end if
end if
call sup3760_save_cur_field_name('cod_operacao')

after field cod_operacao
call sup3760_botao_zoom("off",3,68)
if l_funcao = "modificacao" then
	if p_dados_tela.cod_operacao <> m_cod_operacao_ant then
		if (sup3760_verifica_cfop_avf_insp_ar(p_dados_tela.cod_operacao) = true and
			sup3760_verifica_cfop_avf_insp_ar(m_cod_operacao_ant) = false) or
			(sup3760_verifica_cfop_avf_insp_ar(p_dados_tela.cod_operacao) = false and
			sup3760_verifica_cfop_avf_insp_ar(m_cod_operacao_ant) = true) then
			call log0030_mensagem("fun��o n�o permitida. a troca para este cfop afeta a inspe��o (avf/sup).","exclamation")
			let p_dados_tela.cod_operacao = m_cod_operacao_ant
			display by name p_dados_tela.cod_operacao
		next field cod_operacao
	end if
end if

# ch 739942 - rafael f. b. - 12/01/2010 #
if l_alt_cod_operacao then
	let int_flag = 0
	exit input
end if
end if

if sup3760_ver_nota_duplicada() then
next field cod_fornecedor
end if

if log_existe_epl('sup3760y_after_field_cod_operacao') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('cod_operacao', p_dados_tela.cod_operacao)
	#epl codigo do cfop
	#epl tipo: nf_sup.cod_operacao

	call log_setvar('cod_operacao_ant', m_cod_operacao_ant)
	#epl codigo do cfop original
	#epl tipo: nf_sup.cod_operacao

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('num_nf', p_dados_tela.num_nf)
	#epl numero da nota fiscal
	#epl tipo: nf_sup.num_nf

	call log_setvar('ser_nf', p_dados_tela.ser_nf)
	#epl serie da nota fiscal
	#epl tipo: nf_sup.ser_nf

	call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
	#epl subserie da nota fiscal
	#epl tipo: nf_sup.ssr_nf

	call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
	#epl esp�cie da nota fiscal
	#epl tipo: nf_sup.ies_especie_nf

	call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
	#epl codigo do fornecedor
	#epl tipo: nf_sup.cod_fornecedor

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl tipo da nota fiscal
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('cod_operac_estoq', p_dados_tela.cod_operac_estoq)
	#epl operacao de estoque
	#epl tipo: estoque_operac.cod_operacao

	call log_setvar('funcao', l_funcao)
	#epl opera��o que est� sendo executada (inclus�o, modifica��o)
	#epl tipo: char(20)

	let l_next_field = null
	call log_setvar('next_field', l_next_field)
	#epl campo para dar next field
	#epl tipo: char(20)

	if not sup3760y_after_field_cod_operacao() then
		let l_next_field = log_getvar('next_field')

		if l_next_field is not null then
			case l_next_field
			when "cod_operacao" next field cod_operacao
			when "cod_fornecedor" next field cod_fornecedor
		end case
	end if
end if
end if

if p_dados_tela.dat_entrada_nf <= m_dat_fim_valid then
	if m_cfop_nfr = "s" and p_dados_tela.ies_especie_nf = "nfr" and
		(p_dados_tela.cod_operacao[3,4] <> "99" and
		p_dados_tela.cod_operacao[3,4] <> "92" and
		p_dados_tela.cod_operacao[3,4] <> "93" and
		p_dados_tela.cod_operacao[3,4] <> "94" and
		p_dados_tela.cod_operacao[3,4] <> "21" and
		p_dados_tela.cod_operacao[3,4] <> "22") then
		error "cfop invalido para notas de simples remessa."
	next field cod_operacao
end if
else
	if m_cfop_nfr = "s" and p_dados_tela.ies_especie_nf = "nfr" then
		initialize la_array_cfop to null
		let l_ind_cfop  = 1
		let l_diferente = false
		let l_achou     = false

		declare cq_cfop cursor for
		select par_txt[1,5]
		from par_sup_pad
		where cod_empresa = p_cod_empresa
		and cod_parametro[1,8] = "cfopnfr_"

		foreach cq_cfop into la_array_cfop[l_ind_cfop].cod_fiscal
		if p_dados_tela.cod_operacao <> la_array_cfop[l_ind_cfop].cod_fiscal then
			let l_diferente = true
		else
			let l_achou = true
			exit foreach
		end if
		let l_ind_cfop = l_ind_cfop + 1
	end foreach

	if l_diferente = true  and l_achou = false then
		error "cfop invalido para notas de simples remessa."
	next field cod_operacao
end if
end if
end if

if p_dados_tela.ies_especie_nf = "nfr" and
	p_dados_tela.ies_nf_aguard_nfe = "a" then
	if not sup3760_verifica_necessita_pc(p_dados_tela.cod_fornecedor,
		p_dados_tela.cod_operacao,
		"a") then
		call log0030_mensagem("fornecedor n�o permite entrada sem pedido de compra","info")
	next field cod_fornecedor
end if
end if
if p_dados_tela.ies_especie_nf = "nfr" and
	p_dados_tela.ies_nf_aguard_nfe = "b" then
	if not sup3760_verifica_necessita_pc(p_dados_tela.cod_fornecedor,
		p_dados_tela.cod_operacao,
		"b") then
		call log0030_mensagem("fornecedor n�o permite entrada sem pedido de compra","info")
	next field cod_fornecedor
end if
end if
if p_dados_tela.ies_especie_nf    = "nfs"
	or p_dados_tela.ies_especie_nf = "rec"
	or p_dados_tela.ies_especie_nf = "doc" then
	if m_cfop_nfs = "s" and
		(p_dados_tela.cod_operacao is null or
		p_dados_tela.cod_operacao = " " ) then
		error "informe cfop para nfs."
	next field cod_operacao
end if
if m_cfop_nfs = "n" and
	p_dados_tela.cod_operacao is not null and
	p_dados_tela.cod_operacao[1] <>  " " then
	let p_dados_tela.cod_operacao = " "
	display by name p_dados_tela.cod_operacao
	error "cfop para nfs deve ser nulo."
next field cod_operacao
end if
end if

### consistencia esta apos o cfop compl.
{if p_dados_tela.ies_nf_aguard_nfe = "d" then
if m_ies_obj_entrada = "99" and
	p_dados_tela.ies_especie_nf    = "nfr" then
else
	error "tipo d deve ser usado para notas de especie nfr e grupo despesa '99'."
next field ies_especie_nf
end if
end if}

if p_dados_tela.cod_operacao[1] is null or
	p_dados_tela.cod_operacao[1] = " " then
	let p_dados_tela.cod_operacao = "    "
	if p_dados_tela.ies_especie_nf <> "nfs"
		and p_dados_tela.ies_especie_nf <> "rec"
		and p_dados_tela.ies_especie_nf <> "doc" then
		error "informe codigo de operacao "
	next field cod_operacao
end if
else
	if p_dados_tela.cod_operacao[1] not matches "[567]" then
		error "codigo de operacao invalido"
	next field cod_operacao
end if
if p_dados_tela.cod_operacao[2] <> "." then
	error "codigo de operacao invalido"
next field cod_operacao
end if
if p_dados_tela.cod_operacao[3] not matches "[1234567890]" then
	error "codigo de operacao invalido"
next field cod_operacao
end if
if p_dados_tela.cod_operacao[4] not matches "[1234567890]" then
	error "codigo de operacao invalido"
next field cod_operacao
end if

if m_dat_fim_valid is not null and m_dat_fim_valid >= p_dados_tela.dat_entrada_nf
	then
	let p_dados_tela.cod_operacao[5] = " "
	display by name p_dados_tela.cod_operacao
else
	if p_dados_tela.cod_operacao[5] not matches "[0-9]"
		then
		error "codigo de operacao invalido"
	next field cod_operacao
end if
end if
if sup376_verifica_cod_operacao() = false then
	error "codigo de operacao nao cadastrado"
next field cod_operacao
end if

let p_nfe_import = false
let p_nfm_import = false
if (p_par_sup_compl.ies_mod_importacao = "l" or
	p_par_sup_compl.ies_mod_importacao = "s") and
	l_funcao = "inclusao" then
	let m_num_processo = p_dados_tela.num_nf
	let m_nfr_import   = false
	if p_dados_tela.cod_operacao[1] = "7" then
		if p_cod_pais_emp <> p_fornecedor.cod_pais and
			(p_dados_tela.ies_especie_nf = "nfe" or
			p_dados_tela.ies_especie_nf = "nfp" ) then
			#----------------nfe/nfp_importacao--------------#
			if not sup3760_processo_importacao("nfe/nfp") then
			next field num_nf
		end if
	else
		if p_cod_pais_emp <> p_fornecedor.cod_pais and
			p_dados_tela.ies_especie_nf = "nfm" then
			#----------------nfm_importacao--------------#
			if not sup3760_processo_importacao("nfm") then
			next field num_nf
		end if
	end if
end if

if log_existe_epl('sup3760y_after_process_verifica_processo_importacao') then
	call log_setvar('cod_empresa',p_cod_empresa)
	call log_setvar('num_nf',p_dados_tela.num_nf)
	call log_setvar('cod_fornecedor',p_dados_tela.cod_fornecedor)
	call log_setvar('ies_especie_nf',p_dados_tela.ies_especie_nf)
	call log_setvar('ies_utiliz_provisao',m_ies_utiliz_provisao)
	call log_setvar('inicio_provisao',m_inicio_provisao)
	call log_setvar('entrou_pedido',p_entrou_pedido)
	call log_setvar('nfe_import',p_nfe_import)

	call sup3760y_after_process_verifica_processo_importacao()

	let p_nfe_import = log_getvar('nfe_import')
end if

else
	if sup3760_nfr_consignatario("inclusao") then
		#----------------nfr_importacao--------------#
		if not sup3760_processo_importacao("nfr") then
		next field num_nf
	end if
end if
end if
end if
end if

### tsrei1
if m_emissao_nf_tipo_7 = 's' and
	l_funcao = 'inclusao' and
	p_dados_tela.ies_nf_aguard_nfe = '7' then
	if p_dados_tela.cod_operacao[1] = "7" and
		p_cod_pais_emp <> p_fornecedor.cod_pais then
		let l_nf_transito_gera_nfe = 's'
	else
		let l_msg = "nota em tr�nsito - ser� enviada � sefaz?"
		if log0040_confirm_default(21,23,l_msg,"s") then
			let l_nf_transito_gera_nfe = 's'
		else
			let l_nf_transito_gera_nfe = 'n'
		end if
	end if
	call supm72_sup_par_ar_set_null()
	call supm72_sup_par_ar_leitura(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	0,
	"nf_transito_gera_nfe",
	true,
	true) returning l_achou_tip
	if l_achou_tip then
		call supm72_sup_par_ar_set_par_ind_especial(l_nf_transito_gera_nfe)
		call supm72_sup_par_ar_set_parametro_dat(today)

		if not supt72_sup_par_ar_modifica(true,true) then
			return false
		end if

	else
		call supm72_sup_par_ar_set_null()
		call supm72_sup_par_ar_set_empresa(p_cod_empresa)
		call supm72_sup_par_ar_set_aviso_recebto(p_dados_tela.num_aviso_rec)
		call supm72_sup_par_ar_set_seq_aviso_recebto(0)
		call supm72_sup_par_ar_set_parametro("nf_transito_gera_nfe")
		call supm72_sup_par_ar_set_par_ind_especial(l_nf_transito_gera_nfe)
		call supm72_sup_par_ar_set_parametro_dat(today)

		if not supt72_sup_par_ar_inclui(true,true) then
			return false
		end if
	end if
end if

if p_dados_tela.cod_operacao[5] <> " " then
	if m_cfop_compl_dic_se = 'n' then  # os 409509 niara #
		let p_dados_tela.cod_fiscal_compl = 0
	end if
	initialize l_status, p_ies_tip_entrada, m_ies_obj_entrada to null
	call sup0686_retorna_tip_obj_entrada(p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl)
returning l_status,
	p_ies_tip_entrada,
	m_ies_obj_entrada
	display by name p_dados_tela.cod_fiscal_compl
end if


if m_consistir_oc_estrutura = "s" then
	initialize l_ies_tip_entrada to null
	call sup0686_retorna_tipo_entrada(p_dados_tela.cod_operacao, 0)
returning p_status, l_ies_tip_entrada

	if l_ies_tip_entrada = "4" then
		for l_ind = 1 to arraylength(p_array_compl)
			if  p_array_compl[l_ind].num_oc is not null
				and p_array_compl[l_ind].num_oc <> 0 then
				let l_possui_compon = 0
				whenever error continue
				select count(*)
				into l_possui_compon
				from estrut_ordem_sup
				where cod_empresa   = p_cod_empresa
				and num_oc        = p_array_compl[l_ind].num_oc
				whenever error stop

				if sqlca.sqlcode <> 0
					or l_possui_compon is null then
					let l_possui_compon = 0
				end if

				if l_possui_compon = 0 then
					let l_msg = "ordem de compra ", p_array_compl[l_ind].num_oc using "<<<<<<<<&", " n�o possui componentes cadastrados."
					call log0030_mensagem(l_msg,"info")
				next field cod_fornecedor
			end if
		else
			exit for
		end if
	end for
end if
end if
#tupy
if m_altera_cndpgto_mod_nf_transito = 'n' and
	p_dados_tela.ies_especie_nf = 'nfp' then
	if p_dados_tela.cod_operacao[1] = "7" then
		if p_cod_pais_emp <> p_fornecedor.cod_pais and
			p_dados_tela.ies_especie_nf = "nfp"  then
			if p_processo_imp.num_processo is not null and
				p_processo_imp.num_processo <> ' ' then
				call sup3760_busca_mod_emb_oc()
				returning p_dados_tela.cod_mod_embar
				display by name p_dados_tela.cod_mod_embar
				if sup376_verifica_mod_embar() then
					call log0030_mensagem("modo de embarque da oc vinculada ao processo n�o cadastrado.","info")
				next field ies_especie_nf
			end if
		end if
	end if
end if
end if

if log_existe_epl("supy163_verifica_cliente") then
	initialize l_ies_tip_entrada to null

	call sup0686_retorna_tipo_entrada(p_dados_tela.cod_operacao, 0)
returning p_status, l_ies_tip_entrada

	if l_ies_tip_entrada = "4" then
		#maria carolina - sdjmk0
		if log_existe_epl("sup3760y_after_input_cod_operacao") then
			whenever error continue
			select 1
			from fornecedor, empresa
			where fornecedor.cod_fornecedor = p_dados_tela.cod_fornecedor
			and empresa.num_cgc           = fornecedor.num_cgc_cpf
			and (empresa.cod_empresa not in(select cod_empresa from empresa_transf)
			and empresa.cod_empresa not in(select cod_empresa_transf from empresa_transf))
			whenever error stop

			if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
				if sup3760_valida_sup8028() then
					initialize p_pedidos_p1, p_pedidos_p2, p_pedidos_p3, p_pedidos_p4, p_pedidos_p5, p_pedidos_p6, p_ordens_p1, p_ordens_p2,
					p_ordens_p3, p_ordens_p4, p_ordens_p5, p_ordens_p6, p_ordens_p7, p_ordens_p8, p_prog_ordem1, p_prog_ordem2, p_prog_ordem3, p_prog_ordem4, p_qtd_entreg1,
					p_qtd_entreg2, p_qtd_entreg3, p_qtd_entreg4, p_qtd_entreg5,
					p_qtd_entreg6, p_qtd_entreg7, p_qtd_entreg8, p_qtd_entreg9, p_qtd_entreg10, p_qtd_entreg11, p_qtd_entreg12, p_pedidos, p_ordens, p_prog_ordem, p_qtd_entreg,
					p_array_pedidos,p_array_compl to null

					initialize p_pedidos_p7   to null
					initialize p_pedidos_p8   to null
					initialize p_pedidos_p9   to null
					initialize p_pedidos_p10  to null
					initialize p_pedidos_p11  to null
					initialize p_pedidos_p12  to null

					initialize p_ordens_p9    to null
					initialize p_ordens_p10   to null
					initialize p_ordens_p11   to null
					initialize p_ordens_p12   to null
					initialize p_ordens_p13   to null
					initialize p_ordens_p14   to null
					initialize p_ordens_p15   to null
					initialize p_ordens_p16   to null

					initialize p_prog_ordem5 to null
					initialize p_prog_ordem6 to null
					initialize p_prog_ordem7 to null
					initialize p_prog_ordem8 to null

					initialize p_qtd_entreg13 to null
					initialize p_qtd_entreg14 to null
					initialize p_qtd_entreg15 to null
					initialize p_qtd_entreg16 to null
					initialize p_qtd_entreg17 to null
					initialize p_qtd_entreg18 to null
					initialize p_qtd_entreg19 to null
					initialize p_qtd_entreg20 to null
					initialize p_qtd_entreg21 to null
					initialize p_qtd_entreg22 to null
					initialize p_qtd_entreg23 to null
					initialize p_qtd_entreg24 to null

					call log_setvar("num_nf", p_dados_tela.num_nf)
					call log_setvar("ser_nf", p_dados_tela.ser_nf)
					call log_setvar("ssr_nf", p_dados_tela.ssr_nf)
					call log_setvar("ies_especie_nf", p_dados_tela.ies_especie_nf)
					call log_setvar("cod_fornecedor", p_dados_tela.cod_fornecedor)

					#verificar se a nota foi cadastrada no sup8028 e carregar as notas no sup3760
					if not sup3760y_after_input_cod_operacao() then
						let int_flag = true
						exit input
					end if

					let p_pedidos_p1  = log_getvar("pedidos_p1")
					let p_pedidos_p2  = log_getvar("pedidos_p2")
					let p_pedidos_p3  = log_getvar("pedidos_p3")
					let p_pedidos_p4  = log_getvar("pedidos_p4")
					let p_pedidos_p5  = log_getvar("pedidos_p5")
					let p_pedidos_p6  = log_getvar("pedidos_p6")

					let p_pedidos_p7   = log_getvar("pedidos_p7")
					let p_pedidos_p8   = log_getvar("pedidos_p8")
					let p_pedidos_p9   = log_getvar("pedidos_p9")
					let p_pedidos_p10  = log_getvar("pedidos_p10")
					let p_pedidos_p11  = log_getvar("pedidos_p11")
					let p_pedidos_p12  = log_getvar("pedidos_p12")

					let p_ordens_p1   = log_getvar("ordens_p1")
					let p_ordens_p2   = log_getvar("ordens_p2")
					let p_ordens_p3   = log_getvar("ordens_p3")
					let p_ordens_p4   = log_getvar("ordens_p4")
					let p_ordens_p5   = log_getvar("ordens_p5")
					let p_ordens_p6   = log_getvar("ordens_p6")
					let p_ordens_p7   = log_getvar("ordens_p7")
					let p_ordens_p8   = log_getvar("ordens_p8")

					let p_ordens_p9    = log_getvar("ordens_p9")
					let p_ordens_p10   = log_getvar("ordens_p10")
					let p_ordens_p11   = log_getvar("ordens_p11")
					let p_ordens_p12   = log_getvar("ordens_p12")
					let p_ordens_p13   = log_getvar("ordens_p13")
					let p_ordens_p14   = log_getvar("ordens_p14")
					let p_ordens_p15   = log_getvar("ordens_p15")
					let p_ordens_p16   = log_getvar("ordens_p16")

					let p_prog_ordem1 = log_getvar("prog_ordem1")
					let p_prog_ordem2 = log_getvar("prog_ordem2")
					let p_prog_ordem3 = log_getvar("prog_ordem3")
					let p_prog_ordem4 = log_getvar("prog_ordem4")

					let p_prog_ordem5 = log_getvar("prog_ordem5")
					let p_prog_ordem6 = log_getvar("prog_ordem6")
					let p_prog_ordem7 = log_getvar("prog_ordem7")
					let p_prog_ordem8 = log_getvar("prog_ordem8")

					let p_qtd_entreg1 = log_getvar("qtd_entreg1")
					let p_qtd_entreg2 = log_getvar("qtd_entreg2")
					let p_qtd_entreg3 = log_getvar("qtd_entreg3")
					let p_qtd_entreg4 = log_getvar("qtd_entreg4")
					let p_qtd_entreg5 = log_getvar("qtd_entreg5")
					let p_qtd_entreg6 = log_getvar("qtd_entreg6")
					let p_qtd_entreg7 = log_getvar("qtd_entreg7")
					let p_qtd_entreg8 = log_getvar("qtd_entreg8")
					let p_qtd_entreg9 = log_getvar("qtd_entreg9")
					let p_qtd_entreg10 = log_getvar("qtd_entreg10")
					let p_qtd_entreg11 = log_getvar("qtd_entreg11")
					let p_qtd_entreg12 = log_getvar("qtd_entreg12")

					let p_qtd_entreg13 = log_getvar("qtd_entreg13")
					let p_qtd_entreg14 = log_getvar("qtd_entreg14")
					let p_qtd_entreg15 = log_getvar("qtd_entreg15")
					let p_qtd_entreg16 = log_getvar("qtd_entreg16")
					let p_qtd_entreg17 = log_getvar("qtd_entreg17")
					let p_qtd_entreg18 = log_getvar("qtd_entreg18")
					let p_qtd_entreg19 = log_getvar("qtd_entreg19")
					let p_qtd_entreg20 = log_getvar("qtd_entreg20")
					let p_qtd_entreg21 = log_getvar("qtd_entreg21")
					let p_qtd_entreg22 = log_getvar("qtd_entreg22")
					let p_qtd_entreg23 = log_getvar("qtd_entreg23")
					let p_qtd_entreg24 = log_getvar("qtd_entreg24")

					let p_pedidos[1,500]        = p_pedidos_p1
					let p_pedidos[501,1000]     = p_pedidos_p2
					let p_pedidos[1001,1200]    = p_pedidos_p3

					#--# tdjy25 #--#
					let p_pedidos[1201,1700]    = p_pedidos_p4
					let p_pedidos[1701,2200]    = p_pedidos_p5
					let p_pedidos[2201,2400]    = p_pedidos_p6

					let p_pedidos[2401,2900]    = p_pedidos_p7
					let p_pedidos[2901,3400]    = p_pedidos_p8
					let p_pedidos[3401,3600]    = p_pedidos_p9
					let p_pedidos[3601,4100]    = p_pedidos_p10
					let p_pedidos[4101,4600]    = p_pedidos_p11
					let p_pedidos[4601,4800]    = p_pedidos_p12
					#--# tdjy25 #--#

					let p_ordens[1,500]         = p_ordens_p1
					let p_ordens[501,1000]      = p_ordens_p2
					let p_ordens[1001,1500]     = p_ordens_p3
					let p_ordens[1501,1800]     = p_ordens_p4

					#--# tdjy25 #--#
					let p_ordens[1801,2300]     = p_ordens_p5
					let p_ordens[2301,2800]     = p_ordens_p6
					let p_ordens[2801,3300]     = p_ordens_p7
					let p_ordens[3301,3600]     = p_ordens_p8

					let p_ordens[3601,4100]     = p_ordens_p9
					let p_ordens[4101,4600]     = p_ordens_p10
					let p_ordens[4601,5100]     = p_ordens_p11
					let p_ordens[5101,5400]     = p_ordens_p12
					let p_ordens[5401,5900]     = p_ordens_p13
					let p_ordens[5901,6400]     = p_ordens_p14
					let p_ordens[6401,6900]     = p_ordens_p15
					let p_ordens[6901,7200]     = p_ordens_p16
					#--# tdjy25 #--#

					let p_prog_ordem[1,300]     = p_prog_ordem1
					let p_prog_ordem[301,600]   = p_prog_ordem2

					#--# tdjy25 #--#
					let p_prog_ordem[601,900]   = p_prog_ordem3
					let p_prog_ordem[901,1200]  = p_prog_ordem4

					let p_prog_ordem[1201,1500] = p_prog_ordem5
					let p_prog_ordem[1501,1800] = p_prog_ordem6
					let p_prog_ordem[1801,2100] = p_prog_ordem7
					let p_prog_ordem[2101,2400] = p_prog_ordem8
					#--# tdjy25 #--#

					let p_qtd_entreg[1,500]     = p_qtd_entreg1
					let p_qtd_entreg[501,1000]  = p_qtd_entreg2
					let p_qtd_entreg[1001,1500] = p_qtd_entreg3
					let p_qtd_entreg[1501,2000] = p_qtd_entreg4
					let p_qtd_entreg[2001,2500] = p_qtd_entreg5
					let p_qtd_entreg[2501,2600] = p_qtd_entreg6

					#--# tdjy25 #--#
					let p_qtd_entreg[2601,3100] = p_qtd_entreg7
					let p_qtd_entreg[3101,3600] = p_qtd_entreg8
					let p_qtd_entreg[3601,4100] = p_qtd_entreg9
					let p_qtd_entreg[4101,4600] = p_qtd_entreg10
					let p_qtd_entreg[4601,5100] = p_qtd_entreg11
					let p_qtd_entreg[5101,5200] = p_qtd_entreg12

					let p_qtd_entreg[5201,5700]   = p_qtd_entreg13
					let p_qtd_entreg[5701,6200]   = p_qtd_entreg14
					let p_qtd_entreg[6201,6700]   = p_qtd_entreg15
					let p_qtd_entreg[6701,7200]   = p_qtd_entreg16
					let p_qtd_entreg[7201,7700]   = p_qtd_entreg17
					let p_qtd_entreg[7701,7800]   = p_qtd_entreg18
					let p_qtd_entreg[7801,8300]   = p_qtd_entreg19
					let p_qtd_entreg[8301,8800]   = p_qtd_entreg20
					let p_qtd_entreg[8801,9300]   = p_qtd_entreg21
					let p_qtd_entreg[9301,9800]   = p_qtd_entreg22
					let p_qtd_entreg[9801,10300]  = p_qtd_entreg23
					let p_qtd_entreg[10301,10400] = p_qtd_entreg24
					#--# tdjy25 #--#

					#retorna o array que foi carregado na epl
					for l_ind = 1 to arraylength(p_array_pedidos)
						call log_setvar("l_ind", l_ind)

						if sup3760y_retorna_array_pedidos() then
						end if

						let p_array_pedidos[l_ind].num_pedido = log_getvar("l_ind")
						let p_array_pedidos[l_ind].num_oc = log_getvar("l_ind")
						let p_array_pedidos[l_ind].num_prog_entrega = log_getvar("l_ind")
						let p_array_pedidos[l_ind].num_pc_forn = log_getvar("l_ind")
					end for

					if g_modifica_nf_transito = false then
						if p_retorno_3760 <> false then
							for p_sub = 1 to 800
								#----------pedido---------#
								if p_pedidos[((6 * p_sub) - 5), (6 * p_sub)] = "xxxxxx" then
									let p_array_pedidos[p_sub].num_pedido = null
									exit for
								else
									let p_array_pedidos[p_sub].num_pedido =
									p_pedidos[((6 * p_sub) - 5), (6 * p_sub)]
								end if
								#--------ordem-----------#
								if p_ordens[((9 * p_sub) - 8), (9 * p_sub)] = "xxxxxxxxx" then
									let p_array_pedidos[p_sub].num_oc = null
								else
									let p_array_pedidos[p_sub].num_oc =
									p_ordens[((9 * p_sub) - 8), (9 * p_sub)]
								end if
								#-----prog_entrega--------#
								if p_prog_ordem[((3 * p_sub) - 2),(3 * p_sub)] = "xxx" then
									let p_array_pedidos[p_sub].num_prog_entrega = null
								else
									let p_array_pedidos[p_sub].num_prog_entrega =
									p_prog_ordem[((3 * p_sub) - 2), (3 * p_sub)]
								end if
								#-----qtde entrega--------#
								if p_qtd_entreg[((13 * p_sub) - 12),(13 * p_sub)] = "xxxxxxxxxxxxx"
									then
									let p_array_ped_aux[p_sub].qtd_entregue = null
								else
									let p_array_ped_aux[p_sub].qtd_entregue =
									p_qtd_entreg[((13 * p_sub) - 12),(13 * p_sub)]
								end if
							end for

							for p_ind9 = p_sub to arraylength(p_array_pedidos)
								initialize p_array_pedidos[p_ind9].* to null
							end for

							let p_ies_informou_ped = "s"
							if p_array_pedidos[1].num_pedido is null or p_pedidos = " "  then
								let p_ies_informou_ped = "n"
							end if

							if p_pedidos is not null then
								call sup376_busca_infor_pedidos()
							end if
						else
							return false
						end if
					end if
				end if
			end if
		end if

		for l_ind = 1 to arraylength(p_array_compl)
			if  p_array_compl[l_ind].num_oc is not null
				and p_array_compl[l_ind].num_oc <> 0 then
				let l_possui_compon = 0

				whenever error continue
				select count(*)
				into l_possui_compon
				from estrut_ordem_sup
				where cod_empresa   = p_cod_empresa
				and num_oc        = p_array_compl[l_ind].num_oc
				whenever error stop

				if sqlca.sqlcode <> 0
					or l_possui_compon is null then
					let l_possui_compon = 0
				end if

				if l_possui_compon = 0 then
					let l_msg = "ordem de compra ", p_array_compl[l_ind].num_oc using "<<<<<<<<&", " n�o possui componentes cadastrados."
					call log0030_mensagem(l_msg,"info")
				next field cod_fornecedor
			end if
		end if

		whenever error continue
		select 1
		from fornecedor, empresa
		where fornecedor.cod_fornecedor = p_dados_tela.cod_fornecedor
		and empresa.num_cgc           = fornecedor.num_cgc_cpf
		and (empresa.cod_empresa not in(select cod_empresa from empresa_transf)
		and empresa.cod_empresa not in(select cod_empresa_transf from empresa_transf))
		whenever error stop
		if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
		else
			#call log0030_mensagem("cnpj do fornecedor n�o cadastrado na empresa ou o c�digo da empresa � de transfer�ncia.","info")
			#next field cod_fornecedor
			continue for
		end if

		if not sup3760_valida_sup8028() then
			if m_valida_sup8028 = "s" then
				let l_msg = "nota fiscal n�o est� cadastrada no sup8028. deseja prosseguir com a inclus�o?"
				if not log0040_confirm(5,10,l_msg) then
				next field cod_fornecedor
			else
				let m_valida_sup8028 = 'n'
			end if
		end if
	end if

	if m_valida_sup8028 = "s" then
		whenever error continue
		select 1
		from sup_recebto_ficha
		where sup_recebto_ficha.empresa              = p_cod_empresa
		and sup_recebto_ficha.nota_fiscal          = p_dados_tela.num_nf
		and sup_recebto_ficha.serie_nota_fiscal    = p_dados_tela.ser_nf
		and sup_recebto_ficha.subserie_nota_fiscal = p_dados_tela.ssr_nf
		and sup_recebto_ficha.especie_nota_fiscal  = p_dados_tela.ies_especie_nf
		and sup_recebto_ficha.fornecedor           = p_dados_tela.cod_fornecedor
		whenever error stop

		if sqlca.sqlcode = 100 then
			call log0030_mensagem("informar os seriais desta nota no sup8028.","info")
		next field cod_fornecedor
	end if
end if
end for
end if
end if

if m_nfe_cce = true then
	if p_dados_tela.ies_nf_aguard_nfe = "6" and
		p_nf_sup.ies_nf_aguard_nfe = "7" then
	next field dat_entrada_nf
else
next field cod_fiscal_compl
end if
end if

if find4glfunction('supr91_verifica_nf_armazem') then
	if supr91_verifica_nf_armazem(p_cod_empresa,
		p_dados_tela.cod_operacao,
		0) then
		let l_cod_operacao = supr91_retorna_oper_nf_armazem(p_cod_empresa)
		if l_cod_operacao is not null and l_cod_operacao <> ' ' then
			let p_dados_tela.cod_operac_estoq = l_cod_operacao
			display by name p_dados_tela.cod_operac_estoq
		end if
	end if
end if

if m_wms_instal = 's' then
	# se o cfop for de remessa para industr. do co-packing, a nf n�o pode ser uma nota provis�ria ou definitiva de regulariza��o.
	if find4glfunction('wmsr173_gerencia_wms_remessa_fiscal') then
		if wmsr173_cfop_eh_remessa_industrializa(p_cod_empresa,
			p_dados_tela.cod_operacao,0) then
			if sup3760_eh_saida_identificada() then
				call log0030_processa_mensagem("cfop de remessa para industrializa��o (co-packing) n�o pode ser informado em nota fiscal marcada como sa�da identificada.",'excl',0)
			next field cod_operacao
		end if
		if m_tipo_documento = 'p' then
			call log0030_processa_mensagem('cfop de remessa para industrializa��o (co-packing) n�o pode ser informado em nota provis�ria.','excl',0)
		next field cod_operacao
	else
		if not wmsr173_deposit_utiliza_copacking(p_cod_empresa,
			p_dados_tela.cod_fornecedor,
			0) then
			call log0030_processa_mensagem('cfop de remessa para industrializa��o (co-packing) n�o pode ser informado em nota de depositante que n�o utiliza co-packing.','excl',0)
		next field cod_operacao
	end if
end if
else
	if sup3760_existe_item_somente_controle_fiscal_copacking() then
		call log0030_processa_mensagem("nota fiscal possui item configurado como 'somente controle fiscal co-packing'. cfop deve ser de remessa para industrializa��o.",'excl',0)
	next field cod_operacao
end if
end if
end if
end if

before field cod_fiscal_compl
call sup3760_botao_zoom("off",3,68)
call sup3760_save_cur_field_name('cod_fiscal_compl')

after field cod_fiscal_compl
if m_cfop_compl_dic_se = 'n' then # os 409509 niara #
	if p_dados_tela.cod_operacao[5] <> " " and
		p_dados_tela.cod_fiscal_compl <> 0 then
		let p_dados_tela.cod_fiscal_compl = 0
		display by name p_dados_tela.cod_fiscal_compl
	end if
end if

if p_dados_tela.ies_nf_aguard_nfe = "d" then
	if m_ies_obj_entrada = "99" and p_dados_tela.ies_especie_nf = "nfr" then
	else
		error "tipo d deve ser usado para notas de especie nfr e grupo despesa '99'"
	next field ies_especie_nf
end if
end if

if (p_qtd_dig_cfop = 0 or p_qtd_dig_cfop is null) then  #aceita 0
	if p_dados_tela.cod_fiscal_compl is null or
		p_dados_tela.cod_fiscal_compl = " " then
		let p_dados_tela.cod_fiscal_compl = 0
	end if
else   #se o parametro for 1 ou 2
	if p_dados_tela.dat_entrada_nf <= m_dat_fim_valid then
		### ainda nao converteu a cod_fiscal_sup
		if m_ies_obj_entrada = "99" and
			p_dados_tela.cod_operacao[1,1] <> "7" then
			if p_dados_tela.cod_fiscal_compl is null or
				p_dados_tela.cod_fiscal_compl = " "   or
				p_dados_tela.cod_fiscal_compl = 0     then
				error " o codigo fiscal complementar deve ser informado de 1 a 99, no caso de x.99 "
			next field cod_fiscal_compl
		end if
	end if
end if

if p_dados_tela.cod_fiscal_compl is null or
	p_dados_tela.cod_fiscal_compl = " " then
	let p_dados_tela.cod_fiscal_compl = 0
end if
end if
# fim os 147050

initialize l_status, p_ies_tip_entrada, m_ies_obj_entrada to null
call sup0686_retorna_tip_obj_entrada(p_dados_tela.cod_operacao,
p_dados_tela.cod_fiscal_compl)
returning l_status,
p_ies_tip_entrada,
m_ies_obj_entrada
if  (p_dados_tela.ies_especie_nf = "nfs"
	or   p_dados_tela.ies_especie_nf = "rec"
	or   p_dados_tela.ies_especie_nf = "doc")
	and (p_dados_tela.cod_operacao is null or
	p_dados_tela.cod_operacao = " ")
	and  (m_cfop_nfs = "n" or m_cfop_nfs = "a")  then ### dmanentlgx-208
else
	if l_status = false then
		error " codigo fiscal nao cadastrado na cod_fiscal_sup. ver sup0600 "
	next field cod_operacao
end if
end if

if p_dados_tela.ies_especie_nf = "con" and
	m_ies_obj_entrada <> "7" then
	error " cfop nao cadastrado como frete. verifica objetivo deve ser igual a '7'"
next field cod_operacao
end if

if (p_dados_tela.ies_especie_nf <> "con" and p_dados_tela.ies_especie_nf <> "nfe")
	and m_ies_obj_entrada = "7" then
### tevp32 - caso seja nfc e possua uf origem ser� considerado como se fosse uma nota tipo con.
	if p_dados_tela.ies_especie_nf = "nfc" then
		whenever error continue
		select parametro
		from sup_par_ar
		where empresa = p_cod_empresa
		and aviso_recebto = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro = 'uf_origem'
		whenever error stop
		if sqlca.sqlcode = 0 then
		else
			call log0030_mensagem("cfop cadastrado como frete, por�m esp�cie da nota fiscal � diferente de con/nfe.","exclamation")
		next field cod_operacao
	end if
else
	call log0030_mensagem("cfop cadastrado como frete, por�m esp�cie da nota fiscal � diferente de con/nfe.","exclamation")
next field cod_operacao
end if
end if

if not sup3760_verifica_cadastro_sup1785(l_funcao, l_cod_fisc_ant) then #o.s. 550997
next field cod_operacao
end if

### os 144076
if p_dados_tela.cod_operacao[1] = "5" then
	let p_cod_fiscal_c = "1.",p_dados_tela.cod_operacao[3,5]
end if
if p_dados_tela.cod_operacao[1] = "6" then
	let p_cod_fiscal_c = "2.",p_dados_tela.cod_operacao[3,5]
end if
if p_dados_tela.cod_operacao[1] = "7" then
	let p_cod_fiscal_c = "3.",p_dados_tela.cod_operacao[3,5]
end if

######## os 278154
if l_funcao = "inclusao"  and
	(p_dados_tela.ies_especie_nf = "nfd" or              #eduardo o.s.301125
	(p_ies_tip_entrada = "5"             and
	p_dados_tela.ies_especie_nf <> "nfc")) then
	### na inclusao ainda nao tem o cod_operacao antes da operacao
	### de estoque, ainda nao foi digitado.
	call sup376_busca_operacao_estoque("dev")
	if p_ies_cod_operac = "s" then
		display by name p_dados_tela.cod_operac_estoq
	end if
end if

if p_par_estoque.ies_modulo_vdp = "s" then
	if g_ies_transf_benef = false or
		g_ies_transf_benef is null then
		if p_ies_cod_operac is null or
			p_ies_cod_operac = "n" or
			p_ies_cod_operac = " " then
			let p_dados_tela.cod_operac_estoq = p_dados_telar.cod_operac_estoq
		end if
	end if

	if p_dados_tela.ies_especie_nf <> "nfd" and
		sup0812_verifica_nota_transferencia(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_dados_tela.num_nf,
		p_dados_tela.ser_nf,
		p_dados_tela.ssr_nf,
		p_dados_tela.cod_fornecedor,
		p_dados_tela.cod_operacao,
		p_dados_tela.cod_fiscal_compl) = true and
		p_dados_tela.cod_operacao[1,1] <> "3" then

		if log_existe_epl('sup3760y_before_valida_cfop_transferencia') then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl codigo da empresa
			#epl tipo: nf_sup.cod_empresa

			call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
			#epl numero do aviso de recebimento
			#epl tipo: nf_sup.num_aviso_rec

			if not sup3760y_before_valida_cfop_transferencia() then
				let l_valida_cfop_transf = false
			end if
		else
			let l_valida_cfop_transf = true
		end if

		if l_valida_cfop_transf = true and p_dados_tela.ies_especie_nf <> "nfd" then
			if p_ies_tip_entrada <> "2" then
				error " para nf de transferencia entre unidades o cfop deve ser do tipo transferencia."
			next field cod_operacao
		end if
	end if
	let p_ies_orig_oper = null
	select estoque_operac.ies_origem
	into p_ies_orig_oper
	from estoque_operac
	where estoque_operac.cod_empresa  = p_cod_empresa
	and estoque_operac.cod_operacao = p_dados_tela.cod_operac_estoq
	if p_ies_orig_oper <> "t"  then
		error " operacao de estoque ",p_dados_tela.cod_operac_estoq," nao e' transferencia. "
	next field cod_operacao
end if
end if
##### fim rotina transferencia
else
	let m_transf_ativo_imob = false
	if p_ies_obt_inf_com = "s" and
		l_funcao = "inclusao"  then
		if p_dados_tela.ies_especie_nf <> "nfd" and
			sup0812_verifica_nota_transferencia(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			p_dados_tela.cod_fiscal_compl) = true then
			if g_ies_tip_controle = "j" then
				error " nf de transf.de imobilizado entre unidades, com origem da empresa ",p_cod_emp_transf,". "
			else
				error " nota fiscal de transferencia entre unidades, com origem da empresa ",p_cod_emp_transf,". "
			end if
			if log004_confirm(14,42) = true then
				### parametro lorezentti os228406
				if m_transf_estoq = "s" then
					error " movimentar estoque ??? "
					if sup0769_confirm(14,42) = false then
						let m_ind_transf_estoq = true
					end if
				end if

				### os 154880 ###
				if g_ies_tip_controle = "j" then
					let m_transf_ativo_imob = true
				end if
				### fim os 154880 ###

				call sup376_busca_operacao_estoque("transf")
				if p_ies_cod_operac = "s" then
					display by name p_dados_tela.cod_operac_estoq
				end if

				let int_flag = false
				let l_cond_pedido = " "
				#eduardo o.s.335542
				if p_entrou_pedido = "s" then
					whenever error continue
					select cnd_pgto
					from cond_pgto_cap
					where cnd_pgto      = p_dados_tela.cnd_pgto_nf
					and ies_pagamento = "3"
					whenever error stop
					if sqlca.sqlcode = 0 then
						let l_cond_pedido = "3"
					else
						let l_cond_pedido = "2"
					end if
				end if

				if p_entrou_pedido = "n" or l_cond_pedido <> "3" then
					### os 511148
					call sup3762_busca_cnd_pgto_nf()
				end if
				if sup376_verifica_cnd_pgto() then
				end if
			next field dat_emis_nf
		else
			let p_ies_nf_transf = false
			if m_ent_manual_transf = "n" then #os372636
				let int_flag = true
				exit input
			end if
			whenever error continue
			insert into sup_par_ar (empresa, aviso_recebto, seq_aviso_recebto,
			parametro, par_ind_especial, parametro_texto,
			parametro_val, parametro_dat)
			values (p_cod_empresa, p_dados_tela.num_aviso_rec, "1",
			"transf_unid_manual", null, p_user, null, today)
			whenever error stop
		end if
	end if
end if
end if

# 534641
if fgl_lastkey() <> fgl_keyval("up") and
	fgl_lastkey() <> fgl_keyval("left") then
	call sup3760_verifica_sup_fornec(p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao)
returning l_tipo
	if l_tipo <> p_dados_tela.ies_nf_aguard_nfe and
		p_dados_tela.ies_especie_nf = "nfr" then
		if not sup3760_verifica_fornec_depos(p_dados_tela.cod_fornecedor) then
			if l_tipo = "a" then
				if not find4glfunction('supy160_cliente_318') then
					call log0030_mensagem('fornecedor/cfop de nfr tipo a com origem fornecedor.','info')
					#os558302
					if p_dados_tela.ies_nf_aguard_nfe = 't' then
						if log0040_confirm(0,0, "deseja alterar tipo da nota para a ?") then
							let p_dados_tela.ies_nf_aguard_nfe = "a"
						else
							let p_dados_tela.ies_nf_aguard_nfe = "t"
						end if
					else
						let p_dados_tela.ies_nf_aguard_nfe = "a"
					end if
					display by name p_dados_tela.ies_nf_aguard_nfe
				end if
				#fim os558302
			end if
		end if
		if l_tipo = "b" then
			if not find4glfunction('supy160_cliente_318') then
				#--# tdgeez - descomentado. o cliente tem que ter a opcao de escolha #--#
				if log0040_confirm(0,0, "nota fiscal tipo b. confirma?") then
					#call log0030_mensagem('fornecedor/cfop de nfr tipo b com origem depositante.','info')
					let p_dados_tela.ies_nf_aguard_nfe = "b"
					display by name p_dados_tela.ies_nf_aguard_nfe
				end if
				#--# tdgeez - descomentado. o cliente tem que ter a opcao de escolha #--#
			end if
		end if
	end if
	if  p_dados_tela.ies_especie_nf    = "nfr"
		and p_dados_tela.ies_nf_aguard_nfe = "a" then
		if m_exst_forntriter then
			let l_count = 0
			whenever error continue
			select count(*)
			into l_count
			from sup_fornec_tri_ter
			where empresa = p_cod_empresa
			whenever error stop
			if sqlca.sqlcode <> 0
				or l_count is null then
				let l_count = 0
			end if
			if l_count > 0 then
				let l_cod_fiscal = p_dados_tela.cod_operacao[3,5]
				whenever error continue
				select fornec_depositante
				from sup_fornec_tri_ter
				where empresa         = p_cod_empresa
				and fornecedor      = p_dados_tela.cod_fornecedor
				and cod_fisc_fornec = l_cod_fiscal
				whenever error stop
				if sqlca.sqlcode = 100 then
					call log0030_mensagem('fornecedor/cfop n�o cadastrado no programa de triangula��o (sup1648).','exclamation')
				next field cod_fornecedor
			end if
		end if
	end if
end if
if  p_dados_tela.ies_especie_nf    = "nfr"
	and p_dados_tela.ies_nf_aguard_nfe = "b" then
	if m_exst_forntriter then
		let l_count = 0
		whenever error continue
		select count(*)
		into l_count
		from sup_fornec_tri_ter
		where empresa = p_cod_empresa
		whenever error stop
		if sqlca.sqlcode <> 0
			or l_count is null then
			let l_count = 0
		end if
		if l_count > 0 then
			let l_cod_fiscal = p_dados_tela.cod_operacao[3,5]
			whenever error continue
			select fornec_depositante
			from sup_fornec_tri_ter
			where empresa            = p_cod_empresa
			and fornec_depositante = p_dados_tela.cod_fornecedor
			and cod_fisc_depos     = l_cod_fiscal
			whenever error stop
			if sqlca.sqlcode = 100 then
				call log0030_mensagem('fornecedor/cfop n�o cadastrado no programa de triangula��o como depositante (sup1648).','exclamation')
			next field cod_fornecedor
		end if
	end if
end if
end if

end if
# 534641

if fgl_lastkey() <> fgl_keyval("up") and
	fgl_lastkey() <> fgl_keyval("left") then
	call sup3760_verifica_sup_fornec(p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao)
returning l_tipo
	#_#
	call sup3760_verifica_tipo(l_tipo)
	#_#

	call sup3760_verifica_cadastro_triangulacao_depositante()
returning p_status

	case p_status
	when 0 next field cod_fornecedor
	when 2 next field ies_nf_aguard_nfe
end case
end if
if m_nfe_cce = true then
	if p_dados_tela.ies_nf_aguard_nfe = "6" and m_nf_aguard_nfe_ant = "7" then #tfice9 se o tipo da nota foi alterado de 7(tr�nsito) para 6, pode permitir alterar a data de entrada da nota fiscal para movimentar o estoque na data correta.
	else
		exit input
	end if
end if

before field dat_emis_nf
#--inicio--os 595717 #
if find4glfunction("supy117_consiste_nota_fiscal_transito") then
	if l_funcao = "modificacao"  and
		m_nf_eletronica_impr = true then
		if supy117_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.ies_especie_nf) = true  then

			if fgl_lastkey() = fgl_keyval("up")   or
				fgl_lastkey() = fgl_keyval("left") then
			next field ies_nf_aguard_nfe
		else
		next field dat_entrada_nf
	end if
end if
end if
else
	if l_funcao = "modificacao"  and
		m_nf_eletronica_impr = true then
		if sup3760_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,p_nf_sup.cod_operacao) = false  then
		else
			if fgl_lastkey() = fgl_keyval("up")   or
				fgl_lastkey() = fgl_keyval("left") then
			next field ies_nf_aguard_nfe
		else
		next field dat_entrada_nf
	end if
end if
end if
end if
#---fim----os 595717 #

call sup3760_botao_zoom("off",3,68)
if m_gera_rsv_transf = "s" and p_dados_tela.ies_nf_aguard_nfe = "8" and p_array_compl[1].num_oc is not null then
	### busca o pedido de venda origem que gerou o pedido/oc
	### para empresa labratos
	for l_ind = 1 to arraylength(p_array_compl)
		if p_array_compl[l_ind].num_oc is null then
			continue for
		end if
		whenever error continue
		select num_pedido_fornec
		into m_num_ped_fornec
		from prog_ordem_sup
		where cod_empresa      = p_cod_empresa
		and num_oc           = p_array_compl[1].num_oc
		and num_versao       = 001
		and num_prog_entrega = 001
		whenever error stop

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("selecao","prog_ordem_sup")
		end if
		let m_pedido_venda = m_num_ped_fornec[1,6]

		if sup3760_busca_ped_venda() then
		else
			return false
		end if

		if m_pedido_venda =  m_pedido_venda1 then
		else
			message " pedido ",p_array_compl[l_ind].num_pedido clipped ," nao corresponde a nenhum pedido da nf origem " attribute(reverse)
			sleep 2
			let l_houve_erro = true
			exit input
		end if
	end for
end if

call sup3760_save_cur_field_name('dat_emis_nf')

after field dat_emis_nf
let p_seta = "down"
if p_dados_tela.dat_emis_nf is not null then
	if log_existe_epl("sup3760y_after_field_dat_emis_nf") then
		call log_setvar('dat_emis', p_dados_tela.dat_emis_nf)
		#epl data de emiss�o
		#epl tipo: date

		if not sup3760y_after_field_dat_emis_nf() then
		next field dat_emis_nf
	end if
end if

if p_dados_tela.dat_emis_nf > today then
	error " data emissao nota fiscal nao pode ser maior que data atual "
next field dat_emis_nf
end if
if p_cons_data = true then
	if p_dados_tela.dat_emis_nf < (today - p_qtd_dias_emis_doc) then
		error "data de emissao menor que data atual menos qtd. dias de emissao do parametro."
	next field dat_emis_nf
end if
end if

let l_dat_emis_reinf = mdy(month(today),m_consiste_dia_ce_reinf,year(today))

if l_funcao = "inclusao" then

	if m_consiste_dia_ce_reinf <> 0 and p_dados_tela.ies_especie_nf    = "nfs" then

		if (p_dados_tela.dat_emis_nf < l_dat_emis_reinf) and (today >= p_dados_tela.dat_emis_nf) then
			error "data de emiss�o menor que prazo envio reinf."
			call log0030_mensagem("data de emiss�o menor que prazo envio reinf. entre em contato com o fiscal para inclus�o da nota.","info")
		next field dat_emis_nf
	end if

end if

if m_valida_nf_frete_filiais = 's' then
	call sup3321_set_ies_especie_nf(p_dados_tela.ies_especie_nf)
	call sup3321_valida_nf_frete_existe(p_dados_tela.num_nf ,
	p_dados_tela.ser_nf ,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.dat_emis_nf,
	1,
	false)
returning l_status,l_msg
	if not l_status then
		if fgl_lastkey() <> fgl_keyval("up")     and
			fgl_lastkey() <> fgl_keyval("left")   then
			call log0030_mensagem(l_msg clipped,"excl")
		next field dat_emis_nf
	end if
end if
end if
end if

if l_funcao = "modificacao" and
	p_dados_tela.dat_emis_nf <> l_dat_emis_ant then
	if sup3762_verifica_impostos_ja_pagos() then
	next field dat_emis_nf
end if

if m_consiste_dia_ce_reinf <> 0 and p_dados_tela.ies_especie_nf    = "nfs" then

	if (p_dados_tela.dat_emis_nf < l_dat_emis_reinf) and (today >= p_dados_tela.dat_emis_nf) then
		error "data de emiss�o menor que prazo envio reinf."
		call log0030_mensagem("data de emiss�o menor que prazo envio reinf. entre em contato com o fiscal para inclus�o da nota.","info")
	next field dat_emis_nf
end if

end if
end if
else
	error " digite a data de emissao da nota fiscal. "
next field dat_emis_nf
end if

#--inicio--os 607387 #
if sup3760_valida_nf_cadastrada() = true then
	if fgl_lastkey() <> fgl_keyval("up")     and
		fgl_lastkey() <> fgl_keyval("left")   then
	next field dat_emis_nf
end if
end if

call log006_exibe_teclas("01 02 03 07",p_versao)
current window is w_sup37601
#---fim----os 607387 #

#--# 796313 - espindola - projeto totvs colaboracao #--#
if l_funcao = "inclusao" then
	if m_utiliz_totvs_colab = "s" then
		call sup13429_existe_docum_pendente(p_dados_tela.cod_empresa,    p_dados_tela.num_nf,
		p_dados_tela.ser_nf,         p_dados_tela.ssr_nf,
		p_dados_tela.cod_fornecedor, p_dados_tela.dat_emis_nf)
		returning p_status, m_msg, comando3

		if find4glfunction("sup13429_get_proc_integracao") then
			let l_proc_integracao = sup13429_get_proc_integracao()
		else
			let l_proc_integracao = "1"
		end if

		#--# pendente de inclusao via totvs colaboracao
		if p_status = 1 and l_proc_integracao = "1" then
			if log0040_confirm(5,10,m_msg) then
				#--# chama funcionalidade de importacao de documento
				call sup13430_importa_documento(comando3, true, "sup3760")
				#--# consiste situa��o do documento ap�s importa��o
				call sup13429_existe_docum_pendente(p_dados_tela.cod_empresa,    p_dados_tela.num_nf,
				p_dados_tela.ser_nf,         p_dados_tela.ssr_nf,
				p_dados_tela.cod_fornecedor, p_dados_tela.dat_emis_nf)
				returning p_status, m_msg, comando3

				if find4glfunction("sup13429_get_proc_integracao") then
					let l_proc_integracao = sup13429_get_proc_integracao()
				else
					let l_proc_integracao = "1"
				end if

				#--# pendente de inclusao via totvs colaboracao
				if p_status = 1 and l_proc_integracao = "1" then
					call log0030_mensagem("nota fiscal n�o importada. verificar erros no monitor de integra��o","exclamation")
					return false
				end if
				if p_status = 3 and l_proc_integracao = "1" then
					let p_cod_empresa_arg   = p_dados_tela.cod_empresa
					let p_num_aviso_rec_arg = comando3
					call sup376_busca_argumen()
					call log0030_mensagem("nota fiscal importada com sucesso. para visualizar a nf importada utilizar a op��o consultar (modo inclus�o ser� cancelado).","info")
					return false
				end if
			end if
		end if

		#--# somente mostra um alerta ao usuario
		if (p_status = 2 or p_status = 3) and l_proc_integracao = "1" then
			call log0030_mensagem(m_msg,'info')
		end if
	end if
end if
#809554
if sup3760_existe_h_nf_sup(p_dados_tela.cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf, p_dados_tela.ies_especie_nf, p_dados_tela.cod_fornecedor,
	p_dados_tela.dat_emis_nf) then  #809554
	call log0030_mensagem('nota fiscal j� cadastrada em hist�rico. verifique no sup6280.','stop')
next field num_nf
end if
#809554

before field dat_entrada_nf
if log_existe_epl("sup3760y_before_field_dat_entrada_nf") then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('dat_emis_nf', p_dados_tela.dat_emis_nf)
	#epl tipo da nota
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('funcao', l_funcao)
	#epl fun��o
	#epl tipo: char(30)

	initialize l_next_field to null
	call log_setvar('next_field', l_next_field)
	#epl fun��o
	#epl tipo: char

	call log_setvar('dat_entrada_nf', p_dados_tela.dat_entrada_nf)
	#epl dat_entrada_nf
	#epl tipo: date

	call sup3760y_before_field_dat_entrada_nf()
	let l_next_field = log_getvar('next_field')
	let p_dados_tela.dat_entrada_nf = log_getvar('dat_entrada_nf')
	display by name p_dados_tela.dat_entrada_nf

	if l_next_field is not null then
		case l_next_field
		when "cnd_pgto_nf" next field cnd_pgto_nf
		when "dat_emis_nf" next field dat_emis_nf
	end case
end if
end if

call sup3760_botao_zoom("off",3,68)
if l_funcao = "modificacao" then
	if m_nfe_cce = true then
		if p_dados_tela.ies_nf_aguard_nfe = "6" and m_nf_aguard_nfe_ant = "7" then #tfice9
		else
		next field cod_operacao
	end if
end if
if sup3760_verifica_inspecao() then
	#--# aacbkc - somente ir� fazer a consistencia se a nf      #--#
	#--# j� foi recebida (diferente de em tr�nsito - espindola) #--#
	if m_nf_aguard_nfe_ant <> "7" then
		if p_seta = "down" then
		next field cnd_pgto_nf
	else
	next field dat_emis_nf
end if
end if
end if
end if
if l_funcao = "inclusao" then
	if m_mes_fecha_01 = "s" then
		if p_par_sup.dat_fecha_ultimo >= today then
			let p_dados_tela.dat_entrada_nf = p_par_sup.dat_fecha_ultimo + 1 units day
			### verifica se eh um dia util
			let l_ies_dia_semana = weekday(p_dados_tela.dat_entrada_nf)
			case l_ies_dia_semana
			when 0 #domingo
			let p_dados_tela.dat_entrada_nf = p_dados_tela.dat_entrada_nf + 1 units day
			when 1 #segunda
			when 2 #terca
			when 3 #quarta
			when 4 #quinta
			when 5 #sexta
			when 6 #sabado
			let p_dados_tela.dat_entrada_nf = p_dados_tela.dat_entrada_nf + 2 units day
		end case
		let l_dat_ant = p_dados_tela.dat_entrada_nf
	end if
end if
else
	let l_dat_ant = p_dados_tela.dat_entrada_nf
end if
call sup3760_save_cur_field_name('dat_entrada_nf')

after field dat_entrada_nf
if m_mes_fecha_01 = "s" and
	p_par_sup.dat_fecha_ultimo >= today then
	if l_dat_ant <> p_dados_tela.dat_entrada_nf then
		let p_dados_tela.dat_entrada_nf = l_dat_ant
		display by name p_dados_tela.dat_entrada_nf
		error "data de entrada n�o pode ser alterada. m�s com recebimento fechado."
	end if
else
	if p_dados_tela.dat_entrada_nf > today then
		error "data da entrada n�o pode ser maior que data atual."
	next field dat_entrada_nf
end if
end if
if p_dados_tela.dat_emis_nf > p_dados_tela.dat_entrada_nf then
	error "data emiss�o nota fiscal n�o pode ser maior que data da entrada."
next field dat_emis_nf
end if
if p_par_sup.qtd_dias_incl_nf is not null then
	if p_dados_tela.dat_entrada_nf <
		(today + 1 - p_par_sup.qtd_dias_incl_nf) then
		error "data de entrada da nota fiscal inferior ao limite de toler�ncia do par_sup."
	next field dat_entrada_nf
end if
end if
if p_dados_tela.dat_entrada_nf <= p_par_sup.dat_fecha_ult_ipi or
	p_dados_tela.dat_entrada_nf <= p_par_sup.dat_fecha_ultimo then
	error "data entrada nf. deve ser maior que o �ltimo fechamento ipi/fiscal."
next field dat_entrada_nf
end if

if p_dados_tela.dat_entrada_nf is null or
	p_dados_tela.dat_entrada_nf = " " then
	error "informe a data de entrada da nota fiscal."
next field dat_entrada_nf
end if

### trtz43
if p_dados_tela.ies_nf_aguard_nfe <> "7" then
	if not supr6_integracao_batch(p_nf_sup.cod_empresa) and
		supr6_data_posterior_data_corte_logix_10(p_nf_sup.cod_empresa,
		p_dados_tela.dat_entrada_nf) then

		if not supr6_validacao_data_inicial_e_final_processamento(p_nf_sup.cod_empresa,
			p_dados_tela.dat_entrada_nf,
			p_dados_tela.dat_entrada_nf,
			"manual",
			false) then
		next field dat_entrada_nf
	end if
end if
end if

if m_empr_utiliz_mp66 = "r" then
	if not sup3760_busca_pct_bc_pis() then
	next field dat_entrada_nf
end if
end if

if m_valida_data_oc_ar = 's' then
	if not sup3760_valida_data_oc_ar() then
	next field dat_entrada_nf
end if
end if

if m_transf_ativo_imob then
	if m_ies_transf_ai = false then ### teydru
		#ch 721708
		call log2250_busca_parametro(p_cod_emp_transf, "emp_trabalho_pat_centraliz")
		returning m_emp_trabalha_com_patr, l_status
		#ch 721708

		if m_emp_trabalha_com_patr is null or
			m_emp_trabalha_com_patr = " " then

			call sup3764_transf_ativ_imob(p_cod_empresa,p_cod_emp_transf)
			returning p_status
			case p_status
			when 0
			let m_msg = " problemas na transferencia do ativo imobilizado para empresa ",p_cod_empresa clipped
			call log0030_mensagem(m_msg,"exclamation")
			sleep 2
			return false
			when 2
		next field dat_entrada_nf
	end case
	let m_ies_transf_ai = true ### teydru
else
	let l_mensagem = 'a empresa centralizadora de patrim�nio ',m_emp_trabalha_com_patr,' est� cadastrada. a transfer�ncia do invent�rio dever� ser efetuada manualmente no pat0750.'
	call log0030_mensagem(l_mensagem,"excl")
end if
#ch 721708
end if ### teydru
end if

if sup1473_documento_em_periodo_fiscal_fechado(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.dat_entrada_nf,
	"","","","","","ar") then

	let l_mensagem = "per�odo fiscal de entradas j� encerrado."

	if find4glfunction('sup1473_get_mensagem') then
		let l_mensagem = sup1473_get_mensagem()
	end if

	call log0030_mensagem(l_mensagem,"info")

next field dat_entrada_nf
end if

if p_dados_tela.dat_entrada_nf <> m_dat_entrada_ant and m_dat_entrada_ant is not null then
	if not sup3760_valida_alteracao_data_entrada_antes_corte() then
	next field dat_entrada_nf
end if
end if

if p_dados_tela.dat_entrada_nf <> m_dat_entrada_ant and m_dat_entrada_ant is not null then
	if not sup3760_valida_alteracao_data_entrada_depois_corte() then
	next field dat_entrada_nf
end if
end if

if l_funcao = "modificacao" and m_controla_gao = "s" and m_controla_sup = "s" and m_desc_nf_rec = "n" then
	if p_dados_telar.dat_entrada_nf <> p_dados_tela.dat_entrada_nf then
		if not sup3760_permite_alteracao_gao() then
			call log0030_mensagem("controle gao ativo exclua inspe��o/contagem antes de modificar a data de entrada. ap�s realize inspe��o/contagem manual.","excl")
			let p_dados_tela.dat_entrada_nf = p_dados_telar.dat_entrada_nf
			display by name p_dados_tela.dat_entrada_nf
		next field dat_entrada_nf
	end if
end if
end if

if find4glfunction("supy117_consiste_nota_fiscal_transito") then
	if l_funcao = "modificacao"      and
		m_nf_eletronica_impr = true  then
		if supy117_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.ies_especie_nf) = true  then

			if fgl_lastkey() = fgl_keyval("up")   or
				fgl_lastkey() = fgl_keyval("left") then
			next field ies_nf_aguard_nfe
		end if
	end if
end if
else
	if l_funcao = "modificacao"      and
		m_nf_eletronica_impr = true  then
		if sup3760_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.cod_operacao) = false then

		else
			if fgl_lastkey() = fgl_keyval("up")   or
				fgl_lastkey() = fgl_keyval("left") then
			next field ies_nf_aguard_nfe
		end if
	end if
end if
end if

if l_funcao = "modificacao" and l_ies_nfe_emit = "s" then
	exit input
end if

if m_tem_valid_fim then
	if  (p_dados_tela.ies_especie_nf = "nfs"
		or   p_dados_tela.ies_especie_nf = "rec"
		or   p_dados_tela.ies_especie_nf = "doc")
		and (m_cfop_nfs = "n" or m_cfop_nfs = "a")
		and (p_dados_tela.cod_operacao is null
		or   p_dados_tela.cod_operacao = " ") then
	else
		if p_dados_tela.dat_entrada_nf > m_dat_fim_valid and
			p_dados_tela.cod_operacao[5] = " " then
			error "cfop inv�lido para per�odo conforme nova legisla��o."
		next field cod_operacao
	end if
end if

if p_dados_tela.dat_entrada_nf <= m_dat_fim_valid then
	if m_cfop_nfr = "s" and
		p_dados_tela.ies_especie_nf = "nfr" and
		(p_dados_tela.cod_operacao[3,4] <> "99" and
		p_dados_tela.cod_operacao[3,4] <> "92" and
		p_dados_tela.cod_operacao[3,4] <> "93" and
		p_dados_tela.cod_operacao[3,4] <> "94" and
		p_dados_tela.cod_operacao[3,4] <> "21" and
		p_dados_tela.cod_operacao[3,4] <> "22") then
		error "cfop inv�lido para notas de simples remessa."
	next field cod_operacao
end if
else
	if m_cfop_nfr = "s" and p_dados_tela.ies_especie_nf = "nfr" then
		initialize l_cod_fiscal2 to null
		let l_diferente = false
		let l_achou = false

		declare cq_cfop1 cursor for
		select par_txt[1,5]
		from par_sup_pad
		where cod_empresa = p_cod_empresa
		and cod_parametro[1,8] = "cfopnfr_"

		whenever error continue
		foreach cq_cfop1 into l_cod_fiscal2
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("foreach cursor","cq_cfop1")
		end if
		if p_dados_tela.cod_operacao <> l_cod_fiscal2 then
			let l_diferente = true
		else
			let l_achou = true
			exit foreach
		end if
	end foreach

	if l_diferente = true  and l_achou = false then
		error "cfop inv�lido para notas de simples remessa."
	next field cod_operacao
else
	if l_diferente = false and l_achou = false then
		if (p_dados_tela.cod_operacao[3,5] <> "151" and
			p_dados_tela.cod_operacao[3,5] <> "152" and
			p_dados_tela.cod_operacao[3,5] <> "552" and
			p_dados_tela.cod_operacao[3,5] <> "554" and
			p_dados_tela.cod_operacao[3,5] <> "555" and
			p_dados_tela.cod_operacao[3,5] <> "557" and
			p_dados_tela.cod_operacao[3,5] <> "901" and
			p_dados_tela.cod_operacao[3,5] <> "902" and
			p_dados_tela.cod_operacao[3,5] <> "903" and
			p_dados_tela.cod_operacao[3,5] <> "904" and
			p_dados_tela.cod_operacao[3,5] <> "905" and
			p_dados_tela.cod_operacao[3,5] <> "906" and
			p_dados_tela.cod_operacao[3,5] <> "907" and
			p_dados_tela.cod_operacao[3,5] <> "908" and
			p_dados_tela.cod_operacao[3,5] <> "909" and
			p_dados_tela.cod_operacao[3,5] <> "910" and
			p_dados_tela.cod_operacao[3,5] <> "911" and
			p_dados_tela.cod_operacao[3,5] <> "912" and
			p_dados_tela.cod_operacao[3,5] <> "913" and
			p_dados_tela.cod_operacao[3,5] <> "914" and
			p_dados_tela.cod_operacao[3,5] <> "915" and
			p_dados_tela.cod_operacao[3,5] <> "916" and
			p_dados_tela.cod_operacao[3,5] <> "917" and
			p_dados_tela.cod_operacao[3,5] <> "918" and
			p_dados_tela.cod_operacao[3,5] <> "919" and
			p_dados_tela.cod_operacao[3,5] <> "920" and
			p_dados_tela.cod_operacao[3,5] <> "921" and
			p_dados_tela.cod_operacao[3,5] <> "923" and
			p_dados_tela.cod_operacao[3,5] <> "924" and
			p_dados_tela.cod_operacao[3,5] <> "925" and
			p_dados_tela.cod_operacao[3,5] <> "949") then
			error "cfop inv�lido para notas de simples remessa."
		next field cod_operacao
	end if
end if
end if
end if
end if
else
	if p_dados_tela.dat_entrada_nf <= m_dat_fim_valid then
		if m_cfop_nfr = "s" and
			p_dados_tela.ies_especie_nf = "nfr" and
			(p_dados_tela.cod_operacao[3,4] <> "99" and
			p_dados_tela.cod_operacao[3,4] <> "92" and
			p_dados_tela.cod_operacao[3,4] <> "93" and
			p_dados_tela.cod_operacao[3,4] <> "94" and
			p_dados_tela.cod_operacao[3,4] <> "21" and
			p_dados_tela.cod_operacao[3,4] <> "22") then
			call log0030_mensagem("cfop inv�lido para notas de simples remessa.","exclamation")
		next field cod_operacao
	end if
else
	if m_cfop_nfr = "s" and p_dados_tela.ies_especie_nf = "nfr" then
		initialize l_cod_fiscal2 to null
		let l_diferente = false
		let l_achou = false

		whenever error continue
		declare cq_cfop2 cursor for
		select par_txt[1,5]
		from par_sup_pad
		where cod_empresa = p_cod_empresa
		and cod_parametro[1,8] = "cfopnfr_"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare cursor","cq_cfop2")
		end if
		whenever error continue
		foreach cq_cfop2 into l_cod_fiscal2
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("foreach cursor","cq_cfop2")
		end if
		if p_dados_tela.cod_operacao <> l_cod_fiscal2 then
			let l_diferente = true
		else
			let l_achou = true
			exit foreach
		end if
	end foreach

	if l_diferente = true  and l_achou = false then
		error "cfop inv�lido para notas de simples remessa."
	next field cod_operacao
else
	if l_diferente = false and l_achou = false then
		if (p_dados_tela.cod_operacao[3,5] <> "151" and
			p_dados_tela.cod_operacao[3,5] <> "152" and
			p_dados_tela.cod_operacao[3,5] <> "552" and
			p_dados_tela.cod_operacao[3,5] <> "554" and
			p_dados_tela.cod_operacao[3,5] <> "555" and
			p_dados_tela.cod_operacao[3,5] <> "557" and
			p_dados_tela.cod_operacao[3,5] <> "901" and
			p_dados_tela.cod_operacao[3,5] <> "902" and
			p_dados_tela.cod_operacao[3,5] <> "903" and
			p_dados_tela.cod_operacao[3,5] <> "904" and
			p_dados_tela.cod_operacao[3,5] <> "905" and
			p_dados_tela.cod_operacao[3,5] <> "906" and
			p_dados_tela.cod_operacao[3,5] <> "907" and
			p_dados_tela.cod_operacao[3,5] <> "908" and
			p_dados_tela.cod_operacao[3,5] <> "909" and
			p_dados_tela.cod_operacao[3,5] <> "910" and
			p_dados_tela.cod_operacao[3,5] <> "911" and
			p_dados_tela.cod_operacao[3,5] <> "912" and
			p_dados_tela.cod_operacao[3,5] <> "913" and
			p_dados_tela.cod_operacao[3,5] <> "914" and
			p_dados_tela.cod_operacao[3,5] <> "915" and
			p_dados_tela.cod_operacao[3,5] <> "916" and
			p_dados_tela.cod_operacao[3,5] <> "917" and
			p_dados_tela.cod_operacao[3,5] <> "918" and
			p_dados_tela.cod_operacao[3,5] <> "919" and
			p_dados_tela.cod_operacao[3,5] <> "920" and
			p_dados_tela.cod_operacao[3,5] <> "921" and
			p_dados_tela.cod_operacao[3,5] <> "923" and
			p_dados_tela.cod_operacao[3,5] <> "924" and
			p_dados_tela.cod_operacao[3,5] <> "925" and
			p_dados_tela.cod_operacao[3,5] <> "949") then
			error "cfop inv�lido para notas de simples remessa."
		next field cod_operacao
	end if
end if
end if
end if
end if
end if
if l_funcao = "modificacao" and m_integra_mensagem then
	exit input
end if

before field cnd_pgto_nf
let l_altera_cond_pagto = true
#--inicio--os 595717 #
if find4glfunction("supy117_consiste_nota_fiscal_transito") then
	if l_funcao = "modificacao" and
		m_nf_eletronica_impr  = true then
		if supy117_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.ies_especie_nf) = true  then

			if fgl_lastkey() = fgl_keyval("up")   or
				fgl_lastkey() = fgl_keyval("left") then
			next field dat_entrada_nf
		else
			exit input
		end if
	end if
end if
else
	if l_funcao = "modificacao" and
		m_nf_eletronica_impr  = true then
		if sup3760_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.cod_operacao) = false then
		else
			if fgl_lastkey() = fgl_keyval("up")   or
				fgl_lastkey() = fgl_keyval("left") then
			next field dat_entrada_nf
			#else
			#   exit input ### comentado com base no chamado tejy56
		end if
	end if
end if
end if
#---fim----os 595717 #

if m_altera_cndpgto_mod_nf_transito = "n" then #555962
	if (p_dados_tela.ies_nf_aguard_nfe = "7" or #os500471
		(m_nf_aguard_nfe_ant is not null and
		m_nf_aguard_nfe_ant = 7)) then
		if p_array_pedidos[1].num_pedido is not null or
			p_array_compl[1].num_pedido is not null then #os500471
			if p_dados_tela.ies_especie_nf <> "nfr" then
			next field ies_impostos
		end if
	end if
end if
end if

if p_dados_tela.ies_especie_nf = "nfr" then
	if p_array_pedidos[1].num_pedido is not null then
		select cnd_pgto
		into l_cnd_pgto
		from pedido_sup
		where pedido_sup.cod_empresa = p_cod_empresa
		and pedido_sup.num_pedido = p_array_pedidos[1].num_pedido
		and pedido_sup.ies_versao_atual = "s"

		select sum(qtd_solic)
		into l_qtd_solic
		from ordem_sup
		where ordem_sup.cod_empresa = p_cod_empresa
		and ordem_sup.num_pedido = p_array_pedidos[1].num_pedido
		and ordem_sup.ies_versao_atual = "s"

		if l_qtd_solic = 0 then
			let p_dados_tela.cnd_pgto_nf = l_cnd_pgto
			display by name p_dados_tela.cnd_pgto_nf
		end if
	end if
end if

#tffiae
let l_sup0964 = false
### tpzkdy - l� condi��o de pagamento, caso seja informado pedido de compra n�o estava alimentando variavel p_ies_pagamento
if p_dados_tela.cnd_pgto_nf is not null then
	let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
	if l_cod_empresa_orig is not null then
		let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
	end if

	let p_ies_pagamento = p_cond_pgto_cap.ies_pagamento
end if

if l_funcao = "modificacao" and p_dados_tela.cnd_pgto_nf is not null then
	whenever error continue
	delete from sup_libr_nf_vencd
	where empresa           = p_cod_empresa
	and nota_fiscal       = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	and usuario_aceite    = " "
	whenever error stop
	if m_qtd_dias_nf_venc is not null and p_ies_pagamento <> "3" then
		call sup3762_verifica_venc_prim_parc() returning l_data_venc

		let l_dat_prx_venc = today + m_qtd_dias_nf_venc

		if l_data_venc < l_dat_prx_venc then
			initialize l_usuario_aceite to null
			whenever error continue
			select usuario_aceite
			into l_usuario_aceite
			from sup_libr_nf_vencd
			where empresa           = p_cod_empresa
			and nota_fiscal       = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and fornecedor        = p_dados_tela.cod_fornecedor
			whenever error stop

			if sqlca.sqlcode <> 0 then
				if l_funcao = "modificacao" then
					let m_grava_sup0964 = true
				end if
				whenever error continue
				insert into sup_libr_nf_vencd values (p_cod_empresa,
				p_dados_tela.num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.ies_especie_nf,
				p_dados_tela.cod_fornecedor,
				p_dados_tela.dat_entrada_nf,
				p_user,
				" ",
				" ",
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("inclusao","sup_libr_nf_vencd")
				else
					### tpzkdy
					error " vencimento nf eh menor que qtde de dias permitido. aprovar no sup0964. "
					let l_sup0964 = true
				end if
			end if
		end if
	end if
end if

if p_ies_informou_ped = "s" then
	if l_primeira_vez then
		let l_cnd_pgto_ped = p_dados_tela.cnd_pgto_nf
		let l_primeira_vez = false
	end if
end if

if l_funcao = "modificacao" then
	if sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
		"n") then
	next field cod_mod_embar
end if

call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
if sup0631_verifica_relac("nf",
	p_nf_sup.num_nf,
	p_nf_sup.ser_nf,
	p_nf_sup.ssr_nf,
	p_nf_sup.cod_fornecedor) = true then
next field cod_mod_embar
end if
end if
let p_seta = "up"

let m_integracao_cre = false

if (p_dados_tela.ies_especie_nf = "nfd" or
	p_ies_tip_entrada = "5" or
	p_nfe_vendas = true) and
	l_funcao = "inclusao" and
	p_ies_prim_cnd = true then
	call sup376_verifica_cli_especial("1") returning p_status

	##se for cliente especial (cobran�a banc�ria), verificar se na devolu��o total
	##dever� efetuar integra��o pelo cre
	if p_status = true then
		if not sup3762_integra_cre_dev_total(m_cod_empresa_uni) then
			##fazer integra��o pelo cap
			let p_ies_prim_cnd = false
		else
			##fazer integra��o pelo cre
			let m_integracao_cre = true
		end if
	end if
end if
if p_nfe_vendas = true and
	p_ies_prim_cnd = true then
	if m_gera_rsv_transf = "s" and
		p_dados_tela.ies_nf_aguard_nfe = "8" then
	else
		### os 511148
		call sup3762_busca_cnd_pgto_nf()
	end if
	if sup376_verifica_cnd_pgto() then
	end if
next field cod_mod_embar
end if
call sup3760_botao_zoom("on",3,68)

### tpzkdy
if p_ies_informou_ped = "s" or
	(l_funcao = "modificacao" and p_ies_nf_transf = false) then
	if m_perm_alt_cnd_emb = "0" and
		m_mod_emb_nf_transf = "s" then

		if m_altera_cndpgto_mod_nf_transito = "n" then #555962
			if not sup3760_verifica_nf_transf() then
				let l_altera_cond_pagto = false
			next field ies_impostos
		else
			let l_altera_cond_pagto = false
		next field cod_mod_embar
	end if
end if
else
	if l_sup0964 = false then  #tffiae
		case m_perm_alt_cnd_emb
		when "0"
		error "empresa nao permite que altere cond.pgto e modo embar"
		let l_altera_cond_pagto = false
	next field ies_impostos
	when "1"
	#nao acontece nada
	when "2"
	#nao acontece nada
	when "3"
	error "empresa nao permite que altere cond. pagamento"
	let l_altera_cond_pagto = false
next field cod_mod_embar
end case
else
	### tpzkdy
	case m_perm_alt_cnd_emb
	when "0"
	let l_altera_cond_pagto = false
next field ies_impostos
when "3"
let l_altera_cond_pagto = false
next field cod_mod_embar
end case
end if
end if
end if
call sup3760_save_cur_field_name('cnd_pgto_nf')

after field cnd_pgto_nf
if not sup3760_valida_cnd_pgto_nf(l_funcao) then
	if fgl_lastkey() <> fgl_keyval("up") and
		fgl_lastkey() <> fgl_keyval("left") then
	next field cnd_pgto_nf
end if
end if

let l_retorno_epl = true

if log_existe_epl("supy3760_after_field_cnd_pgto_nf") then
	call log_setvar('cod_empresa',p_cod_empresa)
	call log_setvar('cod_fornecedor',p_dados_tela.cod_fornecedor)
	call log_setvar('cnd_pgto_nf',p_dados_tela.cnd_pgto_nf)
	call log_setvar('retorno_epl',l_retorno_epl)

	call supy3760_after_field_cnd_pgto_nf()

	let l_retorno_epl = log_getvar('retorno_epl')
end if

if l_retorno_epl = false then
	if fgl_lastkey() <> fgl_keyval("up") and
		fgl_lastkey() <> fgl_keyval("left") then
	next field cnd_pgto_nf
end if
end if

let l_valida_pc = true
if find4glfunction('supy23_valida_pc') then
	let l_valida_pc = supy23_valida_pc()
end if

if sup3760_verifica_nf_transf() and l_funcao = "inclusao" and p_ies_pagamento <> "3" and l_valida_pc = true then
	error "condi��o de pagamento inv�lida para nota de transfer�ncia."
next field cnd_pgto_nf
end if
if p_ies_informou_ped then
	if l_cnd_pgto_ped <> p_dados_tela.cnd_pgto_nf then
		call log0040_confirm(21,04, "cng.pgto difere do pedido. deseja continuar?") returning l_pergunta
		if l_pergunta <> "1" then
		next field cnd_pgto_nf
	end if
end if
end if

whenever error continue
delete from sup_libr_nf_vencd
where empresa           = p_cod_empresa
and nota_fiscal       = p_dados_tela.num_nf
and serie_nota_fiscal = p_dados_tela.ser_nf
and subserie_nf       = p_dados_tela.ssr_nf
and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
and fornecedor        = p_dados_tela.cod_fornecedor
and usuario_aceite    = " "
whenever error stop

if m_qtd_dias_nf_venc is not null and p_ies_pagamento <> "3" then
	call sup3762_verifica_venc_prim_parc() returning l_data_venc

	let l_dat_prx_venc = today + m_qtd_dias_nf_venc

	if l_data_venc < l_dat_prx_venc then
		initialize l_usuario_aceite to null
		whenever error continue
		select usuario_aceite
		into l_usuario_aceite
		from sup_libr_nf_vencd
		where empresa           = p_cod_empresa
		and nota_fiscal       = p_dados_tela.num_nf
		and serie_nota_fiscal = p_dados_tela.ser_nf
		and subserie_nf       = p_dados_tela.ssr_nf
		and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
		and fornecedor        = p_dados_tela.cod_fornecedor
		whenever error stop

		if sqlca.sqlcode <> 0 then
			if l_funcao = "modificacao" then
				let m_grava_sup0964 = true
			end if
			whenever error continue
			insert into sup_libr_nf_vencd values (p_cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.dat_entrada_nf,
			p_user,
			" ",
			" ",
			null)
			whenever error stop

			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","sup_libr_nf_vencd")
			next field cnd_pgto_nf
		else
			error " vencimento nf eh menor que qtde de dias permitido. aprovar no sup0964. "
		next field cnd_pgto_nf
	end if
end if
end if
end if

#tffiae
if p_ies_informou_ped = "s" or
	l_funcao = "modificacao" and
	p_ies_nf_transf = false then
	if m_perm_alt_cnd_emb = "0" and
		m_mod_emb_nf_transf = "s" then

		if m_altera_cndpgto_mod_nf_transito = "n" then #555962
			if not sup3760_verifica_nf_transf() then
				let l_altera_cond_pagto = false
			next field ies_impostos
		else
			let l_altera_cond_pagto = false
		next field cod_mod_embar
	end if
end if
else
	case m_perm_alt_cnd_emb
	when "0"
	error "empresa nao permite que altere cond.pgto e modo embar"
	let l_altera_cond_pagto = false
next field ies_impostos
when "1"
#nao acontece nada
when "2"
#nao acontece nada
when "3"
error "empresa nao permite que altere cond. pagamento"
let l_altera_cond_pagto = false
next field cod_mod_embar
end case
end if
end if
#tffiae

call sup3760_botao_zoom("off",3,68)
if find4glfunction('supy166_verifica_data_valida') then
	if not supy166_verifica_data_valida(p_cod_empresa,
		p_dados_tela.cnd_pgto_nf,
		p_dados_tela.dat_entrada_nf,
		p_dados_tela.cod_fornecedor) then
	next field dat_entrada_nf
end if
end if

before field cod_mod_embar
if m_altera_cndpgto_mod_nf_transito = "n" then #555962
	if (p_dados_tela.ies_nf_aguard_nfe = "7" or #os500471
		(m_nf_aguard_nfe_ant is not null and
		m_nf_aguard_nfe_ant = 7)) then
		if p_array_pedidos[1].num_pedido is not null or
			p_array_compl[1].num_pedido is not null then #os500471
			if p_dados_tela.ies_especie_nf <> "nfr" then
			next field ies_impostos
		end if
	end if
end if
end if

if p_ies_informou_ped = "s" or
	l_funcao = "modificacao" and
	p_ies_nf_transf = false then
	if (m_perm_alt_cnd_emb = "0" or m_perm_alt_cnd_emb = "2") and
		m_mod_emb_nf_transf = "s" then

		if m_altera_cndpgto_mod_nf_transito = "n" then #555962
			if not sup3760_verifica_nf_transf() then
				error "empresa nao permite que altere modo de embarque"
			next field ies_impostos
		end if
	end if
else
	case m_perm_alt_cnd_emb
	when "0"
	error "empresa nao permite que altere cond.pgto e modo embar"
next field ies_impostos
when "1"
#nao acontece nada
when "2"
error "empresa nao permite que altere modo de embarque"
next field ies_impostos
when "3"
#nao acontece nada
end case
end if
end if
call sup3760_botao_zoom("on",3,68)
call sup3760_save_cur_field_name('cod_mod_embar')

after field cod_mod_embar
if p_dados_tela.cod_mod_embar is not null then
	if sup376_verifica_mod_embar() then
		error "modo de embarque nao cadastrado"
	next field cod_mod_embar
else
	if not sup3760_verifica_tip_frete() then
	next field cod_mod_embar
end if
end if
else
	error " informe o modo de embarque."
next field cod_mod_embar
end if
call sup3760_botao_zoom("off",3,68)
if p_nfe_vendas = true or p_nfe_import = true or
	p_nfm_import = true or p_ies_nf_transf = true or
	g_ies_nf_permuta = true  or m_nf_tipo_x = true then ### os 511148
	exit input
end if

before field ies_impostos
call sup3760_save_cur_field_name('ies_impostos')

after field ies_impostos
let p_ies_imp_rendar    = p_ies_imp_renda
let p_ies_imp_issr      = p_ies_imp_iss
let p_ies_imp_ret_inssr = p_ies_imp_ret_inss
let p_ies_imp_inss_rurr = p_ies_imp_inss_rur
let p_ies_imp_renda     = p_dados_tela.ies_impostos
if l_funcao = "modificacao" then
	let p_entra_array = "s"
end if
let l_retorno = false

if log_existe_epl("sup3760y_after_field_ies_impostos") then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl tipo da nota
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('ies_nf_aguard_nfe_ant', p_dados_telar.ies_nf_aguard_nfe)
	#epl tipo da nota
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('funcao', l_funcao)
	#epl fun��o
	#epl tipo: char(30)

	call log_setvar('retorno', l_retorno)
	#epl retorno da entrada de dados
	#epl tipo: smallint

	initialize l_next_field to null
	call log_setvar('next_field', l_next_field)
	#epl fun��o
	#epl tipo: char

	call sup3760y_after_field_ies_impostos()
	let l_retorno    = log_getvar('retorno')
	let l_next_field = log_getvar('next_field')

	if l_next_field is not null then
		case l_next_field
		when "ies_impostos" next field ies_impostos
	end case
end if

if l_retorno then
return true
end if
end if

if  m_bloq_entr_preco = 's' and m_ies_diverg_preco_c = 's'
	and p_ies_informou_ped = 's' and l_funcao = "inclusao" then
	if log0040_confirm(0,0,'carregar informa��es utilizando pre�o bruto?') then
		let m_preco_bruto = "s"
	else
		let m_preco_bruto = "n"
	end if
end if

after input
if int_flag = 0 then
	call sup376_valida_oc_fat(p_cod_empresa, p_dados_tela.ies_especie_nf, m_cod_grp_desp_fat, p_tip_desp_cons_fat)
returning l_status, l_num_oc, l_num_pedido
	if l_status then
		let l_msg = 'oc:', l_num_oc clipped, ' pedido: ', l_num_pedido, ' s�o de consigna��o. esp�cie dever� ser nf ou nff.'
		call log0030_mensagem(l_msg,'exclamation')
	next field ies_especie_nf
end if

#809554
if l_funcao = "modificacao" then
	if mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf or
		mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf or
		mr_dados_tela_ant.ies_especie_nf <> p_dados_tela.ies_especie_nf then
		if sup3760_nota_existe() then
			call log0030_mensagem('nota fiscal j� cadastrada.','exclamation')
		next field ser_nf
	end if
end if
else  #a56550
	if sup3760_nota_existe() then
		call log0030_mensagem('nota fiscal j� cadastrada.','exclamation')
	next field num_nf
end if
end if

if sup3760_existe_h_nf_sup(p_dados_tela.cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf, p_dados_tela.ies_especie_nf, p_dados_tela.cod_fornecedor,
	p_dados_tela.dat_emis_nf) then  #809554
	call log0030_mensagem('nota fiscal j� cadastrada em hist�rico. verifique no sup6280.','stop')
next field num_nf
end if

for p_ind = 1 to arraylength(p_array)
	if p_dados_tela.ies_especie_nf = "nfc" and p_array[p_ind].qtd_declarad_nf is null then
		let p_array[p_ind].qtd_declarad_nf = 0
	end if
end for

if p_dados_tela.cod_fornecedor is not null then
	if sup376_verifica_fornecedor() = false then
		error "fornecedor exclu�do durante a opera��o."
	next field cod_fornecedor
end if
end if

if p_dados_tela.ser_nf is null then
	let p_dados_tela.ser_nf = ' '
end if

if p_dados_tela.ies_especie_nf    = "nfs"
	or p_dados_tela.ies_especie_nf = "rec"
	or p_dados_tela.ies_especie_nf = "doc" then
	if m_cfop_nfs = "s" and
		(p_dados_tela.cod_operacao is null or
		p_dados_tela.cod_operacao = " " ) then
		error "informe cfop para nfs."
	next field cod_operacao
end if
if m_cfop_nfs = "n" and
	p_dados_tela.cod_operacao is not null and
	p_dados_tela.cod_operacao[1] <>  " " then
	let p_dados_tela.cod_operacao = " "
	display by name p_dados_tela.cod_operacao
	error "cfop para nfs deve ser nulo."
next field cod_operacao
end if
end if

if m_tem_valid_fim then
	if  (p_dados_tela.ies_especie_nf = "nfs"
		or   p_dados_tela.ies_especie_nf = "rec"
		or   p_dados_tela.ies_especie_nf = "doc")
		and (p_dados_tela.cod_operacao is null
		or   p_dados_tela.cod_operacao = " ")
		and  (m_cfop_nfs = "n" or m_cfop_nfs = "a") then ### dmanentlgx-208
	else
		if p_dados_tela.dat_entrada_nf > m_dat_fim_valid and
			p_dados_tela.cod_operacao[5] = " " then
			error "cfop inv�lido para per�odo conforme nova legisla��o."
		next field cod_operacao
	end if
end if
end if

initialize l_status, p_ies_tip_entrada, m_ies_obj_entrada to null
call sup0686_retorna_tip_obj_entrada(p_dados_tela.cod_operacao,
p_dados_tela.cod_fiscal_compl)
returning l_status,
p_ies_tip_entrada,
m_ies_obj_entrada

if p_dados_tela.ies_especie_nf = "con" and
	m_ies_obj_entrada <> "7" then
	error "cfop n�o cadastrado como frete. verifica objetivo deve ser igual a '7'."
next field cod_operacao
end if

if (p_dados_tela.ies_especie_nf <> "con" and p_dados_tela.ies_especie_nf <> "nfe")
	and m_ies_obj_entrada = "7" then
### tevp32 - caso seja nfc e possua uf origem ser� considerado como se fosse uma nota tipo con.
	if p_dados_tela.ies_especie_nf = "nfc" then
		whenever error continue
		select parametro
		from sup_par_ar
		where empresa = p_cod_empresa
		and aviso_recebto = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro = 'uf_origem'
		whenever error stop
		if sqlca.sqlcode = 0 then
		else
			call log0030_mensagem("cfop cadastrado como frete, por�m esp�cie da nota fiscal � diferente de con/nfe.","exclamation")
		next field cod_operacao
	end if
else
	call log0030_mensagem("cfop cadastrado como frete, por�m esp�cie da nota fiscal � diferente de con/nfe.","exclamation")
next field cod_operacao
end if
end if

if not sup3760_verifica_cadastro_sup1785(l_funcao, l_cod_fisc_ant) then #o.s. 550997
next field cod_operacao
end if

if m_serie_branca = "s" then
	if p_dados_tela.ser_nf is null then
		let p_dados_tela.ser_nf = " "
	end if
else
	if p_dados_tela.ser_nf is null or
		p_dados_tela.ser_nf = " " then
		error "informe o n�mero da s�rie da nota."
	next field ser_nf
end if
end if

#-- os sdjuoc inicio --#
if log_existe_epl("sup3760y_after_input") then
	call log_setvar("ies_especie_nf", p_dados_tela.ies_especie_nf)
	call log_setvar("ser_nf", p_dados_tela.ser_nf)
	call log_setvar('dat_emis', p_dados_tela.dat_emis_nf)

	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('cod_operacao', p_dados_tela.cod_operacao)
	#epl codigo do cfop
	#epl tipo: nf_sup.cod_operacao

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('num_nf', p_dados_tela.num_nf)
	#epl numero da nota fiscal
	#epl tipo: nf_sup.num_nf

	call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
	#epl subserie da nota fiscal
	#epl tipo: nf_sup.ssr_nf

	call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
	#epl codigo do fornecedor
	#epl tipo: nf_sup.cod_fornecedor

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl tipo da nota fiscal
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call log_setvar('cod_operac_estoq', p_dados_tela.cod_operac_estoq)
	#epl operacao de estoque
	#epl tipo: estoque_operac.cod_operacao

	call log_setvar('funcao', l_funcao)
	#epl opera��o que est� sendo executada (inclus�o, modifica��o)
	#epl tipo: char(20)

	let l_next_field = null
	call log_setvar('next_field', l_next_field)
	#epl campo para dar next field
	#epl tipo: char(20)

	let l_ser_nf_epl = null
	call log_setvar('ser_nf_epl', l_ser_nf_epl)
	#epl campo para dar next field para a ser_nf
	#epl tipo: char(01)

	if not sup3760y_after_input() then
		let l_next_field = log_getvar('next_field')
		let l_ser_nf_epl = log_getvar('ser_nf_epl')

		if l_next_field is not null then
			case l_next_field
			when "cod_operacao" next field cod_operacao
			when "cod_fornecedor" next field cod_fornecedor
		end case
	end if

	if l_ser_nf_epl is null then
	next field ser_nf
end if
end if

end if
#-- os sdjuoc fim --#

if p_dados_tela.dat_emis_nf is not null then
	if p_dados_tela.dat_emis_nf > today then
		error "data emiss�o nota fiscal n�o pode ser maior que data atual."
	next field dat_emis_nf
end if
if p_dados_tela.dat_emis_nf < p_par_sup.dat_fecha_ultimo then
	error "data emiss�o nf. menor que �ltimo fechamento fiscal."
	if not log004_confirm(12,43) then
	next field dat_emis_nf
end if
end if
if p_cons_data = true then
	if p_dados_tela.dat_emis_nf < (today - p_qtd_dias_emis_doc) then
		error "data de emiss�o menor que data atual menos qtd. dias de emiss�o do par�metro."
	next field dat_emis_nf
end if
end if
else
	error "digite a data de emiss�o da nota fiscal."
next field dat_emis_nf
end if

if l_funcao = "inclusao" then
	if m_mes_fecha_01 = "s" then
		if p_par_sup.dat_fecha_ultimo >= today then
			let p_dados_tela.dat_entrada_nf = p_par_sup.dat_fecha_ultimo + 1 units day
			### verifica se eh um dia util
			let l_ies_dia_semana = weekday(p_dados_tela.dat_entrada_nf)
			case l_ies_dia_semana
			when 0 #domingo
			let p_dados_tela.dat_entrada_nf = p_dados_tela.dat_entrada_nf + 1 units day
			when 1 #segunda
			when 2 #terca
			when 3 #quarta
			when 4 #quinta
			when 5 #sexta
			when 6 #sabado
			let p_dados_tela.dat_entrada_nf = p_dados_tela.dat_entrada_nf + 2 units day
		end case
		let l_dat_ant = p_dados_tela.dat_entrada_nf
	end if
end if
else
	let l_dat_ant = p_dados_tela.dat_entrada_nf
end if

if m_mes_fecha_01 = "s" and
	p_par_sup.dat_fecha_ultimo >= today then
	if l_dat_ant <> p_dados_tela.dat_entrada_nf then
		let p_dados_tela.dat_entrada_nf = l_dat_ant
		display by name p_dados_tela.dat_entrada_nf
		error "data de entrada n�o pode ser alterada. m�s com recebimento fechado."
	end if
else
	if p_dados_tela.dat_entrada_nf > today then
		error "data da entrada n�o pode ser maior que data atual."
	next field dat_entrada_nf
end if
end if

if p_dados_tela.dat_emis_nf > p_dados_tela.dat_entrada_nf then
	error "data emiss�o nota fiscal n�o pode ser maior que data da entrada."
next field dat_emis_nf
end if
if p_par_sup.qtd_dias_incl_nf is not null then
	if p_dados_tela.dat_entrada_nf <
		(today + 1 - p_par_sup.qtd_dias_incl_nf) then
		error "data de entrada da nota fiscal inferior ao limite de toler�ncia do par_sup."
	next field dat_entrada_nf
end if
end if
if p_dados_tela.dat_entrada_nf <= p_par_sup.dat_fecha_ult_ipi or
	p_dados_tela.dat_entrada_nf <= p_par_sup.dat_fecha_ultimo then
	error "data entrada nf. deve ser maior que o �ltimo fechamento ipi/fiscal."
next field dat_entrada_nf
end if

if p_dados_tela.dat_entrada_nf is null or
	p_dados_tela.dat_entrada_nf = " " then
	error "informe a data de entrada da nota fiscal."
next field dat_entrada_nf
end if

### trtz43
if p_dados_tela.ies_nf_aguard_nfe <> "7" then
	if not supr6_integracao_batch(p_nf_sup.cod_empresa) and
		supr6_data_posterior_data_corte_logix_10(p_nf_sup.cod_empresa,
		p_dados_tela.dat_entrada_nf) then

		if not supr6_validacao_data_inicial_e_final_processamento(p_nf_sup.cod_empresa,
			p_dados_tela.dat_entrada_nf,
			p_dados_tela.dat_entrada_nf,
			"manual",
			false) then
		next field dat_entrada_nf
	end if
end if
end if

if m_valida_data_oc_ar = 's' then
	if not sup3760_valida_data_oc_ar() then
	next field dat_entrada_nf
end if
end if

if m_empr_utiliz_mp66 = "r" then
	if not sup3760_busca_pct_bc_pis() then
	next field dat_entrada_nf
end if
end if

if sup376_verifica_cnd_pgto() then
	error "condi��o de pagamento n�o cadastrada."
next field cnd_pgto_nf
end if
if p_dados_tela.ies_especie_nf = "nfr" and
	p_array_pedidos[1].num_pedido is not null and
	l_qtd_solic <> 0 and
	p_ies_pagamento <> "3" then
	error "condi��o de pagamento inv�lida para a esp�cie."
next field cnd_pgto_nf
end if
if p_dados_tela.ies_especie_nf = "nfr" and
	p_ies_pagamento = "3" and
	l_qtd_solic = 0 and
	p_array_pedidos[1].num_pedido is not null then
	error "nf de compl. de consigna��o , condi��o dever� ser c/ pgto."
next field cnd_pgto_nf
end if

if not sup3760_valida_cnd_pgto_nf(l_funcao) then
next field cnd_pgto_nf
end if

whenever error continue
delete from sup_libr_nf_vencd
where empresa           = p_cod_empresa
and nota_fiscal       = p_dados_tela.num_nf
and serie_nota_fiscal = p_dados_tela.ser_nf
and subserie_nf       = p_dados_tela.ssr_nf
and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
and fornecedor        = p_dados_tela.cod_fornecedor
and usuario_aceite    = " "
whenever error stop

if m_qtd_dias_nf_venc is not null and p_ies_pagamento <> "3" then
	call sup3762_verifica_venc_prim_parc() returning l_data_venc

	let l_dat_prx_venc = today + m_qtd_dias_nf_venc

	if l_data_venc < l_dat_prx_venc then
		initialize l_usuario_aceite to null
		whenever error continue
		select usuario_aceite
		into l_usuario_aceite
		from sup_libr_nf_vencd
		where empresa           = p_cod_empresa
		and nota_fiscal       = p_dados_tela.num_nf
		and serie_nota_fiscal = p_dados_tela.ser_nf
		and subserie_nf       = p_dados_tela.ssr_nf
		and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
		and fornecedor        = p_dados_tela.cod_fornecedor
		whenever error stop

		if sqlca.sqlcode <> 0 then
			if l_funcao = "modificacao" then
				let m_grava_sup0964 = true
			end if
			whenever error continue
			insert into sup_libr_nf_vencd values (p_cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.dat_entrada_nf,
			p_user,
			" ",
			" ",
			null)
			whenever error stop

			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","sup_libr_nf_vencd")
				if l_altera_cond_pagto then
				next field cnd_pgto_nf
			end if
		else
			error "vencimento nf � menor que qtde de dias permitido. aprovar no sup0964."
			if l_altera_cond_pagto then
			next field cnd_pgto_nf
		end if
	end if
end if
end if
end if

if p_dados_tela.cod_mod_embar is null then
	error "informe o modo de embarque."
next field cod_mod_embar
end if
if sup376_verifica_mod_embar() then
	error "modo de embarque n�o cadastrado."
next field cod_mod_embar
end if

let p_ies_imp_renda     = p_dados_tela.ies_impostos
let p_ies_imp_rendar    = p_ies_imp_renda
let p_ies_imp_issr      = p_ies_imp_iss
let p_ies_imp_ret_inssr = p_ies_imp_ret_inss
let p_ies_imp_inss_rurr = p_ies_imp_inss_rur
if l_funcao = "modificacao" then
	let p_entra_array = "s"
else
	#os 220554
	if not sup3760_consiste_pedido_nf() then
	next field num_nf
end if
end if
### os 159597 ###
if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
	whenever error continue
	let m_num_pesagem = 0
	select count(*)
	into m_num_pesagem
	from sup_ctr_balanca
	where empresa           = p_cod_empresa
	and num_docum         = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	and seq_nota_fiscal   > 0
	and tip_pesagem       = "1"
	and aviso_recebto     is null
	if m_num_pesagem > 0 then
		error "existem pesagens referentes a essa nf. deseja continuar?"
		if log004_confirm(21,44) then
		else
		next field num_nf
	end if
end if
whenever error stop
end if

if l_funcao = "inclusao" then
	if sup376_verifica_nota_fiscal(l_funcao)   then
	next field num_nf
end if
end if

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if m_wms_instal = "s" and l_funcao = "inclusao" then
	# passo 13 #
	if p_dados_tela.ies_nf_aguard_nfe = "b" then
		if not wms6133_verifica_dados_primeira_nf(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.cod_fornecedor) then
			let int_flag = 0
		next field num_nf
	end if
end if
end if

#--inicio--os 607387 #
if sup3760_valida_nf_cadastrada() = true then
next field dat_emis_nf
end if
call log006_exibe_teclas("01 02 03 07",p_versao)
current window is w_sup37601
#---fim----os 607387 #

if log_existe_epl("wmsy24_inf_di_bl") then
	if m_wms_instal = 's' and p_dados_tela.ies_nf_aguard_nfe = "b" then
		whenever error continue
		select 1
		from wms_parametro_complementar
		where nom_parametro = 'controla_di_bl'
		and empresa       = p_cod_empresa
		and depositante   = p_dados_tela.cod_fornecedor
		and val_flag      = 's'
		whenever error stop

		if sqlca.sqlcode = 0 then
			call wmsy24_inf_di_bl(p_dados_tela.num_aviso_rec)
		end if
	end if
end if

initialize m_nf_anulacao to null #terbd0
let l_contribte = '1'
if (m_operacao_gtc = 1 or m_operacao_gtc = 3) #terbd0
	and (p_dados_tela.ies_especie_nf = 'nfd' or p_ies_tip_entrada = '5')  then

	whenever error continue
	select par_ind_especial
	into m_nf_anulacao
	from sup_par_ar
	where empresa = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = '0'
	and parametro = 'anulacao_tms'
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("leitura","sup_par_ar")
		return false
	end if
	if m_nf_anulacao is null or m_nf_anulacao <> '1' then
		whenever error continue
		#-in�cio ch-tvilh5-#
		select distinct 0
		into l_contribte
		from clientes, fornecedor
		where clientes.num_cgc_cpf = fornecedor.num_cgc_cpf
		and fornecedor.cod_fornecedor = p_dados_tela.cod_fornecedor
		and exists (select 1
		from omc_emitente
		where emitente = clientes.cod_cliente
		and contribte <> '1')
		#-fim ch-tvilh5-#
		whenever error stop
		if sqlca.sqlcode <> 0 and
			sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","omc_emitente")
			return false
		end if
		if l_contribte <> 1 then
			if log0040_confirm(0,0,'a nota � uma anula��o de conhecimento de transporte?') then
				let m_nf_anulacao = '1'
			else
				let m_nf_anulacao = '0'
			end if
		end if
	end if
end if #terbd0
end if

on key (control-z, f4)
call sup376_popups(l_funcao)

on key (control-c)
let int_flag = 1
exit input

end input

call sup3760_botao_zoom("off",3,68)
call log006_exibe_teclas("01", p_versao)
current window is w_sup37601

if l_houve_erro = true or int_flag <> 0 then
return false
end if

if l_funcao <> "modificacao" then
	if p_retorno_3760 = false then
		let int_flag = 0
		return false
	end if
end if

if int_flag = 0 then
	if l_funcao = "modificacao" then
		if p_entra_array = "n" and m_nfe_cce <> true then

			# ch 739942 - rafael f. b. - 12/01/2010 #
			if l_alt_cod_operacao then
				if sup376_insere_totais(l_funcao) then
					return true
				else
					return false
				end if
			end if

			if p_cnd_pgto_salva = p_dados_tela.cnd_pgto_nf then
				return true
			end if

		end if
	end if
end if

let g_ser_mark = false
whenever error continue
select serie
from man_moviment_serie
where num_docum = p_dados_tela.num_nf
whenever error stop
if sqlca.sqlcode = 0 or
	sqlca.sqlcode = -284 then
	let g_ser_mark = true
end if

if int_flag = 0 then
	if p_nfe_vendas = true and
		g_ser_mark = false then
		return true
	else
		if g_ser_mark = true and
			l_funcao = 'inclusao' and
			(p_dados_tela.ies_especie_nf = "nfe" or
			(p_dados_tela.ies_especie_nf = "nfd" and
			(p_dados_tela.ies_nf_aguard_nfe = "6" or
			p_dados_tela.ies_nf_aguard_nfe = "1" or
### os 358438
			p_dados_tela.ies_nf_aguard_nfe = "9"))) then
			if l_nf_mestre_ser = true then
				let m_ind_mark = 1


				### try819
				if l_trans_nf_fiscal is not null and
					l_trans_nf_fiscal <> 0 then
					let l_sql_stmt = " select item, ",
					" qtd_item, ",
					" unid_medida, ",
					" preco_unit_liquido, ",
					" val_liquido_item ",
					" from fat_nf_mestre, fat_nf_item ",
					" where fat_nf_mestre.empresa            = """, p_cod_empresa, """ ",
					" and fat_nf_mestre.trans_nota_fiscal   = ",l_trans_nf_fiscal, ### try819
					" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
					" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal "
				else
					### try819 - se a s�rie estiver cadastrada na fat_info_fecha_cf deve pesquisa se � nota normal ou cupom fiscal
					if m_nfd_cupom_fiscal = true then
						let l_sql_stmt = " select item, ",
						" qtd_item, ",
						" unid_medida, ",
						" preco_unit_liquido, ",
						" val_liquido_item ",
						" from fat_nf_mestre, fat_nf_item ",
						" where fat_nf_mestre.empresa            = """, p_cod_empresa, """ ",
						" and fat_nf_mestre.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
						" and fat_nf_mestre.serie_nota_fiscal  = """, p_dados_tela.ser_nf, """ ",
						" and fat_nf_mestre.subserie_nf        = ",p_dados_tela.ssr_nf," ",
						" and fat_nf_mestre.tip_nota_fiscal = ""fatecf"" ", ### try819
						" and fat_nf_mestre.sit_nota_fiscal    = ""n"" ",
						" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
						" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal "
					else
						let l_sql_stmt = " select item, ",
						" qtd_item, ",
						" unid_medida, ",
						" preco_unit_liquido, ",
						" val_liquido_item ",
						" from fat_nf_mestre, fat_nf_item ",
						" where fat_nf_mestre.empresa            = """, p_cod_empresa, """ ",
						" and fat_nf_mestre.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
						" and fat_nf_mestre.serie_nota_fiscal  = """, p_dados_tela.ser_nf, """ ",
						" and fat_nf_mestre.subserie_nf        = ",p_dados_tela.ssr_nf," ",
						" and fat_nf_mestre.tip_nota_fiscal = ""fatprdsv"" ", ### try819
						" and fat_nf_mestre.sit_nota_fiscal    = ""n"" ",
						" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
						" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal "
					end if
				end if

				whenever error continue
				prepare var_query from l_sql_stmt
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("prepare","var_query")
				end if

				whenever error continue
				declare cq_nf_it_ser cursor for var_query
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("declare","cq_nf_it_ser")
				end if

				whenever error continue
				foreach cq_nf_it_ser into l_cod_item,
				l_qtd_item,
				l_cod_unid_med,
				l_pre_unit_nf,
				l_val_liq_item
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("foreach","cq_nf_it_ser")
				end if

				let p_array[m_ind_mark].seq               = m_ind_mark
				let p_array[m_ind_mark].cod_item          = l_cod_item
				let p_array[m_ind_mark].qtd_declarad_nf   = l_qtd_item
				let p_array[m_ind_mark].cod_unid_med_nf   = l_cod_unid_med
				let p_array[m_ind_mark].pre_unit_nf       = l_pre_unit_nf
				let p_array[m_ind_mark].val_liquido_item  = l_val_liq_item

				let m_ind_mark = m_ind_mark + 1
			end foreach

			let m_ind_mark = m_ind_mark - 1

			call set_count(m_ind_mark)
			display array p_array to s_sup37601.*
		else
			if l_nf_mestre = true then
				let m_ind_mark = 1
				### try819
				if l_trans_nf_fiscal is not null and
					l_trans_nf_fiscal <> 0 then
					let l_sql_stmt =
					" select item, ",
					" qtd_item, ",
					" unid_medida, ",
					" preco_unit_liquido, ",
					" val_liquido_item ",
					" from fat_nf_mestre, fat_nf_item ",
					" where fat_nf_mestre.empresa            = """, p_cod_empresa, """ ",
					" and fat_nf_mestre.trans_nota_fiscal  = ", l_trans_nf_fiscal,
					" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
					" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal "
				else
					### try819 - se a s�rie estiver cadastrada na fat_info_fecha_cf deve pesquisa se � nota normal ou cupom fiscal
					if m_nfd_cupom_fiscal = true then
						let l_sql_stmt =
						" select item, ",
						" qtd_item, ",
						" unid_medida, ",
						" preco_unit_liquido, ",
						" val_liquido_item ",
						" from fat_nf_mestre, fat_nf_item ",
						" where fat_nf_mestre.empresa            = """, p_cod_empresa, """ ",
						" and fat_nf_mestre.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
						" and fat_nf_mestre.serie_nota_fiscal  = """, p_dados_tela.ser_nf, """ ",
						" and fat_nf_mestre.subserie_nf        = ",p_dados_tela.ssr_nf," ",
						" and fat_nf_mestre.tip_nota_fiscal    = ""fatecf"" ", ### try819
						" and fat_nf_mestre.sit_nota_fiscal    = ""n"" ",
						" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
						" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal "
					else
						let l_sql_stmt =
						" select item, ",
						" qtd_item, ",
						" unid_medida, ",
						" preco_unit_liquido, ",
						" val_liquido_item ",
						" from fat_nf_mestre, fat_nf_item ",
						" where fat_nf_mestre.empresa            = """, p_cod_empresa, """ ",
						" and fat_nf_mestre.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
						" and fat_nf_mestre.serie_nota_fiscal  = """, p_dados_tela.ser_nf, """ ",
						" and fat_nf_mestre.subserie_nf        = ",p_dados_tela.ssr_nf," ",
						" and fat_nf_mestre.tip_nota_fiscal    = ""fatprdsv"" ", ### try819
						" and fat_nf_mestre.sit_nota_fiscal    = ""n"" ",
						" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
						" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal "
					end if
				end if

				whenever error continue
				prepare var_nf_it from l_sql_stmt
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("prepare","var_nf_it")
				end if

				whenever error continue
				declare cl_nf_it cursor for var_nf_it
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("declare","cl_nf_it")
				end if

				whenever error continue
				foreach cl_nf_it into l_cod_item,
				l_qtd_item,
				l_cod_unid_med,
				l_pre_unit_nf,
				l_val_liq_item
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("foreach","cl_nf_it")
				end if

				let p_array[m_ind_mark].seq               = m_ind_mark
				let p_array[m_ind_mark].cod_item          = l_cod_item
				let p_array[m_ind_mark].qtd_declarad_nf   = l_qtd_item
				let p_array[m_ind_mark].cod_unid_med_nf   = l_cod_unid_med
				let p_array[m_ind_mark].pre_unit_nf       = l_pre_unit_nf
				let p_array[m_ind_mark].val_liquido_item  = l_val_liq_item

				let m_ind_mark = m_ind_mark + 1
			end foreach
			free cl_nf_it

			let m_ind_mark = m_ind_mark - 1

			call set_count(m_ind_mark)
			display array p_array to s_sup37601.*
		else
			if l_nf_mestre_hist = true then
				let m_ind_mark = 1
				### try819 - se a s�rie estiver cadastrada na fat_info_fecha_cf deve pesquisa se � nota normal ou cupom fiscal
				if m_nfd_cupom_fiscal = true then
					let l_sql_stmt =
					" select item, ",
					" qtd_item, ",
					" unid_medida, ",
					" preco_unit_liquido, ",
					" val_liquido_item ",
					" from fat_nf_mestre_hist, fat_nf_item_hist ",
					" where fat_nf_mestre_hist.empresa            = """, p_cod_empresa, """ ",
					" and fat_nf_mestre_hist.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
					" and fat_nf_mestre_hist.serie_nota_fiscal  = """, p_dados_tela.ser_nf, """ ",
					" and fat_nf_mestre_hist.subserie_nf        = ",p_dados_tela.ssr_nf," ",
					" and fat_nf_mestre_hist.tip_nota_fiscal    = ""fatecf"" ", ### try819
					" and fat_nf_mestre_hist.sit_nota_fiscal    = ""n"" ",
					" and fat_nf_item_hist.empresa              = fat_nf_mestre_hist.empresa ",
					" and fat_nf_item_hist.trans_nota_fiscal    = fat_nf_mestre_hist.trans_nota_fiscal "
				else
					let l_sql_stmt =
					" select item, ",
					" qtd_item, ",
					" unid_medida, ",
					" preco_unit_liquido, ",
					" val_liquido_item ",
					" from fat_nf_mestre_hist, fat_nf_item_hist ",
					" where fat_nf_mestre_hist.empresa            = """, p_cod_empresa, """ ",
					" and fat_nf_mestre_hist.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
					" and fat_nf_mestre_hist.serie_nota_fiscal  = """, p_dados_tela.ser_nf, """ ",
					" and fat_nf_mestre_hist.subserie_nf        = ",p_dados_tela.ssr_nf," ",
					" and fat_nf_mestre_hist.tip_nota_fiscal = ""fatprdsv"" ", ### try819
					" and fat_nf_mestre_hist.sit_nota_fiscal    = ""n"" ",
					" and fat_nf_item_hist.empresa              = fat_nf_mestre_hist.empresa ",
					" and fat_nf_item_hist.trans_nota_fiscal    = fat_nf_mestre_hist.trans_nota_fiscal "
				end if

				whenever error continue
				prepare var_nf_it_hist from l_sql_stmt
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("prepare","var_nf_it_hist")
				end if

				whenever error continue
				declare cl_nf_it_hist cursor for var_nf_it_hist
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("declare","cl_nf_it_hist")
				end if

				whenever error continue
				foreach cl_nf_it_hist into l_cod_item,
				l_qtd_item,
				l_cod_unid_med,
				l_pre_unit_nf,
				l_val_liq_item
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("foreach","cl_nf_it_hist")
				end if

				let p_array[m_ind_mark].seq               = m_ind_mark
				let p_array[m_ind_mark].cod_item          = l_cod_item
				let p_array[m_ind_mark].qtd_declarad_nf   = l_qtd_item
				let p_array[m_ind_mark].cod_unid_med_nf   = l_cod_unid_med
				let p_array[m_ind_mark].pre_unit_nf       = l_pre_unit_nf
				let p_array[m_ind_mark].val_liquido_item  = l_val_liq_item

				let m_ind_mark = m_ind_mark + 1
			end foreach
			free cl_nf_it_hist

			let m_ind_mark = m_ind_mark - 1
			call set_count(m_ind_mark)
			display array p_array to s_sup37601.*
		end if
	end if
end if
end if

if p_nfe_import = true or p_nfm_import = true then
	if p_dados_tela.ies_especie_nf = "nfm" then
		let p_nf_sup.ies_situa_import = "a" #alteracao_nfm_nfp
	else
		if m_ies_utiliz_provisao = "s" and
			m_utiliz_nfm_import = "n" and
			m_num_processo >= m_inicio_provisao then
			let p_nf_sup.ies_situa_import = "e"
		else
			if m_nfp_incl_apos_encerr then
				let p_nf_sup.ies_situa_import = "e"
			else
				let p_nf_sup.ies_situa_import = "a"
			end if
		end if
	end if
	let p_aviso_rec_compl.ies_incl_import = "n"
	call sup376_inicializa_importacao_nf(l_funcao)
	if int_flag = true then
		let int_flag = 0
		return false
	end if
	#-------------nfe/nfm/nfp_importacao--------------#
	call sup3760_carrega_dados_importacao()
end if

if m_exporta_nf = "a" and l_funcao = "inclusao" then
	if not sup3762_inf_conta_corrente("i") then
		return false
	end if
end if

if l_funcao = "modificacao" and m_nf_aguard_nfe_ant = "7" and p_dados_tela.ies_nf_aguard_nfe <> "7" then
	call sup3760_pedido_aberto() returning l_status, l_num_pedido

	if l_status  then
		let l_msg = " pedido de compra ",l_num_pedido using "<<<<<&", " n�o liberado para recebimento."
		error ""
		call log0030_mensagem(l_msg,"info")
		return false
	end if

	if sup3760_consiste_nf_transito() then
		if not sup3760_passa_parametro(l_funcao,
			p_dados_tela.cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.cod_operacao,
			p_dados_tela.cod_fiscal_compl,
			p_dados_tela.dat_emis_nf,
			p_dados_tela.dat_entrada_nf,
			p_dados_tela.cnd_pgto_nf,
			p_dados_tela.cod_mod_embar,
			p_dados_tela.ies_nf_aguard_nfe,
			p_dados_tela.ies_impostos,
			p_dados_tela.cod_emp_benef,
			p_dados_tela.cod_operac_estoq,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf) then
			return false
		end if

		if log_existe_epl('sup3760y_before_process_commit_modificacao_nf_transito') then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl codigo da empresa
			#epl tipo: ordem_sup.cod_empresa

			call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
			#epl numero do ar
			#epl tipo: aviso_rec.num_aviso_rec

			call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
			#epl indicador do tipo da nota fiscal
			#epl tipo: nf_sup.ies_nf_aguard_nfe

			call log_setvar('houve_erro', p_houve_erro)
			#epl indicador se houve erro no processamento
			#epl tipo: smallint

			call sup3760y_before_process_commit_modificacao_nf_transito()
			let p_houve_erro = log_getvar('houve_erro')
			current window is w_sup37601
		end if

		if p_houve_erro = false then
			whenever error continue
			call log085_transacao("commit")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("commit","entrada_dados")
				call log085_transacao("rollback") #os596059
				return false
			end if

			if log_existe_epl('sup3760y_after_commit_modificacao_nf_transito') then
				call log_setvar('cod_empresa', p_cod_empresa)
				#epl codigo da empresa
				#epl tipo: ordem_sup.cod_empresa

				call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
				#epl numero do ar
				#epl tipo: aviso_rec.num_aviso_rec

				call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
				#epl indicador do tipo da nota fiscal
				#epl tipo: nf_sup.ies_nf_aguard_nfe

				call log_setvar('cod_operacao', p_dados_tela.cod_operacao)
				#epl c�digo de opera��o
				#epl tipo: nf_sup.cod_operacao

				call log_setvar('houve_erro', p_houve_erro)
				#epl indicador se houve erro no processamento
				#epl tipo: smallint

				call sup3760y_after_commit_modificacao_nf_transito()
				let p_houve_erro = log_getvar('houve_erro')
				current window is w_sup37601
			end if

			error " aguarde...! efetuando consistencia da nf em tr�nsito. "
			call log1200_executa_programa("sup3771","")

			let m_executou_sup3771 = true

			if m_altera_nfm_7_para_6_aut = 's' and p_dados_tela.ies_especie_nf = 'nfp' then
				call sup3760_verifica_nfm_total()
			end if

			#ler par�metro e verificar se a quantidade da nfm foi totalmente atendida
			whenever error continue #848471
			select {cod_operacao, dat_emis_nf, dat_entrada_nf,
			cnd_pgto_nf, cod_mod_embar,} ies_nf_aguard_nfe
			into {p_dados_tela.cod_operacao, p_dados_tela.dat_emis_nf,
			p_dados_tela.dat_entrada_nf, p_dados_tela.cnd_pgto_nf,
			p_dados_tela.cod_mod_embar,} p_dados_tela.ies_nf_aguard_nfe
			from nf_sup
			where cod_empresa        = p_cod_empresa
			and num_aviso_rec      = p_dados_tela.num_aviso_rec
			whenever error stop

			display by name p_dados_tela.cod_operacao, p_dados_tela.dat_emis_nf,
			p_dados_tela.dat_entrada_nf, p_dados_tela.cnd_pgto_nf,
			p_dados_tela.cod_mod_embar, p_dados_tela.ies_nf_aguard_nfe
		end if
		##return true  848471
	end if
end if

if p_ies_nf_transf = true or g_ies_nf_permuta = true then
return true
else

	if m_wms_instal = 's' then
		if not sup3760_controle_wms(l_funcao) then
			return false
		end if
	else
		### os 511148
		if m_devol_consig_venda_parcial = "s" and
			(l_devol_consig_total = true       or
			g_devol_nf_parcial   = true )    then
			return true
		else
			if find4glfunction('supy146_informa_nf_saida') then
				if m_devol_cliente_parcial = 's' and g_devol_nf_parcial = true then
					if p_array[1].cod_item <> ' ' then
						if sup376_insere_totais(l_funcao) = true then
							return true
						else
							return false
						end if
					else
						if sup376_insere_array(l_funcao) = true then
							if sup376_insere_totais(l_funcao) = true then
								return true
							else
								return false
							end if
						else
							return false
						end if
					end if
				else
					return true
				end if
			else
				if sup376_insere_array(l_funcao) = true then
					if sup376_insere_totais(l_funcao) = true then
						return true
					else
						return false
					end if
				else
					return false
				end if
			end if
		end if
	end if
end if
end if
else
	##o.s 286008 mult.ins.estaduais
	call sup1049_verifica_registros(p_cod_empresa,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.num_aviso_rec,
	"exclusao")
	##o.s 286008 mult.ins.estaduais
	let int_flag = 0
return false
end if

if m_wms_instal = 's' then
	call wmsr75_gera_integracao_ibt_admin(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	m_horario_alteracao_wms,
	current year to second,
	'sup3760',
	p_dados_tela.cod_fornecedor) returning l_status
	# n�o tratar o retorno l_status, pois a execu��o desta rnl n�o poder� afetar o processamento normal do sup. apenas programas wms tratar�o este retorno.
end if

return true # os 561019 - faltava este return true
end function

#-----------------------------------------#
function sup3760_valida_nf_cadastrada()#607387
#-----------------------------------------#
	define l_cliente_97 smallint

	if find4glfunction("supy84_verifica_cliente_97") then
		if supy84_verifica_cliente_97() = true then
			let  l_cliente_97 = true
		else
			let l_cliente_97 = false
		end if
	else
		let l_cliente_97 = false
	end if

	if l_cliente_97 = true then
		whenever error continue
		select nf_sup.cod_empresa
		from nf_sup
		where nf_sup.cod_empresa    = p_cod_empresa
		and nf_sup.num_aviso_rec  <> p_dados_tela.num_aviso_rec
		and nf_sup.num_nf         = p_dados_tela.num_nf
		and nf_sup.ser_nf         = p_dados_tela.ser_nf
		and nf_sup.ies_especie_nf = p_dados_tela.ies_especie_nf
		and nf_sup.cod_fornecedor = p_dados_tela.cod_fornecedor
		and nf_sup.dat_emis_nf    = p_dados_tela.dat_emis_nf
		whenever error stop
		if sqlca.sqlcode = 0 or
			sqlca.sqlcode = -284 then
			call log0030_mensagem('nota fiscal j� cadastrada!','exclamation')
			return true
		else
			whenever error continue
			select nf_sup.cod_empresa
			from nf_sup
			where nf_sup.cod_empresa    = p_cod_empresa
			and nf_sup.num_nf         = p_dados_tela.num_nf
			and nf_sup.ser_nf         <> p_dados_tela.ser_nf
			and nf_sup.ies_especie_nf = p_dados_tela.ies_especie_nf
			and nf_sup.cod_fornecedor = p_dados_tela.cod_fornecedor
			and nf_sup.dat_emis_nf    = p_dados_tela.dat_emis_nf
			whenever error stop
			if sqlca.sqlcode = 0 or
				sqlca.sqlcode = -284 then
				call log0030_mensagem('nota fiscal j� cadastrada!','exclamation')
				return true
			end if
		end if
	end if

return false

end function

#--------------------------------#
function sup376_pc_consignacao()
#--------------------------------#

	define p_conta_consig smallint

	if p_tip_desp_cons_fat is null or
		p_tip_desp_cons_fat = 0 then
		return false
	end if

	whenever error continue

	let p_conta_consig = 0

	select count(*)
	into p_conta_consig
	from ordem_sup
	where cod_empresa     = p_cod_empresa
	and num_pedido      = p_array_pedidos[1].num_pedido
	and cod_fornecedor  = p_dados_tela.cod_fornecedor
	and cod_tip_despesa = p_tip_desp_cons_fat

	if p_conta_consig > 0 then
		return true
	else
		return false
	end if

	whenever error stop

end function

#----------------------------------------#
function sup376_insere_totais(p_funcao)
#----------------------------------------#
	define p_funcao             char(30)
	define p_ies_incl_cap2      char(01),
	p_ies_incl_contab    char(01),
	l_val_ipi_nf         decimal(17,2),
	l_val_tot_icms_nf_d  decimal(17,2),
	l_val_tot_nf_d       decimal(17,2),
	l_desc_imposto       char(14)

	define l_alt_tot_icms_nf_d  smallint

	initialize p_ies_incl_cap2, p_ies_incl_contab, l_desc_imposto to null

	let p_funcao_menu = p_funcao
	call log006_exibe_teclas("01 02 03 07", p_versao)
	current window is w_sup37601
	if p_funcao <> "modificacao" then
		if p_nfe_import = true or p_nfm_import = true or (p_dados_tela.ies_especie_nf = 'nfd' and find4glfunction('wmsy18_vincula_q04') and m_wms_q04 is not null) then
		else
			let p_dados_tela_f.val_ipi_nf        = 0
			let p_dados_tela_f.val_tot_icms_nf_d = 0
			let p_dados_tela_f.val_tot_nf_d      = 0
		end if
	else
		# ch 739942 - rafael f. b. - 11/01/2010 #
		let l_alt_tot_icms_nf_d = false

		if m_permite_alt_inf_compl_nf_cap = "s" and m_existe_cap then
			let l_alt_tot_icms_nf_d = true
		end if
	end if

	if sup3760_verifica_desconto_acrescimo_nf() then
		let p_dados_tela_f.ies_desc_acres = "s"
	else let p_dados_tela_f.ies_desc_acres = "n"
	end if

### terbst - colocado em coment�rio pois se for nfc de ipi este deve ser informado no total da nota
#if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
#                             p_cod_empresa,
#                             p_dados_tela.num_aviso_rec) then
#   let p_dados_tela_f.val_tot_nf_d = 0
#end if


	input by name p_dados_tela_f.* without defaults

	before input
	let l_val_ipi_nf = p_dados_tela_f.val_ipi_nf
	let l_val_tot_icms_nf_d  = p_dados_tela_f.val_tot_icms_nf_d
	let l_val_tot_nf_d = p_dados_tela_f.val_tot_nf_d

	before field val_ipi_nf
	# ch 739942 - rafael f. b. - 12/01/2010 #
	if p_funcao = "modificacao" then
		if l_alt_tot_icms_nf_d then
		next field val_tot_icms_nf_d
	else
		if p_entra_tot = "n" then
			exit input
		end if
	end if
end if
#      let l_val_ipi_nf = p_dados_tela_f.val_ipi_nf

call sup3760_save_cur_field_name('val_ipi_nf')
after field val_ipi_nf
if p_dados_tela_f.val_ipi_nf is null or
	p_dados_tela_f.val_ipi_nf = " " then
	error "informe total de ipi"
next field val_ipi_nf
end if
if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(1) then
		if l_val_ipi_nf <> p_dados_tela_f.val_ipi_nf then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_dados_tela_f.val_ipi_nf = l_val_ipi_nf
			display p_dados_tela_f.val_ipi_nf to val_ipi_nf
		next field val_ipi_nf
	end if
end if
end if

before field val_tot_icms_nf_d
#      let l_val_tot_icms_nf_d  = p_dados_tela_f.val_tot_icms_nf_d
call sup3760_save_cur_field_name('val_tot_icms_nf_d')

after field val_tot_icms_nf_d
if p_dados_tela_f.val_tot_icms_nf_d is null or
	p_dados_tela_f.val_tot_icms_nf_d = " " then
	error "informe total de icms"
next field val_tot_icms_nf_d
end if
if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(1) then
		if l_val_tot_icms_nf_d <> p_dados_tela_f.val_tot_icms_nf_d then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_dados_tela_f.val_tot_icms_nf_d = l_val_tot_icms_nf_d
			display p_dados_tela_f.val_tot_icms_nf_d to val_tot_icms_nf_d
		next field val_tot_icms_nf_d
	end if
end if

# ch 739942 - rafael f. b. - 12/01/2010 #
if l_alt_tot_icms_nf_d then
	exit input
end if
end if

before field val_tot_nf_d
if p_funcao = "modificacao" then
	if sup3760_verifica_devolucao("modif") = true then
	next field ies_desc_acres
end if
call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)
if sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
	"n") then
	if fgl_lastkey() = fgl_keyval("up") or
		fgl_lastkey() = fgl_keyval("left") then
	next field val_tot_icms_nf_d
else
	call log_setvar('ies_especie_nf',p_nf_sup.ies_especie_nf)
	if sup0631_verifica_relac("nf",
		p_nf_sup.num_nf,
		p_nf_sup.ser_nf,
		p_nf_sup.ssr_nf,
		p_nf_sup.cod_fornecedor) = true then
	next field val_tot_icms_nf_d
else
next field ies_desc_acres
end if
end if
end if
end if
#      let l_val_tot_nf_d = p_dados_tela_f.val_tot_nf_d

call sup3760_save_cur_field_name('val_tot_nf_d')
after field val_tot_nf_d
### terbst - colocado em coment�rio pois se for nfc de ipi este deve ser informado no total da nota
#      if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
#                                   p_cod_empresa,
#                                   p_dados_tela.num_aviso_rec) then
#         if p_dados_tela_f.val_tot_nf_d > 0 then
#            let p_dados_tela_f.val_tot_nf_d = 0
#            display p_dados_tela_f.val_tot_nf_d to val_tot_nf_d
#            call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter valor informado.","exclamation")
#             next field val_tot_nf_d
#         end if
#      end if
if p_dados_tela_f.val_tot_nf_d is null or
	p_dados_tela_f.val_tot_nf_d = " " then
	error "informe total da nf"
next field val_tot_nf_d
end if
if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(1) then
		if l_val_tot_nf_d <> p_dados_tela_f.val_tot_nf_d then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_dados_tela_f.val_tot_nf_d = l_val_tot_nf_d
			display p_dados_tela_f.val_tot_nf_d to val_tot_nf_d
		next field val_tot_nf_d
	end if
end if

if p_dados_tela_f.val_tot_nf_d <> l_val_tot_nf_d then
	if sup3762_verifica_impostos_ja_pagos() then
	next field val_tot_nf_d
end if
end if
end if

before field ies_desc_acres
#if p_funcao <> "inclusao" then
#   exit input
#end if
call sup3760_save_cur_field_name('ies_desc_acres')

after field ies_desc_acres
if p_dados_tela_f.ies_desc_acres is not null and
	p_dados_tela_f.ies_desc_acres <> " "      then
	if (p_dados_tela_f.ies_desc_acres = "s" and p_funcao = "inclusao")
		or (p_dados_tela_f.ies_desc_acres = "s" and p_funcao = "modificacao" and sup3760_verifica_desconto_acrescimo_nf() = false)
		or (p_dados_tela_f.ies_desc_acres = "n" and p_funcao = "modificacao" and sup3760_verifica_desconto_acrescimo_nf() = true)then
		call log0030_mensagem("deve-se informar apenas 'i' (desc/acresc por item) ou 't' (desc/acres geral) para efetuar manuten��o dos descontos/acr�scimos.","info")
	next field ies_desc_acres
end if
else
	call log0030_mensagem(" informe (t) ou (i).","info")
next field ies_desc_acres
end if

after input
if not int_flag then
	if p_dados_tela_f.val_ipi_nf is null or
		p_dados_tela_f.val_ipi_nf = " " then
		error "informe total de ipi"
	next field val_ipi_nf
end if
if p_dados_tela_f.val_tot_icms_nf_d is null or
	p_dados_tela_f.val_tot_icms_nf_d = " " then
	error "informe total de icms"
next field val_tot_icms_nf_d
end if
if p_dados_tela_f.val_tot_nf_d is null or
	p_dados_tela_f.val_tot_nf_d = " " then
	error "informe total da nf"
next field val_tot_nf_d
end if
if p_dados_tela_f.ies_desc_acres is null or
	p_dados_tela_f.ies_desc_acres = " " then
	call log0030_mensagem(" informe (t) ou (i).","info")
next field ies_desc_acres
end if
end if

end input

if p_dados_tela.cod_fornecedor is not null then
	if sup376_verifica_fornecedor() = false then
		error "fornecedor excluido durante a opera��o."
		sleep 2
		let int_flag = 1
	end if
end if
if int_flag = 0 then
return true
else
return false
end if

end function

#---------------------------------------#
function sup376_insere_array(p_funcao)
#---------------------------------------#
	define p_funcao      char(30),
	p_val_liquido_item   like aviso_rec.val_liquido_item,
	p_val_liquido_ant    like aviso_rec.val_liquido_item,
	p_par_forn           char(01),
	p_ind_ant            smallint,
	l_forn_possui_pc     smallint,
	l_fat_conver_consig  like item_fornec.fat_conver_unid,
	l_sucesso            smallint,
	l_item_wms           smallint,
	l_ind_envio_interf   smallint,
	l_is_clie_319        smallint,
	l_cod_cla_fisc_nf    like aviso_rec.cod_cla_fisc_nf,
	l_qtd_declarad_nf    like aviso_rec.qtd_declarad_nf,
	l_val_liquido_item   like aviso_rec.val_liquido_item,
	l_pct_ipi            like aviso_rec.pct_ipi_tabela,
	l_ies_item_estoq     like aviso_rec.ies_item_estoq,
	l_item_balanca       like sup_ctr_balanca.item,
	l_pes_liquido        like sup_ctr_balanca.pesagem_entrada,
	l_status             smallint,
	l_dat_fim_valid      like cod_fiscal_sup.dat_fim_valid,
	l_den_item           like item.den_item,
	l_aux                smallint,
	l_val_tot_piscofins  decimal(17,6),
	l_grade              smallint,
	l_perg_it_movto_estoq char(1),         #vanderlei - os 400614 #
	l_entra_grades        smallint,
	l_ies_situacao        char(01),
	l_sucesso_sql         smallint,        # wms - os 450083
	l_ies_item_wms        smallint,         # wms - os 450083
	l_val_da_icms         decimal(15,2),
	l_msg                 char(100),#502143
	l_bloq_entr_preco     char(01), #733238#
	l_bloq_entr_data      char(01),  #733238#
	l_ind                 smallint,
	l_next_field          char(20),
	l_msg_erro            char(100),
	l_ies_tip_entrada     like cod_fiscal_sup.ies_tip_entrada,
	l_retorno             char(01),
	l_wms_instalado       smallint, ### tfajnz (ser� utilizado no sup1855, neste caso ser� definido como false)
	l_retorno_epl         smallint,
	l_houve_erro          smallint,  ### tqaft6
	l_cod_empresa_orig    char(02)

	define la_dados_ant      array[999] of record
	pre_unit_nf     like aviso_rec.pre_unit_nf,
	qtd_declarad_nf like aviso_rec.qtd_declarad_nf
end record

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup37601

let p_primeira_vez = true
let p_funcao_menu = p_funcao
let l_retorno = "0"

if log_existe_epl('sup3760y_before_process_insere_array') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('retorno', l_retorno)
	#epl indicador de retorno
	#epl tipo: smallit

	call log_setvar('entra_tot', p_entra_tot)
	#epl indicador se o cursor deve acessar os campos de totais da nota
	#epl tipo: char(01)

	call sup3760y_before_process_insere_array()
	let l_retorno   = log_getvar('retorno')
	let p_entra_tot = log_getvar('entra_tot')

	# n�o entrar no input array - chamado 754.997
	if l_retorno = "1" then
		return true
	end if
end if

if p_funcao <> "modificacao" then
	if p_dados_tela.ies_especie_nf = "nfd" then
		if g_ser_mark = false then
			initialize p_array to null
		end if
	end if
end if

if p_funcao = "inclu.itens" then
	initialize p_ordens, p_ordens_p1, p_ordens_p2, p_ordens_p3, p_ordens_p4, p_ordens_p5, p_ordens_p6, p_ordens_p7, p_ordens_p8 to null
	initialize p_pedidos, p_pedidos_p1, p_pedidos_p2, p_pedidos_p3, p_pedidos_p4, p_pedidos_p5, p_pedidos_p6 to null
	initialize p_prog_ordem to null
	initialize p_prog_ordem1 to null
	initialize p_prog_ordem2 to null
	initialize p_prog_ordem3 to null
	initialize p_prog_ordem4 to null

	initialize p_prog_ordem5 to null
	initialize p_prog_ordem6 to null
	initialize p_prog_ordem7 to null
	initialize p_prog_ordem8 to null

	initialize p_pedidos_p7   to null
	initialize p_pedidos_p8   to null
	initialize p_pedidos_p9   to null
	initialize p_pedidos_p10  to null
	initialize p_pedidos_p11  to null
	initialize p_pedidos_p12  to null

	initialize p_ordens_p9    to null
	initialize p_ordens_p10   to null
	initialize p_ordens_p11   to null
	initialize p_ordens_p12   to null
	initialize p_ordens_p13   to null
	initialize p_ordens_p14   to null
	initialize p_ordens_p15   to null
	initialize p_ordens_p16   to null

	if p_dados_tela.ies_especie_nf = "nfd" or
		(p_dados_tela.ies_especie_nf = "nfr" and p_dados_tela.ies_nf_aguard_nfe <> '4') or
		(p_dados_tela.ies_especie_nf = "nfe" and  ### os 511148
		p_dados_tela.ies_nf_aguard_nfe = "x")  then
	else
		while true
			if not sup376_entrada_pedido_ordem(p_funcao) then
				let int_flag = 1
				return false
			end if

			if (p_pedidos[1,5] = "xxxxx") or (p_pedidos is null) then
				if p_par_sup.ies_entrada_sem_pc = "n" and
					p_ies_informou_ped = "n" and
					p_ies_entr_sem_ped = false then

					let l_forn_possui_pc = true
					if find4glfunction('supy5_fornecedor_possue_pc_oc') then
						let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
					end if

					if l_forn_possui_pc then
						if p_dados_tela.ies_especie_nf is not null then
							if (p_dados_tela.ies_especie_nf <> "nfr" and
								p_dados_tela.ies_especie_nf <> "nfd" and
								p_dados_tela.ies_especie_nf <> "nfc" and
								p_dados_tela.ies_especie_nf <> "con" and
								p_dados_tela.ies_especie_nf <> "nfe" and
								not sup3760_busca_mat_aplicado(' ', p_dados_tela.cod_fornecedor)) or
								(p_par_sup_compl.ies_nf_compl_preco = "4" and
								(p_dados_tela.ies_especie_nf = "nfe" or
								p_dados_tela.ies_especie_nf = "nfc")) or
								(p_par_sup_compl.ies_nf_compl_preco = "3" and
								p_dados_tela.ies_especie_nf = "nfc") or
								(p_par_sup_compl.ies_nf_compl_preco = "2" and
								p_dados_tela.ies_especie_nf = "nfe") then
								call log0030_mensagem(" funcao nao permitida, empresa nao permite entrada sem pedido de compra","exclamation")
								continue while
							end if
						end if
					end if
				else
					if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
						if p_array_pedidos[1].num_pedido is null or
							p_array_pedidos[1].num_pedido = " " then
							call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
							continue while
						end if
					end if
				end if
			end if

			exit while
		end while
	end if
end if

if p_funcao = "inclusao" or p_funcao = "inclu.itens" then
	if p_nfe_import = true or p_nfm_import = true then
		let p_nf_sup.val_ipi_nf = 0
		let p_nf_sup.val_tot_icms_nf_d = 0
		let p_nf_sup.val_tot_nf_d = 0
		let p_nf_sup.val_despesa_aces = 0
		let p_dados_tela_f.val_ipi_nf = 0
		let p_dados_tela_f.val_tot_icms_nf_d = 0
		let p_dados_tela_f.val_tot_nf_d      = 0
	end if

	for p_ind9 = 1 to arraylength(p_array_compl)
		if  p_array_compl[p_ind9].num_oc is not null and p_array_compl[p_ind9].num_oc <> 0 then
			if sup376_verifica_controla_valor(p_array_compl[p_ind9].num_oc) = true then
				let p_array[p_ind9].pre_unit_nf = null
			end if

			call sup376_processa_conversao(p_ind9,p_funcao)

			if p_funcao = "inclusao" then
				call sup3760_grava_ies_valor_bruto(p_array[p_ind9].seq, p_array[p_ind9].pre_unit_nf)
			end if

			if p_houve_erro then
				return false
			end if
		end if
	end for
end if

if p_funcao = "modificacao" then
	for p_ind9 = 1 to arraylength(p_array)
		if p_array[p_ind9].cod_item is not null then
			let p_array_compl[p_ind9].ies_bloqueada = "n"
		else
			exit for
		end if
	end for
end if
if p_funcao = "inclu.itens" then
	for p_ind9 = 1 to arraylength(p_array)
		if p_array[p_ind9].cod_item is not null then
			let  p_array[p_ind9].seq = (p_prx_seq - 1) + p_ind9
			call sup3760_grava_ies_valor_bruto(p_array[p_ind9].seq, p_array[p_ind9].pre_unit_nf)
		end if
	end for
end if
if p_aguard_5 = true then
	if p_funcao = "inclusao" then
		let p_dados_tela.ies_nf_aguard_nfe = "5"
		display by name p_dados_tela.ies_nf_aguard_nfe
	end if

	if p_ies_cod_operac is null or
		p_ies_cod_operac = "n" or
		p_ies_cod_operac = " " then
	else
		display by name p_dados_tela.cod_operac_estoq
	end if
end if

if p_dados_tela.ies_nf_aguard_nfe = "d" and p_funcao = "inclusao" then
	if g_ser_mark = false then
		initialize p_array to null
	end if
end if

let m_alterou_preco = false

for l_aux = 1 to arraylength(p_array)
	let la_dados_ant[l_aux].pre_unit_nf     = p_array[l_aux].pre_unit_nf
	let la_dados_ant[l_aux].qtd_declarad_nf = p_array[l_aux].qtd_declarad_nf
end for

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec) then
	for l_aux = 1 to arraylength(p_array)
		if m_classif_nfc <> "1" then ### tel670
			let p_array[l_aux].cod_item         = " "
		end if
		let p_array[l_aux].qtd_declarad_nf  = 0
		let p_array[l_aux].pre_unit_nf      = 0
		let p_array[l_aux].val_liquido_item = 0
	end for
end if

if m_selec_itens_nfp_importacao = 's' then
	if p_nfe_import = true and p_dados_tela.ies_especie_nf = 'nfp' then
		### tfajnz - variavel de memoria, empresa n�o possui wms instalado
		let l_wms_instalado = false
		call log_setvar('wms_instalado',l_wms_instalado)
		call sup1855_seleciona_itens_nfp_import(p_cod_empresa,p_dados_tela.num_aviso_rec,p_processo_imp.num_processo)
	end if
end if

################################
### entrada de itens da nota ###
################################
current window is w_sup37601

if p_funcao = "modificacao" then
	call set_count(p_ind)
else
	call set_count(0)
end if

input array p_array without defaults from s_sup37601.*

before row
if arraylength(p_array) <= arr_curr() then
	call sup3760_checkarrayadditem_itens_nf(0,1)
end if

before input
call fgl_dialog_setkeylabel('insert',null)
call fgl_dialog_setkeylabel('delete',null)
if find4glfunction('supy168_carrega_class_fisc_item') then
	for l_ind = 1 to arraylength(p_array)
		if p_array[l_ind].cod_item is not null and p_array[l_ind].cod_item <> " " then
			call supy168_carrega_class_fisc_item(p_cod_empresa,p_array[l_ind].cod_item)
			returning p_array[l_ind].cod_cla_fisc_nf
			if l_ind <= 4 then
				display p_array[l_ind].cod_cla_fisc_nf to s_sup37601[l_ind].cod_cla_fisc_nf
			end if
		else
			exit for
		end if
	end for
end if

on key (insert)
next field seq

on key (delete)
next field seq

before field seq
if m_ver_aviso_rec = true then
	exit input
end if
let p_ind = arr_curr()
let p_ind1  = scr_line()

# apenas alterar o primeiro item do array - chamado 754.997
if p_ind = 2 and l_retorno = "2" then
	### inicio tqaft6
	let l_houve_erro = false
	let l_next_field = null

	call sup3760_after_input_item(p_funcao) returning l_houve_erro, l_next_field
	if l_houve_erro then
		let p_houve_erro = true
		exit input
	end if
	case l_next_field
	when 'cod_item'
next field cod_item
when 'den_item'
next field den_item
when 'cod_unid_med_nf'
next field cod_unid_med_nf
when 'cod_cla_fisc_nf'
next field cod_cla_fisc_nf
when 'qtd_declarad_nf'
next field qtd_declarad_nf
when 'pre_unit_nf'
next field pre_unit_nf
when 'val_liquido_item'
next field val_liquido_item
end case
### fim tqaft6
exit input
end if

if p_funcao = "inclu.itens" then
	let p_array[1].seq = p_prx_seq
	display p_array[1].seq to s_sup37601[1].seq
end if

if p_funcao <> "modificacao" then
	if p_dados_tela.ies_especie_nf = "nfd" then
		if g_ser_mark = false then
			call sup376_inicializa_nfd_nfr()
			display p_array[p_ind].* to s_sup37601[p_ind1].*
		end if
	end if
end if

### os 159597
if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
	whenever error continue
	initialize l_item_balanca, l_pes_liquido to null
	select item,
	qtd_peso_entrada - qtd_peso_saida
	into l_item_balanca,
	l_pes_liquido
	from sup_ctr_balanca
	where empresa           = p_cod_empresa
	and num_docum         = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	and seq_nota_fiscal   = p_ind
	and tip_pesagem       = "1"
	and aviso_recebto     is null
	whenever error stop
end if

current window is w_sup37601
next field cod_item

call sup3760_save_cur_field_name('seq')

before field cod_item
let p_ind = arr_curr()
let p_ind1  = scr_line()
if (p_dados_tela.ies_especie_nf <> "nfd" and
	p_dados_tela.ies_especie_nf <> "nfr" and
	(p_array_compl[p_ind].num_pedido is null or
	p_array_compl[p_ind].num_pedido = " "   or
	p_array_compl[p_ind].num_pedido = 0))   or
	(p_dados_tela.ies_especie_nf = "nfr" or
	p_dados_tela.ies_especie_nf = "nfd") then
	call sup3760_botao_zoom("on",3,68)
end if
if m_selec_itens_nfp_importacao = 'n' then
	if p_funcao = "inclusao" then
		let p_array[p_ind].seq = p_ind
		display p_array[p_ind].seq to s_sup37601[p_ind1].seq
	end if
else
	if p_nfe_import = false then
		if p_funcao = "inclusao" then
			let p_array[p_ind].seq = p_ind
			display p_array[p_ind].seq to s_sup37601[p_ind1].seq
		end if
	end if
end if
if p_funcao = "inclu.itens" then
	if p_ind1 > 1 then
		let p_sequencia = null
		let p_sequencia = p_array[p_ind - 1].seq
		let p_sequencia = p_sequencia + 1
		let p_array[p_ind].seq = p_sequencia
		display p_array[p_ind].seq to s_sup37601[p_ind1].seq
	end if
end if

initialize p_cod_moeda_ped to null
if p_nfe_import = true or p_nfm_import = true then
	let p_cod_moeda_ped = p_processo_imp.cod_moeda
else
	call sup376_busca_pedido_sup(p_cod_empresa, p_array_compl[p_ind].num_pedido)
	let p_cod_moeda_ped = p_pedido_sup.cod_moeda
end if
if p_funcao = "modificacao" then
	let p_array_compl[p_ind].qtd_declarad_nf = null
	let p_entra_tot = "s"
	if p_array[p_ind].cod_item is null then
		#nota de complemento de imposto s� tem 1 item j� que � sem informa��es..
		#(sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
		#                           p_cod_empresa,
		#                           p_dados_tela.num_aviso_rec) and
		# p_ind >1) then
		### inicio tqaft6
		let l_houve_erro = false
		let l_next_field = null

		call sup3760_after_input_item(p_funcao) returning l_houve_erro, l_next_field
		if l_houve_erro then
			let p_houve_erro = true
			exit input
		end if
		case l_next_field
		when 'cod_item'
	next field cod_item
	when 'den_item'
next field den_item
when 'cod_unid_med_nf'
next field cod_unid_med_nf
when 'cod_cla_fisc_nf'
next field cod_cla_fisc_nf
when 'qtd_declarad_nf'
next field qtd_declarad_nf
when 'pre_unit_nf'
next field pre_unit_nf
when 'val_liquido_item'
next field val_liquido_item
end case
### fim tqaft6
exit input
end if

call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array[p_ind].seq)
let p_array_compl[p_ind].ies_bloqueada = "n"

### nota de complemento de valor permite alterar o item!!!
if sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) = false then
next field cod_unid_med_nf
end if

end if
if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) and
	m_classif_nfc <> "1" then #704064
	let p_array[p_ind].cod_item = " "
next field qtd_declarad_nf
end if

call sup3760_save_cur_field_name('cod_item')
after field cod_item
call sup3760_botao_zoom("off",3,68)
if p_funcao = "modificacao" then
	### nota de complemento de valor permite alterar o item!!!
	if sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
		p_cod_empresa,
		p_dados_tela.num_aviso_rec) = false then
	next field den_item
end if
end if

let p_ind = arr_curr()
let p_ind1  = scr_line()

if log_existe_epl("sup3760y_after_field_cod_item") then
	call log_setvar("cod_empresa", p_dados_tela.cod_empresa)
	call log_setvar("cod_fornecedor", p_dados_tela.cod_fornecedor)
	call log_setvar("cod_item", p_array[p_ind].cod_item)

	if not sup3760y_after_field_cod_item() then
	next field cod_item
end if
end if
#534641

if find4glfunction('supy168_carrega_class_fisc_item') then
	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		call supy168_carrega_class_fisc_item(p_cod_empresa,
		p_array[p_ind].cod_item)
		returning p_array[p_ind].cod_cla_fisc_nf
		display p_array[p_ind].cod_cla_fisc_nf to s_sup37601[p_ind1].cod_cla_fisc_nf
	end if
end if


if m_exst_forntriter then
	if p_dados_tela.ies_especie_nf = "nfr" then
		if p_dados_tela.ies_nf_aguard_nfe = "a" and
			p_array[p_ind].cod_item is not null and
			p_array[p_ind].cod_item <> " " then
			if not sup3760_cad_item_triang(p_dados_tela.cod_fornecedor,
				p_dados_tela.cod_operacao,
				p_array[p_ind].cod_item, "a") then
			next field cod_item
		end if
	end if
	if p_dados_tela.ies_nf_aguard_nfe = "b" and
		p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		if not sup3760_cad_item_triang(p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			p_array[p_ind].cod_item, "b") then
		next field cod_item
	end if
end if
end if
end if
#534641

#------------------------------------------------------------------------------------------#
#se for informado codigo de barra do item em tela, este ser� convertido para o c�digo de
#cadastro do item se o parametro para conversao autom�tica estiver ativo e codigo informado
#estiver registrado como codigo de barra valido na tabela item_barra ou item_barra_fornec.
let p_array[p_ind].cod_item =
sup3760_conversao_item_codigo_barra(p_array[p_ind].cod_item,p_dados_tela.cod_fornecedor)
display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item
#------------------------------------------------------------------------------------------#

if m_ies_cit_item = "s" then
	if sup3760_testa_cit_item(p_array[p_ind].cod_item) then
		error "produto citricola, verificar tabela cit_item "
	next field cod_item
end if
end if

call sup376_busca_item(p_cod_empresa, p_array[p_ind].cod_item)
returning p_status
if p_status = false then
	#se n�o existe na tabela item, pesquisar o c�digo do item informado
	#como c�digo do item no cliente na tabela cliente_item.
	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		if p_dados_tela.ies_especie_nf = "nfd" or
			p_dados_tela.ies_especie_nf = "nfr" or ### os 511148
			(p_dados_tela.ies_nf_aguard_nfe = "x" and
			p_dados_tela.ies_especie_nf = "nfe") then
			if sup376_verifica_cliente_item() = false then
				error " material nao cadastrado "
			next field cod_item
		end if
	else
		error " material nao cadastrado "
	next field cod_item
end if
else
	if p_dados_tela.ies_especie_nf = "nfc" and
		m_classif_nfc <> "1" then #704064
		let p_array[p_ind].cod_item = " "
	end if
end if
end if

#os 492297
if p_array[p_ind].cod_item is not null and
	p_array[p_ind].cod_item <> " " then
	if p_item.ies_situacao = 'i' then
		## permitir entrada de nota de devolu��o de cliente ou nfc para item inativo.
		if (p_dados_tela.ies_especie_nf = 'nfd' or p_ies_tip_entrada = '5') or
			(p_dados_tela.ies_especie_nf = 'nfc') then
			if log0040_confirm(0,0,'item inativo. continua processamento?') then
			else next field cod_item
			end if
		else
			call log0030_mensagem('item inativo.','excla')
		next field cod_item
	end if
else
	if p_item.ies_situacao = 'c' then
		if p_ies_rec_item_cancel = 's' then
			if log0040_confirm(0,0,'material est� cancelado. continua processamento? ') then
			else next field cod_item
			end if
		else
			call log0030_mensagem('material est� cancelado.','excla')
		next field cod_item
	end if
end if
end if
end if

if sup3762_verifica_material_ipi(true) = false  then
	let p_array_compl[p_ind].ies_item_estoq = "n"
	let p_array_compl[p_ind].move_estoque   = "n"
	let p_array_compl[p_ind].ies_liberacao_insp = "n"
	let p_array_compl[p_ind].ies_controle_lote  = "n"
	let p_array_compl[p_ind].cod_local_estoq    = " "
	let p_array_compl[p_ind].cod_cla_fisc = " "
	let p_array_compl[p_ind].pct_ipi_tabela = 0
end if

if find4glfunction('supy22_busca_den_item') then
	call supy22_busca_den_item(p_cod_empresa, p_array_compl[p_ind].num_oc)
returning p_status, l_den_item
else
	let p_status = false
	let l_den_item = 0
end if

if p_status = true then
	let p_array[p_ind].den_item = l_den_item
end if

display p_array[p_ind].den_item        to s_sup37601[p_ind1].den_item
display p_array[p_ind].cod_unid_med_nf to s_sup37601[p_ind1].cod_unid_med_nf

#------------- dev. clientes ---------------#
if (p_dados_tela.ies_especie_nf = "nfd" or
	p_ies_tip_entrada = "5") then
	if p_array_compl[p_ind].ies_item_estoq = "s" then
		if p_par_sup_compl.cod_operac_dev_cli is not null and
			p_par_sup_compl.cod_operac_dev_cli <> " " then
		else
			error " operacao de devolucao nao cadastrada - ver sup7160 "
			sleep 2
			let p_array_compl[p_ind].ies_item_estoq = "n"
			let p_array_compl[p_ind].move_estoque   = "n"
		end if
	end if
end if
#------------- dev. clientes ---------------#
let l_ies_item_estoq = p_array_compl[p_ind].ies_item_estoq

if p_dados_tela.ies_nf_aguard_nfe = "b" then
	let p_array_compl[p_ind].ies_item_estoq = "n"
end if

#-- desativa flag no sup3762 para que n�o busque a conta cont�bil      --#
#-- no sup1400, e sim apenas continue fazendo como � feito atualmente  --#
call sup3762_seta_cta_n_estoq_ret_terc("n",p_ind) #vanderlei - os 382815 #
if (p_dados_tela.ies_especie_nf = "nfr" and ### os 511148
	m_nfr_import = false) or
	(p_dados_tela.ies_nf_aguard_nfe = "x" and
	p_dados_tela.ies_especie_nf = "nfe") then

	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		if l_ies_item_estoq = "s" then
			call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor, p_array[p_ind].cod_item,p_dados_tela.dat_emis_nf,p_dados_tela.num_aviso_rec)
			returning p_par_forn
			if p_par_forn <> "3" then
				call sup376_busca_parametros_item(p_array[p_ind].cod_item)
				let p_parametros = p_item_parametro.parametros[2,2]
				if p_parametros = "1" then
					let p_array_compl[p_ind].move_estoque = "n"
					let p_array_compl[p_ind].ies_item_estoq = "n"
				else
					if p_dados_tela.ies_nf_aguard_nfe <> "4" and
						p_dados_tela.ies_nf_aguard_nfe <> "5" and
						(p_parametros <> "6" or p_parametros is null)then
						if (p_dados_tela.ies_especie_nf = "nfr"  or
							p_dados_tela.ies_especie_nf = "nfe") and ### os 511148
							p_dados_tela.ies_nf_aguard_nfe = "x" then
							let p_array_compl[p_ind].move_estoque   = "n"
							let p_array_compl[p_ind].ies_item_estoq = "n"
							#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
							call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
						else
							if log_existe_epl('supy181_after_field_cod_item_remove_mensagem') then
								#epl remover conforme parametro mensagem movimentar estoque
								call log_setvar("empresa",p_cod_empresa)
								#epl empresa nota fiscal entrada
								#epl tipo: nf_sup.cod_empresa
								call log_setvar("especie",p_dados_tela.ies_especie_nf)
								#epl especie da nota de entrada
								#epl tipo: nf_sup.ies_especie_nf
								call log_setvar("tipo",p_dados_tela.ies_nf_aguard_nfe)
								#epl tipo da nota de entrada
								#epl tipo: nf_sup.ies_nf_aguard_nfe
								call log_setvar("cfop",p_dados_tela.cod_operacao)
								#epl c�digo da opera��o
								#epl tipo: nf_sup.cod_operacao

								if not supy181_after_field_cod_item_remove_mensagem() then
									if log0040_confirm(18,10,"este item deve ser movimentado na conta estoque?") then
										let p_array_compl[p_ind].move_estoque   = "s"
										let p_array_compl[p_ind].ies_item_estoq = "s"
									else
										let p_array_compl[p_ind].move_estoque   = "n"
										let p_array_compl[p_ind].ies_item_estoq = "n"
										#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
										call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
									end if
								else
									let p_array_compl[p_ind].move_estoque   = "n"
									let p_array_compl[p_ind].ies_item_estoq = "n"
									#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
									call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
								end if
							else
								if log_existe_epl('sup3760y_before_mensagem_movto_estoque') then
									call log_setvar("tipo",p_dados_tela.ies_nf_aguard_nfe)
									#epl tipo da nota de entrada
									#epl tipo: nf_sup.ies_nf_aguard_nfe

									if not sup3760y_before_mensagem_movto_estoque() then
										let p_array_compl[p_ind].move_estoque   = log_getvar('move_estoque')
										let p_array_compl[p_ind].ies_item_estoq = log_getvar('ies_item_estoq')
									else
										if log0040_confirm(18,10,"este item deve ser movimentado na conta estoque?") then
											let p_array_compl[p_ind].move_estoque   = "s"
											let p_array_compl[p_ind].ies_item_estoq = "s"
										else
											let p_array_compl[p_ind].move_estoque   = "n"
											let p_array_compl[p_ind].ies_item_estoq = "n"
											#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
											call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
										end if
									end if
								else
									if log0040_confirm(18,10,"este item deve ser movimentado na conta estoque?") then
										let p_array_compl[p_ind].move_estoque   = "s"
										let p_array_compl[p_ind].ies_item_estoq = "s"
									else
										let p_array_compl[p_ind].move_estoque   = "n"
										let p_array_compl[p_ind].ies_item_estoq = "n"
										#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
										call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
									end if
								end if
							end if
						end if
					else
						if p_parametros = "6" then
							if p_dados_tela.ies_nf_aguard_nfe = "b" then
								let p_array_compl[p_ind].move_estoque = "n"
								let p_array_compl[p_ind].ies_item_estoq = "n"
							else
								let p_array_compl[p_ind].move_estoque = "s"
								let p_array_compl[p_ind].ies_item_estoq = "s"
							end if
						else
							let p_array_compl[p_ind].move_estoque = "n"
							let p_array_compl[p_ind].ies_item_estoq = "n"
						end if
					end if
				end if
			end if
		end if
	end if
end if
if p_dados_tela.ies_especie_nf <> "nfd" and
	p_dados_tela.ies_especie_nf <> "nfr" or
	(p_dados_tela.ies_especie_nf = "nfr" and
	p_array_compl[p_ind].move_estoque = "s") then
	call sup376_verifica_fornec_credenc(p_array[p_ind].cod_item,
	p_dados_tela.cod_fornecedor)
end if
if p_array_compl[p_ind].num_pedido is not null and
	p_array_compl[p_ind].num_pedido <> 0 and
	p_array_compl[p_ind].num_pedido <> " " then
	initialize p_ordem_sup.* to null
	call sup3762_busca_ordem_sup(p_cod_empresa,
	p_array_compl[p_ind].num_oc)
	let p_cod_item_oc = p_ordem_sup.cod_item
	if p_dados_tela.ies_nf_aguard_nfe <> "d"
		then
		if p_cod_item_oc <> p_array[p_ind].cod_item then
			error "material informado difere do material da ordem de compra"
		next field cod_item
	end if
else whenever error continue
	select * from item_em_terc_envio
	where cod_empresa    = p_cod_empresa
	and ped_compra     = p_array_compl[p_ind].num_pedido
	and cod_compon     = p_array[p_ind].cod_item
	whenever error stop
	if sqlca.sqlcode <> 0
		then
		error "material informado nao consta como item enviado a terceiros"
	next field cod_item
end if
end if
end if

if l_item_balanca is not null then
	if l_item_balanca <> p_array[p_ind].cod_item then
		error " item informado difere do item da pesagem "
	next field cod_item
end if
end if

#--inicio--vanderlei os 400614 #
call log2250_busca_parametro(p_cod_empresa,"pergunta_item_movto_estoq_nfd")
returning l_perg_it_movto_estoq, p_status

if p_array[p_ind].cod_item is not null and
	p_array[p_ind].cod_item <> " " then
	if l_perg_it_movto_estoq = 's' then
		if (p_dados_tela.ies_especie_nf = 'nfd' or p_ies_tip_entrada = '5') then
			if sup3760_ies_item_ctr_estoq(p_cod_empresa, p_array[p_ind].cod_item) then
				if log0040_confirm(15,45,'item deve movimentar estoque?') then
					let p_array_compl[p_ind].ies_item_estoq = 's'
					let p_array_compl[p_ind].move_estoque   = 's'
				else
					let p_array_compl[p_ind].ies_item_estoq = 'n'
					let p_array_compl[p_ind].move_estoque   = 'n'
				end if
			end if
		end if
	end if
end if
#---fim----vanderlei os 400614 #

let l_forn_possui_pc = true
if find4glfunction('supy5_fornecedor_possue_pc_oc') then
	let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
end if

if  p_ies_informou_ped = 'n'
	and not l_forn_possui_pc then

	if find4glfunction('supy12_item_possui_contrato') then
		call supy12_item_possui_contrato(p_dados_tela.cod_fornecedor, p_array[p_ind].cod_item)
		returning p_status, p_array[p_ind].pre_unit_nf
	else
		let p_status = true
		let p_array[p_ind].pre_unit_nf = 0
	end if

	if p_status = false then
		call log0030_mensagem('item n�o possui cota��o de pre�o para este fornecedor.','exclamation')
	next field cod_item
end if
end if

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) and
	m_classif_nfc <> "1" then #704064

	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		let p_array[p_ind].cod_item = null

		display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter item informado.","exclamation")

	next field cod_item
end if
end if

#--inicio--os 502143 #
let l_is_clie_319 = false
if find4glfunction('supy101_cliente_319') then
	let l_is_clie_319 = supy101_cliente_319()
end if

if l_is_clie_319 = true          and
	(p_dados_tela.cod_operacao = '5.601'  or
	p_dados_tela.cod_operacao = '6.601') and
	m_cod_item_cred_transf_icms = p_array[p_ind].cod_item then
	if p_ind <> 1 then
		call log0030_mensagem('nota fiscal de transfer�ncia de icms dever� ter apenas um item.','exclamation')
	next field cod_item
else
	if p_array[2].cod_item  is not null and
		p_array[2].cod_item <> " " then
		call log0030_mensagem('nota fiscal de transfer�ncia de icms dever� ter apenas um item.','exclamation')
	next field cod_item
end if
end if
end if
#---fim----os 502143 #

before field den_item
if m_wms_instal = 's' then
	if m_tipo_documento = "n" then
		if find4glfunction('wms6612_retorna_indicador_aduaneiro_ar') then
			if m_indicador_aduaneiro is null or m_indicador_aduaneiro = ' ' then
				let m_indicador_aduaneiro = wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec)
			end if
			if p_dados_tela.num_aviso_rec is not null and
				p_dados_tela.num_aviso_rec <> 0 and
				p_array[p_ind].cod_item is not null and
				p_array[p_ind].cod_item <> ' ' and
				m_indicador_aduaneiro = 't' then
				if not wms6612_tem_conferencia_alfandegado_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) then
					call wms6612_incluir_peso_item(p_dados_tela.num_aviso_rec,
					p_array[p_ind].cod_item,
					p_array[p_ind].seq)
					current window is w_sup37601
				end if
			end if
		end if
	end if
end if
if m_alter_den_item_nf = 'n' and m_nfe_cce <> true then
	if fgl_lastkey() = fgl_keyval("up") or
		fgl_lastkey() = fgl_keyval("left") then
	next field val_liquido_item
else
next field cod_cla_fisc_nf
end if
end if
let p_ind = arr_curr()
let p_ind1  = scr_line()
if p_dados_tela.ies_nf_aguard_nfe = "6" then
	if sup3760_busca_den_item(p_array[p_ind].cod_item) then
		if find4glfunction('supy45_modifica_den_item') then
			if supy45_modifica_den_item(p_dados_tela.num_aviso_rec, p_array[p_ind].seq, m_den_item) then

				call log006_exibe_teclas("01 02 03 07", p_versao)
				current window is w_sup37601

				let p_array[p_ind].den_item = g_den_item
				display p_array[p_ind].den_item to s_sup37601[p_ind1].den_item

				if fgl_lastkey() = fgl_keyval("up")
					or fgl_lastkey() = fgl_keyval("left") then
				next field val_liquido_item
			else
			next field cod_cla_fisc_nf
		end if
	end if
end if

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup37601
end if
end if #--

call sup3760_save_cur_field_name('den_item')
after field  den_item
let p_ind = arr_curr()
let p_ind1  = scr_line()

before field cod_unid_med_nf
call sup3760_botao_zoom("on",3,68)
let p_ind = arr_curr()
let p_ind1  = scr_line()
if p_funcao = "modificacao" then
	call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array[p_ind].seq)
	display p_array[p_ind].* to s_sup37601[p_ind1].*
	#se contagem j� realizada, n�o alterar a un
	if p_aviso_rec.ies_item_estoq = 's' and
		p_aviso_rec.ies_liberacao_cont = 's' then
	next field pre_unit_nf
end if
end if
call sup3760_save_cur_field_name('cod_unid_med_nf')

after field cod_unid_med_nf
call sup3760_botao_zoom("off",3,68)
let p_ind = arr_curr()
let p_ind1  = scr_line()
#809554
if p_array[p_ind].cod_unid_med_nf is not null and
	p_array[p_ind].cod_unid_med_nf <> " " then
	if sup376_verifica_unid_med() = false then
		error " c�digo da unidade de medida n�o cadastrado. "
	next field cod_unid_med_nf
end if
else
	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		error " c�digo da unidade de medida n�o informado. "
	next field cod_unid_med_nf
else
	let p_array[p_ind].cod_unid_med_nf = " "
end if
end if
#809554
if p_funcao = "modificacao" and
	p_array_compl[p_ind].ies_bloqueada = "s" then
next field pre_unit_nf
end if

if find4glfunction('supy31_valida_unid_med_fixa') then
	if not supy31_valida_unid_med_fixa(p_array_compl[p_ind].ies_tip_item, p_array[p_ind].cod_unid_med_nf) then
	next field cod_unid_med_nf
end if
end if

if log_existe_epl('sup3760y_after_field_cod_unid_med') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: empresa.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('num_seq', p_array[p_ind].seq)
	#epl numero da sequencia do ar
	#epl tipo: aviso_rec.num_seq

	call log_setvar('cod_item', p_array[p_ind].cod_item)
	#epl codigo do item
	#epl tipo: aviso_rec.cod_item

	call log_setvar('cod_unid_med_nf', p_array[p_ind].cod_unid_med_nf)
	#epl codigo da unidade de medida
	#epl tipo: aviso_rec.cod_unid_med_nf

	call log_setvar('num_oc', p_array_compl[p_ind].num_oc)
	#epl numero da oc
	#epl tipo: aviso_rec.num_oc

	call log_setvar('funcao', p_funcao)
	#epl fun��o que est� sendo executada
	#epl tipo: char(20)

	let l_next_field = null
	call log_setvar('next_field', l_next_field)
	#epl next field para campo
	#epl tipo: char(20)

	call sup3760y_after_field_cod_unid_med()
	let l_next_field = log_getvar('next_field')

	if l_next_field is not null then
		case l_next_field
		when "cod_unid_med" next field cod_unid_med_nf
	end case
end if
end if

##### citrosuco os 157335 #####
if m_ies_obj_entrada = "99" then
	if (p_array_compl[p_ind].num_pedido is not null and
		p_array_compl[p_ind].num_pedido <> 0 and
		p_array_compl[p_ind].num_pedido <> " ") then
		if sup376_cond_pgto_com_pag() then
			if sup376_aprov_tecnica() then
				#### trabalha com aprovacao tecnica - sup0289 ####
				whenever error continue
				select cod_unid_med
				from um_aprov_tecnica
				where cod_empresa  = p_cod_empresa
				and cod_unid_med = p_array[p_ind].cod_unid_med_nf
				whenever error stop
				if sqlca.sqlcode = 100 then
					error " unidade de medida deve estar cadastrada sup0141(aprov.tecnica)"
				next field cod_unid_med_nf
			end if
		end if
	end if
end if
end if
################################
if m_nfe_cce = true then
next field den_item
end if

before field cod_cla_fisc_nf
call sup3760_botao_zoom("on",3,68)
let p_ind = arr_curr()
let p_ind1  = scr_line()
let l_cod_cla_fisc_nf = p_array[p_ind].cod_cla_fisc_nf

call sup3760_save_cur_field_name('cod_cla_fisc_nf')
after field cod_cla_fisc_nf
call sup3760_botao_zoom("off",3,68)

# inicio chamado a99362
if log_existe_epl("sup3760y_after_field_cod_cla_fisc_nf") then
	call log_setvar("cod_cla_fisc_nf", p_array[p_ind].cod_cla_fisc_nf)
	#epl codigo da classificacao fiscal
	#epl tipo: char(10)

	call log_setvar("next_field", null)
	#epl para fazer next field em um campo
	#epl tipo: char(20)

	call log_setvar("msg_erro", null)
	#epl mensagem de erro
	#epl tipo: char(100)

	if sup3760y_after_field_cod_cla_fisc_nf() then
		let l_next_field = log_getvar('next_field')
		let l_msg_erro   = log_getvar('msg_erro')

		if l_next_field is not null then
			call log0030_mensagem(l_msg_erro,"excl")
			case l_next_field
			when "cod_cla_fisc_nf"  next field cod_cla_fisc_nf
		end case
	end if
end if
end if
# fim chamado a99362

if p_array[p_ind].cod_cla_fisc_nf is not null and
	p_array[p_ind].cod_cla_fisc_nf <> ' ' then
	if not sup3762_verifica_cod_cla_fisc_nf(p_array[p_ind].cod_cla_fisc_nf) then
		error 'nbm nao cadastrado'
	next field cod_cla_fisc_nf
end if
end if

if p_array[p_ind].den_item is not null then
	if m_tem_valid_fim then
		if p_dados_tela.dat_entrada_nf > m_dat_fim_valid then
			if p_dados_tela.cod_operacao[3,5] = "101" and
				p_ies_contrib_ipi = "s" then
				if p_array[p_ind].cod_cla_fisc_nf is null or
					p_array[p_ind].cod_cla_fisc_nf = " " or
					p_array[p_ind].cod_cla_fisc_nf = 0 then
					error "informe classificacao fiscal"
				next field cod_cla_fisc_nf
			end if
		end if
	else
		if p_dados_tela.cod_operacao[3,4] = "11" and
			p_ies_contrib_ipi = "s" then
			if p_array[p_ind].cod_cla_fisc_nf is null or
				p_array[p_ind].cod_cla_fisc_nf = " " or
				p_array[p_ind].cod_cla_fisc_nf = 0 then
				error "informe classificacao fiscal"
			next field cod_cla_fisc_nf
		end if
	end if
end if
else
	if p_dados_tela.cod_operacao[3,4] = "11" and
		p_ies_contrib_ipi = "s" then
		if p_array[p_ind].cod_cla_fisc_nf is null or
			p_array[p_ind].cod_cla_fisc_nf = " " or
			p_array[p_ind].cod_cla_fisc_nf = 0 then
			error "informe classificacao fiscal"
		next field cod_cla_fisc_nf
	end if
end if
end if
end if
if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_cod_cla_fisc_nf <> p_array[p_ind].cod_cla_fisc_nf then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array[p_ind].cod_cla_fisc_nf = l_cod_cla_fisc_nf
			display p_array[p_ind].cod_cla_fisc_nf to cod_cla_fisc_nf
		next field cod_cla_fisc_nf
	end if
end if
end if
if m_nfe_cce = true then
	### inicio tqaft6
	let l_houve_erro = false
	let l_next_field = null

	call sup3760_after_input_item(p_funcao) returning l_houve_erro, l_next_field
	if l_houve_erro then
		let p_houve_erro = true
		exit input
	end if
	case l_next_field
	when 'cod_item'
next field cod_item
when 'den_item'
next field den_item
when 'cod_unid_med_nf'
next field cod_unid_med_nf
when 'cod_cla_fisc_nf'
next field cod_cla_fisc_nf
when 'qtd_declarad_nf'
next field qtd_declarad_nf
when 'pre_unit_nf'
next field pre_unit_nf
when 'val_liquido_item'
next field val_liquido_item
end case
### fim tqaft6
exit input
end if

before field qtd_declarad_nf
#carol
if log_existe_epl("supy163_verifica_cliente") then
	initialize l_ies_tip_entrada to null

	call sup0686_retorna_tipo_entrada(p_dados_tela.cod_operacao, 0)
returning p_status, l_ies_tip_entrada

	if l_ies_tip_entrada = "4" then
		whenever error continue
		select 1
		from fornecedor, empresa
		where fornecedor.cod_fornecedor = p_dados_tela.cod_fornecedor
		and empresa.num_cgc           = fornecedor.num_cgc_cpf
		and (empresa.cod_empresa not in(select cod_empresa from empresa_transf)
		and empresa.cod_empresa not in(select cod_empresa_transf from empresa_transf))
		whenever error stop

		if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
			if sup3760_valida_sup8028() then
			next field pre_unit_nf
		end if
	end if
end if
end if
if m_wms_instal = 's' then
	if p_array[p_ind].cod_item is not null or
		p_array[p_ind].cod_item <> ' ' then
		if find4glfunction('wms6612_verifica_item_generico') then
			if not wms6612_verifica_item_generico(p_array[p_ind].cod_item,
				m_indicador_aduaneiro) then
			next field cod_item
		end if
	end if
end if
end if
let p_ind = arr_curr()
let p_ind1  = scr_line()
let l_qtd_declarad_nf = p_array[p_ind].qtd_declarad_nf
if p_funcao = "modificacao" and
	p_array_compl[p_ind].ies_bloqueada = "s" then
	let p_array_compl[p_ind].ies_bloqueada = "n"
next field cod_unid_med_nf
end if

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) or
	sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	let p_array_compl[p_ind].qtd_declarad_nf = 0
next field cod_unid_med_nf
end if
if p_funcao = "modificacao" then
	if g_ies_wis_instalado = "s" then
		if p_aviso_rec.cod_item is not null and
			p_aviso_rec.cod_item <> " " then
			call vdp3188_item_sob_controle_wis(p_cod_empresa,p_aviso_rec.cod_item)
			returning l_sucesso,l_item_wms
			if l_item_wms then
				{whenever error continue
				select cod_fornecedor
				from wis_nf_item
				where cod_fornecedor = p_dados_tela.cod_fornecedor
				and num_nf         = p_dados_tela.num_nf
				and cod_item       = p_array[p_ind].cod_item
				whenever error stop
				if sqlca.sqlcode = 0 then
					error " item ja processado para interface wis, impossivel modificar qtd. "
				next field cod_unid_med_nf
			end if}
		end if
	end if
else
	if g_ies_wms_instalado = "s" and sup376_verifica_interf_ent_wms() then
		call wms0004_item_sob_controle_wms(p_cod_empresa,p_array[p_ind].cod_item)
		returning l_sucesso,l_item_wms
		if l_item_wms then
			whenever error continue
			select count(*)
			into l_ind_envio_interf
			from wms_e_nf_item a, wms_e_entrada_veic b
			where a.fornecedor         = p_dados_tela.cod_fornecedor
			and a.num_nota_fiscal    = p_dados_tela.num_nf
			and a.serie_nota_fiscal  = p_dados_tela.ser_nf
			and a.subserie_nf        = p_dados_tela.ssr_nf
			and a.item_terceiro      = p_array[p_ind].cod_item
			and b.entrada_veiculo    = a.entrada_veiculo
			and b.ind_envio_interf   = "s"
			whenever error stop
			if sqlca.sqlcode = 0 and l_ind_envio_interf > 0 then
				error " item ja enviado ao logix-wms. modificacao nao permitida. "
			next field cod_unid_med_nf
		end if
	end if
end if
end if

call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array[p_ind].seq)

if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
	if sup376_verifica_update() = false then
		let p_array_compl[p_ind].ies_bloqueada = "s"
		let p_array_compl[p_ind].qtd_declarad_nf = p_array[p_ind].qtd_declarad_nf
		let p_qtd_declarad_nf    = 0
		let p_val_liquido_item   = 0
		let p_qtd_declarad_nf    = p_array[p_ind].qtd_declarad_nf
		let p_pre_unit_nf        = p_array[p_ind].pre_unit_nf
		let p_val_liquido_item   = p_array[p_ind].val_liquido_item
		display p_array[p_ind].* to s_sup37601[p_ind1].*
	next field pre_unit_nf
end if
else
next field pre_unit_nf
end if

else
	if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = true then
		let p_array[p_ind].qtd_declarad_nf  = 0
		display p_array[p_ind].qtd_declarad_nf to s_sup37601[p_ind1].qtd_declarad_nf
	next field pre_unit_nf
end if
end if

if l_item_balanca is not null then
	let p_array[p_ind].qtd_declarad_nf = l_pes_liquido
	display p_array[p_ind].qtd_declarad_nf to qtd_declarad_nf
end if

call sup3760_save_cur_field_name('qtd_declarad_nf')
after field qtd_declarad_nf
let p_ind = arr_curr()
let p_ind1  = scr_line()

### os 511240
if (p_dados_tela.ies_especie_nf = 'nfd' or
	p_ies_tip_entrada = '5')             then

	if p_funcao = 'inclu.itens'          then
		call sup3762_delete_ar_nf_item(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_array[p_ind].seq)
	else
		if p_funcao = 'modificacao' and
			l_qtd_declarad_nf <> p_array[p_ind].qtd_declarad_nf then

			call sup3762_delete_ar_nf_item(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_array[p_ind].seq)

		end if
	end if
end if
###os 511240

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	if p_array[p_ind].qtd_declarad_nf > 0 then
		let p_array[p_ind].qtd_declarad_nf = 0

		display p_array[p_ind].qtd_declarad_nf to s_sup37601[p_ind1].qtd_declarad_nf

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter quantidade informada.","exclamation")

	next field qtd_declarad_nf
end if
end if

if p_array[p_ind].qtd_declarad_nf is not null then
	if p_dados_tela.ies_especie_nf = "nfc" then
		if p_array[p_ind].qtd_declarad_nf <> 0 then
			call log0030_mensagem("nota fiscal de complemento n�o deve ter quantidade informada.","exclamation")
		next field qtd_declarad_nf
	end if
end if
else
	if p_dados_tela.ies_especie_nf = "nfc" then
		let p_array[p_ind].qtd_declarad_nf = 0
	end if
end if

sleep 1

if p_array[p_ind].qtd_declarad_nf is not null and
	p_array_compl[p_ind].ar_com_pc = "s" then
	let p_qtd_array = p_array[p_ind].qtd_declarad_nf
	let p_val_array = p_array[p_ind].pre_unit_nf
	if p_dados_tela.ies_especie_nf <> "nfd" then
		if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
			let p_soma_reserva2 = null
			call sup386_popup_ordens_reservada(p_cod_empresa,
			p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
			p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
			p_qtd_array, "n" , p_funcao,
			p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
			returning p_soma_reserva2, p_ies_reservou, p_ord_forn
			let p_qtd_array = 0
			let p_val_array = 0
			let int_flag = 0
			call log006_exibe_teclas("01 02 03 07", p_versao)
			current window is w_sup37601
		end if
	end if
	#733238#
	if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf, p_cod_empresa, p_dados_tela.num_aviso_rec) = false then # chamado 739204
		call sup0949_busca_parametro_sup_par_divg_rec("bloq_div_dat_entrega", p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor)
		returning l_bloq_entr_data, m_parametro_val
		if l_bloq_entr_data is not null then
			let m_bloq_entr_data = l_bloq_entr_data
		end if
	end if
	#---fim---733238#
	if (p_funcao = "inclusao" or p_funcao = "inclu.itens") and ## 545418
		(m_bloq_entr_data = "s" and p_dados_tela.ies_nf_aguard_nfe <> "7") then
		if not sup0949_verifica_diverg_dat_entrega(p_ind) then
		next field qtd_declarad_nf
	end if
end if
end if

if p_funcao = "inclusao" or p_funcao =  "inclu.itens"  then
	if p_dados_tela.ies_especie_nf <> "nfr" and
		p_dados_tela.ies_especie_nf <> "nfd" then
		if p_array[p_ind].cod_item  is not null and
			p_array[p_ind].cod_item <> " " then
			if (p_pedidos[1,5] = 'xxxxx') or  # os 390034 - winston
				(p_pedidos is null) then
				if p_array_compl[p_ind].ar_com_pc <> "s" or
					p_array_compl[p_ind].ar_com_pc is null   then
					if p_par_sup.ies_modulo_compras = "s" then

						let l_forn_possui_pc = true
						if find4glfunction('supy5_fornecedor_possue_pc_oc') then
							let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
						end if

						if l_forn_possui_pc then
							if p_par_sup.ies_entrada_sem_pc = "n" and
								p_ies_entr_sem_ped = false then
								if p_dados_tela.ies_especie_nf <> "nfc" and
									p_dados_tela.ies_especie_nf <> "con" and
									p_dados_tela.ies_especie_nf <> "nfe" and
									not sup3760_busca_mat_aplicado(p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor) then
									error "empresa nao permite entrada de n.f. sem pedido de compra"
								next field cod_item
							end if
							if p_dados_tela.ies_especie_nf = "nfc" and
								(p_par_sup_compl.ies_nf_compl_preco = "3" or
								p_par_sup_compl.ies_nf_compl_preco = "4") then
								error "empresa nao permite entrada de nfc sem pedido de compra"
							next field cod_item
						end if
						if p_dados_tela.ies_especie_nf = "nfe" and
							(p_par_sup_compl.ies_nf_compl_preco = "2" or
							p_par_sup_compl.ies_nf_compl_preco = "4") then
							error "empresa nao permite entrada de nfe sem pedido de compra."
						next field cod_item
					end if
				else
					if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
						if p_array_pedidos[1].num_pedido is null or
							p_array_pedidos[1].num_pedido = " " then
							call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
						next field cod_item
					end if
				end if
			end if
		end if
	end if
else
	if p_ies_reservou = "n" then
		if p_par_sup.ies_modulo_compras = "s" then

			let l_forn_possui_pc = true
			if find4glfunction('supy5_fornecedor_possue_pc_oc') then
				let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
			end if

			if l_forn_possui_pc then
				if p_par_sup.ies_entrada_sem_pc = "n" and
					p_ies_entr_sem_ped = false then
					if p_dados_tela.ies_especie_nf <> "nfc" and
						p_dados_tela.ies_especie_nf <> "con" and
						p_dados_tela.ies_especie_nf <> "nfe" and
						not sup3760_busca_mat_aplicado(p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor) then
						error "empresa nao permite entrada de n.f. sem pedido de compra"
					next field cod_item
				end if
				if p_dados_tela.ies_especie_nf = "nfc" and
					(p_par_sup_compl.ies_nf_compl_preco = "3" or
					p_par_sup_compl.ies_nf_compl_preco = "4") then
					error "empresa nao permite entrada de nfc sem pedido de compra"
				next field cod_item
			end if
			if p_dados_tela.ies_especie_nf = "nfe" and
				(p_par_sup_compl.ies_nf_compl_preco = "2" or
				p_par_sup_compl.ies_nf_compl_preco = "4") then
				error "empresa nao permite entrada de nfe sem pedido de compra."
			next field cod_item
		end if
	else
		if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
			if p_array_pedidos[1].num_pedido is null or
				p_array_pedidos[1].num_pedido = " " then
				call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
			next field cod_item
		end if
	end if
end if
end if
end if
end if
end if
end if
end if
end if
end if

let p_somatorio_dif = 0
for p_ind5 = 1 to 50
	if p_array_it_prg_entr[p_ind, p_ind5].qtd_solic is null or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = " "   or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = 0 then
		exit for
	end if
	if p_array_compl[p_ind].num_oc <> 0        and
		p_array_compl[p_ind].num_oc is not null then
		initialize p_ordem_sup.* to null
		call sup3762_busca_ordem_sup(p_cod_empresa,
		p_array_compl[p_ind].num_oc)

		let p_fat_conver_unid = p_ordem_sup.fat_conver_unid
		if sqlca.sqlcode <> 0 then
			let p_fat_conver_unid = 1
		end if
	end if
	if p_fat_conver_unid = 0 then
		let p_fat_conver_unid = 1
	end if
	let p_dif_aceite = 0
	if p_array_compl[p_ind].pct_aceite_dif = 0
		and p_dados_tela.ies_nf_aguard_nfe <> "5"
		then let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_par_sup.pct_maximo_div_q) / 100
	else let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_array_compl[p_ind].pct_aceite_dif) / 100
	end if
	let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
end for
let p_array_compl[p_ind].tot_reserv_dif = 0
let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_soma_reserva2
if p_array[p_ind].qtd_declarad_nf > (p_soma_reserva2 + p_somatorio_dif) and p_dados_tela.ies_nf_aguard_nfe <> "d" then
	if p_funcao <> "modificacao" or
		p_funcao = "modificacao" and p_msg_qtd = "s" then
		if p_array_compl[p_ind].num_pedido is not null and
			p_array_compl[p_ind].num_pedido <> 0        and
			p_array_compl[p_ind].ies_liquida_oc <> "3"  then
			if p_dados_tela.ies_nf_aguard_nfe = "5" then
				error "entrada sem saldo suficiente; contatar comprador urgente "
			next field qtd_declarad_nf
		end if

		if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
			call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
			call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

			call sup3760y_before_process_ies_entrada_maior()
			let p_ies_entrada_maior = log_getvar('ies_entrada_maior')

		end if
		if p_ies_entrada_maior = "n"  then
			call log0030_mensagem("entrada sem saldo suficiente; contatar comprador urgente ","exclamation")
		else
			call log0030_mensagem("entrada sem saldo suficiente.","exclamation")
		end if
		if p_ies_entrada_maior = "s"  then
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	else
		if p_ies_entrada_maior = "c" then
			if p_aguard_5 = true then
			next field qtd_declarad_nf
		else
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	end if
else
next field qtd_declarad_nf
end if
end if
end if
end if
end if

if p_nfe_import = true or p_nfm_import = true then
	let p_array_imp[p_ind].val_ii = (p_array_imp[p_ind].val_ii_tot *
	p_array[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
	let p_array_imp[p_ind].val_desp_imp =
	(p_array_imp[p_ind].val_desp_imp_tot *
	p_array[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
	let p_array_imp[p_ind].val_ipi =
	(p_array_imp[p_ind].val_ipi_tot *
	p_array[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
	let p_array_imp[p_ind].val_icms =
	(p_array_imp[p_ind].val_icms_tot *
	p_array[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
end if

if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_qtd_declarad_nf <> p_array[p_ind].qtd_declarad_nf then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array[p_ind].qtd_declarad_nf = l_qtd_declarad_nf
			display p_array[p_ind].qtd_declarad_nf to qtd_declarad_nf
		next field qtd_declarad_nf
	end if
end if
end if

if log_existe_epl("sup3760y_after_field_qtd_declarad_nf") then
	call log_setvar("cod_empresa", p_cod_empresa)
	call log_setvar("cod_item", p_array[p_ind].cod_item)
	call log_setvar("qtd_declarad_nf", p_array[p_ind].qtd_declarad_nf)
	call log_setvar("retorno_epl", true)

	call sup3760y_after_field_qtd_declarad_nf()

	if log_getvar("retorno_epl") = false then
	next field qtd_declarad_nf
end if
end if

before field pre_unit_nf
let p_ind = arr_curr()
let p_ind1  = scr_line()
if p_funcao = "inclusao" then
	if p_dados_tela.ies_especie_nf <> "nfd" and
		p_dados_tela.ies_especie_nf <> "nfr" then
		call sup3760_botao_zoom("on",3,68)
	end if
end if
if p_funcao = "modificacao" then
	call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array[p_ind].seq)
	if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) then
		# chamado tvsraa - t53461 - bom peixe - jaque - 03/11/2016
		#if sup376_verifica_ar_item_contagem() then
		if fgl_lastkey() = fgl_keyval("up") then
		next field cod_cla_fisc_nf
	else
		if fgl_lastkey() = fgl_keyval("left") then
		next field cod_cla_fisc_nf
	else
	next field pct_ipi
end if
end if
#end if
end if
end if
let p_base_ipi[p_ind].val_liquido_item = p_array[p_ind].val_liquido_item
let p_array_compl[p_ind].alterou_val_liquido = false

#--inicio--os 704064 #
if p_dados_tela.ies_especie_nf = "nfc" and
	m_classif_nfc = "1"  then
next field next
end if
#---fim----os 704064 #

call sup3760_save_cur_field_name('pre_unit_nf')
after field pre_unit_nf
let p_ind = arr_curr()
let p_ind1  = scr_line()
call sup3760_botao_zoom("off",3,68)
if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	if p_array[p_ind].pre_unit_nf > 0 then
		let p_array[p_ind].pre_unit_nf = 0

		display p_array[p_ind].pre_unit_nf to s_sup37601[p_ind1].pre_unit_nf

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter pre�o informado.","exclamation")

	next field pre_unit_nf
end if
end if
if p_ord_forn = false and
	p_funcao = "inclusao" then
	if (p_pedidos[1,5] = "xxxxx") or
		(p_pedidos is null) then
		if p_par_sup.ies_entrada_sem_pc = "n" and
			p_ies_entr_sem_ped = false then
			let p_ies_pagamento2 = null
			let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
			if l_cod_empresa_orig is not null then
				let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
			end if
			let p_ies_pagamento2 = p_cond_pgto_cap.ies_pagamento
			if p_ies_pagamento2 = "3" then
			else
				error " nao ha ordens de compras para este fornecedor "
			next field qtd_declarad_nf
		end if
	end if
end if
end if

if p_array_compl[p_ind].ar_com_pc = "s" and p_par_sup.ies_modulo_compras = "s" and p_funcao = "inclusao" then
	if not sup3760_pedido_ordem_valido(p_array_compl[p_ind].num_pedido,
		p_array_compl[p_ind].num_oc) then
	next field pre_unit_nf
end if
end if

if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) then
	if p_array[p_ind].pre_unit_nf is not null then
		let p_val_liquido_ant = p_array[p_ind].val_liquido_item
		call log_setvar("val_liquido_ant", p_val_liquido_ant) ### tqaft6 (variavel utilizada na fun��o sup3760_after_input_item)
		call sup376_calcula_val_liquido(p_funcao)
		display p_array[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item
	end if
	if p_array[p_ind].qtd_declarad_nf is not null and
		p_array_compl[p_ind].ar_com_pc = "s"      then

		let p_val_array = p_array[p_ind].val_liquido_item

		if p_dados_tela.ies_especie_nf <> "nfd" and
			p_dados_tela.ies_especie_nf <> "nfr" then
			call log_setvar("dat_emis_nf", p_dados_tela.dat_emis_nf) #tfrzdr
			call sup861_popup_ordens_val_reserv(p_cod_empresa,
			p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
			p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
			p_val_array, "n", p_funcao,
			p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
			returning p_val_soma_reserva2, p_ies_reservou, p_ord_forn
			let p_val_array = 0
			let int_flag = 0
			current window is w_sup37601
		end if
	end if
	let p_somatorio_dif = 0
	for p_ind5 = 1 to 50
		if p_array_it_prg_entr[p_ind, p_ind5].val_solic is null or
			p_array_it_prg_entr[p_ind, p_ind5].val_solic = " "   or
			p_array_it_prg_entr[p_ind, p_ind5].val_solic = 0 then
			exit for
		end if
		let p_dif_aceite = 0
		let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].val_solic * p_array_compl[p_ind].pct_aceite_dif) / 100
		let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
	end for
	let p_array_compl[p_ind].tot_reserv_dif = 0
	let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_val_soma_reserva2
	if p_array[p_ind].val_liquido_item > (p_val_soma_reserva2 + p_somatorio_dif) then
		if p_funcao <> "modificacao" or
			p_funcao = "modificacao"  then
			if p_array_compl[p_ind].num_pedido is not null and
				p_array_compl[p_ind].num_pedido <> 0        and
				p_array_compl[p_ind].ies_liquida_oc <> "3"  then
				if p_dados_tela.ies_nf_aguard_nfe = "5" then
					error "entrada sem saldo suficiente; contatar comprador urgente "
				next field qtd_declarad_nf
			end if

			if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
				call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
				call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

				call sup3760y_before_process_ies_entrada_maior()
				let p_ies_entrada_maior = log_getvar('ies_entrada_maior')
			end if
			if p_ies_entrada_maior = "n"  then
				error "entrada sem saldo suficiente; contatar comprador urgente "
			else
				error "entrada sem saldo suficiente."
			end if
			if p_ies_entrada_maior = "s"  then
				if log004_confirm(14,42) then
				else
				next field pre_unit_nf
			end if
		else
			if p_ies_entrada_maior = "c" then
				if p_aguard_5 = true then
				next field pre_unit_nf
			else
				if log004_confirm(14,42) then
				else
				next field pre_unit_nf
			end if
		end if
	else
	next field pre_unit_nf
end if
end if
end if
end if
end if
else
	if p_array[p_ind].pre_unit_nf is not null then
		let p_val_liquido_ant = p_array[p_ind].val_liquido_item
		call log_setvar("val_liquido_ant", p_val_liquido_ant) ### tqaft6 (variavel utilizada na fun��o sup3760_after_input_item)
		call sup376_calcula_val_liquido(p_funcao)
		display p_array[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item
	end if
end if

if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
	if fgl_lastkey() = fgl_keyval("up") or
		fgl_lastkey() = fgl_keyval("left") then
	next field qtd_declarad_nf
end if
else
next field pct_ipi
end if
let p_par_forn = null
if p_array_compl[p_ind].num_oc is not null and
	p_array_compl[p_ind].num_oc <> 0       then
	if sup376_verifica_ordem_consig(p_array_compl[p_ind].num_oc) then
		let p_par_forn = "3"
	end if
else
	if p_dados_tela.ies_especie_nf = "nfr" then
		call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
		p_array[p_ind].cod_item,
		p_dados_tela.dat_emis_nf,
		p_dados_tela.num_aviso_rec) returning p_par_forn
	end if
end if
if p_par_forn = "3" then
	call sup3762_le_cotacao_preco(p_dados_tela.cod_fornecedor,
	p_array[p_ind].cod_item)

	call sup376_ver_fat_conver_consig(p_array[p_ind].cod_item)
returning l_fat_conver_consig

	if ((p_cotacao_preco.pre_unit_liquido * l_fat_conver_consig) <>
		p_array[p_ind].pre_unit_nf) or
		p_cotacao_preco.pre_unit_liquido is null then
		error " preco do item difere do contrato ou nao possui contrato de consignacao." attribute (reverse)
		if log004_confirm(21,42) then
		else
		next field pre_unit_nf
	end if
end if
end if

if p_funcao = "modificacao" then
	if la_dados_ant[p_ind].pre_unit_nf <> p_array[p_ind].pre_unit_nf then

		### os 511240
		if (p_dados_tela.ies_especie_nf = 'nfd' or
			p_ies_tip_entrada = '5')             then
			call sup3762_delete_ar_nf_item(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_array[p_ind].seq)
		end if

		if sup376_contagem_custo_diario(2) then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array[p_ind].pre_unit_nf = la_dados_ant[p_ind].pre_unit_nf
			display p_array[p_ind].pre_unit_nf to pre_unit_nf
		next field pre_unit_nf
	end if

	if m_controla_gao = "s" and m_controla_sup = "s" and m_desc_nf_rec = "n" then
		if not sup3760_permite_alteracao_gao() then
			call log0030_mensagem("controle gao ativo exclua inspe��o/contagem antes de modificar o pre�o. ap�s realize inspe��o/contagem manual.","excl")
			let p_array[p_ind].pre_unit_nf = la_dados_ant[p_ind].pre_unit_nf
			display p_array[p_ind].pre_unit_nf to pre_unit_nf
		next field pre_unit_nf
	end if

	let m_alterou_preco = true
end if
end if
end if

before field val_liquido_item
let p_ind = arr_curr()
let p_ind1  = scr_line()
let l_val_liquido_item = p_array[p_ind].val_liquido_item
if p_funcao = "modificacao" then
	call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array[p_ind].seq)
	if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) then
		if fgl_lastkey() = fgl_keyval("up") then
		next field cod_cla_fisc_nf
	else
		if fgl_lastkey() = fgl_keyval("left") then
		next field cod_cla_fisc_nf
	else
	next field pct_ipi
end if
end if
end if
end if

if p_dados_tela.ies_especie_nf = "nfc" and
	m_classif_nfc = "1"  then
next field next
end if

call sup3760_save_cur_field_name('val_liquido_item')
after field val_liquido_item
let p_ind = arr_curr()
let p_ind1  = scr_line()

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	if p_array[p_ind].val_liquido_item > 0 then
		let p_array[p_ind].val_liquido_item = 0

		display p_array[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter valor informado.","exclamation")

	next field val_liquido_item
end if
end if

if p_funcao = "modificacao" then
	if p_val_liquido_ant <> p_array[p_ind].val_liquido_item
		then
		error "altera base de calculo do ipi?" attribute(reverse)
		if log004_confirm(21,39)
			then let p_base_ipi[p_ind].val_liquido_item = p_val_liquido_ant
		end if
		let p_array_compl[p_ind].alterou_val_liquido = true

		if log_existe_epl("sup3760y_after_field_val_liquido_item") then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl c�digo da empresa
			#epl tipo: aviso_rec.cod_empresa

			call log_setvar('num_nf', p_dados_tela.num_nf)
			#epl n�mero da nota fiscal
			#epl tipo: nf_sup.num_nf

			call log_setvar('ser_nf', p_dados_tela.ser_nf)
			#epl s�rie da nota fiscal
			#epl tipo: nf_sup.ser_nf

			call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
			#epl subserie da nota fiscal
			#epl tipo: nf_sup.ssr_nf

			call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
			#epl esp�cie da nota fiscal
			#epl tipo: nf_sup.ies_especie_nf

			call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
			#epl c�digo do fornecedor da nota fiscal
			#epl tipo: nf_sup.cod_fornecedor

			call log_setvar('num_seq', p_aviso_rec.num_seq)
			#epl sequencia do item na nf
			#epl tipo: aviso_rec.num_seq

			call log_setvar('val_liquido_item', p_array[p_ind].val_liquido_item)
			#epl valor l�quido do item
			#epl tipo: aviso_rec.val_liquido_item

			if not sup3760y_after_field_val_liquido_item() then
			next field val_liquido_item
		end if
	end if
end if
end if

if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_val_liquido_item <> p_array[p_ind].val_liquido_item then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array[p_ind].val_liquido_item = l_val_liquido_item
			display p_array[p_ind].val_liquido_item to val_liquido_item
		next field val_liquido_item
	end if
end if
end if

before field pct_ipi
let p_ind = arr_curr()
let p_ind1  = scr_line()
let l_pct_ipi = p_array[p_ind].pct_ipi
call sup3760_save_cur_field_name('pct_ipi')

after field pct_ipi
let p_ind = arr_curr()
let p_ind1  = scr_line()
if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = true then
	if fgl_lastkey() = fgl_keyval("up")   or
		fgl_lastkey() = fgl_keyval("left") then
	next field pre_unit_nf
end if
end if

if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_pct_ipi <> p_array[p_ind].pct_ipi then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array[p_ind].pct_ipi = l_pct_ipi
			display p_array[p_ind].pct_ipi to pct_ipi
		next field pct_ipi
	end if
end if
end if

if find4glfunction('supy36_verifica_nf_retorno_industrializacao') then
	if supy36_verifica_nf_retorno_industrializacao(p_dados_tela.cod_operacao,
		p_dados_tela.cod_fiscal_compl) then

		if find4glfunction('supy36_executa_item_ret_terc') then
			call supy36_executa_item_ret_terc(p_dados_tela.cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_array[p_ind].seq)
		end if

	end if
end if

#--inicio--os 502143 #
let l_is_clie_319 = false
if find4glfunction('supy101_cliente_319') then
	let l_is_clie_319 = supy101_cliente_319()
end if

if l_is_clie_319 = true          and
	(p_dados_tela.cod_operacao = '5.601'  or
	p_dados_tela.cod_operacao = '6.601') and
	m_cod_item_cred_transf_icms = p_array[p_ind].cod_item then
	if p_ind > 1 then
		call log0030_mensagem('nota fiscal de transfer�ncia de icms dever� ter apenas um item.','exclamation')
	next field cod_item
else
	if p_array[2].cod_item is null or
		p_array[2].cod_item = " " then
		let l_houve_erro = false
		let l_next_field = null

		call sup3760_after_input_item(p_funcao) returning l_houve_erro, l_next_field
		if l_houve_erro then
			let p_houve_erro = true
			exit input
		end if
		case l_next_field
		when 'cod_item'
	next field cod_item
	when 'den_item'
next field den_item
when 'cod_unid_med_nf'
next field cod_unid_med_nf
when 'cod_cla_fisc_nf'
next field cod_cla_fisc_nf
when 'qtd_declarad_nf'
next field qtd_declarad_nf
when 'pre_unit_nf'
next field pre_unit_nf
when 'val_liquido_item'
next field val_liquido_item
end case
### fim tqaft6
exit input
else
	call log0030_mensagem('nota fiscal de transfer�ncia de icms dever� ter apenas um item.','exclamation')
next field cod_item
end if
end if
end if
#---fim----os 502143 #

#793760#
after row
if int_flag = 0 then
	if log_existe_epl("sup3760y_before_process_after_row") then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		call log_setvar('sequencia', p_array[p_ind].seq)
		#epl sequ�ncia do item
		#epl tipo: aviso_rec.num_seq

		call log_setvar('arr_curr', p_ind)
		#epl linha corrente
		#epl tipo: smallint

		call log_setvar('scr_line', p_ind1)
		#epl linha corrente tela
		#epl tipo: smallint

		call log_setvar("next_field", null)
		#epl para fazer next field em um campo
		#epl tipo: char(20)

		call sup3760y_before_process_after_row()
		let l_next_field = log_getvar('next_field')

		if l_next_field is not null then
			case l_next_field
			when "cod_item"  next field cod_item
		end case
	end if
end if

let p_ind  = arr_curr()
if p_array[p_ind].cod_item is not null and
	p_array[p_ind].cod_item <> " " then
	if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf, p_cod_empresa, p_dados_tela.num_aviso_rec) = false then # chamado 739204
		call sup0949_busca_parametro_sup_par_divg_rec("consis_diverg_preco", p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor)
		returning m_consis_diverg_preco, m_parametro_val
		if m_consis_diverg_preco is not null then
			call sup0949_busca_parametro_sup_par_divg_rec("bloq_entr_preco", p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor)
			returning l_bloq_entr_preco, m_parametro_val
			if l_bloq_entr_preco is not null then
				let m_bloq_entr_preco = l_bloq_entr_preco
			end if
		end if
		call sup0949_busca_parametro_sup_par_divg_rec("bloq_div_dat_entrega", p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor)
		returning l_bloq_entr_data, m_parametro_val
		if l_bloq_entr_data is not null then
			let m_bloq_entr_data = l_bloq_entr_data
		end if
	end if

	if p_array[p_ind].qtd_declarad_nf is not null and
		p_array_compl[p_ind].ar_com_pc = 's' and
		p_dados_tela.ies_especie_nf <> 'nfd' and
		(p_funcao = "inclusao" or p_funcao = "inclu.itens" or p_funcao = "modificacao") and ## 545418
		(m_bloq_entr_data = 's' and p_dados_tela.ies_nf_aguard_nfe <> "7") then
		if not sup0949_verifica_diverg_dat_entrega(p_ind) then
		next field qtd_declarad_nf
	end if
end if

##se for nota fiscal de importa��o n�o dever� verificar diverg�ncia de pre�o
if m_bloq_entr_preco = "s" and p_array_compl[p_ind].ar_com_pc = "s" and
	p_dados_tela.cod_operacao[1,1] <> "7" and m_nfr_import = false then
	if not sup0949_verifica_diverg_preco_unit(p_funcao, p_ind, p_dados_tela.num_aviso_rec, p_array[p_ind].seq,
		p_array[p_ind].pre_unit_nf, 'sup3760') then
	next field pre_unit_nf
end if
end if
end if
call log_consoledebugmessage ("linha 16225 come�a")

#tpchol - utilizando seta pra cima e pra baixo, n�o atualizava o p_soma_reserva2 de acordo com a
#quantidade real do item onde o cursor est� parado
if p_array[p_ind].qtd_declarad_nf is not null and
	p_array_compl[p_ind].ar_com_pc = "s" then
	let p_qtd_array = p_array[p_ind].qtd_declarad_nf
	let p_val_array = p_array[p_ind].pre_unit_nf
	if p_dados_tela.ies_especie_nf <> "nfd" then
		if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
			let p_soma_reserva2 = null
			call sup386_popup_ordens_reservada(p_cod_empresa,
			p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
			p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
			p_qtd_array, "n" , p_funcao,
			p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
			returning p_soma_reserva2, p_ies_reservou, p_ord_forn
			let p_qtd_array = 0
			let p_val_array = 0
			let int_flag = 0
			call log006_exibe_teclas("01 02 03 07", p_versao)
			current window is w_sup37601
		end if
	end if
end if
#tpchol

let p_ind = arr_curr()
let p_somatorio_dif = 0
for p_ind5 = 1 to 50
	if p_array_it_prg_entr[p_ind, p_ind5].qtd_solic is null or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = " "   or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = 0 then
		exit for
	end if
	if p_array_compl[p_ind].num_oc <> 0        and
		p_array_compl[p_ind].num_oc is not null then
		initialize p_ordem_sup.* to null
		call sup3762_busca_ordem_sup(p_cod_empresa,
		p_array_compl[p_ind].num_oc)

		let p_fat_conver_unid = p_ordem_sup.fat_conver_unid
		if sqlca.sqlcode <> 0 then
			let p_fat_conver_unid = 1
		end if
	end if
	if p_fat_conver_unid = 0 then
		let p_fat_conver_unid = 1
	end if
	let p_dif_aceite = 0
	if p_array_compl[p_ind].pct_aceite_dif = 0
		and p_dados_tela.ies_nf_aguard_nfe <> "5"
		then let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_par_sup.pct_maximo_div_q) / 100
	else let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_array_compl[p_ind].pct_aceite_dif) / 100
	end if
	let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
end for
let p_array_compl[p_ind].tot_reserv_dif = 0
let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_soma_reserva2

if p_array[p_ind].qtd_declarad_nf > (p_soma_reserva2 + p_somatorio_dif) and p_dados_tela.ies_nf_aguard_nfe <> "d" then
	if p_funcao <> "modificacao" or p_funcao = "modificacao" and p_msg_qtd = "s" then
		if p_array_compl[p_ind].num_pedido is not null and
			p_array_compl[p_ind].num_pedido <> 0        and
			p_array_compl[p_ind].ies_liquida_oc <> "3"  then
			if p_dados_tela.ies_nf_aguard_nfe = "5" then
				error "entrada sem saldo suficiente; contatar comprador urgente "
			next field qtd_declarad_nf
		end if

		if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
			call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
			call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

			call sup3760y_before_process_ies_entrada_maior()
			let p_ies_entrada_maior = log_getvar('ies_entrada_maior')

		end if
		if p_ies_entrada_maior = "n"  then
			call log0030_mensagem("entrada sem saldo suficiente; contatar comprador urgente ","exclamation")
		else
			call log0030_mensagem("entrada sem saldo suficiente.","exclamation")
		end if
		if p_ies_entrada_maior = "s"  then
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	else
		if p_ies_entrada_maior = "c" then
			if p_aguard_5 = true then
			next field qtd_declarad_nf
		else
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	end if
else
next field qtd_declarad_nf
end if
end if
end if
end if
end if
#tfmmv2/tfq578
end if
#---fim--- 793760#

after input
if int_flag = 0 then
	### inicio tqaft6
	### fun��o after_input_itens, ser� utilizada antes do exit input para que efetue as verifica��es que s�
	### s�o feitas no after input

	let l_houve_erro = false
	let l_next_field = null

	call sup3760_after_input_item(p_funcao) returning l_houve_erro, l_next_field
	if l_houve_erro then
		let p_houve_erro = true
		exit input
	end if
	case l_next_field
	when 'cod_item'
next field cod_item
when 'den_item'
next field den_item
when 'cod_unid_med_nf'
next field cod_unid_med_nf
when 'cod_cla_fisc_nf'
next field cod_cla_fisc_nf
when 'qtd_declarad_nf'
next field qtd_declarad_nf
when 'pre_unit_nf'
next field pre_unit_nf
when 'val_liquido_item'
next field val_liquido_item
end case
### fim tqaft6
end if

on key (control-z, f4)
call sup376_popups(p_funcao)
end input

let p_ind = arr_curr()
let p_ind1 = scr_line()
call sup3760_botao_zoom("off",3,68)
current window is w_sup37601

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec) = false then
	if p_array[1].cod_item is null then
		if (p_array[1].den_item is null or
			p_array[1].den_item = " ")  and
			(p_array[1].cod_unid_med_nf is null or
			p_array[1].cod_unid_med_nf = " ")  and
			(p_array[1].qtd_declarad_nf is null or
			p_array[1].qtd_declarad_nf = 0  or
			p_array[1].qtd_declarad_nf = " ")  and
			(p_array[1].pre_unit_nf     is null or
			p_array[1].pre_unit_nf     = 0     or
			p_array[1].pre_unit_nf = " ")      and
			(p_array[1].val_liquido_item is null or
			p_array[1].val_liquido_item = 0     or
			p_array[1].val_liquido_item = " ")  then
			error "nao foi informado item para esta nota"
			sleep 2
			let int_flag = 1
			return false
		else
			if (p_dados_tela.ies_especie_nf <> "nfd" and p_dados_tela.ies_especie_nf <> "nfr") then
				let int_flag = 1
				return false
			end if
		end if
	end if
end if

if p_dados_tela.cod_fornecedor is not null then
	if sup376_verifica_fornecedor() = false then
		error "fornecedor excluido durante a opera��o."
		sleep 2
		let int_flag = 1
	end if
end if

if int_flag <> 0 then
	if p_funcao = "modificacao" and m_nf_aguard_nfe_ant = "7" and
		p_dados_tela.ies_nf_aguard_nfe <> "7" then
		call sup3760_atualiza_tabela_dados_antigo()
	end if

return false
end if
return true
end function

#--------------------------------------------------------#
function sup376_ver_fat_conver_consig(l_cod_item_consig)
#--------------------------------------------------------#

	define l_cod_item_consig    like item.cod_item,
	l_fat_conver_consig  like item_fornec.fat_conver_unid

	initialize l_fat_conver_consig to null

	whenever error continue
	select fat_conver_unid
	into l_fat_conver_consig
	from item_fornec
	where cod_empresa    = p_cod_empresa
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	and cod_item       = l_cod_item_consig
	whenever error stop

	if l_fat_conver_consig is null or
		l_fat_conver_consig = 0 then
		let l_fat_conver_consig = 1
	end if

return l_fat_conver_consig

end function

#--------------------------------#
function sup376_move_campos_ar()
#--------------------------------#
	define p_conta_estab                     smallint,
	l_num_nff                         like ar_nf_item.num_nff,
	l_num_pedido                      like ar_nf_item.num_pedido,
	l_num_sequencia                   like ar_nf_item.num_sequencia,
	l_num_om                          like fat_nf_item.ord_montag,
	l_cod_fiscal                      like nf_item_fiscal.cod_fiscal,
	l_cod_fiscal_char                 char(04),
	l_count                           smallint,
	l_ser                             smallint,
	sql_stmt                          char(1500),
	l_ord_montag                      like ar_nf_item.ord_montag,     #vanderlei - os 329518 #
	l_ies_item_for                    char(01),
	l_cod_item_trans                  like item.cod_item,
	l_ies_tem_inspecao                like item.ies_tem_inspecao,
	l_cod_local_insp                  like item.cod_local_insp,
	l_cod_local_estoq                 like item.cod_local_estoq,
	l_trans_nota_fiscal_fatura        like ar_nf_item.trans_nota_fiscal_fatura,
	l_seq_item_nota_fiscal_fatura     like ar_nf_item.seq_item_nota_fiscal_fatura,
	l_status                          smallint,
	l_final_cod_fiscal                char(03),
	l_gru_desp_item                   like aviso_rec.gru_ctr_desp_item,
	l_cod_tip_desp                    like aviso_rec.cod_tip_despesa,
	l_transferencia                   smallint

	let p_aviso_rec.cod_empresa       = p_dados_tela.cod_empresa
	let p_aviso_rec.cod_empresa_estab = p_dados_tela.cod_empresa_estab
	let p_aviso_rec.num_aviso_rec     = p_dados_tela.num_aviso_rec
	let p_aviso_rec.num_seq           = p_array[p_ind].seq

	if p_nf_sup.ies_situa_import is null or
		p_nf_sup.ies_situa_import = " " then
		### tvtda5 - se fornecedor n�o contribuinte de ipi n�o deve calcular ipi sobre as despesas acess�rias
		if p_ies_contrib_ipi = 'n' then
			let p_aviso_rec.ies_da_bc_ipi = "p"
		else
			let p_aviso_rec.ies_da_bc_ipi = "s"
		end if
	else
		if p_nfe_import = true or p_nfm_import = true then
			if m_num_processo >= g_proc_ini_os163407 then
				let p_aviso_rec.ies_da_bc_ipi = sup3760_determina_indicador_da(p_cod_empresa, m_num_processo)
			else
				let p_aviso_rec.ies_da_bc_ipi = "s"
			end if
		else
			let p_aviso_rec.ies_da_bc_ipi = "g"
		end if
	end if

	let p_aviso_rec.val_contabil_item  = 0

	if p_array[p_ind].den_item is null then
		let p_array[p_ind].den_item = " "
	end if

	let p_aviso_rec.den_item         = p_array[p_ind].den_item
	let p_aviso_rec.cod_unid_med_nf  = p_array[p_ind].cod_unid_med_nf
	let p_aviso_rec.cod_cla_fisc     = p_array_compl[p_ind].cod_cla_fisc
	let p_aviso_rec.cod_cla_fisc_nf  = p_array[p_ind].cod_cla_fisc_nf
	let p_aviso_rec.val_liquido_item = p_array[p_ind].val_liquido_item
	let p_aviso_rec.cod_item         = p_array[p_ind].cod_item
	let p_aviso_rec.qtd_declarad_nf = p_array[p_ind].qtd_declarad_nf
	let p_aviso_rec.pre_unit_nf      = p_array[p_ind].pre_unit_nf
	let p_aviso_rec.pct_ipi_declarad = p_array[p_ind].pct_ipi
	let p_aviso_rec.num_pedido       = p_array_compl[p_ind].num_pedido
	let p_aviso_rec.num_oc           = p_array_compl[p_ind].num_oc
	let p_aviso_rec.ies_diverg_listada = "n"

	if p_array_compl[p_ind].ies_item_estoq  is not null then
		let p_aviso_rec.ies_item_estoq    = p_array_compl[p_ind].ies_item_estoq
	end if

	if p_nfe_vendas = true or
		p_ies_nf_transf  = true or
		g_ies_nf_permuta = true or
		m_nf_tipo_x      = true then ### os 511148

		#769302#
		if m_transf_incid_its = 's' then
			whenever error continue
			select ies_tip_incid_ipi,
			ies_tip_incid_icms
			into p_array_dev_trans[p_ind].ies_tip_incid_ipi,
			p_array_dev_trans[p_ind].ies_incid_icms_ite
			from item_sup
			where cod_empresa = p_cod_empresa
			and cod_item    = p_array[p_ind].cod_item
			whenever error stop
			if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
				call log003_err_sql("select","item_sup")
			end if
			if p_array_dev_trans[p_ind].ies_tip_incid_ipi is null then
				let p_array_dev_trans[p_ind].ies_tip_incid_ipi = ''
			end if
			if p_array_dev_trans[p_ind].ies_incid_icms_ite is null then
				let p_array_dev_trans[p_ind].ies_incid_icms_ite = ''
			end if
		end if
		#---fim--- 769302#

		let p_aviso_rec.val_desc_item       = p_array_dev_trans[p_ind].val_desc_item
		let p_aviso_rec.ies_incid_icms_ite  = p_array_dev_trans[p_ind].ies_incid_icms_ite
		let p_aviso_rec.ies_tip_incid_ipi   = p_array_dev_trans[p_ind].ies_tip_incid_ipi
		let p_aviso_rec.ies_bitributacao    = p_array_dev_trans[p_ind].ies_bi_tributacao

		case p_aviso_rec.ies_tip_incid_ipi
		when "1" let p_aviso_rec.ies_tip_incid_ipi = "c"
		when "2" let p_aviso_rec.ies_tip_incid_ipi = "i"
		when "3" let p_aviso_rec.ies_tip_incid_ipi = "o"
	end case

	case p_aviso_rec.ies_incid_icms_ite
	when "1" let p_aviso_rec.ies_incid_icms_ite = "c"
	when "2" let p_aviso_rec.ies_incid_icms_ite = "i"
	when "3" let p_aviso_rec.ies_incid_icms_ite = "o"
	when "4" let p_aviso_rec.ies_incid_icms_ite = "n"
	when "5" let p_aviso_rec.ies_incid_icms_ite = "d"
	when "6" let p_aviso_rec.ies_incid_icms_ite = "u"
	when "7" let p_aviso_rec.ies_incid_icms_ite = "s"
end case

## os 454019 / 455451
let l_ies_item_for = sup376_busca_par_sup_pad("ies_cod_item_forn",1)
if sqlca.sqlcode <> 0 or
	l_ies_item_for is null or
	l_ies_item_for = " "   then
	let l_ies_item_for = "n"
end if

let l_cod_item_trans = p_aviso_rec.cod_item
if l_ies_item_for = "s" then
	whenever error continue
	select cod_item_fornec
	into l_cod_item_trans
	from item_fornec
	where cod_empresa     = p_aviso_rec.cod_empresa
	and cod_item        = p_aviso_rec.cod_item
	and cod_fornecedor  = p_nf_sup.cod_fornecedor
	whenever error stop

	if sqlca.sqlcode = 0 then
		if l_cod_item_trans is null or
			l_cod_item_trans = " " then
			let l_cod_item_trans = p_aviso_rec.cod_item
		end if
	end if
end if
end if

if p_array_compl[p_ind].ies_liberacao_insp is not null then
	let p_aviso_rec.ies_liberacao_insp = p_array_compl[p_ind].ies_liberacao_insp
end if

if p_array_compl[p_ind].ies_controle_lote is null then
else
	let p_aviso_rec.ies_controle_lote   = p_array_compl[p_ind].ies_controle_lote
end if

if p_aviso_rec.num_oc = 0 then
	let  p_aviso_rec.cod_local_estoq     = p_array_compl[p_ind].cod_local_estoq
end if

let p_aviso_rec.ies_contabil = "s"

if p_aviso_rec.ies_item_estoq = "s" then
	if p_aviso_rec.cod_local_estoq = " " or
		p_aviso_rec.cod_local_estoq is null then
		initialize p_aviso_rec.cod_local_estoq, l_ies_tem_inspecao,
		l_cod_local_insp, l_cod_local_estoq to null
		whenever error continue
		select ies_tem_inspecao, cod_local_insp, cod_local_estoq
		into l_ies_tem_inspecao, l_cod_local_insp, l_cod_local_estoq
		from item
		where cod_empresa = p_cod_empresa
		and cod_item    = p_aviso_rec.cod_item
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let p_aviso_rec.cod_local_estoq = " "
		else
			if (m_ies_local_insp is not null and
				m_ies_local_insp = "s")       and
				l_ies_tem_inspecao = "s"      and
				l_cod_local_insp is not null then
				let p_aviso_rec.cod_local_estoq = l_cod_local_insp
			else
				if l_cod_local_estoq is not null then
					let p_aviso_rec.cod_local_estoq = l_cod_local_estoq
				else
					let p_aviso_rec.cod_local_estoq = " "
				end if
			end if
		end if
	end if
end if

if p_aviso_rec.ies_item_estoq = "n" then
	let p_aviso_rec.cod_local_estoq = " "
end if

initialize p_aviso_rec_compl_sq.cod_fiscal_compl to null

let p_ies_achou_itsup = false
select *
into p_item_sup.*
from item_sup
where item_sup.cod_empresa = p_cod_empresa
and item_sup.cod_item    = p_array[p_ind].cod_item

if sqlca.sqlcode = 0 then

	select cod_fiscal_compl
	into p_aviso_rec_compl_sq.cod_fiscal_compl
	from item_sup_compl
	where item_sup_compl.cod_empresa = p_cod_empresa
	and item_sup_compl.cod_item    = p_array[p_ind].cod_item
	if sqlca.sqlcode <> 0 or
		p_aviso_rec_compl_sq.cod_fiscal_compl is null then
		let p_aviso_rec_compl_sq.cod_fiscal_compl = 0
	end if

	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 31                 #
	if m_wms_instal = "s"        and
		m_segmto_utilizacao = "o" then
		if m_tipo_documento = "p" then
			if m_cfop_compl_nota_fiscal_provis is not null and
				m_cfop_compl_nota_fiscal_provis <> " " then
				let p_aviso_rec_compl_sq.cod_fiscal_compl = m_cfop_compl_nota_fiscal_provis
			end if
		else
			if m_tipo_documento = "d" then
				if m_cfop_compl_nota_fiscal_definit is not null and
					m_cfop_compl_nota_fiscal_definit <> " " then
					let p_aviso_rec_compl_sq.cod_fiscal_compl = m_cfop_compl_nota_fiscal_definit
				end if
			end if
		end if
	end if
	#---------------#

	let p_ies_achou_itsup = true
	let p_ult_digitos     = p_item_sup.cod_fiscal
	let p_aviso_rec.gru_ctr_desp_item = p_item_sup.gru_ctr_desp

	if p_aviso_rec.gru_ctr_desp_item is null then
		let p_aviso_rec.gru_ctr_desp_item = p_par_sup.cod_grp_despesa
	end if

	let p_aviso_rec.cod_comprador       = p_item_sup.cod_comprador
	let p_aviso_rec.cod_tip_despesa     = p_item_sup.cod_tip_despesa
	if p_nfe_vendas     = false and
		p_ies_nf_transf  = false and
		g_ies_nf_permuta = false and
		m_nf_tipo_x      = false  then ### os 511148
		let p_aviso_rec.ies_incid_icms_ite  = p_item_sup.ies_tip_incid_icms
		let p_aviso_rec.ies_tip_incid_ipi   = p_item_sup.ies_tip_incid_ipi
	end if
end if

whenever error continue
select ordem_sup.gru_ctr_desp,ordem_sup.ies_tip_incid_ipi,
ordem_sup.ies_tip_incid_icms, ordem_sup.cod_fiscal,
pedido_sup.cod_comprador, ordem_sup.cod_tip_despesa
into p_aviso_rec.gru_ctr_desp_item, p_aviso_rec.ies_tip_incid_ipi,
p_aviso_rec.ies_incid_icms_ite, p_ult_digitos,
p_aviso_rec.cod_comprador, p_aviso_rec.cod_tip_despesa
from ordem_sup, pedido_sup
where ordem_sup.cod_empresa      = p_cod_empresa
and ordem_sup.num_oc           = p_array_compl[p_ind].num_oc
and ordem_sup.ies_versao_atual = "s"
and pedido_sup.cod_empresa     = p_cod_empresa
and pedido_sup.num_pedido      = ordem_sup.num_pedido
and pedido_sup.ies_versao_atual = "s"
and (ordem_sup.ies_situa_oc = "a" or
ordem_sup.ies_situa_oc = "r" or
ordem_sup.ies_situa_oc = "c" or
ordem_sup.ies_situa_oc = "l")
whenever error stop
if sqlca.sqlcode <> 0 then
	if p_nfe_vendas     = true or
		p_ies_nf_transf  = true or
		g_ies_nf_permuta = true or
		m_nf_tipo_x      = true then ### os 511148
		if p_aviso_rec.ies_tip_incid_ipi is null then
			let p_aviso_rec.ies_tip_incid_ipi   = p_item_sup.ies_tip_incid_ipi
		end if
		if p_aviso_rec.ies_incid_icms_ite is null then
			let p_aviso_rec.ies_incid_icms_ite  = p_item_sup.ies_tip_incid_icms
		end if
	end if
end if

if p_dados_tela.ies_especie_nf = "nfp" and g_gerar_cred_impostos_nfm_import <> '0' then
	if m_grupo_desp_nfp_com_cred_nfm is not null and
		m_grupo_desp_nfp_com_cred_nfm > 0 then
		let p_aviso_rec.gru_ctr_desp_item = m_grupo_desp_nfp_com_cred_nfm
	end if
end if

### tewxk6 - se a finalidade da importa��o for 'c' courier o pct de ipi deve ser zerado e a incidencia 'i' isento
if (p_nfe_import = true or
	p_nfm_import = true or
	m_nfr_import = true) and
	(m_finalidade is not null and
	m_finalidade = 'c') then ### (courier)
	let p_aviso_rec.ies_tip_incid_ipi  = "i"
	let p_aviso_rec.pct_ipi_declarad   = 0
	let p_aviso_rec.pct_ipi_tabela     = 0
	let p_array_compl[p_ind].pct_ipi_tabela = 0
	let p_array[p_ind].pct_ipi = 0
end if


#if p_nfe_import and m_gerar_cred_impostos_nfm_import <> '0' then
#   let p_aviso_rec.ies_tip_incid_ipi  = "o"
#   let p_aviso_rec.ies_incid_icms_ite = "o"
#
#   let p_aviso_rec.pct_ipi_declarad   = 0
#   let p_aviso_rec.pct_ipi_tabela     = 0
#   let p_aviso_rec.pct_icms_item_d    = 0
#   let p_aviso_rec.pct_icms_item_c    = 0
#end if

call sup376_verifica_icms_reg_especial()

if p_dados_tela.ies_especie_nf = "nfr" then
	if p_aviso_rec.ies_tip_incid_ipi = " "   or
		p_aviso_rec.ies_tip_incid_ipi is null
		then let p_aviso_rec.ies_tip_incid_ipi = "c"
	end if
end if

#512218
if p_ies_achou_itsup               = true then

	if p_dados_tela.ies_especie_nf    = "nfe" and
		p_dados_tela.ies_nf_aguard_nfe = "x"  then
		let p_aviso_rec.cod_fiscal_item[3,5] = p_nf_sup.cod_operacao[3,5]
	else
		let p_aviso_rec.cod_fiscal_item[3,5] = p_ult_digitos
	end if
end if

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 32                 #
# if p_ies_achou_itsup = true then
#    let p_aviso_rec.cod_fiscal_item[3,5] = p_ult_digitos
# end if
if m_wms_instal = "s" and
	m_segmto_utilizacao = "o" then
	if m_tipo_documento = "p" then
		if m_cfop_nota_fiscal_provis is not null and
			m_cfop_nota_fiscal_provis <> " " then
			let p_aviso_rec.cod_fiscal_item[3,5] = m_cfop_nota_fiscal_provis
		else
			let p_aviso_rec.cod_fiscal_item[3,5] = p_ult_digitos
		end if
	else
		if m_tipo_documento = "d" then
			if m_cfop_nota_fiscal_definit is not null and
				m_cfop_nota_fiscal_definit <> " " then
				let p_aviso_rec.cod_fiscal_item[3,5] = m_cfop_nota_fiscal_definit
			else
				let p_aviso_rec.cod_fiscal_item[3,5] = p_ult_digitos
			end if
		else
			let p_aviso_rec.cod_fiscal_item[3,5] = p_ult_digitos
		end if
	end if
else
	let p_aviso_rec.cod_fiscal_item[3,5] = p_ult_digitos
end if
#---------------#
if sup0812_verifica_nota_transferencia(p_cod_empresa,
	p_aviso_rec.num_aviso_rec,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl) = true then
	let l_transferencia = true
else
	let l_transferencia = false
end if

if p_dados_tela.cod_operacao[1] = "7" then
	let p_aviso_rec.cod_fiscal_item[1,2] = "3."
end if
if p_dados_tela.cod_operacao[1] = "6" then
	let p_aviso_rec.cod_fiscal_item[1,2] = "2."
end if
if p_dados_tela.cod_operacao[1] = "5" then
	let p_aviso_rec.cod_fiscal_item[1,2] = "1."
end if

if m_ies_obj_entrada = "99" and
	p_dados_tela_f.val_tot_icms_nf_d = 0 and
	p_dados_tela_f.val_ipi_nf        = 0 then
	if p_aviso_rec.ies_incid_icms_ite  = "c"  or
		p_aviso_rec.ies_incid_icms_ite is null or
		p_aviso_rec.ies_incid_icms_ite  = " "
		then let p_aviso_rec.ies_incid_icms_ite     = "i"
	end if
	if p_aviso_rec.ies_tip_incid_ipi   = "c"  or
		p_aviso_rec.ies_tip_incid_ipi is null  or
		p_aviso_rec.ies_tip_incid_ipi   = " "
		then let p_aviso_rec.ies_tip_incid_ipi      = "i"
	end if
	call sup376_busca_cod_incid_ipi()
	let p_aviso_rec.val_contabil_item      = p_aviso_rec.val_liquido_item
	if (m_gera_rsv_transf = "s" and p_nf_sup.ies_nf_aguard_nfe = "8") or l_transferencia then
		let p_aviso_rec.val_base_c_ipi_it   = ga_nf_item_fiscal[p_ind].val_base_ipi
		let p_aviso_rec.val_ipi_calc_item   = ga_nf_item_fiscal[p_ind].val_ipi
		if p_array_compl[p_ind].pct_ipi_tabela is not null and p_array_compl[p_ind].pct_ipi_tabela > 0 then
			let p_aviso_rec.pct_ipi_declarad    = p_array_compl[p_ind].pct_ipi_tabela #alterado para mostrar %ipi no sup3760
		else
			let p_aviso_rec.pct_ipi_declarad    = 0
		end if
	else
		let p_aviso_rec.val_base_c_ipi_it   = p_aviso_rec.val_liquido_item
	end if
	if p_dados_tela.ies_especie_nf = "nfd" or p_ies_tip_entrada = "5" then
		if ga_nf_item_fiscal[p_ind].val_base_ipi is not null then
			let p_aviso_rec.val_base_c_ipi_it   = ga_nf_item_fiscal[p_ind].val_base_ipi
		end if
		if ga_nf_item_fiscal[p_ind].val_base_icms is not null then
			let p_aviso_rec.val_base_c_item_c   = ga_nf_item_fiscal[p_ind].val_base_icms
		else
			let p_aviso_rec.val_base_c_item_c   = p_aviso_rec.val_liquido_item
		end if
	else
		let p_aviso_rec.val_base_c_item_c   = p_aviso_rec.val_liquido_item
	end if
	call sup376_busca_icms()
else
	if (m_gera_rsv_transf = "s" and p_nf_sup.ies_nf_aguard_nfe = "8") or l_transferencia then
		let p_aviso_rec.val_base_c_ipi_it   = ga_nf_item_fiscal[p_ind].val_base_ipi
		let p_aviso_rec.val_ipi_calc_item   = ga_nf_item_fiscal[p_ind].val_ipi
		if p_array_compl[p_ind].pct_ipi_tabela is not null and p_array_compl[p_ind].pct_ipi_tabela > 0 then
			let p_aviso_rec.pct_ipi_declarad    = p_array_compl[p_ind].pct_ipi_tabela #alterado para mostrar %ipi no sup3760
		else
			let p_aviso_rec.pct_ipi_declarad    = 0
		end if
	else
		if p_base_ipi[p_ind].val_liquido_item <> p_aviso_rec.val_liquido_item
			then let p_aviso_rec.val_base_c_ipi_it = 0
		end if
	end if
	if p_dados_tela.ies_especie_nf = "nfd" or
		p_ies_tip_entrada = "5" then
		if ga_nf_item_fiscal[p_ind].val_base_ipi is not null then
			let p_aviso_rec.val_base_c_ipi_it   = ga_nf_item_fiscal[p_ind].val_base_ipi
		end if
		if ga_nf_item_fiscal[p_ind].val_base_icms is not null then
			let p_aviso_rec.val_base_c_item_c   = ga_nf_item_fiscal[p_ind].val_base_icms
		else
			let p_aviso_rec.val_base_c_item_c   = p_aviso_rec.val_liquido_item
		end if
	else
		let p_aviso_rec.val_base_c_item_c   = p_aviso_rec.val_liquido_item
	end if
	let p_aviso_rec.pct_ipi_tabela = p_array_compl[p_ind].pct_ipi_tabela
	call sup376_inicializa_info_fiscais()
	call sup376_busca_cod_fiscal_item()
	if m_wms_instal = 's' then
		call edi0017_cod_fiscal_wms(p_nf_sup.ies_nf_aguard_nfe, p_aviso_rec.cod_fiscal_item)
		returning p_aviso_rec.cod_fiscal_item
	end if
	call sup376_busca_cod_incid_ipi()
	call sup376_busca_bitributacao()
	call sup376_busca_incidencia_icms()
	call sup376_busca_icms()
end if

call sup376_verifica_optante_s_paulista()

if p_ies_nf_transf = true then
	initialize l_num_nff, l_num_pedido, l_num_sequencia, l_ord_montag to null
	whenever error continue
	select num_nff, num_pedido, num_sequencia,
	ord_montag                                     #vanderlei - os 329518 #
	into l_num_nff, l_num_pedido, l_num_sequencia,
	l_ord_montag                                   #vanderlei - os 329518 #
	from ar_nf_item
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	and num_seq       = p_aviso_rec.num_seq
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("leitura","ar_nf_item")
		let p_houve_erro = true
		return
	end if

	if l_num_nff is not null then
		initialize l_count to null

		let sql_stmt = "select fat_nf_item.ord_montag, ",
		"fat_nf_item.trans_nota_fiscal, ",
		"fat_nf_item.seq_item_nf ",
		"from fat_nf_mestre, fat_nf_item ",
		"where fat_nf_mestre.empresa            = """, p_cod_emp_transf, """ ",
		" and fat_nf_mestre.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
		" and fat_nf_mestre.serie_nota_fiscal  = """, p_dados_tela.ser_nf, """ ",
		" and fat_nf_mestre.subserie_nf        = ",p_dados_tela.ssr_nf," ",
		" and fat_nf_mestre.tip_nota_fiscal    = ""fatprdsv"" ",
		" and fat_nf_mestre.sit_nota_fiscal    = ""n"" ",
		" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
		" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal ",
		" and fat_nf_item.pedido               = ",l_num_pedido," ",
		" and fat_nf_item.seq_item_pedido      = ",l_num_sequencia," ",
		" and fat_nf_item.item                 = """,l_cod_item_trans,""" "

		if l_ord_montag is not null then
			let sql_stmt = sql_stmt clipped, "and ord_montag = ", l_ord_montag
		end if

		whenever error continue
		prepare var_nf_item2 from sql_stmt
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("prepare","var_nf_item2")
		end if

		whenever error continue
		declare cq_nf_item2 cursor for var_nf_item2
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare","cq_nf_item2")
		end if

		whenever error continue
		foreach cq_nf_item2 into l_num_om, l_trans_nota_fiscal_fatura,
		l_seq_item_nota_fiscal_fatura
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("foreach","cq_nf_item2")
		end if
		initialize l_cod_fiscal to null

		if l_trans_nota_fiscal_fatura > 0 then
			call supr6_busca_cod_fiscal_fat_nf_item_fisc(p_cod_emp_transf,
			l_trans_nota_fiscal_fatura,
			l_seq_item_nota_fiscal_fatura,
			null, false)
			returning l_status, l_cod_fiscal
		end if

		if l_cod_fiscal is not null then
			let l_cod_fiscal_char = l_cod_fiscal
			let p_aviso_rec.cod_fiscal_item[3,5] = l_cod_fiscal_char[2,4]
		end if
		exit foreach
	end foreach
end if
end if

if p_dados_tela.cod_operacao[1] = "7" and
	p_dados_tela.ies_especie_nf  = "nfm" then
	let p_aviso_rec.ies_bitributacao = "s"
end if

if p_aviso_rec.cod_cla_fisc is null then
	let p_aviso_rec.cod_cla_fisc = " "
end if
if p_aviso_rec.cod_cla_fisc_nf is null then
	let p_aviso_rec.cod_cla_fisc_nf = " "
end if
if p_aviso_rec.pct_ipi_declarad is null then
	let p_aviso_rec.pct_ipi_declarad = 0
end if
if p_dados_tela.ies_especie_nf = "nfc" and
	p_aviso_rec.ies_item_estoq = "n"    and
	(p_aviso_rec.num_pedido = 0 or
	p_aviso_rec.num_pedido is null or
	p_aviso_rec.num_pedido = " " ) then
	let p_aviso_rec.ies_situa_ar = "e"
end if
if g_ies_transf_benef = true then
	let p_aviso_rec.cod_operac_estoq = p_dados_tela.cod_operac_estoq
end if
if g_ies_transf_benef = true and
	g_ies_retorno_ind = true then
	let p_aviso_rec.ies_item_estoq = "n"
end if

#o.s. 550997
if p_nfe_vendas = true or
	(p_dados_tela.ies_especie_nf = "nfd" or
	p_ies_tip_entrada = "5") then
	if sup1786_existe_cadastro_sup1785(p_cod_empresa) then #cadastro sup1785?
		##a nota fiscal n�o est� sendo carregada do vdp.
		if p_nfe_vendas = false then
			if sup1786_cfop_cadastrado_devolucao_sup1785(p_cod_empresa,
				p_dados_tela.cod_operacao) then
				let p_aviso_rec.cod_fiscal_item = p_aviso_rec.cod_fiscal_item[1,2], p_dados_tela.cod_operacao[3,5]
				call sup1786_busca_grupo_tipo_desp_por_cfop_dev(p_cod_empresa,
				p_dados_tela.cod_operacao)
				returning l_gru_desp_item, l_cod_tip_desp
			end if
		else
			##necess�rio chamar esta fun��o para pegar os dados da nf de sa�da na
			##tabela ar_nf_item, pois ser� utilizado na fun��o
			##sup1786_busca_cfop_tipo_e_grupo_desp_sup1785
			call sup1786_devolucao_total(p_cod_empresa, p_aviso_rec.num_aviso_rec,
			p_aviso_rec.num_seq, p_dados_tela.ser_nf)
			returning l_status

			call sup1786_busca_cfop_tipo_e_grupo_desp_sup1785(p_cod_empresa,0)
			returning l_final_cod_fiscal,
			l_gru_desp_item,
			l_cod_tip_desp

			if l_final_cod_fiscal is not null and l_final_cod_fiscal <> " " then
				let p_aviso_rec.cod_fiscal_item = p_aviso_rec.cod_fiscal_item[1,2], l_final_cod_fiscal
			end if
		end if

		if l_gru_desp_item is not null then
			let p_aviso_rec.gru_ctr_desp_item = l_gru_desp_item
		end if

		if l_cod_tip_desp is not null then
			let p_aviso_rec.cod_tip_despesa = l_cod_tip_desp
		end if
	end if
end if
#o.s. 550997

# inicio chamado 794.336
if log_existe_epl('sup3760y_after_process_move_campos_ar') then
	if p_aviso_rec.num_oc is not null then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('num_oc', p_aviso_rec.num_oc)
		#epl numero da orde de compra
		#epl tipo: ordem_sup.num_oc

		call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
		#epl numero do aviso de recebimento
		#epl tipo: aviso_rec.num_aviso_rec

		call log_setvar('num_seq', p_aviso_rec.num_seq)
		#epl numero da sequencia do aviso de recebimento
		#epl tipo: aviso_rec.num_seq

		call log_setvar('status', false)
		#epl status do retorno
		#epl tipo: smallint

		call log_setvar('incidencia_ipi', p_aviso_rec.ies_tip_incid_ipi)
		#epl incidencia do ipi
		#epl tipo: aviso_rec.ies_tip_incid_ipi

		call log_setvar('incidencia_icms', p_aviso_rec.ies_incid_icms_ite)
		#epl incidencia do icms
		#epl tipo: aviso_rec.ies_incid_icms_ite

		call log_setvar('grupo_despesa', p_aviso_rec.gru_ctr_desp_item)
		#epl grupo de despesa
		#epl tipo: aviso_rec.gru_ctr_desp_item

		call log_setvar('cod_fiscal', p_aviso_rec.cod_fiscal_item)
		#epl codigo fiscal
		#epl tipo: aviso_rec.cod_fiscal_item

		call log_setvar('tip_despesa', p_aviso_rec.cod_tip_despesa)
		#epl tipo de despesa do item
		#epl tipo: aviso_rec.cod_tip_despesa

		call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
		#epl esp�cie da nota fiscal
		#epl tipo: nf_sup.ies_especie_nf

		if sup3760y_after_process_move_campos_ar() then
			let l_status = log_getvar('status')

			if l_status then
				let p_aviso_rec.ies_tip_incid_ipi  = log_getvar('incidencia_ipi')
				let p_aviso_rec.ies_incid_icms_ite = log_getvar('incidencia_icms')
				let p_aviso_rec.gru_ctr_desp_item  = log_getvar('grupo_despesa')
				let p_aviso_rec.cod_fiscal_item    = log_getvar('cod_fiscal')
				let p_aviso_rec.cod_tip_despesa    = log_getvar('tip_despesa')
			end if
		end if
	end if
end if
# fim chamado 794.336

# inicio chamado trsvoc

if log_existe_epl('sup3760y_after_process_move_campos_ar_2') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
	#epl numero do aviso de recebimento
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('ser_nf', p_dados_tela.ser_nf)
	#epl numero do aviso de recebimento
	#epl tipo: p_nf_sup.ser_nf

	call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
	#epl numero do aviso de recebimento
	#epl tipo: p_dados_tela.cod_fornecedor

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl tipo nota
	#epl tipo: p_dados_tela.ies_nf_aguard_nfe

	call log_setvar('grupo_despesa', p_aviso_rec.gru_ctr_desp_item)
	#epl grupo de despesa
	#epl tipo: aviso_rec.gru_ctr_ desp_item

	if sup3760y_after_process_move_campos_ar_2() then
		let p_aviso_rec.gru_ctr_desp_item  = log_getvar('grupo_despesa')

	else
		let p_houve_erro = true
	end if
end if

end function

#---------------------------------#
function sup376_inclusao_nf_sup()
#---------------------------------#
	define ik                  smallint,
	l_ind               smallint,
	l_count_seq         smallint,
	l_data              datetime year to second,
	l_nf_transito_imp   smallint,
	l_finalidade_nfe    like sup_par_ar.parametro_val,
	l_achou_tip         smallint,
	l_consum_final      like sup_par_ar.parametro_val,
	l_consum_pres       like sup_par_ar.parametro_val,
	l_den_consum_pres   like sup_par_ar.parametro_texto

	define l_id_estrangeiro     like vdp_cli_fornec_cpl.iden_estrangeiro,
	l_ins_estadual_ar    like sup_par_ar.parametro_texto,
	l_ind_ie_dest        like sup_par_ar.parametro_val,
	l_num_nfe_aux        char(15) ### tqfxnr

	select cod_fornecedor
	from fornecedor
	where fornecedor.cod_fornecedor = p_dados_tela.cod_fornecedor
	if sqlca.sqlcode <> 0 then
		error  "fornecedor nao cadastrado na tabela fornecedor. ",p_dados_tela.cod_fornecedor
		let p_houve_erro = true
	end if

	if p_nfe_vendas = false and
		m_nf_tipo_x  = false then ### os 511148
		let p_nf_sup.cod_empresa        = p_cod_empresa
		let p_nf_sup.cod_empresa_estab  = p_dados_tela.cod_empresa_estab
		let p_nf_sup.num_nf             = p_dados_tela.num_nf
		let p_nf_sup.ser_nf             = p_dados_tela.ser_nf
		let p_nf_sup.ssr_nf             = p_dados_tela.ssr_nf

		if p_dados_tela.ies_especie_nf = "nfs"
			or p_dados_tela.ies_especie_nf = "rec"
			or p_dados_tela.ies_especie_nf = "doc" then
			if p_nf_sup.cod_regist_entrada is null or p_nf_sup.cod_regist_entrada = " " then
				let p_nf_sup.cod_regist_entrada = p_par_sup.cod_regist_entrada
			end if
			if m_reg_entr_doc_rec <> 0 and
				(p_dados_tela.ies_especie_nf = "rec" or p_dados_tela.ies_especie_nf = "doc") then
				let p_nf_sup.cod_regist_entrada = m_reg_entr_doc_rec
			end if
		else
			let p_nf_sup.cod_regist_entrada = 01
		end if

		#--------------------relac nfe-----------------------#
		if p_dados_tela.ies_nf_aguard_nfe = "2" then
			let p_nf_sup.cod_regist_entrada =  02
		end if
		#--------------------relac nfe-----------------------#

		let p_nf_sup.ies_especie_nf     = p_dados_tela.ies_especie_nf
		let p_nf_sup.dat_emis_nf        = p_dados_tela.dat_emis_nf
		let p_nf_sup.ies_nf_aguard_nfe  = p_dados_tela.ies_nf_aguard_nfe
		let p_nf_sup.num_aviso_rec      = p_dados_tela.num_aviso_rec
		let p_nf_sup.dat_entrada_nf     = p_dados_tela.dat_entrada_nf
		let p_nf_sup.cod_fornecedor     = p_dados_tela.cod_fornecedor
		let p_nf_sup.cnd_pgto_nf        = p_dados_tela.cnd_pgto_nf
		let p_nf_sup.cod_mod_embar      = p_dados_tela.cod_mod_embar
		if p_nfe_import = true or p_nfm_import = true then
		else
			let p_nf_sup.cod_operacao    = p_dados_tela.cod_operacao
		end if
		let p_nf_sup.cod_imp_renda      = p_cod_ret_imp
		let p_nf_sup.val_ipi_nf         = p_dados_tela_f.val_ipi_nf
		let p_nf_sup.val_tot_icms_nf_d  = p_dados_tela_f.val_tot_icms_nf_d
		let p_nf_sup.val_tot_nf_d       = p_dados_tela_f.val_tot_nf_d
		let p_nf_sup.val_bc_imp_renda   = 0
		let p_nf_sup.val_imp_renda      = 0
		if (p_par_sup_compl.ies_mod_importacao = "s" or
			p_par_sup_compl.ies_mod_importacao = "l") then
			if p_nf_sup.cod_operacao[1] = "7" then
				if p_cod_pais_emp <> p_fornecedor.cod_pais and
					(p_nf_sup.ies_especie_nf = "nfe" or
					p_nf_sup.ies_especie_nf = "nfp") then
					if m_ies_utiliz_provisao = "s" and
						m_utiliz_nfm_import = "n" and
						m_num_processo >= m_inicio_provisao then
						let p_nf_sup.ies_situa_import = "e"
					else
						if m_nfp_incl_apos_encerr then
							let p_nf_sup.ies_situa_import = "e"
						else
							let p_nf_sup.ies_situa_import = "a"
						end if
					end if
					let p_aviso_rec_compl.ies_incl_import = "n"
				else
					if p_cod_pais_emp <> p_fornecedor.cod_pais and
						p_dados_tela.ies_especie_nf = "nfm" then
						let p_nf_sup.ies_situa_import = "a" #alteracao_nfm_nfp
						let p_aviso_rec_compl.ies_incl_import = "n"
					end if
				end if
			else
				if m_nfr_import then
					if m_ies_utiliz_provisao = "s" and
						m_utiliz_nfm_import = "n" and
						m_num_processo >= m_inicio_provisao then
						let p_nf_sup.ies_situa_import = "e"
					else
						if m_nfp_incl_apos_encerr then
							let p_nf_sup.ies_situa_import = "e"
						else
							let p_nf_sup.ies_situa_import = "a"
						end if
					end if
					let p_aviso_rec_compl.ies_incl_import = "n"
				else
					let p_nf_sup.ies_situa_import = " "
				end if
			end if
		else
			let p_nf_sup.ies_situa_import = " "
		end if
	else
		let p_nf_sup.ser_nf             = p_dados_tela.ser_nf
	end if


	if p_nf_sup.cod_imp_renda is null or
		p_nf_sup.cod_imp_renda = " " then
		let p_nf_sup.val_imp_renda = 0
		let p_nf_sup.val_bc_imp_renda = 0
	end if

	if p_aguarda_fatura = "s"  then
		if m_pc_nf_consig = "s" then
			if p_aviso_rec.num_oc is null or p_aviso_rec.num_oc = 0 then
				error " nota de remessa de consignacao seme ordem/pedido relacionados. "
				sleep 2
				let p_houve_erro = true
				return false
			end if
		end if
		if m_ies_armaz_itau <> "s" and p_dados_telar.ies_nf_aguard_nfe <> "7" then
			let p_nf_sup.ies_nf_aguard_nfe = "4"
			let p_dados_telar.ies_nf_aguard_nfe = "4"
			let p_dados_tela.ies_nf_aguard_nfe = "4"
		end if
	end if

	let l_nf_transito_imp = false
	if find4glfunction("supy117_consiste_nota_fiscal_transito") then
		if supy117_consiste_nota_fiscal_transito(p_dados_tela.ies_nf_aguard_nfe,
			p_dados_tela.ies_especie_nf) then
			let l_nf_transito_imp = true
		end if
	end if
	if  p_dados_tela.ies_nf_aguard_nfe = "6" or
		l_nf_transito_imp = true or
		sup3760_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
		p_nf_sup.cod_operacao) = true or
		(p_dados_tela.ies_especie_nf = "nfd" and
		p_dados_tela.ies_nf_aguard_nfe = "9") or
		p_dados_tela.ies_nf_aguard_nfe = "b" or
		(p_dados_tela.ies_especie_nf = "nfe" and
		p_dados_tela.ies_nf_aguard_nfe = "x") then

		whenever error continue
		select cod_empresa
		from nfe_sup_compl
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode = 0 then
			whenever error continue
			update nfe_sup_compl set ies_proc_nfs = '2'
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("update","nfe_sup_compl")
			end if
		else
			insert into nfe_sup_compl values(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			" ",
			0,
			0,
			0,
			"2",
			null,
			0,
			0,
			" ",
			" ",
			"n")
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","nfe_sup_compl")
			end if
		end if
	end if

	if p_dados_tela.ies_especie_nf = "nfm" then
		for ik = 1 to p_ind
			if p_array[ik].cod_item is null or
				p_array[ik].cod_item =  " "  then
				exit for
			else
				whenever error continue
				insert into nf_pend values(p_cod_empresa, p_dados_tela.num_nf,
				p_dados_tela.ser_nf, p_dados_tela.ssr_nf,
				p_dados_tela.cod_fornecedor,
				p_array[ik].cod_item,
				p_array[ik].qtd_declarad_nf, 0, null,
				today)
				whenever error stop
				if sqlca.sqlcode = -239 or
					sqlca.sqlcode = -268 then
					update nf_pend
					set qtd_recebida = qtd_recebida + p_array[ik].qtd_declarad_nf
					where cod_empresa    = p_cod_empresa
					and num_nf         = p_dados_tela.num_nf
					and ser_nf         = p_dados_tela.ser_nf
					and ssr_nf         = p_dados_tela.ssr_nf
					and cod_fornecedor = p_dados_tela.cod_fornecedor
					and cod_item       = p_array[ik].cod_item
				end if
			end if
		end for
	end if

	#--inicio--os 414316 #
	if sup3760_existe_h_nf_sup(p_nf_sup.cod_empresa, p_nf_sup.num_nf, p_nf_sup.ser_nf,
		p_nf_sup.ssr_nf, p_nf_sup.ies_especie_nf, p_nf_sup.cod_fornecedor,
		p_nf_sup.dat_emis_nf) then  #809554
		call log0030_mensagem('nota fiscal j� cadastrada em hist�rico.','stop')
		let p_houve_erro = 1
	end if
	#---fim----os 414316 #

	#####
	if p_nf_sup.ies_situa_import is null then
		let p_nf_sup.ies_situa_import = " "
	end if

	if p_nf_sup.val_tot_nf_d is null then
		let p_nf_sup.val_tot_nf_d = 0
	end if

	if p_nf_sup.val_tot_icms_nf_d is null then
		let p_nf_sup.val_tot_icms_nf_d = 0
	end if

	if p_nf_sup.val_ipi_nf is null then
		let p_nf_sup.val_ipi_nf = 0
	end if

	whenever error continue

	insert into nf_sup values (p_nf_sup.*)
	whenever error stop
	if sqlca.sqlcode = 0  then
		if p_nfe_import and m_ies_utiliz_provisao = "s" and
			m_utiliz_nfm_import = "n" and
			m_num_processo >= m_inicio_provisao then
			select count(*)
			into l_count_seq
			from aviso_rec
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_aviso_rec.num_aviso_rec
			and num_pedido    > 0

			let g_prim_rateio = true
			for l_ind = 1 to l_count_seq
				if m_num_processo >= g_proc_ini_os163407 then
					if not imp0101_rateio_desp_imp(p_aviso_rec.num_aviso_rec, l_ind,
						p_aviso_rec.val_base_c_icms_da) then
						error " problemas no rateio das despesas de importacao "
						sleep 2
						let p_houve_erro = true
						return false
					end if
				else
					if not imp0101_rateio_desp_imp_ant(p_aviso_rec.num_aviso_rec, l_ind) then
						error " problemas no rateio das despesas de importacao "
						sleep 2
						let p_houve_erro = true
						return false
					end if
				end if
			end for
			if m_num_processo >= g_proc_ini_os163407 then
				if not imp0101_calcula_icms_ar(p_aviso_rec.num_aviso_rec) then
					error " problemas no calculo do icms das despesas acessorias. "
					sleep 2
					let p_houve_erro = true
					return false
				end if
			else
				call imp0101_item_sem_icms(m_num_processo, p_aviso_rec.num_aviso_rec)
			end if
		end if
		### os327252 ###
		if p_nfm_import = true then
			if sup3760_grava_sup_par_ar(p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec,
				0,
				"processo_import",
				" ",
				" ",
				m_num_processo,
				" ") = false then
				let p_houve_erro = true
				return false
			end if
		end if
		### fim os327252 ###

		# rose
		if m_possui_regime_filial = true then
			if sup3760_grava_sup_par_ar(p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec,
				0,
				"emitente_regime_fi",
				" ",
				m_emitente_nf_filial,
				" ",
				" ") = false then
				let p_houve_erro = true
				return false
			end if
		end if
		#fim rose

		let l_data = extend(current, year to second)
		if sup3760_grava_sup_par_ar(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"data_hora_nf_entrada",
			" ",
			l_data,
			" ",
			" ") = false then
			let p_houve_erro = true
			return false
		end if

		### os426421 ###
		if  m_via_transporte_nota is not null
			and m_via_transporte_nota <> ' ' then
			if m_cod_via_transp is not null and #trnoc7
				m_cod_via_transp <> ' ' then
				let m_via_transporte_nota = m_cod_via_transp
			end if
			whenever error continue
			select empresa
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "meio_transp_ar"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_val     = m_via_transporte_nota
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = 'meio_transp_ar'
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql('update','sup_par_ar(imp1)')
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"meio_transp_ar",
				null,
				null,
				m_via_transporte_nota,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("(4)insert","sup_par_ar")
					let p_houve_erro = true
				end if
			end if
		end if
		### fim os426421 ###
		##tejsoc
		if p_nf_sup.ies_especie_nf = "nfd" or
			p_nf_sup.ies_especie_nf = "nfe" or
			p_nf_sup.ies_especie_nf = "nfr" or
			p_nf_sup.ies_nf_aguard_nfe = '6' then
			if sup3760_grava_sup_par_ar(p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec,
				'0',
				"num_nf_inclusao",
				" ",
				" ",
				p_nf_sup.num_nf,
				today) = false then
				let p_houve_erro = true
				return false
			end if
		end if
		#tejsoc

		#tfpsqq - nfe 3.10
		if ((p_nf_sup.ies_nf_aguard_nfe = "6" ) or
			(p_nf_sup.ies_nf_aguard_nfe = "7" ) or
			(p_nf_sup.ies_especie_nf = "nfd"  and p_nf_sup.ies_nf_aguard_nfe = "9") or
			(p_nf_sup.ies_especie_nf = "nfe"  and p_nf_sup.ies_nf_aguard_nfe = "x")) then

			initialize l_finalidade_nfe to null
			initialize l_achou_tip to null
			if sup1481_nfc_compl_imposto(p_nf_sup.ies_especie_nf,
				p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec)then
				let l_finalidade_nfe = "2"
			else
				if sup1481_nfc_compl_valor(p_nf_sup.ies_especie_nf,
					p_nf_sup.cod_empresa,
					p_nf_sup.num_aviso_rec)then
					let l_finalidade_nfe = "3"
				else
					if (p_nf_sup.ies_especie_nf = "nfd" or
						p_ies_tip_entrada = "5") then
						let l_finalidade_nfe = "4"
					else
						### trqoy4 - tratar nota fiscal de cr�dito de icms
						### orienta��o para incluir este tipo de nota consta em:
						### http://tdn.totvs.com/display/public/lg/procedimento+para+entrada+das+notas+de+icms+para+o+ciap
						if (m_ies_obj_entrada = "6" and p_nf_sup.val_tot_icms_nf_d > 0 and p_nf_sup.val_tot_nf_d = 0) then
							let l_finalidade_nfe = "3"
						else
							let l_finalidade_nfe = "1"
						end if
					end if
				end if
			end if

			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"finalidade_nfe",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_val(l_finalidade_nfe)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("finalidade_nfe")
				call supm72_sup_par_ar_set_parametro_val(l_finalidade_nfe)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					return false
				end if
			end if

			initialize l_achou_tip to null
			initialize l_consum_final to null
			let l_consum_final = "0" #n�o � consumidor final
			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"id_consum_final",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_val(l_consum_final)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("id_consum_final")
				call supm72_sup_par_ar_set_parametro_val(l_consum_final)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					return false
				end if
			end if

			initialize l_achou_tip to null
			initialize l_consum_pres to null
			initialize l_den_consum_pres to null
			if p_nf_sup.ies_especie_nf = "nfc" then
				let l_consum_pres     = "0"
				let l_den_consum_pres = "n�o se aplica ou nfc"
			else
				let l_consum_pres     = "9"
				let l_den_consum_pres = "outros"
			end if
			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"id_consum_pres",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_texto(l_den_consum_pres)
				call supm72_sup_par_ar_set_parametro_val(l_consum_pres)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("id_consum_pres")
				call supm72_sup_par_ar_set_parametro_texto(l_den_consum_pres)
				call supm72_sup_par_ar_set_parametro_val(l_consum_pres)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					return false
				end if
			end if

			### trrvb8 (efetua inclus�o na sup_par_ar logo ap�s o insert na nf_sup
			#tpxzwn - conforme solicita��o da �rea fiscal allan
			initialize l_achou_tip to null
			initialize l_ind_ie_dest to null
			whenever error continue
			select parametro_texto
			into l_ins_estadual_ar
			from sup_par_ar
			where empresa           = p_nf_sup.cod_empresa
			and aviso_recebto     = p_nf_sup.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "ins_estadual_ar"
			whenever error stop
			if sqlca.sqlcode <>  0 then
				whenever error continue
				select ins_estadual
				into l_ins_estadual_ar
				from fornecedor
				where cod_fornecedor = p_nf_sup.cod_fornecedor
				whenever error stop
				if sqlca.sqlcode <> 0 then
					initialize l_ins_estadual_ar to null
				end if
			end if

			if l_ins_estadual_ar is not null and
				l_ins_estadual_ar <> " "      and
				l_ins_estadual_ar not like "isento" then
				let l_ind_ie_dest = "1"
			else
				let l_ind_ie_dest = "2"
			end if

			### devolu��o assume ie_dest conforme inscri��o estadual
			#if (p_nf_sup.ies_especie_nf = "nfd" or
			#    p_ies_tip_entrada = "5") then
			#    let l_ind_ie_dest = "9"
			#end if
			#tpxzwn

			if p_nf_sup.cod_operacao[1] = "7" then
				let l_ind_ie_dest = "9"
			end if

			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"ind_ie_dest",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_texto(l_ins_estadual_ar)
				call supm72_sup_par_ar_set_parametro_val(l_ind_ie_dest)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("ind_ie_dest")
				call supm72_sup_par_ar_set_parametro_texto(l_ins_estadual_ar)
				call supm72_sup_par_ar_set_parametro_val(l_ind_ie_dest)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					return false
				end if
			end if

			if (p_nf_sup.cod_operacao[1] = "7" or
				p_cod_pais_emp <> p_fornecedor.cod_pais) then

				initialize l_id_estrangeiro to null
				initialize l_achou_tip to null

				if vdpm279_vdp_cli_fornec_cpl_leitura(p_nf_sup.cod_fornecedor, "f", true, true) then
					if vdpm279_vdp_cli_fornec_cpl_get_iden_estrangeiro() is not null and
						vdpm279_vdp_cli_fornec_cpl_get_iden_estrangeiro() <> ' ' then
						let l_id_estrangeiro = vdpm279_vdp_cli_fornec_cpl_get_iden_estrangeiro()
					end if
				end if

				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec,
				0,
				"id_estrangeiro",
				true,
				true) returning l_achou_tip
				if l_achou_tip then
					call supm72_sup_par_ar_set_parametro_texto(l_id_estrangeiro)
					call supm72_sup_par_ar_set_parametro_dat(today)
					if not supt72_sup_par_ar_modifica(true,true) then
						return false
					end if

				else
					call supm72_sup_par_ar_set_null()
					call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
					call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
					call supm72_sup_par_ar_set_seq_aviso_recebto(0)
					call supm72_sup_par_ar_set_parametro("id_estrangeiro")
					call supm72_sup_par_ar_set_parametro_texto(l_id_estrangeiro)
					call supm72_sup_par_ar_set_parametro_dat(today)

					if not supt72_sup_par_ar_inclui(true,true) then
						return false
					end if
				end if
			end if
		end if
		#tfpsqq

		if not sup1031_grava_audit_ar_incl_nf(p_nf_sup.num_aviso_rec,0,"sup3760",
			"1", m_dat_hor_proces) then
			let p_houve_erro = true
			return false
		end if
		initialize m_dat_hor_proces to null

		let l_num_nfe_aux = m_num_nf_eletronica

		if m_utiliza_num_nfe = 's' and
			#m_utiliza_nf_eletronica = 's'  and #--# teunq3 #--#
			length(l_num_nfe_aux) >= 7 then ### trxbxa/tvihmo
			if sup3760_grava_num_nfe() = false then
				let p_houve_erro = true
				return false
			end if
		end if

		#o.s 210882
		if p_nf_sup.ies_nf_aguard_nfe = "c" then
			call sup3762_inf_nota_origem("inclusao")
		end if
	else
		call log003_err_sql("inclusao","nf_sup")
		let p_houve_erro = true
		return false
	end if

	### tsltct
	if log_existe_epl('sup3760y_after_process_inclusao_nf_sup') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: nf_sup.cod_empresa

		call log_setvar('num_aviso_rec', p_nf_sup.num_aviso_rec)
		#epl codigo da empresa
		#epl tipo: nf_sup.num_aviso_rec

		call log_setvar('houve_erro', p_houve_erro)
		#epl status do retorno
		#epl tipo: smallint

		call sup3760y_after_process_inclusao_nf_sup()
		let p_houve_erro = log_getvar('houve_erro')
	end if

	if p_houve_erro = false then
		let p_dados_telar.* = p_dados_tela.*
		let m_num_nfe_r = m_num_nfe
		let p_formonlyr.* = p_formonly.*
		return true
	else
		return false
	end if

end function

#--------------------------------------#
function sup376_move_campos_ar_copia()
#--------------------------------------#
	define l_ies_tem_inspecao like item.ies_tem_inspecao,
	l_cod_local_insp   like item.cod_local_insp,
	l_cod_local_estoq  like item.cod_local_estoq
	let p_aviso_rec.num_pedido       = p_array_compl[p_ind].num_pedido
	let p_aviso_rec.num_oc           = p_array_compl[p_ind].num_oc
	if p_array_compl[p_ind].ies_item_estoq  is not null then
		let p_aviso_rec.ies_item_estoq    = p_array_compl[p_ind].ies_item_estoq
	end if
	if p_array_compl[p_ind].ies_liberacao_insp is not null then
		let p_aviso_rec.ies_liberacao_insp = p_array_compl[p_ind].ies_liberacao_insp
	end if

	if p_array_compl[p_ind].ies_controle_lote is null then
	else
		let p_aviso_rec.ies_controle_lote   = p_array_compl[p_ind].ies_controle_lote
	end if

	if p_aviso_rec.num_oc > 0 then
	else
		let  p_aviso_rec.cod_local_estoq     = p_array_compl[p_ind].cod_local_estoq
	end if

	if p_aviso_rec.ies_item_estoq = "s" then
		if p_aviso_rec.cod_local_estoq = " " or
			p_aviso_rec.cod_local_estoq is null then
			initialize p_aviso_rec.cod_local_estoq, l_ies_tem_inspecao,
			l_cod_local_insp, l_cod_local_estoq to null
			whenever error continue
			select ies_tem_inspecao, cod_local_insp, cod_local_estoq
			into l_ies_tem_inspecao, l_cod_local_insp, l_cod_local_estoq
			from item
			where cod_empresa = p_cod_empresa
			and cod_item    = p_aviso_rec.cod_item
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_aviso_rec.cod_local_estoq = " "
			else
				if l_ies_tem_inspecao = "s" and l_cod_local_insp is not null then
					let p_aviso_rec.cod_local_estoq = l_cod_local_insp
				else
					if l_cod_local_estoq is not null then
						let p_aviso_rec.cod_local_estoq = l_cod_local_estoq
					else
						let p_aviso_rec.cod_local_estoq = " "
					end if
				end if
			end if
		end if
	end if

	if p_aviso_rec.ies_item_estoq = "n" then
		let p_aviso_rec.cod_local_estoq = " "
	end if

	select ordem_sup.gru_ctr_desp,ordem_sup.ies_tip_incid_ipi,
	ordem_sup.ies_tip_incid_icms, ordem_sup.cod_fiscal,
	pedido_sup.cod_comprador, ordem_sup.cod_tip_despesa
	into p_aviso_rec.gru_ctr_desp_item, p_aviso_rec.ies_tip_incid_ipi,
	p_aviso_rec.ies_incid_icms_ite, p_ult_digitos,
	p_aviso_rec.cod_comprador, p_aviso_rec.cod_tip_despesa
	from ordem_sup, pedido_sup
	where ordem_sup.cod_empresa      = p_cod_empresa
	and ordem_sup.num_oc           = p_array_compl[p_ind].num_oc
	and ordem_sup.ies_versao_atual = "s"
	and pedido_sup.cod_empresa     = p_cod_empresa
	and pedido_sup.num_pedido      = ordem_sup.num_pedido
	and pedido_sup.ies_versao_atual = "s"
	and (ordem_sup.ies_situa_oc = "a" or
	ordem_sup.ies_situa_oc = "r" or
	ordem_sup.ies_situa_oc = "c" or
	ordem_sup.ies_situa_oc = "l")

	if p_dados_tela.ies_especie_nf = "nfc" and
		p_aviso_rec.ies_item_estoq = "n"    and
		(p_aviso_rec.num_pedido = 0 or
		p_aviso_rec.num_pedido is null or
		p_aviso_rec.num_pedido = " " ) then
		let p_aviso_rec.ies_situa_ar = "e"
	end if

end function

#---------------------------------------#
function sup376_inclusao_nf_sup_copia()
#---------------------------------------#
	define ik        smallint
	### trrvb8 - nfe 3.10
	define l_id_estrangeiro     like vdp_cli_fornec_cpl.iden_estrangeiro,
	l_achou_tip          smallint,
	l_ins_estadual_ar    like sup_par_ar.parametro_texto,
	l_ind_ie_dest        like sup_par_ar.parametro_val,
	l_finalidade_nfe    like sup_par_ar.parametro_val,
	l_consum_final      like sup_par_ar.parametro_val,
	l_consum_pres       like sup_par_ar.parametro_val,
	l_den_consum_pres   like sup_par_ar.parametro_texto

	if p_nf_sup.ies_nf_aguard_nfe = "6" or
### os 358438
		(p_nf_sup.ies_especie_nf = "nfd" and
		p_nf_sup.ies_nf_aguard_nfe = "9") or
		p_nf_sup.ies_nf_aguard_nfe = "b" or
		(p_nf_sup.ies_especie_nf = "nfe" and
		p_nf_sup.ies_nf_aguard_nfe = "x") then
		whenever error continue
		select cod_empresa
		from nfe_sup_compl
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode = 0 then
			whenever error continue
			update nfe_sup_compl set ies_proc_nfs = '2'
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("update","nfe_sup_compl")
			end if
		else
			insert into nfe_sup_compl values(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			" ",
			0,
			0,
			0,
			"2",
			null, #808565#
			0,
			0,
			" ",
			" ",
			"n")
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","nfe_sup_compl")
			end if
		end if
	end if

	let p_nf_sup.ser_conhec = " "

	#--inicio--os 414316 #
	if sup3760_existe_h_nf_sup(p_nf_sup.cod_empresa, p_nf_sup.num_nf, p_nf_sup.ser_nf,
		p_nf_sup.ssr_nf, p_nf_sup.ies_especie_nf, p_nf_sup.cod_fornecedor,
		p_nf_sup.dat_emis_nf) then #809554
		call log0030_mensagem('nota fiscal j� cadastrada em hist�rico.','stop')
		let p_houve_erro = 1
	end if
	#---fim----os 414316 #

	if p_nf_sup.ies_situa_import is null then
		let p_nf_sup.ies_situa_import = " "
	end if

	if p_nf_sup.val_tot_nf_d is null then
		let p_nf_sup.val_tot_nf_d = 0
	end if

	if p_nf_sup.val_tot_icms_nf_d is null then
		let p_nf_sup.val_tot_icms_nf_d = 0
	end if

	if p_nf_sup.val_ipi_nf is null then
		let p_nf_sup.val_ipi_nf = 0
	end if

	insert into nf_sup values (p_nf_sup.*)
	if sqlca.sqlcode = 0  then

		#trrvb8 - nfe 3.10
		if ((p_nf_sup.ies_nf_aguard_nfe = "6" ) or
			(p_nf_sup.ies_nf_aguard_nfe = "7" ) or
			(p_nf_sup.ies_especie_nf = "nfd"  and p_nf_sup.ies_nf_aguard_nfe = "9") or
			(p_nf_sup.ies_especie_nf = "nfe"  and p_nf_sup.ies_nf_aguard_nfe = "x")) then

			initialize l_finalidade_nfe to null
			initialize l_achou_tip to null
			if sup1481_nfc_compl_imposto(p_nf_sup.ies_especie_nf,
				p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec)then
				let l_finalidade_nfe = "2"
			else
				if sup1481_nfc_compl_valor(p_nf_sup.ies_especie_nf,
					p_nf_sup.cod_empresa,
					p_nf_sup.num_aviso_rec)then
					let l_finalidade_nfe = "3"
				else
					if (p_nf_sup.ies_especie_nf = "nfd" or
						p_ies_tip_entrada = "5") then
						let l_finalidade_nfe = "4"
					else
						### trqoy4 - tratar nota fiscal de cr�dito de icms
						### orienta��o para incluir este tipo de nota consta em:
						### http://tdn.totvs.com/display/public/lg/procedimento+para+entrada+das+notas+de+icms+para+o+ciap
						if (m_ies_obj_entrada = "6" and p_nf_sup.val_tot_icms_nf_d > 0 and p_nf_sup.val_tot_nf_d = 0) then
							let l_finalidade_nfe = "3"
						else
							let l_finalidade_nfe = "1"
						end if
					end if
				end if
			end if

			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"finalidade_nfe",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_val(l_finalidade_nfe)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					let p_houve_erro = true
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("finalidade_nfe")
				call supm72_sup_par_ar_set_parametro_val(l_finalidade_nfe)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					let p_houve_erro = true
					return false
				end if
			end if

			initialize l_achou_tip to null
			initialize l_consum_final to null
			let l_consum_final = "0" #n�o � consumidor final
			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"id_consum_final",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_val(l_consum_final)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					let p_houve_erro = true
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("id_consum_final")
				call supm72_sup_par_ar_set_parametro_val(l_consum_final)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					let p_houve_erro = true
					return false
				end if
			end if

			initialize l_achou_tip to null
			initialize l_consum_pres to null
			initialize l_den_consum_pres to null
			if p_nf_sup.ies_especie_nf = "nfc" then
				let l_consum_pres     = "0"
				let l_den_consum_pres = "n�o se aplica ou nfc"
			else
				let l_consum_pres     = "9"
				let l_den_consum_pres = "outros"
			end if
			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"id_consum_pres",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_texto(l_den_consum_pres)
				call supm72_sup_par_ar_set_parametro_val(l_consum_pres)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					let p_houve_erro = true
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("id_consum_pres")
				call supm72_sup_par_ar_set_parametro_texto(l_den_consum_pres)
				call supm72_sup_par_ar_set_parametro_val(l_consum_pres)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					let p_houve_erro = true
					return false
				end if
			end if

			### trrvb8 (efetua inclus�o na sup_par_ar logo ap�s o insert na nf_sup
			#tpxzwn - conforme solicita��o da �rea fiscal allan
			initialize l_achou_tip to null
			initialize l_ind_ie_dest to null
			whenever error continue
			select parametro_texto
			into l_ins_estadual_ar
			from sup_par_ar
			where empresa           = p_nf_sup.cod_empresa
			and aviso_recebto     = p_nf_sup.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "ins_estadual_ar"
			whenever error stop
			if sqlca.sqlcode <>  0 then
				whenever error continue
				select ins_estadual
				into l_ins_estadual_ar
				from fornecedor
				where cod_fornecedor = p_nf_sup.cod_fornecedor
				whenever error stop
				if sqlca.sqlcode <> 0 then
					initialize l_ins_estadual_ar to null
				end if
			end if

			if l_ins_estadual_ar is not null and
				l_ins_estadual_ar <> " "      and
				l_ins_estadual_ar not like "isento" then
				let l_ind_ie_dest = "1"
			else
				let l_ind_ie_dest = "2"
			end if

			### devolu��o assume ie_dest conforme inscri��o estadual
			#if (p_nf_sup.ies_especie_nf = "nfd" or
			#    p_ies_tip_entrada = "5") then
			#    let l_ind_ie_dest = "9"
			#end if
			#tpxzwn

			if p_nf_sup.cod_operacao[1] = "7" then
				let l_ind_ie_dest = "9"
			end if

			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			0,
			"ind_ie_dest",
			true,
			true) returning l_achou_tip
			if l_achou_tip then
				call supm72_sup_par_ar_set_parametro_texto(l_ins_estadual_ar)
				call supm72_sup_par_ar_set_parametro_val(l_ind_ie_dest)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_modifica(true,true) then
					let p_houve_erro = true
					return false
				end if

			else
				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
				call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
				call supm72_sup_par_ar_set_seq_aviso_recebto(0)
				call supm72_sup_par_ar_set_parametro("ind_ie_dest")
				call supm72_sup_par_ar_set_parametro_texto(l_ins_estadual_ar)
				call supm72_sup_par_ar_set_parametro_val(l_ind_ie_dest)
				call supm72_sup_par_ar_set_parametro_dat(today)

				if not supt72_sup_par_ar_inclui(true,true) then
					let p_houve_erro = true
					return false
				end if
			end if

			if (p_nf_sup.cod_operacao[1] = "7" or
				p_cod_pais_emp <> p_fornecedor.cod_pais) then

				initialize l_id_estrangeiro to null
				initialize l_achou_tip to null

				if vdpm279_vdp_cli_fornec_cpl_leitura(p_nf_sup.cod_fornecedor, "f", true, true) then
					if vdpm279_vdp_cli_fornec_cpl_get_iden_estrangeiro() is not null and
						vdpm279_vdp_cli_fornec_cpl_get_iden_estrangeiro() <> ' ' then
						let l_id_estrangeiro = vdpm279_vdp_cli_fornec_cpl_get_iden_estrangeiro()
					end if
				end if

				call supm72_sup_par_ar_set_null()
				call supm72_sup_par_ar_leitura(p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec,
				0,
				"id_estrangeiro",
				true,
				true) returning l_achou_tip
				if l_achou_tip then
					call supm72_sup_par_ar_set_parametro_texto(l_id_estrangeiro)
					call supm72_sup_par_ar_set_parametro_dat(today)
					if not supt72_sup_par_ar_modifica(true,true) then
						let p_houve_erro = true
						return false
					end if

				else
					call supm72_sup_par_ar_set_null()
					call supm72_sup_par_ar_set_empresa(p_nf_sup.cod_empresa)
					call supm72_sup_par_ar_set_aviso_recebto(p_nf_sup.num_aviso_rec)
					call supm72_sup_par_ar_set_seq_aviso_recebto(0)
					call supm72_sup_par_ar_set_parametro("id_estrangeiro")
					call supm72_sup_par_ar_set_parametro_texto(l_id_estrangeiro)
					call supm72_sup_par_ar_set_parametro_dat(today)

					if not supt72_sup_par_ar_inclui(true,true) then
						let p_houve_erro = true
						return false
					end if
				end if
			end if
		end if
		#trrvb8

		if not sup1031_grava_audit_ar_incl_nf(p_nf_sup.num_aviso_rec,0,"sup3760",
			"1", m_dat_hor_proces) then
			let p_houve_erro = true
			return false
		end if
		initialize m_dat_hor_proces to null

		let p_dados_telar.* = p_dados_tela.*
		let m_num_nfe_r = m_num_nfe ### trxyyh
		let p_formonlyr.* = p_formonly.*
		return true
	else
		call log003_err_sql("inclusao","nf_sup")
		let p_houve_erro = true
		return false
	end if

end function

#--------------------------------#
function sup376_popups(p_funcao)
#--------------------------------#
	define p_num_pedido       like pedido_sup.num_pedido,
	p_num_oc           like ar_diverg.num_oc,
	p_num_prog_entrega like ar_diverg.num_prog_entrega,
	p_cod_item         like ordem_sup.cod_item,
	p_den_item         like aviso_rec.den_item,
	p_cnd_pgto_nf      like cond_pgto_cap.cnd_pgto,
	p_cod_imp_renda    like nf_sup.cod_imp_renda,
	p_cod_cla_fisc_nf  like aviso_rec.cod_cla_fisc_nf,
	p_cod_unid_med_nf  like aviso_rec.cod_unid_med_nf,
	p_cod_local_estoq  like aviso_rec.cod_local_estoq,
	p_funcao           char(30),
	p_cod_operacao     like estoque_operac.cod_operacao,
	p_pop_item         char(07),
	l_cod_fiscal       like cod_fiscal_sup.cod_fiscal,
	l_cod_fiscal_c     like cod_fiscal_sup.cod_fiscal_compl,
	l_cod_banco        like fornecedor.cod_banco,
	l_num_agencia      like fornecedor.num_agencia,
	l_dig_num_agencia  char(02),
	l_num_conta_banco  like fornecedor.num_conta_banco,
	l_dig_conta_banco  char(02),
	l_tipo             char(01),
	l_condicao         char(200),
	l_cod_operacao     like nf_sup.cod_operacao,
	l_count            smallint,
	l_cod_item_depositante like item.cod_item,
	l_item_depositante     like item.cod_item,
	l_status               smallint,
	l_depositante          char(15),
	l_existe_epl           smallint


	initialize p_cod_imp_renda, p_num_pedido,p_num_oc ,p_num_prog_entrega to null
	initialize p_cod_cla_fisc_nf,p_cod_item,p_den_item ,p_cod_unid_med_nf to null
	initialize p_cod_local_estoq  to null
	case
	when infield(cod_empresa_estab)
	call sup133_popup_empresa_estab(p_cod_empresa)
returning p_dados_tela.cod_empresa_estab
	if p_dados_tela.cod_empresa_estab is not null then
		current window is w_sup37601
		display by name p_dados_tela.cod_empresa_estab
	end if
	when infield(cod_fornecedor)
	let p_dados_tela.cod_fornecedor = sup162_popup_fornecedor()
	if p_dados_tela.cod_fornecedor is not null  then
		current window is w_sup37601
		display by name p_dados_tela.cod_fornecedor
	end if
	current window is w_sup37601
	when infield(cod_unid_med_nf)
	let p_cod_unid_med_nf = man114_popup_unid_med()
	if p_cod_unid_med_nf is not null  then
		current window is w_sup37601
		let p_array[p_ind].cod_unid_med_nf = p_cod_unid_med_nf
		display p_array[p_ind].cod_unid_med_nf to s_sup37601[p_ind1].cod_unid_med_nf
	end if
	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo xx                 #
	if m_wms_instal = "s" then
		let p_array_wms[p_ind].cod_unid_med_nf = p_cod_unid_med_nf
	end if

	when infield(num_nf)
	if p_dados_tela.cod_fornecedor is null  then
		error " o codigo do fornecedor deve ser informado "
	else
		call sup125_popup_ordens_fornec(p_cod_empresa,p_dados_tela.cod_fornecedor)
		for p_ind = 1 to 998
			if p_array_volta[p_ind].num_pedido is null then
				exit for
			end if
			let p_num_pedido = p_array_volta[p_ind].num_pedido
			let p_num_oc     = p_array_volta[p_ind].num_oc
			let p_num_prog_entrega = p_array_volta[p_ind].num_prog_entrega
			let p_cod_item = p_array_volta[p_ind].cod_item
			let p_den_item = p_array_volta[p_ind].den_item
			let p_cod_unid_med_nf = p_array_volta[p_ind].cod_unid_med
		end for
		if p_num_pedido is not null  then
			current window is w_sup37601
		end if
	end if
	when infield(cod_cla_fisc_nf)
	call sup108_popup_clas_fiscal() returning p_cod_cla_fisc_nf
	if p_cod_cla_fisc_nf is not null  then
		let p_array[p_ind].cod_cla_fisc_nf = p_cod_cla_fisc_nf
		current window is w_sup37601
		display p_array[p_ind].cod_cla_fisc_nf to s_sup37601[p_ind1].cod_cla_fisc_nf
	end if

	when infield(cod_operac_estoq)
	let p_cod_operacao  = sup794_popup_operac_estoq_ar(p_cod_empresa)
	if p_cod_operacao is not null then
		let p_dados_tela.cod_operac_estoq = p_cod_operacao
		current window is w_sup37601
		display by name p_dados_tela.cod_operac_estoq
	end if

	when infield(cod_operacao)
	call sup111_popup_cod_fiscal_sup(today,"nf_saida")
returning l_cod_fiscal, l_cod_fiscal_c
	if l_cod_fiscal is not null then
		let p_dados_tela.cod_operacao     = l_cod_fiscal
		let p_dados_tela.cod_fiscal_compl = l_cod_fiscal_c
		current window is w_sup37601
		display by name p_dados_tela.cod_operacao
		display by name p_dados_tela.cod_fiscal_compl
	end if
	when infield(cnd_pgto_nf)
	let l_existe_epl = false

	if log_existe_epl("supy3760_when_infield_cnd_pgto_nf") then
		call log_setvar('cod_empresa',p_cod_empresa)
		call log_setvar('cod_fornecedor',p_dados_tela.cod_fornecedor)
		call log_setvar('cnd_pgto_nf',null)

		call supy3760_when_infield_cnd_pgto_nf()

		let p_cnd_pgto_nf = log_getvar('cnd_pgto_nf')
		let l_existe_epl  = true
	end if

	if l_existe_epl = false then
		let p_cnd_pgto_nf = sup123_popup_cond_pgto_cap()
	end if

	if p_cnd_pgto_nf is not null  then
		current window is w_sup37601
		let p_dados_tela.cnd_pgto_nf = p_cnd_pgto_nf
		display by name p_dados_tela.cnd_pgto_nf
	end if
	when infield(cod_mod_embar)
	let p_dados_tela.cod_mod_embar = sup122_popup_modo_embarque()
	if p_dados_tela.cod_mod_embar is not null  then
		current window is w_sup37601
		display by name p_dados_tela.cod_mod_embar
	end if

	when infield(cod_item)
	initialize p_pop_item to null

	let l_count = 0
	if  p_dados_tela.ies_especie_nf    = "nfr" then
		if m_exst_forntriter then
			let l_cod_operacao = p_dados_tela.cod_operacao[3,5]
			if p_dados_tela.ies_nf_aguard_nfe = "a" then
				whenever error continue
				select count(*)
				into l_count
				from sup_fornec_tri_ter
				where empresa         = p_cod_empresa
				and fornecedor      = p_dados_tela.cod_fornecedor
				and cod_fisc_fornec = l_cod_operacao
				whenever error stop
			else
				whenever error continue
				select count(*)
				into l_count
				from sup_fornec_tri_ter
				where empresa            = p_cod_empresa
				and fornec_depositante = p_dados_tela.cod_fornecedor
				and cod_fisc_depos     = l_cod_operacao
				whenever error stop
			end if

			if sqlca.sqlcode <> 0
				or l_count is null then
				let l_count = 0
			end if
		end if
	end if


	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 25                 #
	#wms instalado e nota fiscal <> de normal
	if m_wms_instal = "s" and (m_tipo_documento <> 'n' or m_indicador_aduaneiro = 'd' or m_indicador_aduaneiro = 't') then
		if m_segmento = "i" then
			call wms6071_popup_item(p_cod_empresa, null)
			returning l_cod_item_depositante
		else
			call wms6071_popup_item(p_cod_empresa, m_wms_depositante)
			returning l_cod_item_depositante
		end if
		if  m_segmento <> "i" then
			if p_dados_tela.ies_nf_aguard_nfe = "a" or
				p_dados_tela.ies_nf_aguard_nfe = "b" or
				p_dados_tela.ies_nf_aguard_nfe = "7" then
				# se a nf for do tipo 7-(material em tr�nsito) exibir os c�digos dos itens
				# do depositante se o mesmo for encontrado na wms_item_complemento.
				call wmst81_wms_item_complemento_get_dados_deposit(p_cod_empresa,l_cod_item_depositante,1)
				returning l_status,l_depositante,l_item_depositante
			else
				initialize l_item_depositante to null
			end if
		else
			let l_item_depositante = l_cod_item_depositante
		end if

		if m_indicador_aduaneiro = 'd' or m_indicador_aduaneiro = 't' then
			if l_cod_item_depositante is not null then
				call wmst81_wms_item_complemento_get_dados_deposit(p_cod_empresa,l_cod_item_depositante,1)
				returning l_status,l_depositante,l_item_depositante
			end if
		end if

		current window is w_sup37601

		if l_item_depositante is not null and l_item_depositante <> " " then
			let p_array_wms[p_ind].cod_item = l_item_depositante
			display p_array_wms[p_ind].cod_item to s_sup37601[p_ind1].cod_item
		else
			let p_array_wms[p_ind].cod_item = l_cod_item_depositante
			display p_array_wms[p_ind].cod_item to s_sup37601[p_ind1].cod_item
		end if
	else
		initialize p_pop_item to null
		if l_count = 0 then
			open window w_pop_item at 15,20 with 2 rows, 36 columns attribute(border)
			menu "opcao"
			before menu
			call sup3760_save_cur_field_name('sup3760_menu_3')
			command key("6") "sup6230" "popup item sup6230"
			message " "
			let p_pop_item = "sup6230"
			exit menu
			command key("7") "sup7020" "popup item sup7020"
			message " "
			let p_pop_item = "sup7020"
			exit menu
			#534641
			#command key("8") "sup1648" "popup item triangula��o"
			#   message " "
			#   let p_pop_item  ="sup3760"
			#   exit menu
			#534641
			command "fim" "cancela selecao de popup de item"
			exit menu
			#lds command key ("control-f1") "sobre" "informa��es sobre a aplica��o (ctrl-f1)."
			#lds call log_info_sobre(sourcename(),p_versao)

		end menu
		close window w_pop_item

	else
		let l_cod_operacao = p_dados_tela.cod_operacao[3,5]
		if p_dados_tela.ies_nf_aguard_nfe = "a" then
			let l_condicao = " sup_fornec_tri_ter.fornecedor = """,p_dados_tela.cod_fornecedor,""" ",
			" and sup_fornec_tri_ter.cod_fisc_fornec = """,l_cod_operacao,""" "
			call log009_popup2(3, 5, "item / depositante", "item","c�d. depos", "sup_fornec_tri_ter",
			"item", "fornec_depositante", "sup1648", "s", l_condicao)
			returning p_array[p_ind].cod_item
		else
			let l_condicao = " sup_fornec_tri_ter.fornec_depositante = """,p_dados_tela.cod_fornecedor,""" ",
			" and sup_fornec_tri_ter.cod_fisc_depos = """,l_cod_operacao,""" "
			call log009_popup2(3, 5, "item / fornecedor", "item","c�d. fornec", "sup_fornec_tri_ter",
			"item", "fornecedor", "sup1648", "s", l_condicao)
			returning p_array[p_ind].cod_item
		end if
		current window is w_sup37601
		display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item

		initialize p_pop_item to null
	end if


	if p_pop_item is not null then
		if p_dados_tela.ies_especie_nf = "nfd" or
			p_dados_tela.ies_especie_nf = "nfr" then
			if p_pop_item = "sup6230" then
				call sup623_popup_cliente_item(p_dados_tela.cod_fornecedor)
				returning p_array[p_ind].cod_item
			else
				let p_array[p_ind].cod_item = sup702_popup_item()
			end if
			if p_array[p_ind].cod_item is not null  then
				current window is w_sup37601
				display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item
			end if
		else
			if (p_dados_tela.ies_especie_nf <> "nfr"  and
				p_dados_tela.ies_especie_nf <> "nfd") and
				(p_array_compl[p_ind].num_pedido is null or
				p_array_compl[p_ind].num_pedido = " "   or
				p_array_compl[p_ind].num_pedido = 0)    then
				if p_pop_item = "sup6230"  then
					call sup623_popup_cliente_item(p_dados_tela.cod_fornecedor)
					returning p_array[p_ind].cod_item
				else
					let p_array[p_ind].cod_item = sup702_popup_item()
				end if
				if p_array[p_ind].cod_item is not null  and
					p_array[p_ind].cod_item <> " " then
					current window is w_sup37601
					call sup376_busca_item(p_cod_empresa, p_array[p_ind].cod_item)
					returning p_status
					let p_array[p_ind].den_item        = p_item.den_item
					let p_array[p_ind].cod_unid_med_nf = p_item.cod_unid_med
					display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item
					display p_array[p_ind].den_item to s_sup37601[p_ind1].den_item
					display p_array[p_ind].cod_unid_med_nf to s_sup37601[p_ind1].cod_unid_med_nf
				end if
			end if

			if p_dados_tela.ies_especie_nf = "nfr" or
				p_dados_tela.ies_especie_nf = "nfd" then
				if p_array[p_ind].cod_item is not null  then
					current window is w_sup37601
					call sup376_busca_item(p_cod_empresa,p_array[p_ind].cod_item)
					returning p_status
					let p_array[p_ind].den_item        = p_item.den_item
					let p_array[p_ind].cod_unid_med_nf = p_item.cod_unid_med
					display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item
					display p_array[p_ind].den_item to s_sup37601[p_ind1].den_item
					display p_array[p_ind].cod_unid_med_nf to s_sup37601[p_ind1].cod_unid_med_nf
				end if
			end if
		end if
	end if
end if


when infield(pre_unit_nf)
if p_array[p_ind].qtd_declarad_nf is not null and
	p_array_compl[p_ind].ar_com_pc = "s" then
	if p_funcao = "modificacao" and
		p_array_compl[p_ind].ies_bloqueada = "s" then
	else
		let p_qtd_array = p_array[p_ind].qtd_declarad_nf
		let p_val_array = p_array[p_ind].val_liquido_item
		if p_val_array is null then
			let p_val_array = (p_array[p_ind].pre_unit_nf * p_qtd_array)
		end if

		if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) then
			if p_dados_tela.ies_especie_nf <> "nfd" and
				p_dados_tela.ies_especie_nf <> "nfr" then
				call sup861_popup_ordens_val_reserv(p_cod_empresa,
				p_array[p_ind].cod_item,
				p_array_compl[p_ind].num_pedido, p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
				p_val_array, "s", p_funcao, p_dados_tela.num_aviso_rec,
				p_array[p_ind].seq, p_ind)
				returning p_val_soma_reserva2, p_ies_reservou, p_ord_forn
			end if
		else
			if p_dados_tela.ies_especie_nf <> "nfd" and
				p_dados_tela.ies_especie_nf <> "nfr" then
				call sup386_popup_ordens_reservada(p_cod_empresa,
				p_array[p_ind].cod_item,
				p_array_compl[p_ind].num_pedido, p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
				p_qtd_array, "s", p_funcao, p_dados_tela.num_aviso_rec,
				p_array[p_ind].seq, p_ind)
				returning p_soma_reserva2, p_ies_reservou, p_ord_forn
				call log006_exibe_teclas("01 02 03 07", p_versao)
			end if
		end if
		let int_flag = 0
		let p_qtd_array = 0
		current window is w_sup37601
	end if
end if
when infield(cod_banco)
call sup3762_popup_cta_corrente() returning l_cod_banco,
l_num_agencia,
l_dig_num_agencia,
l_num_conta_banco,
l_dig_conta_banco

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup3760a

if l_cod_banco is not null then
	display l_cod_banco       to cod_banco
	display l_num_agencia     to num_agencia
	display l_dig_num_agencia to dig_num_agencia
	display l_num_conta_banco to num_conta_banco
	display l_dig_conta_banco to dig_conta_banco
end if

### tevp32 - este campo ser� tratado no popup2
#   when infield(classif_nfc)
#      let m_classif_nfc = log0830_list_box(11,40, "1 {1-complemento imposto}, 2 {2-complemento valor}, 3 {3-complemento pre�o}")
#      #tdueo2 op��o 3 complemento de pre�o
#      current window is w_sup3760i
#      let int_flag = false
#      if m_classif_nfc is not null then
#         display m_classif_nfc to classif_nfc
#         case m_classif_nfc
#             when '1'
#                display 'complemento imposto' to den_classif_nfc
#             when '2'
#                display 'complemento valor' to den_classif_nfc
#             when '3'
#                display 'complemento pre�o' to den_classif_nfc #tdueo2
#         end case
#      end if

when infield(natureza)
let m_natureza = log0830_list_box(11,40, "a {a-sem dedu��o}, b {b-com dedu��o/incentivo}, c {c-isenta issqn}, d {d-devolu��o}, e {e-n�o incid�ncia}, f {f-imune}, g {g-constru��o civil}, h {h-regime estimativa}, i {i-sociedade civil}")
current window is w_sup3760h
let int_flag = false
if m_natureza is not null then
	display m_natureza to natureza
	case m_natureza
	when 'a'
	display 'sem dedu��o' to den_natureza
	when 'b'
	display 'com dedu��o/ incentivo' to den_natureza
	when 'c'
	display 'isenta de issqn' to den_natureza
	when 'd'
	display 'devolu��o' to den_natureza
	when 'e'
	display 'n�o incid�ncia' to den_natureza
	when 'f'
	display 'imune' to den_natureza
	when 'g'
	display 'constru��o civil' to den_natureza
	when 'h'
	display 'regime de estimativa' to den_natureza
	when 'i'
	display 'sociedade civil' to den_natureza
end case
end if

when infield(m_num_ar_relac) #os450170
let m_num_ar_relac = sup1988_zoom_nf_relacionadas(m_cfop_serv)
current window is w_sup3760k

if  m_num_ar_relac is not null
	and m_num_ar_relac <> " " then
	display by name m_num_ar_relac
end if

when infield(filial)
if find4glfunction('log_filial_zoom4gl') then
	let p_dados_tela.filial = log_filial_zoom4gl(p_cod_empresa)
	display p_dados_tela.filial to filial
end if

end case

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup37601
end function

### tevp32
#--------------------------------#
function sup376_popup2(p_funcao)
#--------------------------------#
	define p_funcao           char(30),
	l_cod_uni_feder        like uni_feder.cod_uni_feder ### tevp32

	initialize l_cod_uni_feder to null
	case
	when infield(classif_nfc)
	let m_classif_nfc = log0830_list_box(11,40, "1 {1-complemento imposto}, 2 {2-complemento valor}, 3 {3-complemento pre�o}")
	#tdueo2 op��o 3 complemento de pre�o
	current window is w_sup3760i
	let int_flag = false
	if m_classif_nfc is not null then
		display m_classif_nfc to classif_nfc
		case m_classif_nfc
		when '1'
		display 'complemento imposto' to den_classif_nfc
		when '2'
		display 'complemento valor' to den_classif_nfc
		when '3'
		display 'complemento pre�o' to den_classif_nfc #tdueo2
	end case
end if

when infield(uf_origem)
initialize l_cod_uni_feder to null
let l_cod_uni_feder = vdp323_popup_uni_feder()

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup3760c

if l_cod_uni_feder is not null and l_cod_uni_feder <> " " then
	let m_uf_origem = l_cod_uni_feder
	display m_uf_origem to uf_origem
end if

end case
end function

#-----------------------------------------#
function sup376_consulta_aviso_rec(l_tipo)
#-----------------------------------------#
	define l_tipo         char(15)
	define l_status       smallint
	define where_clause   char(2000),
	sql_stmt       char(5000),
	sql_stmt1      char(5000)
	define p_funcao       char(30)
	define p_cod_empresa_estab like par_sup_re.cod_empresa_estab
	define l_num_nf_char  char(15)

	let p_funcao = " "

	call log006_exibe_teclas("02 07", p_versao)
	current window is w_sup37601

	let p_nf_sup.num_conhec = 0

	call sup3760_initialize_ar()

	clear form
	display p_cod_empresa to cod_empresa

	declare cq_emp cursor for
	select cod_empresa_estab
	from par_sup_re
	where par_sup_re.cod_empresa = p_cod_empresa
	foreach cq_emp into p_cod_empresa_estab
end foreach

if l_tipo = "chave_acesso" then
	let where_clause = sup13429_solicita_chave_acesso_consulta('nf')
	current window is w_sup37601
else
	let l_status = true
	if log_existe_epl('sup3760y_before_process_menu_consulta') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('status', l_status)
		#epl status do retorno
		#epl tipo: smallint

		call sup3760y_before_process_menu_consulta()
		let l_status = log_getvar('status')
		let where_clause = log_getvar('where_clause')
	end if
	current window is w_sup37601

	if l_status then
		if p_cod_empresa_estab <> " " then
			construct by name where_clause on nf_sup.cod_empresa_estab,
			nf_sup.num_aviso_rec,
			nf_sup.cod_fornecedor,
			nf_sup.num_nf,
			nf_sup.ser_nf,
			nf_sup.ssr_nf,
			nf_sup.ies_especie_nf,
			nf_sup.ies_nf_aguard_nfe,
			nf_sup.dat_emis_nf,
			nf_sup.dat_entrada_nf
			before field cod_fornecedor
			call sup3760_botao_zoom("on",3,68)
			call sup3760_save_cur_field_name('cod_fornecedor')
			after field cod_fornecedor
			call sup3760_botao_zoom("off",3,68)

			before field num_nf
			if m_utiliza_num_nfe = 's' then #762211
				if sup3760_informa_num_nfe('consulta') = false then
					exit construct
				else
					#---in�cio ch tfbgot---#
					if m_retorno_num_nfe = true then
						let m_retorno_num_nfe = false
					next field cod_fornecedor
				else
				next field ser_nf
			end if
			#---fim ch tfbgot---#
		end if
	end if
	call sup3760_save_cur_field_name('num_nfe')

	on key (control-z, f4)
	call sup376_popups(p_funcao)
end construct
else
	construct by name where_clause on nf_sup.num_aviso_rec,
	nf_sup.cod_fornecedor,
	nf_sup.num_nf, ### tqfxnr (retirar num_nf do construct, tratamento ser� feito manualmente)
	nf_sup.ser_nf,
	nf_sup.ssr_nf,
	nf_sup.ies_especie_nf,
	nf_sup.ies_nf_aguard_nfe,
	nf_sup.dat_emis_nf,
	nf_sup.dat_entrada_nf
	before field cod_fornecedor
	call sup3760_botao_zoom("on",3,68)
	call sup3760_save_cur_field_name('cod_fornecedor')

	after field cod_fornecedor
	call sup3760_botao_zoom("off",3,68)

	before field num_nf
	if m_utiliza_num_nfe = 's' then #762211
		if sup3760_informa_num_nfe('consulta') = false then
			initialize m_num_nfe to null ### trxyyh
			call sup3760_display_num_nfe_cte() ### trxyyh
			exit construct
		else
			#---in�cio ch tfbgot---#
			if m_retorno_num_nfe = true then
				let m_retorno_num_nfe = false
			next field cod_fornecedor
		else
		next field ser_nf
	end if
	#---fim ch tfbgot---#
end if
end if
call sup3760_save_cur_field_name('num_nfe')

on key (control-z, f4)
call sup376_popups(p_funcao)
end construct
end if
end if
end if

call log006_exibe_teclas("01", p_versao)
current window is w_sup37601

if int_flag then
	let int_flag = 0
	let p_dados_tela.* = p_dados_telar.*
	let m_num_nfe = m_num_nfe_r
	let p_formonly.* = p_formonlyr.*

	call sup376_exibe_dados()
	call sup376_exibe_array()

	error " consulta cancelada. "
return
end if

let sql_stmt = "select nf_sup.cod_empresa, ",
"nf_sup.cod_empresa_estab, ",
"nf_sup.num_aviso_rec, ",
"nf_sup.cod_fornecedor, ",
"nf_sup.num_nf, ",
"nf_sup.ser_nf, ",
"nf_sup.ssr_nf, ",
"nf_sup.ies_especie_nf, ",
"nf_sup.ies_nf_aguard_nfe, ",
" "" "", ",
"nf_sup.cod_operacao, ",
"nf_sup.dat_emis_nf, ",
"nf_sup.dat_entrada_nf, ",
"nf_sup.cnd_pgto_nf, ",
"nf_sup.cod_mod_embar, ",
"nf_sup.cod_imp_renda, ",
"nf_sup.nom_resp_aceite_er, ",
"nf_sup.num_conhec, ",
"nf_sup.ser_conhec, ",
"nf_sup.ssr_conhec, ",
"nf_sup.cod_transpor, ",
"aviso_rec_compl.cod_fiscal_compl, ",
"aviso_rec_compl.cod_empresa_orig ",
"from nf_sup, aviso_rec, aviso_rec_compl ",
"where nf_sup.cod_empresa      = """,p_cod_empresa,""" ",
"and nf_sup.cod_empresa      = aviso_rec.cod_empresa ",
"and nf_sup.num_aviso_rec    = aviso_rec.num_aviso_rec ",
"and aviso_rec_compl.cod_empresa = aviso_rec.cod_empresa ",
"and aviso_rec_compl.num_aviso_rec = aviso_rec.num_aviso_rec ",
"and (nf_sup.ies_nf_aguard_nfe != ""s"" ",
" or nf_sup.ies_nf_aguard_nfe is null) ",
"and ", where_clause clipped

initialize sql_stmt1 to null
if  m_utiliza_num_nfe = 's'
	and m_num_nf_eletronica is not null
	and m_num_nf_eletronica <> " "
	and m_num_nf_eletronica > 0 then
	let l_num_nf_char = m_num_nf_eletronica
	let m_num_nff_aux = m_num_nf_eletronica

	if length(l_num_nf_char) > 7 and length(l_num_nf_char) <= 9 then ### trxbxa

		let sql_stmt1 = "select nf_sup.cod_empresa, ",
		"nf_sup.cod_empresa_estab, ",
		"nf_sup.num_aviso_rec, ",
		"nf_sup.cod_fornecedor, ",
		"nf_sup.num_nf, ",
		"nf_sup.ser_nf, ",
		"nf_sup.ssr_nf, ",
		"nf_sup.ies_especie_nf, ",
		"nf_sup.ies_nf_aguard_nfe, ",
		" "" "", ",
		"nf_sup.cod_operacao, ",
		"nf_sup.dat_emis_nf, ",
		"nf_sup.dat_entrada_nf, ",
		"nf_sup.cnd_pgto_nf, ",
		"nf_sup.cod_mod_embar, ",
		"nf_sup.cod_imp_renda, ",
		"nf_sup.nom_resp_aceite_er, ",
		"nf_sup.num_conhec, ",
		"nf_sup.ser_conhec, ",
		"nf_sup.ssr_conhec, ",
		"nf_sup.cod_transpor, ",
		"aviso_rec_compl.cod_fiscal_compl, ",
		"aviso_rec_compl.cod_empresa_orig ",
		"from nf_sup, aviso_rec, aviso_rec_compl, sup_par_ar ",
		"where nf_sup.cod_empresa = """,p_cod_empresa,""" ",
		"and nf_sup.cod_empresa = aviso_rec.cod_empresa ",
		"and nf_sup.num_aviso_rec = aviso_rec.num_aviso_rec ",
		"and aviso_rec_compl.cod_empresa = aviso_rec.cod_empresa ",
		"and aviso_rec_compl.num_aviso_rec = aviso_rec.num_aviso_rec ",
		"and (nf_sup.ies_nf_aguard_nfe != ""s"" ",
		" or nf_sup.ies_nf_aguard_nfe is null) ",
		"and sup_par_ar.empresa = nf_sup.cod_empresa ",
		"and sup_par_ar.aviso_recebto = nf_sup.num_aviso_rec ",
		"and sup_par_ar.seq_aviso_recebto = 0 ",
		"and sup_par_ar.parametro = 'num_nf_eletronica' ",
		"and sup_par_ar.parametro_val = ", m_num_nf_eletronica ,
		" and ", where_clause clipped
		if m_consulta_ord_descres = "s" then
			let sql_stmt1 = sql_stmt1 clipped,
			" order by nf_sup.num_aviso_rec desc "
		end if
	else
		if length(l_num_nf_char) > 9 then ### trxbxa

			let sql_stmt1 = "select nf_sup.cod_empresa, ",
			"nf_sup.cod_empresa_estab, ",
			"nf_sup.num_aviso_rec, ",
			"nf_sup.cod_fornecedor, ",
			"nf_sup.num_nf, ",
			"nf_sup.ser_nf, ",
			"nf_sup.ssr_nf, ",
			"nf_sup.ies_especie_nf, ",
			"nf_sup.ies_nf_aguard_nfe, ",
			" "" "", ",
			"nf_sup.cod_operacao, ",
			"nf_sup.dat_emis_nf, ",
			"nf_sup.dat_entrada_nf, ",
			"nf_sup.cnd_pgto_nf, ",
			"nf_sup.cod_mod_embar, ",
			"nf_sup.cod_imp_renda, ",
			"nf_sup.nom_resp_aceite_er, ",
			"nf_sup.num_conhec, ",
			"nf_sup.ser_conhec, ",
			"nf_sup.ssr_conhec, ",
			"nf_sup.cod_transpor, ",
			"aviso_rec_compl.cod_fiscal_compl, ",
			"aviso_rec_compl.cod_empresa_orig ",
			"from nf_sup, aviso_rec, aviso_rec_compl, sup_par_ar ",
			"where nf_sup.cod_empresa = """,p_cod_empresa,""" ",
			"and nf_sup.cod_empresa = aviso_rec.cod_empresa ",
			"and nf_sup.num_aviso_rec = aviso_rec.num_aviso_rec ",
			"and aviso_rec_compl.cod_empresa = aviso_rec.cod_empresa ",
			"and aviso_rec_compl.num_aviso_rec = aviso_rec.num_aviso_rec ",
			"and (nf_sup.ies_nf_aguard_nfe != ""s"" ",
			" or nf_sup.ies_nf_aguard_nfe is null) ",
			"and sup_par_ar.empresa = nf_sup.cod_empresa ",
			"and sup_par_ar.aviso_recebto = nf_sup.num_aviso_rec ",
			"and sup_par_ar.seq_aviso_recebto = 0 ",
			"and sup_par_ar.parametro = 'num_nf_eletronica' ",
			"and sup_par_ar.parametro_texto = """, l_num_nf_char,""" ",
			"and ", where_clause clipped
			if m_consulta_ord_descres = "s" then
				let sql_stmt1 = sql_stmt1 clipped,
				" order by nf_sup.num_aviso_rec desc "
			end if
		end if
	end if
end if

if m_consulta_ord_descres = "s" then
	let sql_stmt = sql_stmt clipped,
	" order by nf_sup.num_aviso_rec desc "
end if

whenever error continue
if  m_utiliza_num_nfe = 's'
	and m_num_nf_eletronica is not null
	and m_num_nf_eletronica <> " "
	and m_num_nf_eletronica > 9999999 then ### trxbxa
	prepare var_aviso_rec from sql_stmt1
else
	prepare var_aviso_rec from sql_stmt
end if
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("prepare","var_aviso_rec")
	clear form
	let p_ies_cons = false
return
end if

whenever error continue
declare cq_aviso_rec scroll cursor with hold for var_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("declare","cq_aviso_rec")
	clear form
	let p_ies_cons = false
return
end if

whenever error continue
open cq_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("open","cq_aviso_rec")
	clear form
	let p_ies_cons = false
return
end if

whenever error continue
fetch cq_aviso_rec into p_dados_tela.cod_empresa,
p_dados_tela.cod_empresa_estab,
p_dados_tela.num_aviso_rec,
p_dados_tela.cod_fornecedor,
p_dados_tela.num_nf,
p_dados_tela.ser_nf,
p_dados_tela.ssr_nf,
p_dados_tela.ies_especie_nf,
p_dados_tela.ies_nf_aguard_nfe,
p_dados_tela.cod_operac_estoq,
p_dados_tela.cod_operacao,
p_dados_tela.dat_emis_nf,
p_dados_tela.dat_entrada_nf,
p_dados_tela.cnd_pgto_nf,
p_dados_tela.cod_mod_embar,
p_cod_ret_imp,
p_nom_resp_aceite_er,
p_nf_sup.num_conhec,
p_nf_sup.ser_conhec,
p_nf_sup.ssr_conhec,
p_nf_sup.cod_transpor,
p_dados_tela.cod_fiscal_compl,
p_dados_tela.cod_emp_benef
whenever error stop
if sqlca.sqlcode = notfound  then
	clear form
	call log0030_mensagem(" argumentos de pesquisa nao encontrados ","exclamation")
	let p_ies_cons = false
return
end if

if log_existe_epl('sup3760y_after_fetch_cq_aviso_rec') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: nf_sup.num_aviso_rec

	call log_setvar('dat_entrada_nf', p_dados_tela.dat_entrada_nf)
	#epl data de entrada da nota
	#epl tipo: nf_sup.dat_entrada_nf

	call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
	#epl tipo da nota fiscal
	#epl tipo: nf_sup.ies_nf_aguard_nfe

	call sup3760y_after_fetch_cq_aviso_rec()

	let p_dados_tela.dat_entrada_nf = log_getvar('dat_entrada_nf')
end if

# inicio chamado 727.126
if find4glfunction('supy152_verifica_permissao_setor_aplicacao') then
	if not sup3760_verifica_permissao_setor_aplicacao() then
		call log0030_mensagem("argumentos de pesquisa n�o encontrados.","exclamation")
		clear form
		let p_ies_cons = false
		return
	end if
end if
# fim chamado 727.126

let m_dat_entrada_ant =  p_dados_tela.dat_entrada_nf

### tvihmo - busca num_nf_eletronica e grava na variavel m_num_nff_aux
if  m_utiliza_num_nfe = 's'
	and m_num_nf_eletronica is not null
	and m_num_nf_eletronica <> " "
	and m_num_nf_eletronica > 0 then
	if m_num_nf_eletronica > '999999999' then ### nf 15 digitos - caso numero da nota for maior que 9 d�gitos assume num_nf tela (variavel utilizada na busca de informa��es no vdp).
		let m_num_nff_aux = p_dados_tela.num_nf
	else
		let m_num_nff_aux = m_num_nf_eletronica
	end if
else
	let m_num_nff_aux = p_dados_tela.num_nf
end if

let p_ies_cons = true

call sup376_exibe_dados()
call sup376_exibe_array()
end function

#------------------------------#
function sup376_exibe_array()
#------------------------------#
	define l_ind              smallint,
	l_item_depositante char(25),
	l_status           smallint,
	l_depositante      char(15),
	l_aux              smallint

	call sup3760_initialize_itens_nf()

	declare cq_array cursor for
	select num_seq, cod_item, den_item, cod_unid_med_nf, cod_cla_fisc_nf,
	qtd_declarad_nf, pre_unit_nf, val_liquido_item, pct_ipi_declarad,
	num_oc, num_pedido
	from aviso_rec
	where aviso_rec.cod_empresa = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
	order by aviso_rec.num_seq

	let p_ind = 1
	foreach cq_array into p_array[p_ind].seq,
	p_array[p_ind].cod_item,
	p_array[p_ind].den_item,
	p_array[p_ind].cod_unid_med_nf,
	p_array[p_ind].cod_cla_fisc_nf,
	p_array[p_ind].qtd_declarad_nf,
	p_array[p_ind].pre_unit_nf,
	p_array[p_ind].val_liquido_item,
	p_array[p_ind].pct_ipi,
	p_array_compl[p_ind].num_oc,
	p_array_compl[p_ind].num_pedido
	if p_array_compl[p_ind].num_pedido is not null and
		p_array_compl[p_ind].num_pedido <> " "      and
		p_array_compl[p_ind].num_pedido <> 0        then
		#busca a sequencia da programa��o
		let  p_array_compl[p_ind].num_prog_entrega = sup3760_busca_array_compl(p_cod_empresa, p_dados_tela.num_aviso_rec,
		p_array[p_ind].seq,
		p_array_compl[p_ind].num_pedido,
		p_array_compl[p_ind].num_oc)
		let p_array_compl[p_ind].ar_com_pc = "s"
	end if
### tewxk6 - caso finalidade de importa��o for courier deve assumir pct_ipi zero
	if (m_finalidade is not null and m_finalidade = 'c') then ### (courier)
		let p_array_compl[p_ind].pct_ipi_tabela = 0
		let p_array[p_ind].pct_ipi = 0
	end if

	let p_ind = p_ind + 1
	call sup3760_checkarrayadditem_itens_nf(p_ind,1)
end foreach
free cq_array

let p_ind = p_ind - 1

let p_tot_itens = p_ind

call log006_exibe_teclas("01", p_versao)
current window is w_sup37601

display " nr. itens: ", p_tot_itens ," "  at 20,02 attribute(reverse)

if p_ind > 1 then
	let p_prx_seq = p_array[p_ind - 1].seq + 1
else
	let p_prx_seq = 1
end if

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if m_wms_instal = 's' and m_utiliza_codf_deposit = 's' then
	initialize p_array_wms to null

	for l_ind = 1 to p_ind
		if p_array[l_ind].cod_item is not null and p_array[l_ind].cod_item <> " " then
			#retirar if e else do find4gl function
			if find4glfunction('wms6612_retorna_indicador_aduaneiro_ar') then
				if p_dados_tela.ies_nf_aguard_nfe = "a" or
					p_dados_tela.ies_nf_aguard_nfe = "b" or
					p_dados_tela.ies_nf_aguard_nfe = "7" or
					(wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) <> 'n' and
					p_dados_tela.ies_nf_aguard_nfe = "1") then
					# se a nf for do tipo 7-(material em tr�nsito) exibir os c�digos dos itens
					# do depositante se o mesmo for encontrado na wms_item_complemento.
					call wmst81_wms_item_complemento_get_dados_deposit(p_cod_empresa,p_array[l_ind].cod_item,1)
					returning l_status,l_depositante,l_item_depositante
				else
					initialize l_item_depositante to null
				end if
			else
				if p_dados_tela.ies_nf_aguard_nfe = "a" or
					p_dados_tela.ies_nf_aguard_nfe = "b" or
					p_dados_tela.ies_nf_aguard_nfe = "7" then
					# se a nf for do tipo 7-(material em tr�nsito) exibir os c�digos dos itens
					# do depositante se o mesmo for encontrado na wms_item_complemento.
					call wmst81_wms_item_complemento_get_dados_deposit(p_cod_empresa,p_array[l_ind].cod_item,1)
					returning l_status,l_depositante,l_item_depositante
				else
					initialize l_item_depositante to null
				end if
			end if

			#let p_array_wms[l_ind].* = p_array[l_ind].*

			let p_array_wms[l_ind].seq              = p_array[l_ind].seq
			let p_array_wms[l_ind].cod_item         = p_array[l_ind].cod_item
			let p_array_wms[l_ind].qtd_declarad_nf  = p_array[l_ind].qtd_declarad_nf
			let p_array_wms[l_ind].cod_unid_med_nf  = p_array[l_ind].cod_unid_med_nf
			let p_array_wms[l_ind].pre_unit_nf      = p_array[l_ind].pre_unit_nf
			let p_array_wms[l_ind].val_liquido_item = p_array[l_ind].val_liquido_item
			let p_array_wms[l_ind].den_item         = p_array[l_ind].den_item
			let p_array_wms[l_ind].cod_cla_fisc_nf  = p_array[l_ind].cod_cla_fisc_nf
			let p_array_wms[l_ind].pct_ipi          = p_array[l_ind].pct_ipi

			if  l_item_depositante is not null
				and l_item_depositante <> " " then
				let p_array_wms[l_ind].cod_item = l_item_depositante
			else
				let p_array_wms[l_ind].cod_item = p_array[l_ind].cod_item
			end if
		end if
	end for

	for l_aux = 1 to arraylength(p_array_wms)
		if l_aux > 4 then
			exit for
		end if
		display p_array_wms[l_aux].* to s_sup37601[l_aux].*
	end for
	let p_ind = 1
else
	for l_aux = 1 to arraylength(p_array)
		if l_aux > 4 then
			exit for
		end if
		display p_array[l_aux].* to s_sup37601[l_aux].*
	end for
end if
#--------------------------#

call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)

if p_ind = 0 then
	initialize p_dados_tela_f.* to null
else
	let p_dados_tela_f.val_ipi_nf        = p_nf_sup.val_ipi_nf
	let p_dados_tela_f.val_tot_icms_nf_d = p_nf_sup.val_tot_icms_nf_d
	let p_dados_tela_f.val_tot_nf_d      = p_nf_sup.val_tot_nf_d
	if sup3760_verifica_desconto_acrescimo_nf() then
		let p_dados_tela_f.ies_desc_acres = "s"
	else
		let p_dados_tela_f.ies_desc_acres = "n"
	end if
end if

display by name p_dados_tela_f.*
end function

#-----------------------------------#
function sup376_paginacao(p_funcao)
#-----------------------------------#
	define p_funcao            char(20)

	if p_cons_arg = false then
		if p_ies_cons  then
			let p_dados_telar.* = p_dados_tela.*
			let p_formonlyr.* = p_formonly.*
			while true
				case
				when p_funcao = "seguinte"
				display "                                                          "  at 20,20
				fetch next cq_aviso_rec into p_dados_tela.cod_empresa,
				p_dados_tela.cod_empresa_estab,
				p_dados_tela.num_aviso_rec,
				p_dados_tela.cod_fornecedor,
				p_dados_tela.num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.ies_especie_nf,
				p_dados_tela.ies_nf_aguard_nfe,
				p_dados_tela.cod_operac_estoq,
				p_dados_tela.cod_operacao,
				p_dados_tela.dat_emis_nf,
				p_dados_tela.dat_entrada_nf,
				p_dados_tela.cnd_pgto_nf,
				p_dados_tela.cod_mod_embar,
				p_cod_ret_imp,
				p_nom_resp_aceite_er,
				p_nf_sup.num_conhec,
				p_nf_sup.ser_conhec,
				p_nf_sup.ssr_conhec,
				p_nf_sup.cod_transpor,
				p_dados_tela.cod_fiscal_compl,
				p_dados_tela.cod_emp_benef
				when p_funcao = "anterior"
				display "                                                          "  at 20,20
				fetch previous cq_aviso_rec into p_dados_tela.cod_empresa,
				p_dados_tela.cod_empresa_estab,
				p_dados_tela.num_aviso_rec,
				p_dados_tela.cod_fornecedor,
				p_dados_tela.num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.ies_especie_nf,
				p_dados_tela.ies_nf_aguard_nfe,
				p_dados_tela.cod_operac_estoq,
				p_dados_tela.cod_operacao,
				p_dados_tela.dat_emis_nf,
				p_dados_tela.dat_entrada_nf,
				p_dados_tela.cnd_pgto_nf,
				p_dados_tela.cod_mod_embar,
				p_cod_ret_imp,
				p_nom_resp_aceite_er,
				p_nf_sup.num_conhec,
				p_nf_sup.ser_conhec,
				p_nf_sup.ssr_conhec,
				p_nf_sup.cod_transpor,
				p_dados_tela.cod_fiscal_compl,
				p_dados_tela.cod_emp_benef
			end case

			if sqlca.sqlcode = notfound  then
				error " nao existem mais itens nesta direcao. "
				let p_dados_tela.* = p_dados_telar.*
				let p_formonly.* = p_formonly.*
				let m_num_nfe = m_num_nfe_r
				exit while
			end if

			if find4glfunction('sup3762_verifica_integracao_mensagem') = true then
				let m_integra_mensagem = sup3762_verifica_integracao_mensagem(p_dados_tela.num_aviso_rec)
			else
				let m_integra_mensagem = false
			end if

			if log_existe_epl('sup3760y_after_fetch_cq_aviso_rec') then
				call log_setvar('cod_empresa', p_cod_empresa)
				#epl codigo da empresa
				#epl tipo: ordem_sup.cod_empresa

				call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
				#epl numero do ar
				#epl tipo: nf_sup.num_aviso_rec

				call log_setvar('dat_entrada_nf', p_dados_tela.dat_entrada_nf)
				#epl data de entrada da nota
				#epl tipo: nf_sup.dat_entrada_nf

				call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
				#epl tipo da nota fiscal
				#epl tipo: nf_sup.ies_nf_aguard_nfe

				call sup3760y_after_fetch_cq_aviso_rec()

				let p_dados_tela.dat_entrada_nf = log_getvar('dat_entrada_nf')
			end if

			# inicio chamado 727.126
			if find4glfunction('supy152_verifica_permissao_setor_aplicacao') then
				if not sup3760_verifica_permissao_setor_aplicacao() then
					continue while
				end if
			end if
			# fim chamado 727.126

			if sup3762_busca_frete_sup()= false then
				let p_frete_sup.num_conhec = 0
			end if

			### teoalv - cria tabela tempor�ria chamada no crer48
			if m_existe_crer48 then
				call crer48_cria_t_clientes_crer48()
			end if

			if sup376_le_novamente()  then
				if p_dados_tela.num_aviso_rec = p_dados_telar.num_aviso_rec  then
					continue while
				else
					if p_ies_cod_operac = "s" then
						initialize p_dados_tela.cod_operac_estoq to null
						select cod_operacao
						into p_dados_tela.cod_operac_estoq
						from aviso_rec_compl
						where aviso_rec_compl.cod_empresa = p_cod_empresa
						and aviso_rec_compl.num_aviso_rec = p_dados_tela.num_aviso_rec
					end if
					let m_dat_entrada_ant = p_dados_tela.dat_entrada_nf #798726#
					call sup376_exibe_dados()
					call sup376_exibe_array()
					exit while
				end if
			end if
		end while
	else
		error " nao existe nenhuma consulta ativa"
	end if
else
	error " nao existem mais itens nesta direcao. "
end if
end function

#-----------------------------#
function sup376_exibe_dados()
#-----------------------------#
	define p_cod_fiscal_compl    char(02),
	l_regime_aduaneiro    char(003),
	l_status              smallint ### trxyyh

	current window is w_sup37601
	if m_wms_instal = "s" then
		if m_criou_temp_peso is null or m_criou_temp_peso = false then
			if find4glfunction('wms6612_create_table') then
				call wms6612_create_table()
				let m_criou_temp_peso = true
			end if
		end if
	end if

	call sup376_consulta_dados()

	if (p_cod_ret_imp is null or p_cod_ret_imp = " ") then
		let p_ies_imp_renda = "n"
	else
		let p_ies_imp_renda = "s"
	end if

	call sup376_verifica_impostos_informados()
returning p_dados_tela.ies_impostos

	display by name p_dados_tela.*

	###busca nfe/cte
	initialize m_num_nfe to null
	call supm72_sup_par_ar_set_null()
	call supm72_sup_par_ar_leitura(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	0,
	"num_nf_eletronica",
	true,
	true) returning l_status

	if l_status then
		let m_num_nfe = supm72_sup_par_ar_get_parametro_val()
		let m_num_nff_aux = supm72_sup_par_ar_get_parametro_val() ### tvihmo
		if m_num_nfe is null then
			let m_num_nfe = supm72_sup_par_ar_get_parametro_texto()
			let m_num_nff_aux = supm72_sup_par_ar_get_parametro_texto() ### tvihmo
		end if
	else
		let m_num_nfe = p_dados_tela.num_nf
		let m_num_nff_aux = p_dados_tela.num_nf ### tvihmo
	end if
	call sup3760_display_num_nfe_cte() ### trxyyh

	if p_dados_tela.cod_fornecedor is not null then
		if m_ies_cnpj_insc = "s"  then
			call sup3760_busca_cnpj_insc(p_cod_empresa, #801178#
			p_dados_tela.num_aviso_rec, #801178#
			p_dados_tela.cod_fornecedor)
			if (m_num_cgc_cpf is not null and m_num_cgc_cpf <> " ") or
				(m_ins_estadual is not null and m_ins_estadual <> " ") then
				display "cnpj/cpf: ",m_num_cgc_cpf  at 10,21 attribute(reverse)
				display "ins.est.: ",m_ins_estadual at 10,51 attribute(reverse)
			else
				display "cnpj/cpf:                     "  at 10,21 attribute(reverse)
				display "ins.est.:                  " at 10,51 attribute(reverse)
			end if
		end if
	else
		display "                                                                               " at 10,01
	end if

	display "   " at 5,54
	if m_wms_instal = 's' then
		if p_dados_tela.num_aviso_rec is not null and
			p_dados_tela.num_aviso_rec <> 0 then
			if p_dados_tela.ies_nf_aguard_nfe = "a" then
				let m_tipo_documento = "p"
			else
				if p_dados_tela.ies_nf_aguard_nfe = "b" then
					let m_tipo_documento = "d"
				else
					let m_tipo_documento = "n"
				end if
			end if
			if find4glfunction('wms6612_consulta_sup_par_ar') then
				if p_dados_tela.num_aviso_rec is not null and
					p_dados_tela.num_aviso_rec <> 0 then
					if m_indicador_aduaneiro is null or m_indicador_aduaneiro = ' ' then
						let m_indicador_aduaneiro = wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec)
					end if
				end if
				call wms6612_consulta_sup_par_ar(p_dados_tela.num_aviso_rec)
				returning l_regime_aduaneiro
				display l_regime_aduaneiro at 5,54 attribute(reverse)
			end if
		end if
	end if

	initialize p_dados_tela.cod_fiscal_compl, p_dados_tela.filial to null

	if supm44_aviso_rec_compl_leitura(p_cod_empresa,p_dados_tela.num_aviso_rec,true,1) then
		let p_dados_tela.cod_fiscal_compl = supm44_aviso_rec_compl_get_cod_fiscal_compl()
		if find4glfunction('supm44_aviso_rec_compl_get_filial') then
			let p_dados_tela.filial = supm44_aviso_rec_compl_get_filial()
		end if
	end if

	let p_cod_fiscal_compl = p_dados_tela.cod_fiscal_compl using "##"

	display p_cod_fiscal_compl to cod_fiscal_compl
	display p_dados_tela.filial to filial
	display by name p_dados_tela_f.*

	call sup376_verifica_fornecedor() returning p_status
	call sup376_verifica_cnd_pgto() returning p_status
	call sup376_verifica_mod_embar() returning p_status

	if find4glfunction('supy13_busca_conhec') = true then
		call supy13_busca_conhec(p_cod_empresa,p_nf_sup.num_aviso_rec)
		returning p_nf_sup.cod_transpor,
		p_nf_sup.num_conhec,
		p_nf_sup.ser_conhec,
		p_nf_sup.ssr_conhec

		if p_nf_sup.num_conhec <> 0 then
			display " conhecimento: ",p_nf_sup.num_conhec," " at 20,50 attribute(reverse)
		end if
	end if

	if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
		whenever error continue
		let m_num_pesagem = 0
		select count(*)
		into m_num_pesagem
		from sup_ctr_balanca
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and tip_pesagem       = "1"
		if m_num_pesagem > 0 then
			display " nota fiscal com pesagens " at 20,50 attribute(reverse)
		end if
		whenever error stop
	end if
	call sup3760_busca_peso_nf()
end function

#------------------------------------------------------------#
function sup3760_cursor_excl_sup_retn_item_terc(l_filtra_seq)
#------------------------------------------------------------#

	define l_sql_stmt   char(2000),
	l_filtra_seq smallint

	let l_sql_stmt = " select sup_retn_item_terc.nf_remessa, ",
	" sup_retn_item_terc.seq_nf_remessa, ",
	" sup_retn_item_terc.seq_tabulacao, ",
	" sup_retn_item_terc.qtd_devolvida ",
	" from sup_retn_item_terc ",
	" where sup_retn_item_terc.empresa           = ? ",
	" and sup_retn_item_terc.nota_fiscal       = ? ",
	" and sup_retn_item_terc.serie_nota_fiscal = ? ",
	" and sup_retn_item_terc.subserie_nf       = ? ",
	" and sup_retn_item_terc.espc_nota_fiscal  = ? ",
	" and sup_retn_item_terc.fornecedor        = ? "

	if l_filtra_seq then
		let l_sql_stmt = l_sql_stmt clipped,
		" and sup_retn_item_terc.seq_aviso_recebto = ? "
	end if

	whenever error continue
	prepare var_query3 from l_sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","sup_retn_item_terc")
		return false
	end if

	whenever error continue
	declare cq_exclui_grd cursor for var_query3
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","sup_retn_item_terc")
		return false
	end if

return true

end function

#-----------------------------------#
function sup376_cursor_for_update()
#-----------------------------------#

	define l_sql_stmt  char(1500),
	l_erro      smallint

	whenever error continue
	declare cm_aviso_rec cursor for
	select * into p_aviso_rec.* from aviso_rec
	where aviso_rec.cod_empresa   = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
	for update
		call log085_transacao("begin")

		#--# teuegi #--#
		if g_tipo_sgbd = "ora" then
			let l_sql_stmt = "select cod_empresa",
			"  from aviso_rec",
			" where cod_empresa   = ?",
			"   and num_aviso_rec = ?",
			"   for update nowait"

			whenever error continue
			prepare var_lock from l_sql_stmt
			declare cq_lock cursor for var_lock
			whenever error stop

			whenever error continue
			open cq_lock using p_cod_empresa, p_dados_tela.num_aviso_rec
			whenever error stop

			let l_erro = sqlca.sqlcode

			#testa se n�o pode atualizar o registro por que outro usu�rio est� alocando,
			#caso esteja alocado tentar� com o registro subsequente
			if l_erro = -243 or
				l_erro = -244 or
				l_erro = -245 or
				l_erro = -246 or
				l_erro = -250 or
				l_erro = -263 then
				call log0030_mensagem(" registro sendo atualizado por outro usu�rio.\n aguarde e tente novamente.","stop")
				call log085_transacao("rollback")
				return false
			end if
		end if
		#--# teuegi #--#

		open cm_aviso_rec
		fetch cm_aviso_rec
		case sqlca.sqlcode
		when    0 return true
		when -250 call log0030_mensagem(" registro sendo atualizado por outro usuario.\n aguarde e tente novamente.","stop")
		when  100 call log0030_mensagem(" registro nao mais existe na tabela. \n execute a consulta novamente.","stop")
		otherwise       call log003_err_sql("leitura","aviso_rec")
	end case
	whenever error stop
	call log085_transacao("rollback")
return false
end function

#-------------------------------------#
function sup376_exclusao_aviso_rec()
#-------------------------------------#
	define p_achou_seq           smallint,
	p_nr_nf               char(7),
	l_cont                smallint,
	l_num_nf              like reten_irrf_pg.num_nf,
	l_num_ar_imp          like aviso_rec_proc_imp.num_aviso_rec,
	l_num_ar_proc         like processo_imp.num_aviso_rec,
	l_ies_situa_import    like nf_sup.ies_situa_import,
	lr_ar_x_nf_pend       record like ar_x_nf_pend.*,
	l_prog_contagem       like par_sup_pad.par_txt,
	## 407088
	l_cod_fornecedor      like nf_sup.cod_fornecedor,
	l_nf_remessa          like sup_retn_item_terc.nf_remessa,
	l_seq_nf_remessa      like sup_retn_item_terc.seq_nf_remessa,
	l_seq_tabulacao       like sup_retn_item_terc.seq_tabulacao,
	l_qtd_devolvida       like sup_retn_item_terc.qtd_devolvida,
	l_qtd_fat_item_fci    like sup_item_fci.qtd_fat_item_fci, ###tfgj52
	l_count               smallint,
	l_dat_entrada_nf      date,
	sql_stmt              char(1500),
	l_retorno_epl         smallint,
	l_parametro           like sup_parametro_item.parametro, ### tfcejr
	l_status              smallint, ### tey585
	l_msg                 char(100), ### tey585
	l_permite             smallint,
	l_ar_fornecedor       like sup_ar_it_forn_dep.ar_fornecedor,
	l_seq_fornecedor      like sup_ar_it_forn_dep.seq_fornecedor,
	l_total               like sup_ar_it_forn_dep.qtd_regularizada,
	l_ies_tip_entrada     like cod_fiscal_sup.ies_tip_entrada

	define lr_transf_pat        record
	empresa_destino     like fat_transf_pat.empresa_destino,
	inventario_destino  like fat_transf_pat.inventario_destino,
	aviso_recebto       like fat_transf_pat.aviso_recebto,
	seq_aviso_recebto   like fat_transf_pat.seq_aviso_recebto,
	dat_entrada         like fat_transf_pat.dat_entrada,
	trans_nota_fiscal   like fat_nf_transf_pat.trans_nota_fiscal,
	num_parcela         like patrparc.num_parcela,
	inventario_origem   like fat_transf_pat.inventario_origem,
	num_parcela_orig    like fat_transf_pat.parc_inv_origem,
	seq_item_nf         like fat_transf_pat.seq_item_nf
end record

if log_existe_epl('sup3760y_before_process_exclusao_aviso_rec') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: ordem_sup.cod_empresa

	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	if not sup3760y_before_process_exclusao_aviso_rec() then
		return
	end if
end if

if find4glfunction('obf50210_verifica_relac_manifesto') then
	if obf50210_verifica_relac_manifesto(p_cod_empresa, p_dados_tela.num_aviso_rec, p_dados_tela.ies_nf_aguard_nfe, "e") then
		return
	end if
end if

if sup376_verifica_classificacao_sucata() = true then
	call log0030_mensagem(" existe classificacao de sucata/materia-prima para este ar. ","exclamation")
return
end if

let m_nfr_import = false
if sup3760_nfr_consignatario("exclusao") then
	let m_nfr_import = true
end if

if p_dados_tela.cod_operacao[1] = "7" or m_nfr_import then
	if sup3760_possui_rateio_compl() then
		error " nota fiscal possui rateio de despesa complementar de importacao (sup5010) "
		return
	end if

	let m_num_processo = sup3760_busca_numero_processo_importacao()
	if m_num_processo is null then
		let m_num_processo = m_inicio_provisao
	end if

	if (m_ies_utiliz_provisao = "n" or
		(m_ies_utiliz_provisao = "s" and
		m_num_processo < m_inicio_provisao) or
		(m_ies_utiliz_provisao = "s" and m_utiliz_nfm_import = "s" and
		m_num_processo >= m_inicio_provisao)) then
		let l_num_ar_proc = sup3760_leitura_processo_imp(m_num_processo,"ar")
		if l_num_ar_proc is not null then
			initialize l_ies_situa_import to null
			select ies_situa_import
			into l_ies_situa_import
			from nf_sup
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = l_num_ar_proc
			whenever error stop
			if l_ies_situa_import is not null and
				l_ies_situa_import = "e" then

				if not sup3760_verifica_nfp_incl_apos_encerr(p_cod_empresa,
					p_dados_tela.num_aviso_rec) then
					error " processo de importacao ja encerrado "
					return
				end if

			end if
		end if
	end if
end if

if p_dados_tela.ies_especie_nf = "nfe" then ##os 337055
	initialize l_cont to null
	whenever error continue
	select count(*)
	into l_cont
	from sup_par_ar
	where empresa       = p_cod_empresa
	and parametro     = "nfe_icms_st"
	and parametro_val = p_dados_tela.num_aviso_rec
	whenever error stop

	if l_cont > 0 then
		call log0030_mensagem(" nfe icms st gerada autom�ticamente. fun��o n�o permitida. ","exclamation")
		return
	else
		initialize l_cont to null
		whenever error continue
		select count(*)
		into l_cont
		from sup_par_frete
		where empresa       = p_cod_empresa
		and parametro     = "nfe_icms_st"
		and parametro_val = p_dados_tela.num_aviso_rec
		whenever error stop
		if l_cont > 0 then
			call log0030_mensagem(" nfe icms st gerada automaticamente. fun��o n�o permitida. ","exclamation")
			return
		end if
	end if
end if

if p_dados_tela.ies_especie_nf = "nfm" then
	let l_cont = 0
	whenever error continue
	select count(*)
	into l_cont
	from ar_x_nf_pend
	where cod_empresa    = p_cod_empresa
	and num_nf         = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop
	if l_cont > 0 then
		error " existe nfp relacionada com esta nfm "
		return
	end if
end if

if not cap5440_verifica_ad_nf_base_calculo_cumulativo(p_nf_sup.cod_empresa,
	p_nf_sup.num_nf,
	p_nf_sup.dat_entrada_nf,
	p_nf_sup.cod_fornecedor,
	"sup") then
return
end if

call log130_procura_caminho("sup37604") returning comando3
open window w_sup37604 at 08,60 with form comando3
attribute(border, message line last, prompt line last, form line 1)
let p_achou_seq = false
input by name p_num_seq
after field p_num_seq
for p_ind = 1 to arraylength(p_array)
	if p_array[p_ind].seq is not null then
		if p_num_seq = p_array[p_ind].seq then
			let p_achou_seq = true
			exit for
		end if
	end if
end for
if p_achou_seq = false then
	error "item nao existente"
next field p_num_seq
end if
end input
close window w_sup37604
current window is w_sup37601
if int_flag <> 0 then
return
end if

let l_msg = sup3760_verifica_controle_insp()

#if log004_confirm(21,44) then
if log0040_confirm(21,04, l_msg) then
	### tupy - tefb13 - solicitado que fosse verificado se no periodo entre a confirma��o foi gerado cap0020
	call sup376_consulta_dados()
	if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, p_conta_lanc, "1", "n") then
		call log_setvar('num_seq', p_num_seq)
		if sup3762_verifica_item_dev_terc(m_contr_terc_no_dep) then
			return
		end if

		call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq)
		let p_houve_erro = false
		if sup3762_verifica_impostos_ja_pagos() then
			let p_houve_erro = true
			return
		end if

		if not sup3762_verifica_devol_nf_consig(p_nf_sup.ies_especie_nf,
			p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.cod_empresa,
			p_nf_sup.num_nf,
			p_nf_sup.cod_fornecedor,
			p_aviso_rec.cod_item) then #-- os 495219
			return
		end if

		call sup376_verifica_delecao()
		if p_conta <> 1 then
			#518223
			# somente ir� permitir a exclus�o por item, se a nf n�o tiver relacionamento
			# com nf sa�da
			if find4glfunction('supy61_nfr_com_relac_nf_faturamento') then
				if supy61_nfr_com_relac_nf_faturamento(p_cod_empresa, p_dados_tela.num_aviso_rec) then
					call log0030_mensagem("existe(m) relacionamento(s) para o aviso de recebimento. exclua o relacionamento no sup5242.", "exclamation");
						return
				end if
			end if
			call sup376_deleta_seq()
			#518223
		else
			declare cq_num_seqs2 cursor for
			select num_seq, num_pedido, num_oc
			from aviso_rec
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			and num_pedido    > 0

			let m_count_seq = 1
			initialize ma_inf_ar to null
			if m_count_seq >= arraylength(ma_inf_ar) then
				call arrayadditem(ma_inf_ar,1)
			end if
			foreach cq_num_seqs2 into ma_inf_ar[m_count_seq].num_seq,
			ma_inf_ar[m_count_seq].num_pedido,
			ma_inf_ar[m_count_seq].num_oc
			let m_count_seq = m_count_seq + 1
			if m_count_seq >= arraylength(ma_inf_ar) then
				call arrayadditem(ma_inf_ar,1)
			end if
		end foreach
		let m_count_seq = m_count_seq - 1

		if sup376_verifica_cond_delecao("excluir") = true then
			let l_count = 0
			whenever error continue
			select count(*)
			into l_count
			from sup_frete_x_nf_entrada
			where sup_frete_x_nf_entrada.empresa       = p_cod_empresa
			and sup_frete_x_nf_entrada.aviso_recebto = p_nf_sup.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("select","sup_frete_x_nf_entrada")
			end if

			if p_nf_sup.num_conhec > 0
				or l_count > 0 then
				call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
			else
				if p_dados_tela.ies_nf_aguard_nfe <> "7" then
					#if (p_aviso_rec.ies_item_estoq = "n" and     *** rafael - os314473
					#  (p_par_sup_compl.ies_conta_ok_n_est = "2" or
					# (p_par_sup_compl.ies_conta_ok_n_est = "3" and
					# p_dados_tela.ies_especie_nf = "nfs"))) or
					#p_aviso_rec.ies_item_estoq = "s" then
					if sup376_possui_avf_insp_ar() = false then
						if p_aviso_rec.ies_liberacao_insp = "s" and
							p_aviso_rec.ies_situa_ar = "e" then
							### os237529 ###
							initialize l_prog_contagem to null
							select par_txt
							into l_prog_contagem
							from par_sup_pad
							where par_sup_pad.cod_empresa   = p_cod_empresa
							and par_sup_pad.cod_parametro = "prog_contagem"
							if sqlca.sqlcode <> 0 or
								l_prog_contagem is null then
								let l_prog_contagem = " "
							end if

							if l_prog_contagem = "sup0799" then
								call log0030_mensagem(" exclua primeiramente resultado de contagem - sup0799 ","exclamation")
								let p_houve_erro = true
								return
							end if

							error " aguarde ... excluindo inspecao ... "
							call log_setvar("nom_usuario",p_user)

							let comando3 = p_cod_empresa, " ",
							p_aviso_rec.num_aviso_rec,  " ",
							p_num_seq, " ",
							"exclusao"," ",
							"sup3760"
							call log1200_executa_programa("sup0570",comando3)

							let p_ies_situa_ar = null
							call sup376_busca_aviso_rec(p_cod_empresa, p_aviso_rec.num_aviso_rec, p_num_seq)
							let p_ies_situa_ar = p_aviso_rec.ies_situa_ar

							if sup1481_nfc_compl_imposto(p_nf_sup.ies_especie_nf,p_cod_empresa,p_aviso_rec.num_aviso_rec) = false then
								if p_aviso_rec.ies_item_estoq = "s" then
									call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
								else
									call sup0063_verifica_controles(11, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
								end if
							end if

							if p_ies_custo_grade = "s" and
								m_controles <> " "     then
								## quando a empresa utiliza custo por grade, a contagem
								## eh excluida ja quando faz a exclusao da inspecao.
								if p_ies_situa_ar <> "c" then
									call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
									let p_houve_erro = true
									return
								end if
							else
								if p_ies_situa_ar <> "i" then
									call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
									let p_houve_erro = true
									return
								end if
							end if
							error " exclusao de inspecao realizada com sucesso. "
						end if
					else
						if p_aviso_rec.ies_item_estoq = "s" then
							if avf1003_exclusao_qualidade(p_aviso_rec.num_aviso_rec,
								p_num_seq) = false then
								let p_houve_erro = true
								call log0030_mensagem(" problemas na exclusao da inspecao (avf). ","exclamation")
								return
							end if
						end if
					end if

					#call sup376_verifica_cont_insp_automat(p_aviso_rec.cod_item, m_cont_insp_especial)
					#     returning p_ies_item_cont_aut, p_ies_item_insp_aut
					#if p_ies_item_insp_aut = "s" or
					#  (p_ies_item_insp_aut = "n" and
					#   p_aviso_rec.ies_situa_ar <> "e") then

					if p_aviso_rec.ies_liberacao_cont = "s" then
						error " aguarde ... excluindo contagem ... "

						call sup3760_atualiza_nota(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
						p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
						p_dados_tela.num_aviso_rec, p_dados_tela.cnd_pgto_nf)

						let comando3 = p_cod_empresa,
						" ", p_dados_tela.num_aviso_rec,
						" ", p_num_seq,
						" ", 3760,
						" ", "s",
						" ", "exclusao",
						" ", 0,
						" ", "s",
						" ", "n"
						call log1200_executa_programa("sup0530",comando3)

						let p_ies_situa_ar = null
						call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq)
						let p_ies_situa_ar = p_aviso_rec.ies_situa_ar
						if p_ies_situa_ar <> "c" then
							call log0030_mensagem(" problemas na exclusao da contagem/inspecao. ","exclamation")
							return
						end if
						error " exclusao de contagem realizada com sucesso. "
					end if
					#end if
				end if

				if sup376_cursor_for_update() then

					if m_cred_st_fat = "s"
						or m_cred_st_fat = "e" then
						if not sup1466_valida_saldo_com_revd_st(p_cod_empresa,p_dados_tela.num_aviso_rec,0,"exclusao") then
							let p_houve_erro = true
							whenever error continue
							call log085_transacao("rollback")
							whenever error stop
							return
						end if
					end if

					delete from nf_sup_erro
					where empresa       = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					whenever error continue
					let l_cont = 0
					select count(*) into l_cont
					from deb_fornec
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec
					and num_seq       = p_num_seq
					whenever error stop
					if l_cont = 0 then
					else call log0030_mensagem("existe deb_fornec - excluir registro no sup5960","exclamation")
						sleep 2
						let p_houve_erro = true
						whenever error continue
						call log085_transacao("rollback")
						whenever error stop
						return
					end if
					whenever error continue
					let l_cont = 0
					select count(*) into l_cont
					from dev_fornec
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec
					and num_seq       = p_num_seq
					whenever error stop
					if l_cont = 0 then
					else call log0030_mensagem("existe devolu��o a fornecedores - excluir registro no sup0460","exclamation")
						sleep 2
						let p_houve_erro = true
						whenever error continue
						call log085_transacao("rollback")
						whenever error stop
						return
					end if

					let p_nr_nf = p_dados_tela.num_nf

					call sup376_deleta_inss_auton(p_nr_nf,p_num_seq)

					if ((p_dados_tela.cod_operacao[1] = "7" and
						(p_dados_tela.ies_especie_nf = "nfe" or
						p_dados_tela.ies_especie_nf = "nfp" )) or m_nfr_import) and
						((m_ies_utiliz_provisao = "s" and
						m_utiliz_nfm_import = "n" and
						m_num_processo >= m_inicio_provisao) or
						p_nf_sup.ies_situa_import = "r") then
						let m_num_processo = sup3760_busca_numero_processo_importacao()
						if m_num_processo is null then
							let m_num_processo = -1
						end if
						if m_num_processo <> -1 then
							if m_num_processo >= g_proc_ini_os163407 then
								if not imp0101_desfaz_rateio(m_num_processo,p_dados_tela.num_aviso_rec,-1) then
									error "problema ao desfazer o rateio das despesas de importacao"
									sleep 2
									let p_houve_erro = true
									whenever error continue
									call log085_transacao("rollback")
									whenever error stop
									return
								end if
							else
								if not imp0101_desfaz_rateio_ant(m_num_processo,p_dados_tela.num_aviso_rec,-1) then
									error "problema ao desfazer o rateio das despesas de importacao"
									sleep 2
									let p_houve_erro = true
									whenever error continue
									call log085_transacao("rollback")
									whenever error stop
									return
								end if
							end if
						end if
					end if

					if not fcl1150_integra_sequencia_ar_fcx(p_aviso_rec.cod_empresa,
						p_aviso_rec.num_aviso_rec,
						p_aviso_rec.num_seq,"ex") then
						let p_houve_erro = true
						whenever error continue
						call log085_transacao("rollback")
						whenever error stop
						return
					end if

					if m_ies_relac_nf_benef = "s" then
						if not sup1277_exclusao_item(p_cod_empresa, p_aviso_rec.num_aviso_rec,  p_aviso_rec.num_seq, p_aviso_rec.cod_fiscal_item) then
							let p_houve_erro = true
							whenever error continue
							call log085_transacao("rollback")
							whenever error stop
							return
						end if
					end if

					delete from nfe_sup_compl
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					delete from dest_aviso_rec
					where cod_empresa = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					if p_ies_contab_aen = "4" then
						delete from dest_aviso_rec4
						where cod_empresa   = p_cod_empresa
						and num_aviso_rec = p_dados_tela.num_aviso_rec
					end if

					delete from ar_ped
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					whenever error continue
					delete from ar_nf_item
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec
					whenever error stop

					delete from ar_diverg
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					if m_exst_carcoraut then # 523038
						whenever error continue
						delete from sup_cart_corr_aut
						where empresa       = p_cod_empresa
						and aviso_recebto = p_dados_tela.num_aviso_rec
						whenever error stop
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("delete","sup_cart_corr_aut")
						end if
					end if

					delete from ar_diverg_provid
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					delete from dev_item
					where cod_empresa = p_cod_empresa
					and num_nff     = p_dados_tela.num_aviso_rec

					whenever error continue
					delete from sup_nf_devol_cli
					where empresa       = p_cod_empresa
					and aviso_recebto = p_dados_tela.num_aviso_rec
					whenever error stop

					### dmanentlgx-5970 (funcao utilizada no cancelamento e exclusao nota fiscal - nao estava considerando chave primaria da tabela)
					call sup0686_retorna_tipo_entrada(p_dados_tela.cod_operacao,
					0)
					returning l_status,
					l_ies_tip_entrada
					if p_dados_tela.ies_especie_nf = "nfd" or l_ies_tip_entrada = '5' then
						if find4glfunction('supr76_exclui_registro_f150') then
							if not supr76_exclui_registro_f150(p_cod_empresa, p_dados_tela.num_aviso_rec) then
								let p_houve_erro = true
							end if
						else
							if not sup3760_deleta_registro_f150(p_cod_empresa, p_dados_tela.num_aviso_rec) then
								let p_houve_erro = true
							end if
						end if
					end if

					if find4glfunction('supy121_excluir_mov_comissoes_dev_clie') then
						if not supy121_excluir_mov_comissoes_dev_clie(p_cod_empresa,
							p_dados_tela.num_aviso_rec,
							"exclusao") then
							let p_houve_erro = true
						end if
					end if

					whenever error continue
					delete from sup_trib_benef_nf_devol_cli
					where empresa       = p_cod_empresa
					and aviso_recebto = p_dados_tela.num_aviso_rec
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("delete","sup_trib_benef_nf_devol_cli")
						let p_houve_erro = true
					end if

					whenever error continue
					delete from sup_par_ar
					where empresa       = p_cod_empresa
					and aviso_recebto = p_aviso_rec.num_aviso_rec
					whenever error stop

					### dmansuplgx-1251
					if m_sup_ar_item_fisc = true then
						whenever error continue
						delete from sup_ar_item_fisc
						where empresa       = p_cod_empresa
						and aviso_recebto = p_aviso_rec.num_aviso_rec
						whenever error stop
					end if

					whenever error continue
					delete from sup_compl_nf_sup
					where empresa       = p_cod_empresa
					and aviso_recebto = p_aviso_rec.num_aviso_rec
					whenever error stop
#### os 139067
					if find4glfunction('supr_ar_item_fisc_exclui_todos') then
						call supr_ar_item_fisc_exclui_todos(p_cod_empresa,'0',p_dados_tela.num_aviso_rec,0,0)
						returning l_status
						if l_status = false then
							return false
						end if
					else
						whenever error continue
						delete from ar_subst_tribut
						where cod_empresa   = p_cod_empresa
						and num_aviso_rec = p_dados_tela.num_aviso_rec
						whenever error stop
					end if

					if m_exporta_nf = "a" then
						call sup3762_exclui_conta_corrente("e")
					end if

					delete from ar_os_esp
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					#dmanentlgx-236
					if p_dados_tela.ies_especie_nf = 'nfs' then
						if not avfr6_exclusao_inspecao(p_cod_empresa,
							p_dados_tela.num_aviso_rec,
							p_num_seq) then
							let p_houve_erro = true
							call log0030_mensagem(" problemas na exclus�o da inspecao (avf). ","exclamation")
							return
						end if
					end if

					#if p_par_sup_compl.ies_rastreio = "1" then
					delete from avf_insp_ar
					where avf_insp_ar.empresa       = p_cod_empresa
					and avf_insp_ar.aviso_recebto = p_dados_tela.num_aviso_rec

					#inicio trov74
					if log_existe_epl("sup3760y_after_process_delete_avf_insp_ar_1") then
						call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
						#epl n�mero do ar
						#epl tipo: aviso_rec.num_aviso_rec

						call log_setvar('num_seq', p_aviso_rec.num_seq)
						#epl sequ�ncia do ar
						#epl tipo: aviso_rec.num_seq

						call log_setvar('cod_item', p_aviso_rec.cod_item)
						#epl codigo do item do ar
						#epl tipo: aviso_rec.cod_item

						call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
						#epl codigo do fornecedor do ar
						#epl tipo: nf_sup.cod_fornecedor

						if sup3760y_after_process_delete_avf_insp_ar_1() = false then
							let p_houve_erro = true
						end if
					end if
					#fim trov74

					whenever error continue #os560935
					delete from avf_pl_insp_ar
					where avf_pl_insp_ar.empresa       = p_cod_empresa
					and avf_pl_insp_ar.aviso_recebto = p_dados_tela.num_aviso_rec
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql('delete','avf_pl_insp_ar')
					end if
					#end if

					if (p_dados_tela.ies_especie_nf = "nfr"  or
						p_dados_tela.ies_especie_nf = "nfe") and ### os 511148
						p_dados_tela.ies_nf_aguard_nfe = "x" then
						call sup3760_exclui_nf_consig("aviso",p_dados_tela.num_aviso_rec,p_num_seq)
						#-- ch tfskoh inicio --#
						if p_houve_erro = true then
							whenever error continue
							call log085_transacao("rollback")
							whenever error stop
							return
						end if
						#-- ch tfskoh fim --#
					else
						if sup376_elimina_item_ret_terc(p_dados_tela.num_aviso_rec,p_num_seq,"1") = false then
							let p_houve_erro = true
							whenever error continue
							call log085_transacao("rollback")
							whenever error stop
							return
						end if
					end if

					whenever error continue
					delete from man_moviment_serie
					where num_docum  = p_dados_tela.num_nf
					and (tip_docum = "re" or
					tip_docum = "dv")
					and programa   = "sup3760"
					whenever error stop
					if sqlca.sqlcode <> 0 and
						sqlca.sqlcode <> -206 then
						call log003_err_sql("exclusao","man_moviment_serie")
					end if

					if p_dados_tela.cod_empresa_estab is null then
						whenever error continue
						delete from rec_find_ent_ar
						where empresa         = p_cod_empresa
						and empresa_estabel is null
						and aviso_recebto   = p_dados_tela.num_aviso_rec
						whenever error stop
					else
						whenever error continue
						delete from rec_find_ent_ar
						where empresa         = p_cod_empresa
						and empresa_estabel = p_dados_tela.cod_empresa_estab
						and aviso_recebto   = p_dados_tela.num_aviso_rec
						whenever error stop
					end if

					delete from sup_infc_strib_nfe
					where empresa            = p_cod_empresa
					and nf_entrada         = p_dados_tela.num_nf
					and serie_nf_entrada   = p_dados_tela.ser_nf
					and subserie_nfe       = p_dados_tela.ssr_nf
					and especie_nf_entrada = p_dados_tela.ies_especie_nf
					and fornecedor         = p_dados_tela.cod_fornecedor
					and seq_item_nfe       = p_aviso_rec.num_seq

					### os 159597 ###
					if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
						whenever error continue
						update sup_ctr_balanca
						set aviso_recebto = null
						where empresa           = p_cod_empresa
						and num_docum         = p_dados_tela.num_nf
						and serie_nota_fiscal = p_dados_tela.ser_nf
						and subserie_nf       = p_dados_tela.ssr_nf
						and fornecedor        = p_dados_tela.cod_fornecedor
						and seq_nota_fiscal   > 0
						and tip_pesagem       = "1"
						whenever error stop
					end if

					delete from aviso_rec_compl_sq
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					delete from aviso_rec_aux
					where cod_empresa = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					delete from dev_mestre
					where cod_empresa = p_cod_empresa
					and num_nff     = p_dados_tela.num_aviso_rec

############### os 134963
					delete from audit_sup_cre
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

############### os 81443
					delete from ar_frete_cesta
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					## os 407088
					call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor
					call sup3760_exclui_item_de_terc(l_cod_fornecedor, 0)

					delete from item_dev_terc_comp
					where item_dev_terc_comp.cod_empresa = p_cod_empresa
					and item_dev_terc_comp.num_nf = p_dados_tela.num_nf
					and item_dev_terc_comp.ser_nf = p_dados_tela.ser_nf
					and item_dev_terc_comp.ssr_nf = p_dados_tela.ssr_nf
					and item_dev_terc_comp.num_sequencia = p_num_seq

					{awc}              delete from ar_iss
					where cod_empresa = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					if g_ies_tex_inst = "s" then
						whenever error continue
						delete from ar_ped_tex
						where cod_empresa      = p_cod_empresa
						and num_aviso_rec    = p_dados_tela.num_aviso_rec
						and num_seq          = p_num_seq
						delete from nf_sup_tex_cap_con
						where cod_empresa      = p_cod_empresa
						and num_aviso_rec    = p_dados_tela.num_aviso_rec
						and num_seq          = p_num_seq
						whenever error stop
					end if

					whenever error continue
					delete from aviso_rec
					where cod_empresa = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("exclusao","aviso_rec")
						let p_houve_erro = true
					end if

					if sup3760_cursor_excl_sup_retn_item_terc(true) = false then
						let p_houve_erro = true
					end if

					if not p_houve_erro then
						whenever error continue
						open cq_exclui_grd using p_cod_empresa,
						p_dados_tela.num_nf,
						p_dados_tela.ser_nf,
						p_dados_tela.ssr_nf,
						p_dados_tela.ies_especie_nf,
						p_dados_tela.cod_fornecedor,
						p_num_seq
						whenever error stop
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("open","sup_retn_item_terc")
							let p_houve_erro = true
						end if

						if not p_houve_erro then
							while true
								whenever error continue
								fetch cq_exclui_grd into l_nf_remessa, l_seq_nf_remessa,
								l_seq_tabulacao, l_qtd_devolvida
								whenever error stop
								if sqlca.sqlcode <> 0 then
									if sqlca.sqlcode <> 100 then
										call log003_err_sql("fetch","sup_retn_item_terc")
										let p_houve_erro = true
									end if

									exit while
								end if

								whenever error continue
								delete from sup_retn_item_terc
								where sup_retn_item_terc.empresa           = p_cod_empresa
								and sup_retn_item_terc.nota_fiscal       = p_dados_tela.num_nf
								and sup_retn_item_terc.serie_nota_fiscal = p_dados_tela.ser_nf
								and sup_retn_item_terc.subserie_nf       = p_dados_tela.ssr_nf
								and sup_retn_item_terc.espc_nota_fiscal  = p_dados_tela.ies_especie_nf
								and sup_retn_item_terc.fornecedor        = p_dados_tela.cod_fornecedor
								and sup_retn_item_terc.seq_aviso_recebto = p_num_seq
								and sup_retn_item_terc.nf_remessa        = l_nf_remessa
								and sup_retn_item_terc.seq_nf_remessa    = l_seq_nf_remessa
								and sup_retn_item_terc.seq_tabulacao     = l_seq_tabulacao
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("delete","sup_retn_item_terc")
									let p_houve_erro = true
								end if

								if not p_houve_erro then
									whenever error continue
									update sup_itterc_grade
									set sup_itterc_grade.qtd_tot_receb = sup_itterc_grade.qtd_tot_receb -
									l_qtd_devolvida
									where sup_itterc_grade.empresa       = p_cod_empresa
									and sup_itterc_grade.nota_fiscal   = l_nf_remessa
									and sup_itterc_grade.seq_item_nf   = l_seq_nf_remessa
									and sup_itterc_grade.fornecedor    = p_dados_tela.cod_fornecedor
									and sup_itterc_grade.seq_tabulacao = l_seq_tabulacao
									whenever error stop
									if sqlca.sqlcode <> 0 then
										call log003_err_sql("update","sup_itterc_grade")
										let p_houve_erro = true
									end if
								end if

								if p_houve_erro then
									exit while
								end if
							end while
						end if
					end if

					### os 277425 ###
					if sup3766_exclui_sup_ar_grade(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						0) = false then
						let p_houve_erro = true
					end if
					### fim os 277425 ###

					if not sup1031_grava_audit_ar(p_dados_tela.num_aviso_rec,
						0, ##exclusao total da nota fiscal
						"sup3760","5") then
						let p_houve_erro = true
					end if

					#-in�cio ch-tfrc09-#
					if log_existe_epl('sup3760y_after_process_delete_aviso_rec') then
						call log_setvar('cod_empresa', p_cod_empresa)
						#epl codigo da empresa
						#epl tipo: aviso_rec.cod_empresa

						call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
						#epl numero do ar
						#epl tipo: aviso_rec.num_aviso_rec

						call log_setvar('houve_erro', p_houve_erro)
						#epl indicador se houve erro no processamento
						#epl tipo: smallint

						call sup3760y_after_process_delete_aviso_rec()
						let p_houve_erro = log_getvar('houve_erro')
					end if
					#-fim ch-tfrc09-#

					if p_dados_tela.ies_nf_aguard_nfe = "a" then
						delete from ar_depos
						where cod_empresa   = p_cod_empresa
						and num_aviso_rec = p_dados_tela.num_aviso_rec
					end if

					if p_dados_tela.ies_nf_aguard_nfe = "b" then
						delete from item_de_terc_dep
						where cod_empresa     = p_cod_empresa
						and num_nf          = p_dados_tela.num_nf
						and ser_nf          = p_dados_tela.ser_nf
						and ies_especie_nf  = p_dados_tela.ies_especie_nf
						and cod_fornecedor  = p_dados_tela.cod_fornecedor

						whenever error continue
						declare cq_ar_depos cursor for
						select ar_fornecedor, seq_fornecedor
						from sup_ar_it_forn_dep
						where empresa        = p_cod_empresa
						and ar_depositante = p_dados_tela.num_aviso_rec
						whenever error stop

						whenever error continue
						foreach cq_ar_depos into l_ar_fornecedor, l_seq_fornecedor
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("foreach","cq_ar_depos")
							exit foreach
						end if

						whenever error continue
						delete from ar_fornec_depos
						where cod_empresa   = p_cod_empresa
						and num_ar_fornec = l_ar_fornecedor
						and num_ar_depos  = p_dados_tela.num_aviso_rec
						whenever error stop

						whenever error continue
						delete from sup_ar_it_forn_dep
						where empresa        = p_cod_empresa
						and ar_fornecedor  = l_ar_fornecedor
						and seq_fornecedor = l_seq_fornecedor
						and ar_depositante = p_dados_tela.num_aviso_rec
						whenever error stop

						let l_total = 0
						whenever error continue
						select sum(qtd_regularizada) into l_total
						from sup_ar_it_forn_dep
						where empresa        = p_cod_empresa
						and ar_fornecedor  = l_ar_fornecedor
						and seq_fornecedor = l_seq_fornecedor
						whenever error stop
						if sqlca.sqlcode <> 0 or l_total is null then
							let l_total = 0
						end if

						whenever error continue
						update sup_ar_item_fornec set qtd_regularizada = l_total
						where empresa           = p_cod_empresa
						and aviso_recebto     = l_ar_fornecedor
						and seq_aviso_recebto = l_seq_fornecedor
						whenever error stop
					end foreach
					whenever error stop
				end if

				let l_permite = false

				if find4glfunction("sup9932_utiliza_espc_nota_fiscal") then
					call sup9932_utiliza_espc_nota_fiscal('vencimento_nff')
					returning l_permite
				end if

				if l_permite = false then
					delete from vencimento_nff
					where cod_empresa = p_cod_empresa
					and num_nf      = p_dados_tela.num_nf
					and ser_nf      = p_dados_tela.ser_nf
					and ssr_nf      = p_dados_tela.ssr_nf
					and cod_fornecedor  = p_dados_tela.cod_fornecedor
				else
					delete from vencimento_nff
					where cod_empresa = p_cod_empresa
					and num_nf      = p_dados_tela.num_nf
					and ser_nf      = p_dados_tela.ser_nf
					and ssr_nf      = p_dados_tela.ssr_nf
					and espc_nota_fiscal = p_dados_tela.ies_especie_nf
					and cod_fornecedor  = p_dados_tela.cod_fornecedor
				end if

				delete from nf_sup_aux
				where cod_empresa = p_cod_empresa
				and num_aviso_rec = p_dados_tela.num_aviso_rec

				if p_dados_tela.ies_especie_nf = "nfm" then
					whenever error continue
					delete from nf_pend
					where cod_empresa    = p_cod_empresa
					and num_nf         = p_dados_tela.num_nf
					and ser_nf         = p_dados_tela.ser_nf
					and ssr_nf         = p_dados_tela.ssr_nf
					and cod_fornecedor = p_dados_tela.cod_fornecedor
					whenever error stop
				end if

				if p_dados_tela.ies_especie_nf = "nfp" then
					declare cq_ar_x_nf_pend cursor for
					select *
					from ar_x_nf_pend
					where cod_empresa   = p_cod_empresa
					and num_aviso_rec = p_dados_tela.num_aviso_rec

					foreach cq_ar_x_nf_pend into lr_ar_x_nf_pend.*
					whenever error continue
					update nf_pend
					set qtd_regularizada = qtd_regularizada -
					lr_ar_x_nf_pend.qtd_regularizada
					where cod_empresa    = lr_ar_x_nf_pend.cod_empresa
					and num_nf         = lr_ar_x_nf_pend.num_nf
					and ser_nf         = lr_ar_x_nf_pend.ser_nf
					and ssr_nf         = lr_ar_x_nf_pend.ssr_nf
					and cod_fornecedor = lr_ar_x_nf_pend.cod_fornecedor
					and cod_item       = lr_ar_x_nf_pend.cod_item
					whenever error stop
				end foreach

				whenever error continue
				delete from ar_x_nf_pend
				where cod_empresa    = p_cod_empresa
				and num_aviso_rec  = p_dados_tela.num_aviso_rec
				whenever error stop
			end if

			#os 66100
			delete from reten_iss
			where cod_empresa    = p_cod_empresa
			and num_ad_nf_orig = p_dados_tela.num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and ies_especie_nf = p_dados_tela.ies_especie_nf
			and cod_fornecedor = p_dados_tela.cod_fornecedor

			delete from reten_inss
			where cod_empresa    = p_cod_empresa
			and num_ad_nf_orig = p_dados_tela.num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and ies_especie_nf = p_dados_tela.ies_especie_nf
			and cod_fornecedor = p_dados_tela.cod_fornecedor

			if log0150_verifica_se_tabela_existe("cap_rateio_natureza_rendto") and
				find4glfunction('capm212_cap_rateio_natureza_rendto_exclui_todos') then
				call capm212_cap_rateio_natureza_rendto_exclui_todos(p_cod_empresa,p_dados_tela.num_nf,
				p_dados_tela.ser_nf,p_dados_tela.ssr_nf,
				p_dados_tela.ies_especie_nf,p_dados_tela.cod_fornecedor,
				false,false,false)
			end if

			if log0150_verifica_se_tabela_existe("cap_reten_inss_compl") then
				whenever error continue
				delete from cap_reten_inss_compl
				where cap_reten_inss_compl.empresa        = p_cod_empresa
				and cap_reten_inss_compl.num_ad_nf_orig = p_dados_tela.num_nf
				and cap_reten_inss_compl.ser_nf         = p_dados_tela.ser_nf
				and cap_reten_inss_compl.ssr_nf         = p_dados_tela.ssr_nf
				and cap_reten_inss_compl.especie_nf     = p_dados_tela.ies_especie_nf
				and cap_reten_inss_compl.fornecedor     = p_dados_tela.cod_fornecedor
				whenever error stop
			end if

			#eduardo o.s.335020
			whenever error continue
			delete from cap_sest_senat
			where empresa           = p_cod_empresa
			and ad_nf_origem      = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and fornecedor        = p_dados_tela.cod_fornecedor

			delete from cap_ret_inss_auton
			where empresa           = p_cod_empresa
			and ad_nf_origem      = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and fornecedor        = p_dados_tela.cod_fornecedor

			#requisito l_hcm001\135102
			#alterado para que quando exclui da cap_ret_inss_auton excluir tamb�m a cap_imposto_complementar
			if log0150_verifica_se_tabela_existe("cap_imposto_complementar") then
				whenever error continue
				delete from cap_imposto_complementar
				where empresa                       = p_cod_empresa
				and ad_ap_nf_origem               = p_dados_tela.num_nf
				and serie_nota_fiscal             = p_dados_tela.ser_nf
				and subserie_nota_fiscal          = p_dados_tela.ssr_nf
				and especie_nota_fiscal           = p_dados_tela.ies_especie_nf
				and fornecedor                    = p_dados_tela.cod_fornecedor
				whenever error stop
			end if

			delete from cap_ret_inss_compl
			where empresa           = p_cod_empresa
			and ad_nf_origem      = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and fornecedor        = p_dados_tela.cod_fornecedor

			delete from cap_ret_proalminas
			where empresa           = p_cod_empresa
			and ad_nf_origem      = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and fornecedor        = p_dados_tela.cod_fornecedor

			delete from cap_iss_compl
			where empresa           = p_cod_empresa
			and ad_nota_fiscal    = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and fornecedor        = p_dados_tela.cod_fornecedor

			delete from cap_iss_eletronico
			where empresa           = p_cod_empresa
			and ad_nota_fiscal    = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and fornecedor        = p_dados_tela.cod_fornecedor
			whenever error stop
			#eduardo o.s.335020

### tey585 - imposto cide (contribui��o de interven��o no dom�nio econ�mico)
			if m_cap_recolhe_cide = true then
				if find4glfunction('capr40_exclui_recolh_cide') then
					call capr40_exclui_recolh_cide(p_cod_empresa,
					p_dados_tela.num_nf,
					p_dados_tela.ser_nf,
					p_dados_tela.ssr_nf,
					p_dados_tela.ies_especie_nf,
					p_dados_tela.cod_fornecedor,
					true) returning l_status, l_msg
					if l_status = false then
						call log0030_mensagem(l_msg,"exclamation")
						let p_houve_erro = true
					end if
				end if
			end if

			let l_qtd_fat_item_fci = 0

			whenever error continue
			select sum(qtd_fat_item_fci)
			into l_qtd_fat_item_fci
			from sup_item_fci
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			whenever error stop
			if l_qtd_fat_item_fci <> 0 then
				let l_msg = 'esta nota possui fci relacionado com nota fiscal de saida, n�o pode ser excluida/cancelada.'
				call log0030_mensagem(l_msg,"exclamation")
				let p_houve_erro = true
			else
				whenever error continue
				delete from sup_item_fci
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("exclusao","sup_item_fci(1)")
					let p_houve_erro = true
				end if
			end if

			if m_utiliza_dds_fortaleza = "s" then
				whenever error continue
				delete from cap_sistema_dds
				where empresa           = p_cod_empresa
				and ad_nota_fiscal    = p_dados_tela.num_nf
				and serie_nota_fiscal = p_dados_tela.ser_nf
				and subserie_nf       = p_dados_tela.ssr_nf
				and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
				and fornecedor        = p_dados_tela.cod_fornecedor
				whenever error stop
			end if

			delete from reten_inss_rur
			where cod_empresa    = p_cod_empresa
			and num_ad_nf_orig = p_dados_tela.num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and ies_especie_nf = p_dados_tela.ies_especie_nf
			and cod_fornecedor = p_dados_tela.cod_fornecedor

			let l_num_nf = p_dados_tela.num_nf
			delete from reten_irrf_pg
			where cod_empresa    = p_cod_empresa
			and num_nf         = l_num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and ies_especie_nf = p_dados_tela.ies_especie_nf
			and cod_fornecedor = p_dados_tela.cod_fornecedor

			# projeto l_hcm001 - requisito 13510.1 - esocial - ] - 27/05/2014
			if log0150_verifica_se_tabela_existe("cap_pensao_documento") = true then
				delete from cap_pensao_documento
				where empresa              = p_cod_empresa
				and nota_fiscal          = l_num_nf
				and serie_nota_fiscal    = p_dados_tela.ser_nf
				and subserie_nota_fiscal = p_dados_tela.ssr_nf
				and especie_nota_fiscal  = p_dados_tela.ies_especie_nf
				and fornecedor           = p_dados_tela.cod_fornecedor
			end if

			delete from aviso_rec_compl
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec

			delete from ar_pis_cofins
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec

			#os 359707
			whenever error continue
			delete from obf_dvcli_piscofin
			where empresa       = p_cod_empresa
			and aviso_recebto = p_dados_tela.num_aviso_rec
			whenever error stop

			whenever error continue
			delete from obf_p_dvcli_cofins
			where empresa       = p_cod_empresa
			and aviso_recebto = p_dados_tela.num_aviso_rec
			whenever error stop
			#os 359707

			#-in�cio ch-tfh675-#
			if log0150_verifica_se_tabela_existe("sup_grd_nfe") then
				whenever error continue
				delete from sup_grd_nfe
				where empresa       = p_cod_empresa
				and aviso_recebto = p_dados_tela.num_aviso_rec
				whenever error stop
			end if
			#-fim ch-tfh675-#

			whenever error continue ##os 361268
			delete from sup_par_devol_cli
			where empresa       = p_cod_empresa
			and aviso_recebto = p_dados_tela.num_aviso_rec
			whenever error stop

			whenever error continue
			delete from sup_ar_piscofim
			where empresa       = p_cod_empresa
			and aviso_recebto = p_dados_tela.num_aviso_rec
			whenever error stop

			whenever error continue
			delete from sup_fr_pis_cofins
			where empresa       = p_cod_empresa
			and aviso_recebto = p_dados_tela.num_aviso_rec
			whenever error stop

			if not sup3760_desfaz_relac_desp_proc() then
				let p_houve_erro = true
				return
			end if

			delete from aviso_rec_proc_imp
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec

			whenever error continue
			delete from sup_nf_reajus
			where sup_nf_reajus.empresa = p_cod_empresa
			and sup_nf_reajus.ar_reajus = p_dados_tela.num_aviso_rec

			delete from sup_nf_fat_remessa
			where sup_nf_fat_remessa.empresa = p_cod_empresa
			and sup_nf_fat_remessa.nota_fiscal = p_dados_tela.num_nf
			and sup_nf_fat_remessa.serie_nota_fiscal = p_dados_tela.ser_nf
			and sup_nf_fat_remessa.subserie_nf = p_dados_tela.ssr_nf
			and sup_nf_fat_remessa.espc_nota_fiscal = p_dados_tela.ies_especie_nf
			and sup_nf_fat_remessa.fornecedor = p_dados_tela.cod_fornecedor
			whenever error stop

			if m_exst_rel_fre_indt then
				whenever error continue
				delete from sup_relc_ftre_indt
				where sup_relc_ftre_indt.empresa   = p_cod_empresa
				and sup_relc_ftre_indt.aviso_recebto = p_dados_tela.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("exclusao","sup_relc_ftre_indt")
					let p_houve_erro = true
				end if
				## os 518223 ##
				if find4glfunction('supy61_gera_mvto_comodato') then
					if not supy61_gera_mvto_comodato(p_dados_tela.cod_empresa,
						p_dados_tela.num_aviso_rec,
						"e") then
						whenever error continue
						call log085_transacao("rollback")
						whenever error stop
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("rollback","transacao")
						end if
						return
					end if
				end if
				## os 518223 ##
			end if

			##se for integra��o on-line poder� existir lan�amentos cont�beis para o documento,
			##j� que o indicador ies_incl_contab s� passar� para "s" quando for efetuado
			##a integra��o cont�bil (gera��o do lote ou arquivo texto).
			if not supr6_integracao_batch(p_cod_empresa) and
				supr6_data_posterior_data_corte_logix_10(p_cod_empresa,
				p_dados_tela.dat_entrada_nf) then

				if not supr6_validacao_data_inicial_e_final_processamento(p_cod_empresa,
					p_dados_tela.dat_entrada_nf,
					p_dados_tela.dat_entrada_nf,
					"manual",
					false) then
					let p_houve_erro = true
				else
					if m_dat_entrada_ant is null then
						let l_dat_entrada_nf =  p_dados_tela.dat_entrada_nf
					else
						let l_dat_entrada_nf = m_dat_entrada_ant
					end if

					if not supr6_exclui_lancamento_contabil_documento("manual",
						p_cod_empresa,
						p_dados_tela.num_nf,
						p_dados_tela.ser_nf,
						p_dados_tela.ssr_nf,
						p_dados_tela.ies_especie_nf,
						p_dados_tela.cod_fornecedor,
						p_dados_tela.num_aviso_rec,
						l_dat_entrada_nf,
						0,false) then
						let p_houve_erro = true
					end if
				end if
			end if

			{awc}
			delete from ar_iss
			where cod_empresa = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec

			delete from nf_sup
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			if sqlca.sqlcode = 0  then
				#if p_ies_interf_cre = "s" then
				#   if (p_dados_tela.ies_especie_nf = "nfd" or
				#       p_ies_tip_entrada = "5") then
				#      call log0030_mensagem("atencao !!! estes dados ja foram baixados no contas a receber","exclamation")
				#   end if
				#end if
				if(p_dados_tela.cod_operacao[1] = "7" or m_nfr_import) and
					p_dados_tela.ies_especie_nf <> "nfm" and
					(p_par_sup_compl.ies_mod_importacao = "l" or
					p_par_sup_compl.ies_mod_importacao = "s") then
					if m_num_processo is not null and m_num_processo <> -1 then
						declare cq_ar_proc_imp3 cursor for
						select num_aviso_rec
						from aviso_rec_proc_imp
						where cod_empresa  = p_dados_tela.cod_empresa
						and num_processo = m_num_processo

						initialize l_num_ar_imp to null
						open cq_ar_proc_imp3
						fetch cq_ar_proc_imp3 into l_num_ar_imp
						close cq_ar_proc_imp3

						if l_num_ar_imp is null then
							whenever error continue
							update processo_imp
							set num_aviso_rec = null,
							ies_situacao  = "4"
							where cod_empresa      = p_dados_tela.cod_empresa
							and num_aviso_rec    is not null
							and num_aviso_rec    = p_dados_tela.num_aviso_rec
							and ies_versao_atual = "s"
							whenever error stop
							if sqlca.sqlcode <> 0 then
								call log003_err_sql("(3)modificacao","processo_imp")
								let p_houve_erro = true
							else
								call imp0024_mov_even(p_cod_empresa,m_num_processo,
								34," ",today)
							end if
						else
							let l_num_ar_proc = sup3760_leitura_processo_imp(m_num_processo,"ar")
							if l_num_ar_proc = p_dados_tela.num_aviso_rec then
								whenever error continue
								update processo_imp
								set num_aviso_rec    = l_num_ar_imp
								where cod_empresa      = p_dados_tela.cod_empresa
								and num_processo     = m_num_processo
								and ies_versao_atual = "s"
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("(4)modificacao","processo_imp")
									let p_houve_erro = true
								end if
							end if
						end if
					end if
				else ## sdissm, busca numero do ar do processo para atualiza a nfm
					if p_dados_tela.cod_operacao[1] = "7" then
						if p_dados_tela.ies_especie_nf = 'nfm' and
							(p_par_sup_compl.ies_mod_importacao = "l" or
							p_par_sup_compl.ies_mod_importacao = "s") then
							let m_num_processo = sup3760_busca_numero_proc_imp()
							whenever error continue
							update processo_imp
							set num_aviso_rec = null,
							ies_situacao  = "4"
							where cod_empresa      = p_dados_tela.cod_empresa
							and num_aviso_rec    is not null
							and num_aviso_rec    = p_dados_tela.num_aviso_rec
							and ies_versao_atual = "s"
							whenever error stop
							if sqlca.sqlcode <> 0 then
								call log003_err_sql("(1)modificacao","processo_imp")
								let p_houve_erro = true
							else
								call imp0024_mov_even(p_cod_empresa,m_num_processo,
								34," ",today)
							end if
						end if
					end if
				end if

				### os 154880 ###
				whenever error continue
				if p_ies_obt_inf_com = "s" and
					sup0812_verifica_nota_transferencia(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					p_dados_tela.num_nf,
					p_dados_tela.ser_nf,
					p_dados_tela.ssr_nf,
					p_dados_tela.cod_fornecedor,
					p_dados_tela.cod_operacao,
					p_dados_tela.cod_fiscal_compl) then
					if g_ies_tip_controle = "j" then
						initialize sql_stmt to null
						let sql_stmt =
						" select fat_nf_transf_pat.empresa_destino, ",
						" fat_nf_transf_pat.inventario_destino, ",
						" fat_nf_transf_pat.aviso_recebto, ",
						" fat_nf_transf_pat.seq_item_ar, ",
						" fat_nf_transf_pat.dat_ent_ar, ",
						" fat_nf_transf_pat.trans_nota_fiscal, ",
						" fat_nf_transf_pat.inventario_origem, ",
						" fat_nf_transf_pat.parc_inv_origem, ",
						" fat_nf_transf_pat.seq_item_nf ",
						" from fat_nf_mestre, fat_nf_transf_pat ",
						" where fat_nf_mestre.empresa               = """, p_cod_emp_transf, """ ",
						" and fat_nf_mestre.nota_fiscal           = ", m_num_nff_aux, ### tvihmo
						" and fat_nf_mestre.serie_nota_fiscal     = """,p_dados_tela.ser_nf,""" ",
						" and fat_nf_mestre.subserie_nf           = ",p_dados_tela.ssr_nf," ",
						" and fat_nf_mestre.tip_nota_fiscal       = ""fatprdsv"" ",
						" and fat_nf_mestre.sit_nota_fiscal       = ""n"" ",
						" and fat_nf_transf_pat.empresa           = fat_nf_mestre.empresa ",
						" and fat_nf_transf_pat.trans_nota_fiscal = fat_nf_mestre.trans_nota_fiscal ",
						" and fat_nf_transf_pat.empresa_destino   = """, p_cod_empresa, """ ",
						" and fat_nf_transf_pat.aviso_recebto     = ",p_dados_tela.num_aviso_rec

						whenever error continue
						prepare var_query1 from sql_stmt
						whenever error stop
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("prepare sql","var_query1")
							let p_houve_erro = true
						end if

						whenever error continue
						declare cl_fat_transf cursor for var_query
						whenever error stop
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("declare cursor","cl_fat_transf")
							let p_houve_erro = true
						end if

						whenever error continue
						foreach cl_fat_transf into lr_transf_pat.empresa_destino,
						lr_transf_pat.inventario_destino,
						lr_transf_pat.aviso_recebto,
						lr_transf_pat.seq_aviso_recebto,
						lr_transf_pat.dat_entrada,
						lr_transf_pat.trans_nota_fiscal,
						lr_transf_pat.inventario_origem,
						lr_transf_pat.num_parcela_orig,
						lr_transf_pat.seq_item_nf
						whenever error stop
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("foreach","cl_fat_transf")
							let p_houve_erro = true
							exit foreach
						end if

						whenever error continue
						update fat_nf_transf_pat
						set empresa_destino    = null,
						inventario_destino = null,
						aviso_recebto      = null,
						seq_item_ar        = null,
						dat_ent_ar         = null
						where empresa_origem     = p_cod_emp_transf
						and inventario_origem  = lr_transf_pat.inventario_origem
						and trans_nota_fiscal  = lr_transf_pat.trans_nota_fiscal
						and seq_item_nf        = lr_transf_pat.seq_item_nf
						whenever error stop
						if sqlca.sqlcode <> 0 then
							let p_houve_erro = true
							call log003_err_sql("atualizacao","fat_nf_transf_pat")
							exit foreach
						end if

						if not p_houve_erro then
							whenever error continue
							declare cq_parcelas_inv cursor for
							select parametro_val
							from sup_par_ar
							where empresa           = p_cod_empresa
							and aviso_recebto     = p_dados_tela.num_aviso_rec
							and seq_aviso_recebto = 0
							and trim(parametro[1,15]) = trim(lr_transf_pat.inventario_destino)
							whenever error stop
							if sqlca.sqlcode <> 0 then
								call log003_err_sql("declare cursor","cq_parcelas_inv")
								let p_houve_erro = true
								exit foreach
							end if

							let lr_transf_pat.num_parcela = -1

							whenever error continue
							foreach cq_parcelas_inv into lr_transf_pat.num_parcela
							if sqlca.sqlcode <> 0 then
								call log003_err_sql("foreach cursor","cq_parcelas_inv")
								let p_houve_erro = true
								exit foreach
							end if

							whenever error continue
							delete from patrval
							where cod_empresa       = p_cod_empresa
							and cod_empresa_estab = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							and num_parcela       = lr_transf_pat.num_parcela
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","patrval")
								exit foreach
							end if
							whenever error continue
							delete from pat_val_compl
							where empresa    = p_cod_empresa
							and emp_estab  = p_cod_empresa
							and inventario = lr_transf_pat.inventario_destino
							and parcela    = lr_transf_pat.num_parcela
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_val_compl")
								exit foreach
							end if
							if log0150_verifica_se_tabela_existe("pat_val_residual") then
								whenever error continue
								delete from pat_val_residual
								where empresa    = p_cod_empresa
								and emp_estab  = p_cod_empresa
								and inventario = lr_transf_pat.inventario_destino
								and parcela    = lr_transf_pat.num_parcela
								whenever error stop
								if sqlca.sqlcode <> 0 then
									let p_houve_erro = true
									call log003_err_sql("exclusao","pat_val_residual")
									exit foreach
								end if
							end if
							whenever error continue
							delete from patrparc
							where cod_empresa       = p_cod_empresa
							and cod_empresa_estab = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							and num_parcela       = lr_transf_pat.num_parcela
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","patrparc")
								exit foreach
							end if
							whenever error continue
							delete from patrparc_desc
							where cod_empresa       = p_cod_empresa
							and cod_empresa_estab = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							and num_parcela       = lr_transf_pat.num_parcela
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","patrparc")
								exit foreach
							end if
							#--# tdkzon #--# inicio
							whenever error continue
							delete from pat_piscofin_inv
							where empresa            = p_cod_empresa
							and empresa_estabel    = p_cod_empresa
							and inventario         = lr_transf_pat.inventario_destino
							and parcela_inventario = lr_transf_pat.num_parcela
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_piscofin_inv")
								exit foreach
							end if
							whenever error continue
							delete from pat_pis_cofins_val
							where empresa            = p_cod_empresa
							and empresa_estabel    = p_cod_empresa
							and inventario         = lr_transf_pat.inventario_destino
							and parcela_inventario = lr_transf_pat.num_parcela
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_pis_cofins_val")
								exit foreach
							end if
							whenever error continue
							delete from pat_cre_pis_cofins
							where empresa            = p_cod_empresa
							and empresa_estabel    = p_cod_empresa
							and inventario         = lr_transf_pat.inventario_destino
							and parcela_inventario = lr_transf_pat.num_parcela
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_cre_pis_cofins")
								exit foreach
							end if
							#--# tdkzon #--# fim
							if log0150_verifica_se_tabela_existe("pat_dad_compl_ent") then
								whenever error continue
								delete from pat_dad_compl_ent
								where empresa            = p_cod_empresa
								and emp_estab          = p_cod_empresa
								and inventario         = lr_transf_pat.inventario_destino
								and parcela_inventario = lr_transf_pat.num_parcela
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("delete","pat_dad_compl_ent")
									let p_houve_erro = true
									exit foreach
								end if
							end if
							if log0150_verifica_se_tabela_existe("hist_alteracao") then
								whenever error continue
								delete from hist_alteracao
								where cod_empresa        = p_cod_emp_transf
								and cod_empresa_estab  = p_cod_emp_transf
								and num_invent         = lr_transf_pat.inventario_destino
								and num_parcela        = lr_transf_pat.num_parcela
								and tipo_registro      = '1'
								and mes_historico      = m_mes_sistema
								and ano_historico      = m_ano_sistema
								and cod_campo          = '4'
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("delete","hist_alteracao")
									let p_houve_erro = true
									exit foreach
								end if

								whenever error continue
								delete from hist_alteracao
								where cod_empresa        = p_cod_emp_transf
								and cod_empresa_estab  = p_cod_emp_transf
								and num_invent         = lr_transf_pat.inventario_origem
								and num_parcela        = lr_transf_pat.num_parcela_orig
								and tipo_registro      = '1'
								and mes_historico      = m_mes_sistema
								and ano_historico      = m_ano_sistema
								and cod_campo          = '4'
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("(3)delete","hist_alteracao")
									let p_houve_erro = true
									exit foreach
								end if
							end if

							whenever error continue
							delete from pat_transf_emp
							where cod_emp_orig      = p_cod_emp_transf
							and cod_emp_dest      = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							and num_parcela       = lr_transf_pat.num_parcela
							and month(dat_transf) = m_mes_sistema
							and year(dat_transf)  = m_ano_sistema
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_transf_emp")
								exit foreach
							end if
						end foreach
						free cq_parcelas_inv
						whenever error stop

						if p_houve_erro then
							exit foreach
						end if

						if lr_transf_pat.num_parcela = -1 then
							whenever error continue
							delete from patrval
							where cod_empresa       = p_cod_empresa
							and cod_empresa_estab = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","patrval")
								exit foreach
							end if

							whenever error continue
							delete from pat_val_compl
							where empresa    = p_cod_empresa
							and emp_estab  = p_cod_empresa
							and inventario = lr_transf_pat.inventario_destino
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_val_compl")
								exit foreach
							end if

							if log0150_verifica_se_tabela_existe("pat_val_residual") then
								whenever error continue
								delete from pat_val_residual
								where empresa    = p_cod_empresa
								and emp_estab  = p_cod_empresa
								and inventario = lr_transf_pat.inventario_destino
								whenever error stop
								if sqlca.sqlcode <> 0 then
									let p_houve_erro = true
									call log003_err_sql("exclusao","pat_val_residual")
									exit foreach
								end if
							end if

							whenever error continue
							delete from patrparc
							where cod_empresa       = p_cod_empresa
							and cod_empresa_estab = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","patrparc")
								exit foreach
							end if
							whenever error continue
							delete from patrparc_desc
							where cod_empresa       = p_cod_empresa
							and cod_empresa_estab = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","patrparc")
								exit foreach
							end if
							#--# tdkzon #--# inicio
							whenever error continue
							delete from pat_piscofin_inv
							where empresa            = p_cod_empresa
							and empresa_estabel    = p_cod_empresa
							and inventario         = lr_transf_pat.inventario_destino
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_piscofin_inv")
								exit foreach
							end if
							whenever error continue
							delete from pat_pis_cofins_val
							where empresa            = p_cod_empresa
							and empresa_estabel    = p_cod_empresa
							and inventario         = lr_transf_pat.inventario_destino
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_pis_cofins_val")
								exit foreach
							end if
							whenever error continue
							delete from pat_cre_pis_cofins
							where empresa            = p_cod_empresa
							and empresa_estabel    = p_cod_empresa
							and inventario         = lr_transf_pat.inventario_destino
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_cre_pis_cofins")
								exit foreach
							end if
							#--# tdkzon #--# fim
							if log0150_verifica_se_tabela_existe("pat_dad_compl_ent") then
								whenever error continue
								delete from pat_dad_compl_ent
								where empresa            = p_cod_empresa
								and emp_estab          = p_cod_empresa
								and inventario         = lr_transf_pat.inventario_destino
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("(2)delete","pat_dad_compl_ent")
									let p_houve_erro = true
									exit foreach
								end if
							end if
							if log0150_verifica_se_tabela_existe("hist_alteracao") then
								whenever error continue
								delete from hist_alteracao
								where cod_empresa        = p_cod_emp_transf
								and cod_empresa_estab  = p_cod_emp_transf
								and num_invent         = lr_transf_pat.inventario_destino
								and tipo_registro      = '1'
								and mes_historico      = m_mes_sistema
								and ano_historico      = m_ano_sistema
								and cod_campo          = '4'
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("(2)delete","hist_alteracao")
									let p_houve_erro = true
									exit foreach
								end if
								whenever error continue
								delete from hist_alteracao
								where cod_empresa        = p_cod_emp_transf
								and cod_empresa_estab  = p_cod_emp_transf
								and num_invent         = lr_transf_pat.inventario_origem
								and tipo_registro      = '1'
								and mes_historico      = m_mes_sistema
								and ano_historico      = m_ano_sistema
								and cod_campo          = '4'
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("(4)delete","hist_alteracao")
									let p_houve_erro = true
									exit foreach
								end if
							end if

							whenever error continue
							delete from pat_transf_emp
							where cod_emp_orig      = p_cod_emp_transf
							and cod_emp_dest      = p_cod_empresa
							and num_invent        = lr_transf_pat.inventario_destino
							and num_parcela       = lr_transf_pat.num_parcela
							and month(dat_transf) = m_mes_sistema
							and year(dat_transf)  = m_ano_sistema
							whenever error stop
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
								call log003_err_sql("exclusao","pat_transf_emp")
								exit foreach
							end if
						end if
					end if
					whenever error continue
				end foreach
				free cl_fat_transf
				whenever error stop

				whenever error continue
				insert into nf_sup_erro (empresa,
				num_aviso_rec,
				num_seq,
				des_pendencia_item,
				ies_origem_erro,
				ies_erro_grave)
				values
				(p_dados_tela.cod_empresa,
				p_dados_tela.num_aviso_rec,
				ma_inf_ar[m_count_seq].num_seq,
				" item da nf de origem pendente de recebimento ",
				"1","s")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("inclus�o","nf_sup_erro")
				end if

			end if
		end if
		whenever error stop
		### fim os 154880 ###

		if p_ies_canc_nc = true
			then call sup376_cancela_nota_credito()
			### trybs0
			if p_houve_erro = true then
				sleep 5
				message "favor confirmar se cancelou nota de cr�dito." attribute(reverse)
			end if
		end if
		initialize p_dados_tela.*, p_cod_ret_imp to null
		initialize p_formonly.* to null
		#clear form
	else
		call log003_err_sql("exclusao","nf_sup")
		let p_houve_erro = true
	end if

	if p_houve_erro = false and p_aviso_rec.num_oc > 0 then
		#fluxo de caixa

		#atualizar saldo da ordem de compra no
		#fluxo de caixa ap�s exclus�o do ar
		if not fcl1150_integra_oc_fcx(p_aviso_rec.cod_empresa,
			p_aviso_rec.num_oc,"in") then
			let p_houve_erro = true
		end if
	end if

	if p_houve_erro = false   then

		if  m_recalcula_impostos_nf_imp = "s"
			and p_dados_tela.cod_operacao[1,1] = "7"  then
			call sup3760_recalcula_impostos_nf_imp()
		end if

		whenever error continue
		call log085_transacao("commit")
		whenever error stop
		if sqlca.sqlcode = 0 then
			message " aviso de recebimento excluido com sucesso. " attribute(reverse)
		else
			initialize p_msg to null
			let p_msg = "erro na efetiva��o dos dados. sqlca.sqlcode = ", sqlca.sqlcode clipped
			call log0030_mensagem(p_msg,"stop")
			call log085_transacao("rollback") #os596059
			return
		end if
	else
		call log085_transacao("rollback")
	end if
	close cm_aviso_rec #745465#
	free cm_aviso_rec  #745465#
end if
end if
else
	if sup376_cursor_for_update() = true then
		if p_aviso_rec.ies_receb_fiscal = "s" then
			if sup376_deleta_inf_fiscais(p_num_seq) = false then
				call log085_transacao("rollback")
				return
			end if
		end if
		if p_houve_erro = false   then

			if  m_recalcula_impostos_nf_imp = "s"
				and p_dados_tela.cod_operacao[1,1] = "7"  then
				call sup3760_recalcula_impostos_nf_imp()
			end if

			whenever error continue
			call log085_transacao("commit")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				initialize p_msg to null
				let p_msg = "erro na efetiva��o dos dados. sqlca.sqlcode = ", sqlca.sqlcode clipped
				call log0030_mensagem(p_msg,"stop")
				call log085_transacao("rollback") #os596059
				return
			end if
		else
			call log085_transacao("rollback")
		end if
		close cm_aviso_rec #745465#
		free cm_aviso_rec  #745465#
	end if
end if

if log_existe_epl('sup3760y_after_process_commit_exclusao_aviso_rec') then
	call log_setvar('cod_empresa', p_aviso_rec.cod_empresa)
	#epl codigo da empresa
	#epl tipo: empresa.cod_empresa

	call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('retorno_epl', true)
	#epl retorno da epl
	#epl tipo: smallint

	call sup3760y_after_process_commit_exclusao_aviso_rec()

	let l_retorno_epl  = log_getvar('retorno_epl')

	if not l_retorno_epl then
		let p_houve_erro = true
	end if
end if
end if
end if
end if

end function

#-------------------------------------------#
function sup376_verifica_reten_inss_auton()  #os 237288
#-------------------------------------------#
	whenever error continue
	select empresa
	from cap_ret_inss_auton
	where cap_ret_inss_auton.empresa           = p_cod_empresa
	and cap_ret_inss_auton.ad_nf_origem      = p_dados_tela.num_nf
	and cap_ret_inss_auton.serie_nota_fiscal = p_dados_tela.ser_nf
	and cap_ret_inss_auton.subserie_nf       = p_dados_tela.ssr_nf
	and cap_ret_inss_auton.espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and cap_ret_inss_auton.fornecedor        = p_dados_tela.cod_fornecedor
	and cap_ret_inss_auton.ad_pagto_inss     is not null
	whenever error stop
	if sqlca.sqlcode = 0  then
		return true
	else
		return false
	end if

end function

#-------------------------------------#
function sup376_cancela_nota_fiscal()
#-------------------------------------#
	define p_achou_seq           smallint,
	p_nr_nf               char(7),
	l_cont                smallint,
	l_ies_nf_com_erro     like nf_sup.ies_nf_com_erro,
	l_num_ar_imp          like aviso_rec_proc_imp.num_aviso_rec,
	l_num_ar_proc         like processo_imp.num_aviso_rec,
	l_ies_situa_import    like nf_sup.ies_situa_import,
	lr_ar_x_nf_pend       record like ar_x_nf_pend.*,
	l_prog_contagem       like par_sup_pad.par_txt,
	l_count               smallint,
	l_qtd_erros           smallint,
	l_usuario_aceite      like nf_sup.nom_resp_aceite_er,
	l_des_pendencia_item  like nf_sup_erro.des_pendencia_item,
	l_qtd_fat_item_fci    like sup_item_fci.qtd_fat_item_fci, ###tfgj52
	l_dat_entrada_nf      date,
	l_status              smallint, ### tey585
	l_msg                 char(100), ### tey585
	l_cod_fornecedor      like item_de_terc.cod_fornecedor,
	l_num_seq             like aviso_rec.num_seq

	if log_existe_epl('sup3760y_before_process_cancela_nota_fiscal') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		if not sup3760y_before_process_cancela_nota_fiscal() then
			return
		end if
	end if

	if sup3762_verifica_item_dev_terc(m_contr_terc_no_dep) then
		#chamada da mensagem retirada pois a funcao do sup3762 ja apresenta mensagem (os522401)
		#call log0030_mensagem("nota tipo a/b relacionada com nota tipo a/b(sup2300), excluir relacionamento","exclamation")
		return
	end if

	if find4glfunction('obf50210_verifica_relac_manifesto') then
		if obf50210_verifica_relac_manifesto(p_cod_empresa, p_dados_tela.num_aviso_rec, p_dados_tela.ies_nf_aguard_nfe, "c") then
			return
		end if
	end if

	error "cancelamento da nota fiscal !!! "

	let m_nfr_import = false
	if sup3760_nfr_consignatario("exclusao") then
		let m_nfr_import = true
	end if

	if p_dados_tela.cod_operacao[1] = "7" or m_nfr_import then
		let m_num_processo = sup3760_busca_numero_processo_importacao()
		if m_num_processo is null then
			let m_num_processo = m_inicio_provisao
		end if

		if (m_ies_utiliz_provisao = "n" or
			(m_ies_utiliz_provisao = "s" and
			m_num_processo < m_inicio_provisao) or
			(m_ies_utiliz_provisao = "s" and m_utiliz_nfm_import = "s" and
			m_num_processo >= m_inicio_provisao)) then
			let l_num_ar_proc = sup3760_leitura_processo_imp(m_num_processo,"ar")
			if l_num_ar_proc is not null then
				initialize l_ies_situa_import to null
				select ies_situa_import
				into l_ies_situa_import
				from nf_sup
				where cod_empresa   = p_cod_empresa
				and num_aviso_rec = l_num_ar_proc
				whenever error stop
				if l_ies_situa_import is not null and
					l_ies_situa_import = "e" then

					if not sup3760_verifica_nfp_incl_apos_encerr(p_cod_empresa,
						p_dados_tela.num_aviso_rec) then
						error " processo de importacao ja encerrado "
						return
					end if

				end if
			end if
		end if
	end if

	declare cq_num_seqs4 cursor for
	select num_seq, num_pedido, num_oc
	from aviso_rec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_pedido    > 0
	order by num_oc

	let m_count_seq = 1
	initialize ma_inf_ar to null
	if m_count_seq >= arraylength(ma_inf_ar) then
		call arrayadditem(ma_inf_ar,1)
	end if
	foreach cq_num_seqs4 into ma_inf_ar[m_count_seq].num_seq,
	ma_inf_ar[m_count_seq].num_pedido,
	ma_inf_ar[m_count_seq].num_oc
	let m_count_seq = m_count_seq + 1
	if m_count_seq >= arraylength(ma_inf_ar) then
		call arrayadditem(ma_inf_ar,1)
	end if
end foreach
let m_count_seq = m_count_seq - 1

if p_dados_tela.ies_especie_nf = "nfm" then
	whenever error continue
	let l_cont = 0
	select count(*)
	into l_cont
	from ar_x_nf_pend
	where cod_empresa    = p_cod_empresa
	and num_nf         = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop
	if l_cont > 0 then
		error " existe nfp relacionada com esta nfm "
		return
	end if
end if

if log004_confirm(21,44) then
	let p_houve_erro = false
	if sup3762_verifica_impostos_ja_pagos() then
		let p_houve_erro = true
		return
	end if

	whenever error continue
	declare cq_canc_nf  cursor with hold for
	select * from aviso_rec
	where cod_empresa   = p_dados_tela.cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop

	whenever error continue
	foreach cq_canc_nf into p_aviso_rec.*
	if not sup3762_verifica_devol_nf_consig(p_dados_tela.ies_especie_nf,
		p_dados_tela.ies_nf_aguard_nfe,
		p_dados_tela.cod_empresa,
		p_dados_tela.num_nf,
		p_dados_tela.cod_fornecedor,
		p_aviso_rec.cod_item) then #-- os 495219
		return
	end if
	let p_num_seq    = p_aviso_rec.num_seq
	if find4glfunction('supr_imposto_substituto_transf_saldo') then
		call supr_imposto_substituto_set_exclui_dev(true)
		if supr_imposto_substituto_transf_saldo(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq, true) = false then
			call log0030_mensagem("n�o existe nota para transfer�ncia do imposto substituto.","exclamation")
			let p_houve_erro = true
			return
		end if
		call supr_imposto_substituto_set_exclui_dev(false)
	end if

	if sup376_verifica_cond_delecao("cancela") = true then
		let l_count = 0
		whenever error continue
		select count(*)
		into l_count
		from sup_frete_x_nf_entrada
		where sup_frete_x_nf_entrada.empresa       = p_cod_empresa
		and sup_frete_x_nf_entrada.aviso_recebto = p_nf_sup.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("select","sup_frete_x_nf_entrada")
		end if

		if p_nf_sup.num_conhec > 0
			or l_count > 0 then
			call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
			let p_houve_erro = true
			return
		else
			if p_dados_tela.ies_nf_aguard_nfe <> "7" then
				#if (p_aviso_rec.ies_item_estoq = "n" and     *** rafael - os314473
				#  (p_par_sup_compl.ies_conta_ok_n_est = "2" or
				# (p_par_sup_compl.ies_conta_ok_n_est = "3" and
				# p_dados_tela.ies_especie_nf = "nfs"))) or
				#p_aviso_rec.ies_item_estoq = "s" then
				if sup376_possui_avf_insp_ar() = false then
					if p_aviso_rec.ies_liberacao_insp = "s" and
						p_aviso_rec.ies_situa_ar = "e" then
						### os237529 ###
						initialize l_prog_contagem to null
						select par_txt
						into l_prog_contagem
						from par_sup_pad
						where par_sup_pad.cod_empresa   = p_cod_empresa
						and par_sup_pad.cod_parametro = "prog_contagem"
						if sqlca.sqlcode <> 0 or
							l_prog_contagem is null then
							let l_prog_contagem = " "
						end if

						if l_prog_contagem = "sup0799" then
							call log0030_mensagem(" exclua primeiramente resultado de contagem - sup0799 ","exclamation")
							let p_houve_erro = true
							return
						end if

						error " aguarde ... excluindo inspecao ... "
						call log_setvar("nom_usuario",p_user)

						let comando3 = p_cod_empresa, " ",
						p_aviso_rec.num_aviso_rec,  " ",
						p_num_seq, " ",
						"exclusao"," ",
						"sup3760"
						call log1200_executa_programa("sup0570",comando3)

						let p_ies_situa_ar = null
						call sup376_busca_aviso_rec(p_cod_empresa, p_aviso_rec.num_aviso_rec, p_num_seq)
						let p_ies_situa_ar = p_aviso_rec.ies_situa_ar

						if sup1481_nfc_compl_imposto(p_nf_sup.ies_especie_nf,
							p_cod_empresa,
							p_aviso_rec.num_aviso_rec) = false then
							if p_aviso_rec.ies_item_estoq = "s" then
								call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
							else
								call sup0063_verifica_controles(11, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
							end if
						end if

						if p_ies_custo_grade = "s" and
							m_controles <> " "     then
							## quando a empresa utiliza custo por grade, a contagem
							## eh excluida ja quando faz a exclusao da inspecao.
							if p_ies_situa_ar <> "c" then
								call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
								let p_houve_erro = true
								return
							end if
						else
							if p_ies_situa_ar <> "i" then
								call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
								let p_houve_erro = true
								return
							end if
						end if
						error " exclusao de inspecao realizada com sucesso. "
					end if
				else
					if p_aviso_rec.ies_item_estoq = "s" then
						if avf1003_exclusao_qualidade(p_aviso_rec.num_aviso_rec,
							p_num_seq) = false then
							let p_houve_erro = true
							call log0030_mensagem(" problemas na exclusao da inspecao (avf). ","exclamation")
							return
						end if
					end if
				end if

				#call sup376_verifica_cont_insp_automat(p_aviso_rec.cod_item, m_cont_insp_especial)
				#     returning p_ies_item_cont_aut, p_ies_item_insp_aut
				#if p_ies_item_insp_aut = "s" or
				#  (p_ies_item_insp_aut = "n" and
				#   p_aviso_rec.ies_situa_ar <> "e") then

				if p_aviso_rec.ies_liberacao_cont = "s" then
					error " aguarde ... excluindo contagem ... "

					call sup3760_atualiza_nota(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
					p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
					p_dados_tela.num_aviso_rec, p_dados_tela.cnd_pgto_nf)

					let comando3 = p_cod_empresa, " ",
					p_dados_tela.num_aviso_rec," ",
					p_num_seq, " ",
					3760," ",
					"s"," ","exclusao"
					call log1200_executa_programa("sup0530",comando3)

					let p_ies_situa_ar = null
					call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq)
					let p_ies_situa_ar = p_aviso_rec.ies_situa_ar
					if p_ies_situa_ar <> "c" then
						call log0030_mensagem(" problemas na exclusao da contagem","exclamation")
						return
					end if
					error " exclusao de contagem realizada com sucesso. "
				end if
				#end if
			end if

			whenever error continue
			let l_cont = 0
			select count(*)
			into l_cont
			from deb_fornec
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			and num_seq       = p_num_seq
			whenever error stop
			if l_cont = 0 then
			else call log0030_mensagem(" existe deb_fornec - excluir registro no sup5960","exclamation")
				sleep 2
				let p_houve_erro = true
				return
			end if

			whenever error continue
			let l_cont = 0
			select count(*)
			into l_cont
			from dev_fornec
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			and num_seq       = p_num_seq
			whenever error stop
			if l_cont = 0 then
			else call log0030_mensagem(" existe devolu��o a fornecedor - excluir registro no sup0460","exclamation")
				sleep 2
				let p_houve_erro = true
				return
			end if
############ os 227034
			let p_nr_nf = p_dados_tela.num_nf
			call sup376_deleta_inss_auton(p_nr_nf,p_num_seq)
		end if
	else let p_houve_erro = true
	end if
end foreach
whenever error stop

whenever error continue
call log085_transacao("begin")
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("begin","transacao")
return
end if

# inicio os 532222
if find4glfunction('supy75_verifica_cliente_859') then
	if supy75_verifica_cliente_859() then
		if find4glfunction('supy75_atualiza_wbt_nota_fiscal') then
			call supy75_atualiza_wbt_nota_fiscal(4,2,"",p_cod_empresa,p_dados_tela.num_aviso_rec)
		end if
	end if
end if
# fim os 532222

## os 518223 ##
if m_exst_rel_fre_indt then
	if find4glfunction('supy61_gera_mvto_comodato') then
		if not supy61_gera_mvto_comodato(p_dados_tela.cod_empresa,
			p_dados_tela.num_aviso_rec,
			"c") then
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback","transacao")
			end if
			return
		end if
	end if
end if
## os 518223 ##

if p_houve_erro = false then
	if m_cred_st_fat = "s"
		or m_cred_st_fat = "e" then
		if not sup1466_valida_saldo_com_revd_st(p_cod_empresa,p_dados_tela.num_aviso_rec,0,"cancela") then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
	end if

	if (p_dados_tela.ies_especie_nf = "nfr"  or
		p_dados_tela.ies_especie_nf = "nfe") and ### os 511148
		p_dados_tela.ies_nf_aguard_nfe = "x"  then
		call sup3760_exclui_nf_consig("nota",p_dados_tela.num_aviso_rec,0)
		if p_houve_erro = true then
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
	else
		if sup376_elimina_item_ret_terc(p_dados_tela.num_aviso_rec,0,"2") = false then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
	end if

	call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor

	if sup3760_exclui_item_de_terc(l_cod_fornecedor, 0) = false then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if

	if not fcl1150_integra_ar_fcx(p_cod_empresa,
		p_dados_tela.num_aviso_rec,"ex") then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if

	if not sup3760_cancela_nf_venda_ponto_a_ponto() or p_houve_erro = true then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if

	##excluir o relacionamento dos fretes/con icms st com a nfe,
	##para que se possa reprocessar a gera��o autom�tica da nfe (sup1265).
	if p_dados_tela.ies_especie_nf = "nfe" then ##os 337055
		whenever error continue
		delete from sup_par_ar
		where empresa       = p_cod_empresa
		and parametro     = "nfe_icms_st"
		and parametro_val = p_dados_tela.num_aviso_rec
		whenever error stop

		whenever error continue
		delete from sup_par_frete
		where empresa       = p_cod_empresa
		and parametro     = "nfe_icms_st"
		and parametro_val = p_dados_tela.num_aviso_rec
		whenever error stop
	end if

	#--inicio--vanderlei os 434072 #
	call sup3760_exclui_sup_par_ar(p_cod_empresa, p_dados_tela.num_aviso_rec, 'val_icms_devido')
	call sup3760_exclui_sup_par_ar(p_cod_empresa, p_dados_tela.num_aviso_rec, 'debito_icms_48meses')
	call sup3760_exclui_sup_par_ar(p_cod_empresa, p_dados_tela.num_aviso_rec, 'cred_pres_icms_it')
	call sup3760_exclui_sup_par_ar(p_cod_empresa, p_dados_tela.num_aviso_rec, 'cred_presum_limite')
	call sup3760_exclui_sup_par_ar(p_cod_empresa, p_dados_tela.num_aviso_rec, 'val_icms_recolher')
	#---fim----vanderlei os 434072 #

	whenever error continue
	delete from reten_iss
	where cod_empresa    = p_cod_empresa
	and num_ad_nf_orig = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and ies_especie_nf = p_dados_tela.ies_especie_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop

	whenever error continue
	delete from reten_inss
	where cod_empresa    = p_cod_empresa
	and num_ad_nf_orig = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and ies_especie_nf = p_dados_tela.ies_especie_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop

	if log0150_verifica_se_tabela_existe("cap_reten_inss_compl") then
		whenever error continue
		delete from cap_reten_inss_compl
		where cap_reten_inss_compl.empresa        = p_cod_empresa
		and cap_reten_inss_compl.num_ad_nf_orig = p_dados_tela.num_nf
		and cap_reten_inss_compl.ser_nf         = p_dados_tela.ser_nf
		and cap_reten_inss_compl.ssr_nf         = p_dados_tela.ssr_nf
		and cap_reten_inss_compl.especie_nf     = p_dados_tela.ies_especie_nf
		and cap_reten_inss_compl.fornecedor     = p_dados_tela.cod_fornecedor
		whenever error stop
	end if


	#eduardo o.s.335020
	whenever error continue
	delete from cap_sest_senat
	where empresa           = p_cod_empresa
	and ad_nf_origem      = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

### tey585 - imposto cide (contribui��o de interven��o no dom�nio econ�mico)
	if m_cap_recolhe_cide = true then
		if find4glfunction('capr40_exclui_recolh_cide') then
			call capr40_exclui_recolh_cide(p_cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			true) returning l_status, l_msg
			if l_status = false then
				call log0030_mensagem(l_msg,"exclamation")
				let p_houve_erro = true
			end if
		end if
	end if

	let l_qtd_fat_item_fci = 0

	whenever error continue
	select sum(qtd_fat_item_fci)
	into l_qtd_fat_item_fci
	from sup_item_fci
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	whenever error stop
	if l_qtd_fat_item_fci <> 0 then
		let l_msg = 'esta nota possui fci relacionado com nota fiscal de saida, n�o pode ser excluida/cancelada.'
		call log0030_mensagem(l_msg,"exclamation")
		let p_houve_erro = true
	else
		whenever error continue
		delete from sup_item_fci
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","sup_item_fci(2)")
			let p_houve_erro = true
		end if
	end if

	delete from cap_ret_inss_compl
	where empresa           = p_cod_empresa
	and ad_nf_origem      = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor


	whenever error continue
	delete
	from sup_ar_imp_cana
	where empresa         = p_cod_empresa
	and aviso_recebto   = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","sup_ar_imp_cana")
		return
	end if

	delete from cap_ret_proalminas
	where empresa           = p_cod_empresa
	and ad_nf_origem      = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

	delete from cap_iss_compl
	where empresa           = p_cod_empresa
	and ad_nota_fiscal    = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

	delete from cap_iss_eletronico
	where empresa           = p_cod_empresa
	and ad_nota_fiscal    = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	whenever error stop
	#eduardo o.s.335020

	if m_utiliza_dds_fortaleza = "s" then
		whenever error continue
		delete from cap_sistema_dds
		where empresa           = p_cod_empresa
		and ad_nota_fiscal    = p_dados_tela.num_nf
		and serie_nota_fiscal = p_dados_tela.ser_nf
		and subserie_nf       = p_dados_tela.ssr_nf
		and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
		and fornecedor        = p_dados_tela.cod_fornecedor
		whenever error stop
	end if

	whenever error continue
	delete from sup_nf_devol_cli
	where empresa       = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_nf_devol_cli")
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if

	if find4glfunction('supy121_excluir_mov_comissoes_dev_clie') then
		if not supy121_excluir_mov_comissoes_dev_clie(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			"cancelamento") then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
	end if

	whenever error continue
	delete from sup_trib_benef_nf_devol_cli
	where empresa       = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("(2)delete","sup_trib_benef_nf_devol_cli")
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("rollback transaction","exclusao item")
		end if
		return
	end if

	whenever error continue
	delete from dev_mestre
	where cod_empresa = p_cod_empresa
	and num_nff     = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","dev_mestre")
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if

	if m_exst_rel_fre_indt then
		whenever error continue
		delete from sup_relc_ftre_indt
		where sup_relc_ftre_indt.empresa   = p_cod_empresa
		and sup_relc_ftre_indt.aviso_recebto = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("delete","sup_relc_ftre_indt")
			let p_houve_erro = true
			call log085_transacao("rollback")
			return
		end if
	end if

	##se for integra��o on-line poder� existir lan�amentos cont�beis para o documento,
	##j� que o indicador ies_incl_contab s� passar� para "s" quando for efetuado
	##a integra��o cont�bil (gera��o do lote ou arquivo texto).
	if not supr6_integracao_batch(p_cod_empresa) and
		supr6_data_posterior_data_corte_logix_10(p_cod_empresa,
		p_dados_tela.dat_entrada_nf) then

		if not supr6_validacao_data_inicial_e_final_processamento(p_cod_empresa,
			p_dados_tela.dat_entrada_nf,
			p_dados_tela.dat_entrada_nf,
			"manual",
			false) then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback transaction","cancela nf")
			end if
			return
		else
			if m_dat_entrada_ant is null then
				let l_dat_entrada_nf = p_dados_tela.dat_entrada_nf
			else
				let l_dat_entrada_nf = m_dat_entrada_ant
			end if

			if not supr6_exclui_lancamento_contabil_documento("manual",
				p_cod_empresa,
				p_dados_tela.num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.ies_especie_nf,
				p_dados_tela.cod_fornecedor,
				p_dados_tela.num_aviso_rec,
				l_dat_entrada_nf,
				0,false) then
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("rollback transaction","cancela nf")
				end if
				return
			end if
		end if
	end if

	whenever error continue
	delete from dev_item
	where cod_empresa = p_cod_empresa
	and num_nff     = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","dev_item")
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if

	if m_exst_carcoraut then # 523038
		whenever error continue
		delete from sup_cart_corr_aut
		where empresa       = p_cod_empresa
		and aviso_recebto = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("delete","sup_cart_corr_aut(4)")
		end if
	end if

	whenever error continue
	delete from reten_inss_rur
	where cod_empresa    = p_cod_empresa
	and num_ad_nf_orig = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and ies_especie_nf = p_dados_tela.ies_especie_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop

	if p_dados_tela.ies_especie_nf = "nfm" then
		whenever error continue
		delete from nf_pend
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and cod_fornecedor = p_dados_tela.cod_fornecedor
		whenever error stop
	end if
	### os482885 ###
	if not sup1031_grava_audit_ar(p_dados_tela.num_aviso_rec, 0,
		'sup3760', '6') then
		let p_houve_erro = true
		return
	end if
	### os482885 ###
	if p_dados_tela.ies_especie_nf = "nfp" then
		declare cq_ar_x_nf_pend2 cursor for
		select *
		from ar_x_nf_pend
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec

		foreach cq_ar_x_nf_pend2 into lr_ar_x_nf_pend.*
		whenever error continue
		update nf_pend
		set qtd_regularizada = qtd_regularizada -
		lr_ar_x_nf_pend.qtd_regularizada
		where cod_empresa    = lr_ar_x_nf_pend.cod_empresa
		and num_nf         = lr_ar_x_nf_pend.num_nf
		and ser_nf         = lr_ar_x_nf_pend.ser_nf
		and ssr_nf         = lr_ar_x_nf_pend.ssr_nf
		and cod_fornecedor = lr_ar_x_nf_pend.cod_fornecedor
		and cod_item       = lr_ar_x_nf_pend.cod_item
		whenever error stop
	end foreach

	whenever error continue
	delete from ar_x_nf_pend
	where cod_empresa    = p_cod_empresa
	and num_aviso_rec  = p_dados_tela.num_aviso_rec
	whenever error stop
end if

### os 482885 / 511148 ###
let l_ies_nf_com_erro = "n"
whenever error continue
declare cq_erro cursor with hold for
select des_pendencia_item
from nf_sup_erro
where empresa        = p_dados_tela.cod_empresa
and num_aviso_rec  = p_dados_tela.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("declare","cq_erro")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
return
end if

let l_qtd_erros   = 0
whenever error continue
foreach cq_erro into  l_des_pendencia_item
if sqlca.sqlcode <> 0 then
	call log003_err_sql("foreach","cq_erro")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
return
end if

if l_des_pendencia_item = "nota devolucao consig vendas sem nota fatur vendas relac" then
	whenever error continue
	delete from nf_sup_erro
	where empresa            = p_dados_tela.cod_empresa
	and num_aviso_rec      = p_dados_tela.num_aviso_rec
	and des_pendencia_item = "nota devolucao consig vendas sem nota fatur vendas relac"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","nf_sup_erro")
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
else
	let l_qtd_erros = l_qtd_erros + 1
end if

whenever error continue
end foreach
free cq_erro
whenever error stop

if l_qtd_erros >= 1 then
	let l_ies_nf_com_erro = "s"
	let l_usuario_aceite = p_user
else
	let l_ies_nf_com_erro = "n"
	initialize l_usuario_aceite to null
end if

whenever error continue
update nf_sup
set ies_incl_cap     = "s",
ies_incl_contab  = "s"
where cod_empresa    = p_cod_empresa
and num_aviso_rec  = p_dados_tela.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("modificacao","nf_sup")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
return
end if

whenever error continue
delete from sup_nf_origem #tdttl5
where empresa       = p_cod_empresa
and aviso_recebto = p_dados_tela.num_aviso_rec
whenever error stop

whenever error continue
update aviso_rec_compl
set ies_situacao  = "c"
where cod_empresa   = p_dados_tela.cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
whenever error stop
if sqlca.sqlcode = 0 then
	if ((p_dados_tela.cod_operacao[1] = "7" and
		(p_dados_tela.ies_especie_nf = "nfe" or
		p_dados_tela.ies_especie_nf = "nfp" )) or m_nfr_import) and
		((m_ies_utiliz_provisao = "s" and
		m_utiliz_nfm_import = "n" and
		m_num_processo >= m_inicio_provisao) or
		p_nf_sup.ies_situa_import = "r") then
		let m_num_processo = sup3760_busca_numero_processo_importacao()
		if m_num_processo is null then
			let m_num_processo = -1
		end if
		if m_num_processo <> -1 then
			if m_num_processo >= g_proc_ini_os163407 then
				if not imp0101_desfaz_rateio(m_num_processo,p_dados_tela.num_aviso_rec,-1) then
					error "problema ao desfazer o rateio das despesas de importacao"
					sleep 2
					let p_houve_erro = true
					whenever error continue
					call log085_transacao("rollback")
					whenever error stop
					return
				end if
			else
				if not imp0101_desfaz_rateio_ant(m_num_processo,p_dados_tela.num_aviso_rec,-1) then
					error "problema ao desfazer o rateio das despesas de importacao"
					sleep 2
					let p_houve_erro = true
					whenever error continue
					call log085_transacao("rollback")
					whenever error stop
					return
				end if
			end if
		end if
	end if


	if not sup3760_limpa_ar_despesa_compl_imp() then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if

	whenever error continue
	update aviso_rec
	set ies_situa_ar = "e",
	ies_liberacao_cont = "s",
	ies_liberacao_insp = "s"
	where cod_empresa   = p_dados_tela.cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode = 0 then
		if not sup3760_desfaz_relac_desp_proc() then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
		whenever error continue
		delete from aviso_rec_proc_imp
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		whenever error stop

		if (p_dados_tela.cod_operacao[1] = "7" or m_nfr_import) and
			p_dados_tela.ies_especie_nf <> "nfm" and
			(p_par_sup_compl.ies_mod_importacao = "l" or
			p_par_sup_compl.ies_mod_importacao = "s") then
			declare cq_ar_proc_imp2 cursor for
			select num_aviso_rec
			from aviso_rec_proc_imp
			where cod_empresa  = p_dados_tela.cod_empresa
			and num_processo = m_num_processo

			initialize l_num_ar_imp to null
			open cq_ar_proc_imp2
			fetch cq_ar_proc_imp2 into l_num_ar_imp
			close cq_ar_proc_imp2

			if l_num_ar_imp is null then
				whenever error continue
				update processo_imp
				set num_aviso_rec = null,
				ies_situacao  = "4"
				where cod_empresa      = p_dados_tela.cod_empresa
				and num_aviso_rec    is not null
				and num_aviso_rec    = p_dados_tela.num_aviso_rec
				and ies_versao_atual = "s"
				whenever error stop
			else
				let l_num_ar_proc = sup3760_leitura_processo_imp(m_num_processo,"ar")
				if l_num_ar_proc = p_dados_tela.num_aviso_rec then
					whenever error continue
					update processo_imp
					set num_aviso_rec = l_num_ar_imp
					where cod_empresa      = p_dados_tela.cod_empresa
					and num_processo     = m_num_processo
					and ies_versao_atual = "s"
					whenever error stop
				end if
			end if
		else ## sdissm, busca numero do ar do processo para atualiza a nfm
			if p_dados_tela.cod_operacao[1] = "7" then
				if p_dados_tela.ies_especie_nf = 'nfm' and
					(p_par_sup_compl.ies_mod_importacao = "l" or
					p_par_sup_compl.ies_mod_importacao = "s") then
					let m_num_processo = sup3760_busca_numero_proc_imp()
					whenever error continue
					update processo_imp
					set num_aviso_rec = null,
					ies_situacao  = "4"
					where cod_empresa      = p_dados_tela.cod_empresa
					and num_aviso_rec    is not null
					and num_aviso_rec    = p_dados_tela.num_aviso_rec
					and ies_versao_atual = "s"
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("(1)modificacao","processo_imp")
						let p_houve_erro = true
					else
						call imp0024_mov_even(p_cod_empresa,m_num_processo,
						34," ",today)
					end if
				end if
			end if
		end if

		if p_houve_erro = false then
			#fluxo de caixa
			call sup3760_atualizar_ordens_fluxo()
		end if

		#- tfctgn
		if find4glfunction('sup1473_cancela_nota_frete_integr_fiscal') then
			if sup1473_cancela_nota_frete_integr_fiscal(p_dados_tela.cod_empresa,
				p_dados_tela.cod_empresa_estab,
				p_dados_tela.num_aviso_rec,
				p_dados_tela.dat_entrada_nf,
				0, "0", 0, "0", "c", "n")= false then
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				return
			end if
		end if
		#- tfctgn

		if log_existe_epl('sup3760y_before_process_commit_cancela_nota_fiscal') then
			call log_setvar('cod_empresa', p_aviso_rec.cod_empresa)
			#epl codigo da empresa
			#epl tipo: empresa.cod_empresa

			call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
			#epl numero do ar
			#epl tipo: aviso_rec.num_aviso_rec

			call log_setvar('houve_erro', p_houve_erro)
			#epl indicador se houve erro
			#epl tipo: smallint

			call sup3760y_before_process_commit_cancela_nota_fiscal()
			let p_houve_erro = log_getvar('houve_erro')
		end if

		if p_houve_erro = true then
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if

		whenever error continue
		call log085_transacao("commit")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("commit","transacao")
			call log085_transacao("rollback") #os596059
			return
		end if

		message "cancelamento efetuado com sucesso." attribute(reverse)
		if p_ies_canc_nc = true
			then call sup376_cancela_nota_credito()
			### trybs0
			if p_houve_erro = true then
				sleep 5
				message "favor confirmar se cancelou nota de cr�dito." attribute(reverse)
			end if
		end if
		initialize p_dados_tela.*, p_cod_ret_imp to null
		initialize p_formonly.* to null
		clear form
	else
		call log003_err_sql("modificao","aviso_rec_compl")
		error "cancelamento nao efetuado..."
	end if
else
	call log003_err_sql("modificao","aviso_rec_compl")
	error "cancelamento nao efetuado." attribute(reverse)
end if
end if
end if

end function

#----------------------------------------#
function sup376_modificacao_aviso_rec()
#----------------------------------------#
	define p_par_forn        char(01),
	l_val_tot_receb   like aviso_rec.val_liquido_item,
	l_data            like pedido_sup.dat_emis,
	#l_atualiza_gao    smallint,
	l_ies_tip_frete   like modo_embarque.ies_tip_frete,
	l_pergunta        char(01),
	l_compex          smallint,
	l_is_clie_319     smallint,
	l_campo_alt       char(01), ##os 587470
	l_nf_transito_imp smallint,
	l_consistir        smallint,
	l_cnd_pgto_prim_pc like pedido_sup.cnd_pgto,
	l_msg              char(300),
	l_chama_sup1182    smallint,
	l_permite_mod      char(01),
	l_ies_tip_entrada_nf  like cod_fiscal_sup.ies_tip_entrada,
	l_ies_especie_nf      like nf_sup.ies_especie_nf,
	l_cod_fiscal_compl_nf like aviso_rec_compl.cod_fiscal_compl,
	l_status              smallint,
	l_retorno_epl         smallint,
	l_cod_empresa_orig    char(02)

	define l_cod_fornecedor  like nf_sup.cod_fornecedor

	define l_cgc             like empresa.num_cgc,
	l_ins_estadual    like empresa.ins_estadual,
	l_deposit         like wms_item_complemento.item_deposit

	define l_depositante     like ar_depos.cod_depositante,
	l_contrato        like wms_contrato.contrato,
	l_trans_contrato  like wms_contrato.trans,
	l_comando         char(200)

	initialize l_permite_mod to null
	call log2250_busca_parametro(p_cod_empresa, "permite_mod_nfd_com_nf_saida")
returning l_permite_mod, p_status

	if l_permite_mod is null or l_permite_mod = " " then
		let l_permite_mod = 'n'
	end if

	initialize l_cod_fiscal_compl_nf to null
	whenever error continue
	select cod_fiscal_compl
	into l_cod_fiscal_compl_nf
	from aviso_rec_compl
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_nf_sup.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_cod_fiscal_compl_nf = 0
	end if

	call sup0686_retorna_tipo_entrada(p_nf_sup.cod_operacao,
	l_cod_fiscal_compl_nf)
returning l_status, l_ies_tip_entrada_nf

	let l_chama_sup1182 = true
	let l_retorno_epl = false
	if log_existe_epl('sup3760y_before_process_modificacao_aviso_rec') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: nf_sup.num_aviso_rec

		call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
		#epl codigo do fornecedor
		#epl tipo: nf_sup.cod_fornecedor

		call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
		#epl tipo da nota fiscal
		#epl tipo: nf_sup.ies_nf_aguard_nfe

		call log_setvar('retorno_epl', false)

		call sup3760y_before_process_modificacao_aviso_rec()

		let l_retorno_epl  = log_getvar('retorno_epl')
	end if

	if l_retorno_epl = true then
		return
	end if

	if find4glfunction('supy121_valida_alteracao_dev_clie') then
		if not supy121_valida_alteracao_dev_clie(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"modif") then
			return true
		end if
	end if
	let m_nf_eletronica_impr = false  #595717

	if m_utiliza_nf_eletronica = 's' then
		let l_nf_transito_imp = false
		if find4glfunction("supy117_consiste_nota_fiscal_transito") then
			if supy117_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
				p_nf_sup.ies_especie_nf) then
				let l_nf_transito_imp = true
			end if
		end if

		if l_nf_transito_imp = false and
			sup3760_consiste_nota_fiscal_transito(p_nf_sup.ies_nf_aguard_nfe,
			p_nf_sup.cod_operacao) = false then

			call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			"excluir")  returning p_status, m_msg
			if p_status then
				if m_nfe_cce <> true then
					#tezpq1
					if p_nf_sup.ies_especie_nf <> 'nfd' then
						let m_msg = "esta nota fiscal foi enviada para a sefaz e n�o poder� ser modificada."
						call log0030_mensagem(m_msg,"excl")
						return
					else
						if l_permite_mod = "n" then
							let m_msg = "esta nota fiscal foi enviada para a sefaz e n�o poder� ser modificada."
							call log0030_mensagem(m_msg,"excl")
							return
						end if
					end if
				end if
			end if
		else
			call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa,
			p_nf_sup.num_aviso_rec,
			"excluir") returning p_status, m_msg
			if p_status then
				let m_nf_eletronica_impr = true
			end if
		end if
	end if
	#o.s. 564238

	if find4glfunction('obf50210_verifica_relac_manifesto') then
		if obf50210_verifica_relac_manifesto(p_cod_empresa, p_dados_tela.num_aviso_rec, p_dados_tela.ies_nf_aguard_nfe, "m") then
			return
		end if
	end if

	let g_ies_transf_benef = false

	let int_flag = 0
	let p_houve_erro = 0
	for p_ind5 = 1 to arraylength(p_array)
		if p_array_it_prg_entr[p_ind5,1].num_prog_entrega is null then
			exit for
		else
			for p_ind8 = 1 to 50
				if p_array_it_prg_entr[p_ind5, p_ind8].num_prog_entrega is null then
					exit for
				else
					initialize p_array_it_prg_entr[p_ind5,p_ind8].* to null
				end if
			end for
		end if
	end for

	let m_executou_sup3771 = false
	initialize mr_dados_tela_ant.* to null
	if sup376_cursor_for_update() then
		let m_dat_entrada_ant =  p_dados_tela.dat_entrada_nf
		let p_dados_telar.* = p_dados_tela.*
		let p_formonlyr.* = p_formonly.*
		let m_grava_sup0964  = false
		let m_nf_aguard_nfe_ant = p_dados_tela.ies_nf_aguard_nfe
		let m_cod_operacao_ant = p_dados_tela.cod_operacao
		let m_cod_operac_estoq_ant = p_dados_tela.cod_operac_estoq

		let int_flag = false

		if sup3760_entrada_dados("modificacao") then
			##n�o deve colocar log085_transacao antes deste if, pois o sup0047 inicia transa��o
			#534641

			if log_existe_epl('sup3760y_after_process_entrada_dados_modificacao') then
				call log_setvar('cod_empresa', p_cod_empresa)
				#epl codigo da empresa
				#epl tipo: nf_sup.cod_empresa

				call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
				#epl numero do ar
				#epl tipo: nf_sup.num_aviso_rec

				call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
				#epl tipo da nota fiscal
				#epl tipo: nf_sup.ies_nf_aguard_nfe

				call log_setvar('ies_nf_aguard_nfe_ant', p_dados_telar.ies_nf_aguard_nfe)
				#epl tipo da nota fiscal
				#epl tipo: nf_sup.ies_nf_aguard_nfe

				call log_setvar('funcao', "modificacao")
				#epl fun��o sendo executada
				#epl tipo: char(20)

				if not sup3760y_after_process_entrada_dados_modificacao() then
					current window is w_sup37601
					let p_houve_erro = true
					return
				end if
			end if

			if p_dados_tela.ies_especie_nf = "nfr" and
				p_dados_tela.ies_nf_aguard_nfe = "a" then
				call sup3760_informa_nf_cobraca()
				current window is w_sup37601
			end if
			#534641

			if m_executou_sup3771 or sup3760_relaciona_frete_nf(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				m_nf_aguard_nfe_ant,
				p_dados_tela.ies_nf_aguard_nfe) then
				if m_visualizar_notas_em_transito = "s" then
					#--# faz o commit da altera��o para o sup0580/sup9220 permitir fazer o rateio #--#
					#--# atrav�s do supr12 (espindola)                                            #--#
					call log085_transacao("commit")
					call sup376_inclui_frete()
				end if

				#### os 240477 - efetua rateio antes caso empresa trabalhe com custo medio diario
				#### (contagem automatica) para considerar o valor do frete no custeio do material
				if p_par_estoque.ies_custo_medio = "d" then
					call sup0047_rateio_frete()
				end if
				if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
					m_consiste_nf_integr) then

					let l_pergunta = "i"
					if sup3760_nota_integrada_gecex(p_cod_empresa,
						p_dados_tela.num_aviso_rec) then   #os. 419996 - kordsa
						let l_pergunta = "n"
					end if
					call sup0047_rateio_frete()
				end if
			end if

			if p_houve_erro <> 1 then
				message " aguarde ... efetuando modificacao da nota fiscal ... " attribute(reverse)
			end if

			call log085_transacao("begin")

			# inicio os 532222
			if find4glfunction('supy75_verifica_cliente_859') then
				if supy75_verifica_cliente_859() then
					if p_dados_tela.ies_nf_aguard_nfe = "1" then
						if find4glfunction('supy75_atualiza_wbt_nota_fiscal') then
							call supy75_atualiza_wbt_nota_fiscal(5,2,"",p_cod_empresa,p_dados_tela.num_aviso_rec)
						end if
					end if
				end if
			end if
			# fim os 532222

			if  m_nf_aguard_nfe_ant = "7" and p_dados_tela.ies_nf_aguard_nfe = "6" or
				(p_dados_tela.ies_especie_nf = "nfe" and p_dados_tela.ies_nf_aguard_nfe = "x") then
				if not sup3760_insere_nfe_sup_compl() then
					let p_houve_erro = true
				end if
			end if

			#--------------------------#
			# altera��o wms os: 450083 #
			#--------------------------#

			if m_wms_instal = "s" then
				#teyjy5
				{if m_tipo_documento  = "p" or
				m_tipo_documento  = "d"
				# totvs colabora��o n�o inclui a ar_depos, necess�rio incluir na mudan�a do tipo da nota.
				or (m_nf_aguard_nfe_ant = "7" and p_dados_tela.ies_nf_aguard_nfe <> "7") then}
				#-- ch tflb93 inicio --#
				if m_segmento = "i" then
					whenever error continue
					select fornecedor.cod_fornecedor
					into l_deposit
					from fornecedor
					inner join empresa
					on empresa.num_cgc      = fornecedor.num_cgc_cpf
					and empresa.ins_estadual = fornecedor.ins_estadual
					where empresa.cod_empresa = p_cod_empresa
					and fornecedor.ies_fornec_ativo = 'a'
					whenever error stop
					if sqlca.sqlcode <> 0 then
						let l_deposit = null
					end if
					let m_wms_depositante = l_deposit
				else
					whenever error continue
					select ar_depos.cod_depositante
					into l_deposit
					from ar_depos
					where ar_depos.cod_empresa   = p_cod_empresa
					and ar_depos.num_aviso_rec = p_nf_sup.num_aviso_rec
					whenever error stop
					if sqlca.sqlcode <> 0 then
						let l_deposit = null
					end if
					if l_deposit is not null and l_deposit <> ' ' then
						call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
						l_deposit,
						today,
						0) returning l_contrato, l_status
						if l_contrato = "0" then
							let l_deposit = null
						else
							if wmsm15_wms_contrato_leitura(p_cod_empresa,
								wmst15_wms_contrato_busca_transacao(p_cod_empresa,l_contrato) ,
								true,
								1) then
								if wmsm15_wms_contrato_get_regime_armazen() = "f" then
									let m_possui_regime_filial = true
								end if
							end if
						end if
					end if
					if p_dados_tela.ies_nf_aguard_nfe = "a" or
						m_possui_regime_filial = true then
						let m_wms_depositante = l_deposit
					else
						let m_wms_depositante = p_nf_sup.cod_fornecedor
					end if
				end if
				#-- ch tflb93 fim --#

				if m_wms_depositante is null or m_wms_depositante = ' ' then
					let m_wms_depositante = p_nf_sup.cod_fornecedor
				end if

				if m_nf_aguard_nfe_ant = '7' and p_dados_tela.ies_nf_aguard_nfe = 'b' and
					m_possui_regime_filial = false then
					let m_wms_depositante = p_nf_sup.cod_fornecedor
				end if

				whenever error continue
				delete from ar_depos
				where cod_empresa     = p_cod_empresa
				and num_aviso_rec   = p_nf_sup.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("delete","ar_depos - wms")
					let p_houve_erro = true
				end if

				whenever error continue
				insert into ar_depos (cod_empresa,
				num_aviso_rec,
				cod_depositante)
				values (p_cod_empresa,
				p_nf_sup.num_aviso_rec,
				m_wms_depositante)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("inclusao","ar_depos - wms")
					let p_houve_erro = true
				end if
				{else
				whenever error continue
				delete from ar_depos
				where cod_empresa   = p_cod_empresa
				and num_aviso_rec = p_nf_sup.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("exclusao","ar_depos - wms")
					let p_houve_erro = true
				end if
			end if}
			#teyjy5

			# os 547161
			if p_houve_erro = false then
				if m_tipo_documento_old = "d" or
					m_tipo_documento_old = 'n' then

					if m_tipo_documento = "d" then
						whenever error continue
						select 1 from sup_par_ar
						where sup_par_ar.empresa   = p_cod_empresa
						and sup_par_ar.aviso_recebto = p_nf_sup.num_aviso_rec
						and sup_par_ar.parametro = 'nf_regular_fiscal'
						whenever error stop
						if sqlca.sqlcode <> notfound then
							whenever error continue
							update sup_par_ar
							set par_ind_especial = m_utiliz_regulariz_fiscal
							where empresa          = p_cod_empresa
							and aviso_recebto    = p_nf_sup.num_aviso_rec
							and parametro        = 'nf_regular_fiscal'
							whenever error stop
							if sqlca.sqlcode <> 0 then
								call log003_err_sql("update","sup_par_ar")
								let p_houve_erro = true
							end if
						else
							if not sup3760_insere_nf_regular_fiscal() then
								let p_houve_erro = true
							end if
						end if
					else
						if m_tipo_documento = "p" then
							whenever error continue
							delete from sup_par_ar
							where empresa       = p_cod_empresa
							and aviso_recebto = p_nf_sup.num_aviso_rec
							and parametro     = 'nf_regular_fiscal'
							whenever error stop
							if sqlca.sqlcode <> 0 then
								call log003_err_sql("exclus�o","sup_par_ar")
								let p_houve_erro = true
							end if
						end if
					end if
				else
					if m_tipo_documento_old = "p" and
						m_tipo_documento     = "d" then
						if not sup3760_insere_nf_regular_fiscal() then
							let p_houve_erro = true
						end if
					end if
				end if
			end if

		end if

		#--------------------------#

###### os 205898
		if p_dados_tela.ies_especie_nf = "nfm" then
			whenever error continue
			delete from nf_pend
			where cod_empresa    = p_cod_empresa
			and num_nf         = p_dados_tela.num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and cod_fornecedor = p_dados_tela.cod_fornecedor
			whenever error stop
		end if

		if not fcl1150_integra_ar_fcx(p_cod_empresa,
			p_dados_tela.num_aviso_rec,"ex") then
			let p_houve_erro = true
		end if

		call sup3762_verif_param_oper_transf() returning m_cta_tran_unid, m_considerar_conta_sup7240
		for p_ind = 1 to arraylength(p_array)
			if p_array[p_ind].cod_item is not null and p_array[p_ind].qtd_declarad_nf is not null then
				call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array[p_ind].seq)
				call sup376_move_campos_ar()

				#### os457685 ###
				if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec) and
					p_array[p_ind].seq is null then
					exit for
				end if
				#### os457685 ###

				if p_dados_tela.ies_nf_aguard_nfe = "4" or
					p_dados_tela.ies_nf_aguard_nfe = "t" or
					p_dados_tela.ies_nf_aguard_nfe = "b" or
					(p_parametros = "6" and
					p_dados_tela.ies_nf_aguard_nfe = "a") then
					## os 407088
					call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_array[p_ind].seq) returning l_cod_fornecedor

					if not sup3760_verifica_item_de_terc(p_dados_tela.num_nf,
						p_dados_tela.ser_nf,
						p_dados_tela.ssr_nf,
						l_cod_fornecedor,
						p_dados_tela.ies_especie_nf,
						p_array[p_ind].seq) then
						if  p_dados_tela.ies_especie_nf    = "nfr"
							and p_dados_tela.ies_nf_aguard_nfe = "b"
							and m_contr_terc_no_dep            = "n" then
						else
							if find4glfunction('supy160_cliente_318')then
								if p_dados_tela.ies_nf_aguard_nfe <> "a" then
									if sup376_gera_item_d_terc() = false then
										let p_houve_erro = true
									end if
								end if
							else
								if sup376_gera_item_d_terc() = false then
									let p_houve_erro = true
								end if
							end if
						end if
					else
						if not sup3760_atualiza_item_de_terc(p_array[p_ind].val_liquido_item,
							p_array[p_ind].cod_cla_fisc_nf,
							p_array[p_ind].den_item,
							p_array[p_ind].cod_unid_med_nf,
							p_dados_tela.dat_emis_nf,
							p_dados_tela.dat_entrada_nf,
							p_dados_tela.num_nf,
							p_dados_tela.ser_nf,
							p_dados_tela.ssr_nf,
							l_cod_fornecedor,
							p_dados_tela.ies_especie_nf,
							p_array[p_ind].seq, 1) then
							let p_houve_erro = true
						end if
					end if
				end if
				if p_aviso_rec.num_oc > 0 then
					initialize p_ordem_sup.* to null
					call sup3762_busca_ordem_sup(p_aviso_rec.cod_empresa,
					p_aviso_rec.num_oc)
				end if

				if p_nf_sup.ies_incl_cap = 'n' and p_nf_sup.ies_incl_contab = 'n' and
					p_dados_tela.cod_operac_estoq <> m_cod_operac_estoq_ant and
					(m_cta_tran_unid = 's' or m_considerar_conta_sup7240 = 's') then
					whenever error continue
					delete from dest_aviso_rec
					where  dest_aviso_rec.cod_empresa   = p_cod_empresa
					and  dest_aviso_rec.num_aviso_rec = p_aviso_rec.num_aviso_rec
					and  dest_aviso_rec.num_seq       = p_aviso_rec.num_seq
					whenever error stop
					if p_ies_contab_aen = "4" then
						whenever error continue
						delete from dest_aviso_rec4
						where dest_aviso_rec4.cod_empresa   = p_cod_empresa
						and dest_aviso_rec4.num_aviso_rec = p_aviso_rec.num_aviso_rec
						and dest_aviso_rec4.num_seq       = p_aviso_rec.num_seq
						whenever error stop
					end if

					if p_aviso_rec_compl.cod_empresa_orig is not null and
						p_aviso_rec_compl.cod_empresa_orig <> ' ' then
						let p_ies_nf_transf = true
					end if
					call sup376_inclui_dest_entrega(p_array[p_ind].val_liquido_item)
				end if

				if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = true then
					if sup376_verifica_ar_item_contagem() = false then
						delete from ar_ped
						where ar_ped.cod_empresa   = p_cod_empresa
						and ar_ped.num_aviso_rec = p_dados_tela.num_aviso_rec
						and ar_ped.num_seq       = p_array[p_ind].seq
						if p_array[p_ind].qtd_declarad_nf is not null and
							p_array_compl[p_ind].ar_com_pc = "s"      then

							let p_val_array = p_array[p_ind].val_liquido_item

							if p_dados_tela.ies_especie_nf <> "nfd" and
								p_dados_tela.ies_especie_nf <> "nfr" then
								call sup861_popup_ordens_val_reserv(p_cod_empresa,
								p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
								p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
								p_val_array, "n", "modificacao",
								p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
								returning p_val_soma_reserva2, p_ies_reservou, p_ord_forn
								let p_val_array = 0
								let int_flag = 0
								current window is w_sup37601
							end if
						end if
						call sup376_inclui_ar_ped()
					end if
				else
					if p_array_compl[p_ind].ies_bloqueada = "n" then
						if p_array_it_prg_entr[p_ind,1].num_prog_entrega is null or
							p_array_it_prg_entr[p_ind,1].num_prog_entrega = " " then
						else
							if sup376_verifica_ar_item_contagem() = false then
								delete from ar_ped
								where ar_ped.cod_empresa   = p_cod_empresa
								and ar_ped.num_aviso_rec = p_dados_tela.num_aviso_rec
								and ar_ped.num_seq       = p_array[p_ind].seq
								call sup376_inclui_ar_ped()
							end if
						end if
					end if
				end if

				#-in�cio ch-tfrc09-#
				if log_existe_epl('sup3760y_before_process_update_aviso_rec') then
					call log_setvar('cod_empresa', p_cod_empresa)
					#epl codigo da empresa
					#epl tipo: aviso_rec.cod_empresa

					call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
					#epl numero do ar
					#epl tipo: aviso_rec.num_aviso_rec

					call log_setvar('num_seq', p_aviso_rec.num_seq)
					#epl numero da sequencia do ar
					#epl tipo: aviso_rec.num_seq

					call log_setvar('cod_unid_med_nf', p_aviso_rec.cod_unid_med_nf)
					#epl unidade de medida
					#epl tipo: aviso_rec.cod_unid_med_nf

					call log_setvar('cod_cla_fisc_nf', p_aviso_rec.cod_cla_fisc_nf)
					#epl classifica��o fiscal
					#epl tipo: aviso_rec.cod_cla_fisc_nf

					call log_setvar('pre_unit_nf', p_aviso_rec.pre_unit_nf)
					#epl pre�o unit�rio item
					#epl tipo: aviso_rec.pre_unit_nf

					call log_setvar('qtd_declarad_nf', p_aviso_rec.qtd_declarad_nf)
					#epl quantidade
					#epl tipo: aviso_rec.qtd_declarad_nf

					call log_setvar('val_liquido_item', p_aviso_rec.val_liquido_item)
					#epl valor liquido item
					#epl tipo: aviso_rec.val_liquido_item

					call log_setvar('pct_ipi_declarad', p_aviso_rec.pct_ipi_declarad)
					#epl percentual de ipi
					#epl tipo: aviso_rec.pct_ipi_declarad

					call log_setvar('val_base_c_ipi_it', p_aviso_rec.val_base_c_ipi_it)
					#epl valor base ipi
					#epl tipo: aviso_rec.val_base_c_ipi_it

					call log_setvar('houve_erro', p_houve_erro)
					#epl indicador se houve erro no processamento
					#epl tipo: smallint

					call sup3760y_before_process_update_aviso_rec()
					let p_houve_erro = log_getvar('houve_erro')
				end if
				#-fim ch-tfrc09-#

				if p_array_compl[p_ind].alterou_val_liquido is not null and
					p_array_compl[p_ind].alterou_val_liquido = true then

					if p_aviso_rec.val_base_c_ipi_it is null then
						let p_aviso_rec.val_base_c_ipi_it = 0
					end if

					update aviso_rec
					set aviso_rec.den_item          = p_aviso_rec.den_item,
					aviso_rec.cod_unid_med_nf   = p_aviso_rec.cod_unid_med_nf,
					aviso_rec.cod_cla_fisc_nf   = p_aviso_rec.cod_cla_fisc_nf,
					aviso_rec.pre_unit_nf       = p_aviso_rec.pre_unit_nf,
					aviso_rec.qtd_declarad_nf   = p_aviso_rec.qtd_declarad_nf,
					aviso_rec.val_liquido_item  = p_aviso_rec.val_liquido_item,
					aviso_rec.ies_receb_fiscal  = "s",
					aviso_rec.val_base_c_item_d = 0,
					aviso_rec.pct_ipi_declarad  = p_aviso_rec.pct_ipi_declarad,
					aviso_rec.val_base_c_ipi_it = p_aviso_rec.val_base_c_ipi_it
					where aviso_rec.cod_empresa = p_cod_empresa
					and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
					and aviso_rec.num_seq     = p_aviso_rec.num_seq
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("update","aviso_rec")
						let p_houve_erro = true
					end if

					if not sup1031_grava_audit_ar(p_aviso_rec.num_aviso_rec,
						p_aviso_rec.num_seq,
						"sup3760","4") then
						let p_houve_erro = true
					end if
				else
					update aviso_rec
					set aviso_rec.den_item         = p_aviso_rec.den_item,
					aviso_rec.cod_unid_med_nf  = p_aviso_rec.cod_unid_med_nf,
					aviso_rec.cod_cla_fisc_nf  = p_aviso_rec.cod_cla_fisc_nf,
					aviso_rec.pre_unit_nf      = p_aviso_rec.pre_unit_nf,
					aviso_rec.qtd_declarad_nf  = p_aviso_rec.qtd_declarad_nf,
					aviso_rec.val_liquido_item = p_aviso_rec.val_liquido_item,
					aviso_rec.ies_receb_fiscal = "s",
					aviso_rec.pct_ipi_declarad = p_aviso_rec.pct_ipi_declarad
					where aviso_rec.cod_empresa = p_cod_empresa
					and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
					and aviso_rec.num_seq     = p_aviso_rec.num_seq
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("(1)update","aviso_rec")
						let p_houve_erro = true
					end if

					if not sup1031_grava_audit_ar(p_aviso_rec.num_aviso_rec,
						p_aviso_rec.num_seq,
						"sup3760","4") then
						let p_houve_erro = true
					end if
				end if

				## os 152.698
				if m_tipo_nf = "7" then
					if m_tipo_nf  <> p_dados_tela.ies_nf_aguard_nfe and
						m_data_ent <> p_dados_tela.dat_entrada_nf then
						update aviso_rec
						set aviso_rec.dat_inclusao_seq = p_dados_tela.dat_entrada_nf
						where aviso_rec.cod_empresa   = p_cod_empresa
						and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
						and aviso_rec.num_seq       = p_aviso_rec.num_seq

						if sqlca.sqlcode <> 0 then
							call log003_err_sql("(2)update","aviso_rec")
							let p_houve_erro = true
						end if
					end if
				end if
				## fim os 152.698

############# 205898
				if p_dados_tela.ies_especie_nf = "nfm" and
					p_array[p_ind].cod_item is not null and
					p_array[p_ind].cod_item <> " "  then
					whenever error continue
					insert into nf_pend values (p_cod_empresa, p_dados_tela.num_nf,
					p_dados_tela.ser_nf, p_dados_tela.ssr_nf,
					p_dados_tela.cod_fornecedor,
					p_array[p_ind].cod_item,
					p_aviso_rec.qtd_declarad_nf, 0, null,
					today)
					whenever error stop
					if sqlca.sqlcode = -239 or
						sqlca.sqlcode = -268 then
						update nf_pend
						set qtd_recebida = qtd_recebida + p_aviso_rec.qtd_declarad_nf
						where cod_empresa    = p_cod_empresa
						and num_nf         = p_dados_tela.num_nf
						and ser_nf         = p_dados_tela.ser_nf
						and ssr_nf         = p_dados_tela.ssr_nf
						and cod_fornecedor = p_dados_tela.cod_fornecedor
						and cod_item       = p_array[p_ind].cod_item
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("update","nf_pend")
							let p_houve_erro = true
						end if
					end if
				end if
				if p_nfe_import = true then
					initialize p_ar_proc_imp.* to null
					select *
					into p_ar_proc_imp.*
					from aviso_rec_proc_imp
					where cod_empresa    = p_cod_empresa
					and num_aviso_rec  = p_dados_tela.num_aviso_rec
					and num_seq        = p_aviso_rec.num_seq
					if sqlca.sqlcode = 0 then
						update aviso_rec
						set qtd_declarad_nf = p_ar_proc_imp.quantidade
						where cod_empresa    = p_cod_empresa
						and num_aviso_rec  = p_dados_tela.num_aviso_rec
						and num_seq        = p_aviso_rec.num_seq
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("(3)update","aviso_rec")
							let p_houve_erro = true
						end if
					end if
				end if
				if g_ies_transf_benef = true and
					p_oper_ent_ind_g <> p_dados_tela.cod_operac_estoq and
					p_cod_oper_ent_ind = p_dados_tela.cod_operac_estoq then
					if sup376_gera_item_d_terc() = false then
						let p_houve_erro = true
					end if
				else
					if g_ies_transf_benef = true and
						(g_ies_retorno_ind = true or
						g_ret_sem_ind = true) then
						if sup376_elimina_item_ret_terc(p_dados_tela.num_aviso_rec,
							p_array[p_ind].seq,"1") = false then
							let p_houve_erro = true
						end if
						if sup3760_gera_item_ret_terc() = false then
							let p_houve_erro = true
						end if
					end if
				end if
			else
				exit for
			end if
		end for
		if g_ies_transf_benef = true then
		else
			if p_ies_cod_operac is null or
				p_ies_cod_operac = "n" or
				p_ies_cod_operac = " " then
				let p_dados_tela.cod_operac_estoq = " "
			end if
		end if

		if p_dados_tela.cod_operacao[1] = "5" then
			let p_cod_fiscal_c = "1.",p_dados_tela.cod_operacao[3,5]
		end if
		if p_dados_tela.cod_operacao[1] = "6" then
			let p_cod_fiscal_c = "2.",p_dados_tela.cod_operacao[3,5]
		end if
		if p_dados_tela.cod_operacao[1] = "7" then
			let p_cod_fiscal_c = "3.",p_dados_tela.cod_operacao[3,5]
		end if

		if g_ies_transf_benef = true then
		else
			if p_ies_cod_operac is null or
				p_ies_cod_operac = "n" or
				p_ies_cod_operac = " " then
				let p_dados_tela.cod_operac_estoq = p_dados_telar.cod_operac_estoq
			end if
		end if

		if sup0812_verifica_nota_transferencia(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			p_dados_tela.cod_fiscal_compl) = true and
			p_dados_tela.cod_operacao[1,1] <> "3" then
			if p_dados_tela.cod_operac_estoq is null or
				p_dados_tela.cod_operac_estoq = " " then
				let p_dados_tela.cod_operac_estoq = p_oper_trans_unid
			end if
		end if

		##o.s 186311
		if p_dados_tela.ies_nf_aguard_nfe = "p" then
			if p_dados_tela.cod_operac_estoq is null or
				p_dados_tela.cod_operac_estoq = " " then
				let p_dados_tela.cod_operac_estoq = g_operac_permuta
			end if
		end if

		if supm44_aviso_rec_compl_leitura(p_cod_empresa, p_dados_tela.num_aviso_rec, true, true) then
			call supm44_aviso_rec_compl_set_cod_operacao(p_dados_tela.cod_operac_estoq)
			call supm44_aviso_rec_compl_set_cod_fiscal_compl(p_dados_tela.cod_fiscal_compl)
			if find4glfunction('supm44_aviso_rec_compl_set_filial') then
				call supm44_aviso_rec_compl_set_filial(p_dados_tela.filial)
			end if

			if not supt44_aviso_rec_compl_modifica(true,false) then
				let p_houve_erro = true
			end if
		end if

		if find4glfunction('supr_multimoedas_atualiza_campos_multimoeda_nf') then ### dmanentlgx-1984
			if not supr_multimoedas_atualiza_campos_multimoeda_nf(p_cod_empresa, p_array_compl[1].num_pedido, p_dados_tela.num_aviso_rec) then
				let p_houve_erro = true
			end if
		end if

		update aviso_rec_compl_sq
		set cod_fiscal_compl                 = p_dados_tela.cod_fiscal_compl
		where aviso_rec_compl_sq.cod_empresa   = p_cod_empresa
		and aviso_rec_compl_sq.num_aviso_rec = p_dados_tela.num_aviso_rec
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","aviso_rec_compl_sq")
			let p_houve_erro = true
		end if

		current window is w_sup37601
		if p_houve_erro = false then
			if p_dados_tela.ies_especie_nf = "nfs"
				or p_dados_tela.ies_especie_nf = "rec"
				or p_dados_tela.ies_especie_nf = "doc" then
				if p_nf_sup.cod_regist_entrada is null or p_nf_sup.cod_regist_entrada = " " then
					let p_nf_sup.cod_regist_entrada = p_par_sup.cod_regist_entrada
				end if
				if m_reg_entr_doc_rec <> 0 and
					(p_dados_tela.ies_especie_nf = "rec" or p_dados_tela.ies_especie_nf = "doc") then
					let p_nf_sup.cod_regist_entrada = m_reg_entr_doc_rec
				end if
			else
				if p_nf_sup.cod_regist_entrada is null or p_nf_sup.cod_regist_entrada = " " then #ch-tfkag5
					let p_nf_sup.cod_regist_entrada = 01
				end if
			end if
			if (p_par_sup_compl.ies_mod_importacao = "s" or
				p_par_sup_compl.ies_mod_importacao = "l") then
				if p_dados_tela.cod_operacao[1] = "7" then
					if p_cod_pais_emp <> p_fornecedor.cod_pais and
						(p_nf_sup.ies_especie_nf = "nfe" or
						p_nf_sup.ies_especie_nf = "nfp") then
						let p_aviso_rec_compl.ies_incl_import = "n"
					else
						if p_cod_pais_emp <> p_fornecedor.cod_pais and
							p_dados_tela.ies_especie_nf = "nfm" then
							let p_aviso_rec_compl.ies_incl_import = "n"
						end if
					end if
				else
					if m_nfr_import then
						let p_aviso_rec_compl.ies_incl_import = "n"
					end if
				end if
			end if
			#--# a64758 (espindola)                         #--#
			if m_altera_cndpgto_mod_nf_transito = "n" then
				if m_nf_aguard_nfe_ant = "7" then
					if m_perm_alt_cnd_emb = "0" or m_perm_alt_cnd_emb = "3" then
						let l_cnd_pgto_prim_pc = sup3760_cnd_pgto_prim_pc(p_cod_empresa, p_dados_tela.num_aviso_rec)
						if l_cnd_pgto_prim_pc is null
							or l_cnd_pgto_prim_pc = " "
							or l_cnd_pgto_prim_pc = 0 then
							let l_cnd_pgto_prim_pc = p_dados_tela.cnd_pgto_nf
						end if
						#if (p_dados_telar.cnd_pgto_nf <> p_dados_tela.cnd_pgto_nf) then
						#   let l_msg = "condi��o de pagamento da nf (",p_dados_tela.cnd_pgto_nf,") diferente da condi��o original (",p_dados_telar.cnd_pgto_nf,"). mant�m condi��o original ?"
						#   if log0040_confirm(5,10,l_msg) then
						#      let p_dados_tela.cnd_pgto_nf = p_dados_telar.cnd_pgto_nf
						#   end if
						#else
						#if (p_dados_tela.cnd_pgto_nf <> l_cnd_pgto_prim_pc) then
						#   let l_msg = "condi��o de pagamento da nf (",p_dados_tela.cnd_pgto_nf,") diferente da condi��o do pedido (",l_cnd_pgto_prim_pc,"). mant�m condi��o do pedido ?"
						#   if log0040_confirm(5,10,l_msg) then

						#--# se o parametro indica que nao modifica a condicao de pagamento           #--#
						#--# o sistema garante que a informacao na nf sera a mesma do primeiro pedido #--#
						let p_dados_tela.cnd_pgto_nf = l_cnd_pgto_prim_pc
						call conout('equalizou condicao de pagamento da nf com a do pedido')

						#   end if
						#end if
						#end if
					end if
				end if
			end if
			#--# a64758 (espindola)                         #--#
			if p_dados_telar.cnd_pgto_nf <> p_dados_tela.cnd_pgto_nf then
				let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_telar.cnd_pgto_nf)
				if l_cod_empresa_orig is not null then
					let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
				end if
				let p_ies_pagamento1 = p_cond_pgto_cap.ies_pagamento

				let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
				if l_cod_empresa_orig is not null then
					let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
				end if

				let p_ies_pagamento2 = p_cond_pgto_cap.ies_pagamento
				if (p_ies_pagamento1 = "1" or
					p_ies_pagamento1 = "3") and
					p_ies_pagamento2  = "2" then
					let p_nf_sup.ies_incl_cap = "n"
					#tepdgo marfrig
					#feito este update porque n�o estava atualizando o indicador quando �
					#alterado a condi��o de pagamento
					whenever error continue
					update nf_sup
					set nf_sup.ies_incl_cap  = p_nf_sup.ies_incl_cap
					where nf_sup.cod_empresa   = p_cod_empresa
					and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("modificacao(1)","nf_sup")
						let p_houve_erro = true
					end if
					#tepdgo
				end if
			end if
			call sup376_verifica_mod_embar() returning p_status
			if p_dados_tela.cod_operacao is null then
				let p_dados_tela.cod_operacao = ' '
			end if

			if p_ies_imp_renda = "n" then
				update nf_sup
				set nf_sup.ser_nf             = p_dados_tela.ser_nf,
				nf_sup.ssr_nf             = p_dados_tela.ssr_nf,
				nf_sup.ies_especie_nf     = p_dados_tela.ies_especie_nf,
				nf_sup.cod_empresa_estab  = p_dados_tela.cod_empresa_estab,
				nf_sup.dat_emis_nf        = p_dados_tela.dat_emis_nf,
				nf_sup.dat_entrada_nf     = p_dados_tela.dat_entrada_nf,
				nf_sup.cnd_pgto_nf        = p_dados_tela.cnd_pgto_nf,
				nf_sup.cod_mod_embar      = p_dados_tela.cod_mod_embar,
				#nf_sup.ies_incl_cap       = p_nf_sup.ies_incl_cap,
				#--# tdlti5 marfrig - indicador somente � atualizado pelo cap0020 e cap0220 #--#
				#alterado porque um usu�rio pode estar em modifica��o no sup3760 (sem alterar nada)
				#e outro usu�rio excluindo ad/ap desta nota no cap0020. desta forma,
				#ao efetivar a modifica��o no sup3760 (sem alterar nada), o indicador ficava como "s" ao inv�s de "n" como o cap deixou.
				nf_sup.cod_operacao       = p_dados_tela.cod_operacao,
				nf_sup.val_ipi_nf         = p_dados_tela_f.val_ipi_nf,
				nf_sup.val_tot_icms_nf_d  = p_dados_tela_f.val_tot_icms_nf_d,
				nf_sup.val_tot_nf_d       = p_dados_tela_f.val_tot_nf_d,
				nf_sup.ies_tip_frete      = p_nf_sup.ies_tip_frete,
				nf_sup.ies_nf_aguard_nfe  = p_dados_tela.ies_nf_aguard_nfe,
				nf_sup.cod_regist_entrada = p_nf_sup.cod_regist_entrada,
				nf_sup.cod_imp_renda      = p_cod_ret_imp,
				nf_sup.val_imp_renda      = 0,
				nf_sup.val_bc_imp_renda   = 0
				where nf_sup.cod_empresa = p_cod_empresa
				and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
				#a09248
				#and nf_sup.num_nf         = p_dados_tela.num_nf #809554
				#and nf_sup.ser_nf         = mr_dados_tela_ant.ser_nf #p_dados_tela.ser_nf
				#and nf_sup.ssr_nf         = mr_dados_tela_ant.ssr_nf #p_dados_tela.ssr_nf
				#and nf_sup.ies_especie_nf = mr_dados_tela_ant.ies_especie_nf #p_dados_tela.ies_especie_nf
				#and nf_sup.cod_fornecedor = p_dados_tela.cod_fornecedor
			else
				update nf_sup
				set nf_sup.ser_nf             = p_dados_tela.ser_nf,
				nf_sup.ssr_nf             = p_dados_tela.ssr_nf,
				nf_sup.ies_especie_nf     = p_dados_tela.ies_especie_nf,
				nf_sup.cod_empresa_estab  = p_dados_tela.cod_empresa_estab,
				nf_sup.dat_emis_nf        = p_dados_tela.dat_emis_nf,
				nf_sup.dat_entrada_nf     = p_dados_tela.dat_entrada_nf,
				nf_sup.cnd_pgto_nf        = p_dados_tela.cnd_pgto_nf,
				nf_sup.cod_mod_embar      = p_dados_tela.cod_mod_embar,
				#nf_sup.ies_incl_cap       = p_nf_sup.ies_incl_cap,
				#--# tdlti5 marfrig - indicador somente � atualizado pelo cap0020 e cap0220 #--#
				#alterado porque um usu�rio pode estar em modifica��o no sup3760 (sem alterar nada)
				#e outro usu�rio excluindo ad/ap desta nota no cap0020. desta forma,
				#ao efetivar a modifica��o no sup3760 (sem alterar nada), o indicador ficava como "s" ao inv�s de "n" como o cap deixou.
				nf_sup.cod_operacao       = p_dados_tela.cod_operacao,
				nf_sup.val_ipi_nf         = p_dados_tela_f.val_ipi_nf,
				nf_sup.val_tot_icms_nf_d  = p_dados_tela_f.val_tot_icms_nf_d,
				nf_sup.val_tot_nf_d       = p_dados_tela_f.val_tot_nf_d,
				nf_sup.ies_tip_frete      = p_nf_sup.ies_tip_frete,
				nf_sup.ies_nf_aguard_nfe  = p_dados_tela.ies_nf_aguard_nfe,
				nf_sup.cod_regist_entrada = p_nf_sup.cod_regist_entrada,
				nf_sup.cod_imp_renda      = p_cod_ret_imp
				where nf_sup.cod_empresa = p_cod_empresa
				and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
				#a09248
				#and nf_sup.num_nf         = p_dados_tela.num_nf  #809554
				#and nf_sup.ser_nf         = mr_dados_tela_ant.ser_nf #p_dados_tela.ser_nf
				#and nf_sup.ssr_nf         = mr_dados_tela_ant.ssr_nf #p_dados_tela.ssr_nf
				#and nf_sup.ies_especie_nf = mr_dados_tela_ant.ies_especie_nf #p_dados_tela.ies_especie_nf
				#and nf_sup.cod_fornecedor = p_dados_tela.cod_fornecedor
			end if
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("modificacao","nf_sup")
				let p_houve_erro = true
			end if

			#--inicio--os 587470 #
			if m_nf_aguard_nfe_ant = "7" then
				let l_campo_alt = null

				if mr_dados_tela_ant.num_nf <> p_dados_tela.num_nf         and
					mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf         and
					mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf         and
					mr_dados_tela_ant.ies_especie_nf <> p_dados_tela.ies_especie_nf then
					let l_campo_alt = '5'
				else
					if mr_dados_tela_ant.num_nf <> p_dados_tela.num_nf and
						mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf and
						mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf then
						let l_campo_alt = '0'
					else
						if mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf and
							mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf and
							mr_dados_tela_ant.ies_especie_nf <> p_dados_tela.ies_especie_nf then
							let l_campo_alt = '6'
						else
							if mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf and
								mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf then
								let l_campo_alt = '7'
							else
								if mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf and
									mr_dados_tela_ant.ies_especie_nf <> p_dados_tela.ies_especie_nf then
									let l_campo_alt = '8'
								else
									if mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf  and
										mr_dados_tela_ant.ies_especie_nf <> p_dados_tela.ies_especie_nf then
										let l_campo_alt = '9'
									else
										if mr_dados_tela_ant.num_nf <> p_dados_tela.num_nf  then
											let l_campo_alt = '1'
										else
											if mr_dados_tela_ant.ser_nf <> p_dados_tela.ser_nf  then
												let l_campo_alt = '2'
											else
												let l_campo_alt = null
											end if
										end if
									end if
								end if
							end if
						end if
					end if
				end if

				if l_campo_alt is null then
					if mr_dados_tela_ant.ssr_nf <> p_dados_tela.ssr_nf  then
						let l_campo_alt = '3'
					else
						if mr_dados_tela_ant.ies_especie_nf <> p_dados_tela.ies_especie_nf  then
							let l_campo_alt = '4'
						else
							let l_campo_alt = null
						end if
					end if
				end if

				if log_existe_epl('sup3760y_before_process_atualiza_cabecalho_nf_tabelas_compl') then
					call log_setvar('chama_sup1182', l_chama_sup1182)
					#epl indicador se chama a fun��o sup1182
					#epl tipo: smallint

					call sup3760y_before_process_atualiza_cabecalho_nf_tabelas_compl()
					let l_chama_sup1182 = log_getvar('chama_sup1182')
				end if

				if l_campo_alt is not null then
					if l_chama_sup1182 then
						if sup1182_atualiza_cabecalho_nf_tabelas_compl(p_dados_tela.cod_empresa,
							p_dados_tela.num_nf,
							p_dados_tela.ser_nf,
							p_dados_tela.ssr_nf,
							p_dados_tela.ies_especie_nf,
							p_dados_tela.cod_fornecedor,
							mr_dados_tela_ant.num_nf,
							mr_dados_tela_ant.ser_nf,
							mr_dados_tela_ant.ssr_nf,
							mr_dados_tela_ant.ies_especie_nf,
							l_campo_alt,
							p_dados_tela.ies_nf_aguard_nfe)  = false  then

							let p_houve_erro = true
						end  if
					end if
				end if
			end if
			#---fim----os 587470 #

			#--# 796313 - espindola - projeto totvs colaboracao #--#
			#--# repasse de alteracao caso houve modificacao nas chaves em questoes
			if m_utiliz_totvs_colab = "s" then
				if not sup13429_repassa_alteracao_monitor(p_dados_tela.cod_empresa,     p_dados_tela.num_nf,
					p_dados_tela.ser_nf,          p_dados_tela.ssr_nf,
					p_dados_tela.cod_fornecedor,  p_dados_tela.dat_emis_nf,
					p_dados_telar.cod_empresa,    p_dados_telar.num_nf,
					p_dados_telar.ser_nf,         p_dados_telar.ssr_nf,
					p_dados_telar.cod_fornecedor, p_dados_telar.dat_emis_nf) then
					let p_houve_erro = true
				end if

				if m_num_nfe is not null and m_num_nfe <> ' ' then
					let m_num_nf = m_num_nfe
				else
					let m_num_nf = p_nf_sup.num_nf
				end if

				#--#atualiza monitor de integracao (caso existir documento)
				if not sup13429_integra_erp_monitor(p_dados_tela.cod_empresa,     m_num_nf,
					p_dados_tela.ser_nf,          p_dados_tela.ssr_nf,
					p_dados_tela.cod_fornecedor,  p_dados_tela.dat_emis_nf,
					"modificacao") then
					let p_houve_erro = true
				end if
			end if
			if not p_houve_erro then
				let p_nf_sup.val_tot_nf_d       = p_dados_tela_f.val_tot_nf_d
				let p_nf_sup.cod_empresa_estab  = p_dados_tela.cod_empresa_estab
				let p_nf_sup.dat_emis_nf        = p_dados_tela.dat_emis_nf
				let p_nf_sup.dat_entrada_nf     = p_dados_tela.dat_entrada_nf
				let p_nf_sup.cnd_pgto_nf        = p_dados_tela.cnd_pgto_nf
				let p_nf_sup.cod_mod_embar      = p_dados_tela.cod_mod_embar
				let p_nf_sup.cod_operacao       = p_dados_tela.cod_operacao
				let p_nf_sup.val_ipi_nf         = p_dados_tela_f.val_ipi_nf
				let p_nf_sup.val_tot_icms_nf_d  = p_dados_tela_f.val_tot_icms_nf_d
				let p_nf_sup.val_tot_nf_d       = p_dados_tela_f.val_tot_nf_d
				let p_nf_sup.ies_nf_aguard_nfe  = p_dados_tela.ies_nf_aguard_nfe
				let p_nf_sup.cod_imp_renda      = p_cod_ret_imp
				if p_dados_tela.ies_impostos = "s" then #os360335
					call cap544_manutencao_impostos("sup3760","modificacao")
					if int_flag = 1 then
						let p_houve_erro = true
					end if
				end if
			end if

			if p_houve_erro = false then
				#fluxo de caixa
				if not fcl1150_integra_ar_fcx(p_cod_empresa,
					p_dados_tela.num_aviso_rec,"in") then
					let p_houve_erro = true
				end if
			end if

			#--inicio--os 502143 #
			let l_is_clie_319 = false
			if find4glfunction('supy101_cliente_319') then
				let l_is_clie_319 = supy101_cliente_319()
			end if

			if l_is_clie_319 = true          and
				(p_dados_tela.cod_operacao = '5.601'  or
				p_dados_tela.cod_operacao = '6.601')  and
				m_cod_item_cred_transf_icms = p_array[1].cod_item then


				if find4glfunction('supy101_insert_sup_par_ar') then
					if supy101_insert_sup_par_ar(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						' ',
						p_dados_tela_f.val_tot_nf_d,
						p_aviso_rec.num_seq,
						p_dados_tela.cod_fornecedor,
						'modificacao',
						m_serie_branca) = false  then

						error " modifica��o cancelada. "
						let p_houve_erro = true
					end if
				end if
			end if
			#---fim----os 502143 #
			current window is w_sup37601

			if log_existe_epl('sup3760y_before_process_commit_modificacao_nf') then
				call log_setvar('cod_empresa', p_cod_empresa)
				#epl codigo da empresa
				#epl tipo: ordem_sup.cod_empresa

				call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
				#epl numero do ar
				#epl tipo: aviso_rec.num_aviso_rec

				call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
				#epl codigo do fornecedor
				#epl tipo: nf_sup.cod_fornecedor

				call log_setvar('houve_erro', p_houve_erro)
				#epl indicador se houve erro no processamento
				#epl tipo: smallint

				call sup3760y_before_process_commit_modificacao_nf()
				let p_houve_erro = log_getvar('houve_erro')
				current window is w_sup37601
			end if

			if p_houve_erro = false then
				whenever error continue
				call log085_transacao("commit")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("efetivacao","nf_sup")
					call log085_transacao("rollback") #os596059
					let p_houve_erro = true
				else
					if log_existe_epl('sup3760y_after_process_commit_modificacao_aviso_rec') then
						call log_setvar('cod_empresa', p_cod_empresa)
						#epl codigo da empresa
						#epl tipo: ordem_sup.cod_empresa

						call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
						#epl numero do ar
						#epl tipo: aviso_rec.num_aviso_rec

						call log_setvar('houve_erro', p_houve_erro)
						#epl indicador se houve erro
						#epl tipo: smallint

						call sup3760y_after_process_commit_modificacao_aviso_rec()
						let p_houve_erro = log_getvar('houve_erro')
						current window is w_sup37601
					end if

					if sup3760_informa_peso() = true then
						if m_peso_nf is not null and m_peso_nf <> " " then
							display " nr. itens: ", p_tot_itens ," "  at 20,02 attribute(reverse)
							display "peso nf: ", m_peso_nf ," "       at 22,02 attribute(reverse)
						else
							display "                          "  at 22,02
						end if
					else
						initialize m_peso_nf to null
						display "                           "  at 22,02
					end if
					message " modificacao efetuada com sucesso. " attribute(reverse)

					if m_nfe_cce = true then
						call sup1031_grava_audit_ar(p_dados_tela.num_aviso_rec, 0, 'sup3760', '8')
					end if
					call sup376_manut_item_terc()

					let p_par_forn = null
					call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
					"",
					p_dados_tela.dat_emis_nf,
					p_dados_tela.num_aviso_rec) returning p_par_forn

					if p_dados_tela.ies_especie_nf = "nfr" and
						p_par_forn = "3"  then
					else
						if ((p_ies_tip_entrada = "6" or
							p_ies_tip_entrada = "4") or
							(sup0812_verifica_nota_transferencia(p_cod_empresa,
							p_dados_tela.num_aviso_rec,
							p_dados_tela.num_nf,
							p_dados_tela.ser_nf,
							p_dados_tela.ssr_nf,
							p_dados_tela.cod_fornecedor,
							p_dados_tela.cod_operacao,
							p_dados_tela.cod_fiscal_compl) = false and
							p_ies_tip_entrada = "2")) and
							(m_wms_instal = "n"      or
							(m_wms_instal = "s"      and
							p_dados_tela.ies_nf_aguard_nfe <> "a"   and
							p_dados_tela.ies_nf_aguard_nfe <> "b")) then
							if p_dados_tela.ies_nf_aguard_nfe <> "t" and
								#inicio os.472270
								(p_mot_remes_terc is null or
								p_mot_remes_terc = " " or
								m_ies_msg_contr_terc = 's') then
								#fim o.s. 472270
								if p_dados_tela.ies_nf_aguard_nfe <> "4" and
									p_dados_tela.ies_nf_aguard_nfe <> "5" then
									if  p_dados_tela.ies_nf_aguard_nfe = "a"
										#or   p_dados_tela.ies_nf_aguard_nfe = "b")
										and sup3760_existe_cadastro_triangulacao()
										and p_dados_tela.ies_especie_nf = "nfr" then
										call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_array[1].seq) returning l_cod_fornecedor

										let l_retorno_epl = false

										if log_existe_epl("sup3760y_before_abre_controle_terceiros_automatico") then
											call log_setvar('retorno_epl', false)
											call sup3760y_before_abre_controle_terceiros_automatico()
											let l_retorno_epl  = log_getvar('retorno_epl')
										end if

										if l_retorno_epl = false then
											let comando3 = p_dados_tela.num_nf," ",
											p_dados_tela.ser_nf," ",
											p_dados_tela.ssr_nf," ",
											p_dados_tela.ies_especie_nf," ",
											l_cod_fornecedor," ",
											"@"," ","@"," ","@"," ",
											p_cod_empresa
											call log1200_executa_programa("sup2270",comando3)
										end if
									else
										let l_retorno_epl = false
										if log_existe_epl("sup3760y_before_controlar_terceiros") then
											call log_setvar('retorno_epl', false)
											call sup3760y_before_controlar_terceiros()
											let l_retorno_epl  = log_getvar('retorno_epl')
										end if

										if l_retorno_epl = false then
											if log0040_confirm(21,43,"controlar material de terceiros?") then
												if p_dados_tela.ser_nf = " " or p_dados_tela.ser_nf is null then
													let p_dados_tela.ser_nf = "@"
												end if
												if log0040_confirm(21,43,"material da empresa?") then
													if m_ies_nf_remessa_x_especie <> 0 then
														if (m_ies_nf_remessa_x_especie = 1 and p_dados_tela.ies_especie_nf = "nfr")
															or (m_ies_nf_remessa_x_especie = 2 and p_dados_tela.ies_especie_nf = "nfe")
															or (m_ies_nf_remessa_x_especie = 3 and (p_dados_tela.ies_especie_nf = "nfe" or p_dados_tela.ies_especie_nf = "nfr") ) then
															call sup3760_controla_nf_remessa_retorno()
														end if
													else
														let comando3 = p_dados_tela.num_nf," ",
														p_dados_tela.ser_nf," ",
														p_dados_tela.ssr_nf," ",
														p_dados_tela.ies_especie_nf," ",
														p_dados_tela.cod_fornecedor," ",
														"@"," ",p_cod_empresa
														call log1200_executa_programa("sup2290",comando3)
													end if
												else
													## os 407088
													call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_array[1].seq) returning l_cod_fornecedor
													let comando3 = p_dados_tela.num_nf," ",
													p_dados_tela.ser_nf," ",
													p_dados_tela.ssr_nf," ",
													p_dados_tela.ies_especie_nf," ",
													l_cod_fornecedor," ",
													"@"," ","@"," ","@"," ",
													p_cod_empresa
													call log1200_executa_programa("sup2270",comando3)
												end if
												if p_dados_tela.ser_nf = "@" then
													let p_dados_tela.ser_nf = " "
												end if
												#-- os 562700 fim --#
											end if
										end if
									end if
								end if #os. 472270
							end if
						end if
					end if
				end if
			else
				error " modificacao cancelada. "
				call log085_transacao("rollback")
			end if

			case p_dados_tela_f.ies_desc_acres
			when "t"
			let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
			call log1200_executa_programa("sup2490",comando3)

			let p_cod_empresa_arg = p_cod_empresa
			let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
			call sup376_busca_argumen()
			when "i"
			let comando3 = p_dados_tela.num_aviso_rec, " ", p_cod_empresa
			call log1200_executa_programa("sup9010",comando3)

			let p_cod_empresa_arg = p_cod_empresa
			let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
			call sup376_busca_argumen()
		end case
		#os544582
		if sup3766_processa_movtos_estoque(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_aviso_rec.num_seq,
			p_aviso_rec.cod_item) = false then
			error "problemas na inclus�o dos controles de grade/dimensional. "
			let p_houve_erro = true
		end if
		#fim os544582

		let l_consistir = true
		if log_existe_epl('sup3760y_after_process_modificacao_aviso_rec') then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl codigo da empresa
			#epl tipo: ordem_sup.cod_empresa

			call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
			#epl numero do ar
			#epl tipo: aviso_rec.num_aviso_rec

			call log_setvar('num_seq', p_aviso_rec.num_seq)
			#epl numero da sequencia do ar
			#epl tipo: aviso_rec.num_seq

			call log_setvar('consistir', l_consistir)
			#epl indicador se deve fazer a consistencia da nota ou n�o
			#epl tipo: smallint

			call sup3760y_after_process_modificacao_aviso_rec()
			let l_consistir = log_getvar('consistir')
		end if

		##n�o precisa verificar se houve erro, pois pode ser realizado a consist�ncia
		##da nota fiscal mesmo assim.
		#if p_houve_erro = false then
		if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
			m_consiste_nf_integr) then
			if m_cons_modific = "s" and l_consistir then
				call sup376_processa_consistencia("s")
			else
				if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
				end if
			end if

			call sup0047_rateio_frete()
		end if
		#end if

		if m_altera_nfm_7_para_6_aut = 's' and
			p_dados_tela.ies_especie_nf = 'nfp' then
			if m_nf_aguard_nfe_ant = "7" and ## 774472 (s� ir� verificar e trocar nfm para tipo 6 caso tenha recebido todas as nfp(s) como tipo 6)
				p_dados_tela.ies_nf_aguard_nfe <> "7" then
				call sup3760_verifica_nfm_total()
			end if
		end if
		#ler par�metro e verificar se a quantidade da nfm foi totalmente atendida

		if not p_houve_erro then

			if p_dados_tela.ies_nf_aguard_nfe = "a" or
				p_dados_tela.ies_nf_aguard_nfe = "b" then

				let l_depositante = null
				whenever error continue
				select ar_depos.cod_depositante
				into l_depositante
				from ar_depos
				where ar_depos.cod_empresa   = p_cod_empresa
				and ar_depos.num_aviso_rec = p_nf_sup.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("select","ar_depos - wms")
					let p_houve_erro = true
				end if

				if not p_houve_erro then
					call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,l_depositante,today,0) returning l_contrato, l_status
					if l_contrato <> "0" then
						let l_trans_contrato = wmst15_wms_contrato_busca_transacao(p_cod_empresa,l_contrato)
						if wmsm15_wms_contrato_leitura(p_cod_empresa,l_trans_contrato,true,1) then
							if wmsm15_wms_contrato_get_altera_tip_estoque_nota_fiscal() <> "n" then
								let l_comando = p_cod_empresa clipped,"' ",
								p_nf_sup.num_aviso_rec,
								" 's' ",
								" 's' "
								call log1200_executa_programa("wms6132",l_comando)
							end if
						end if
					else
						call log0030_processa_mensagem("n�o existe contrato ativo para o depositante.","exclamation",0)
						let p_houve_erro = true
					end if

				end if

			end if

		end if

	else
		#call log003_err_sql("modificacao","aviso_rec")
		error " modificacao cancelada. "
		call log085_transacao("rollback")
	end if
else
	clear form
	error " modificacao cancelada. "
	call log085_transacao("rollback")
	if m_grava_sup0964 = true then
		whenever error continue
		insert into sup_libr_nf_vencd values (p_cod_empresa,
		p_dados_tela.num_nf,
		p_dados_tela.ser_nf,
		p_dados_tela.ssr_nf,
		p_dados_tela.ies_especie_nf,
		p_dados_tela.cod_fornecedor,
		p_dados_tela.dat_entrada_nf,
		p_user,
		" ",
		" ",
		null)
	end if

	let p_dados_tela.* = p_dados_telar.*
	let p_formonly.* = p_formonlyr.*
	let m_num_nfe = m_num_nfe_r

	call sup376_exibe_dados()
	call sup376_exibe_array()
end if
close cm_aviso_rec
free cm_aviso_rec  #745465#
end if

end function

#-----------------------------#
function sup376_deleta_seq()
#-----------------------------#
	define p_nr_nf               char(7),
	l_cont                smallint,
	l_qtd_recebida        like nf_pend.qtd_recebida,
	lr_ar_x_nf_pend       record like ar_x_nf_pend.*,
	l_prog_contagem       like par_sup_pad.par_txt,
	l_nf_remessa          like sup_retn_item_terc.nf_remessa,
	l_seq_nf_remessa      like sup_retn_item_terc.seq_nf_remessa,
	l_seq_tabulacao       like sup_retn_item_terc.seq_tabulacao,
	l_qtd_devolvida       like sup_retn_item_terc.qtd_devolvida,
	l_dat_entrada_nf      date,
	l_qtd_fat_item_fci    like sup_item_fci.qtd_fat_item_fci, ### tfgj52
	l_msg                 char(200), ### tfgj52
	l_count               smallint,
	l_parametro           like sup_parametro_item.parametro, ### tfcejr
	l_ies_tip_entrada     like cod_fiscal_sup.ies_tip_entrada

## 407088
	define l_cod_fornecedor      like nf_sup.cod_fornecedor,
	l_ar_fornecedor       like sup_ar_it_forn_dep.ar_fornecedor,
	l_seq_fornecedor      like sup_ar_it_forn_dep.seq_fornecedor,
	l_total               like sup_ar_it_forn_dep.qtd_regularizada,
	l_status              smallint

	let m_solicitou_mp   = false
	let m_solicitou_ciap = false
	let m_confirmou_mp   = true
	let m_confirmou_ciap = true

	declare cq_num_seqs3 cursor for
	select num_seq, num_pedido, num_oc
	from aviso_rec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_seq       = p_num_seq
	and num_pedido    > 0
	order by num_oc

	let m_count_seq = 1
	initialize ma_inf_ar to null
	if m_count_seq >= arraylength(ma_inf_ar) then
		call arrayadditem(ma_inf_ar,1)
	end if
	foreach cq_num_seqs3 into ma_inf_ar[m_count_seq].num_seq,
	ma_inf_ar[m_count_seq].num_pedido,
	ma_inf_ar[m_count_seq].num_oc
	let m_count_seq = m_count_seq + 1
	if m_count_seq >= arraylength(ma_inf_ar) then
		call arrayadditem(ma_inf_ar,1)
	end if
end foreach
let m_count_seq = m_count_seq - 1

call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq)
if sqlca.sqlcode <> 0 then
	let p_houve_erro = true
return
end if

#tewmqn - somente permitir excluir o item caso n�o tenha relacionamento do frete com o ar
let l_count = 0
whenever error continue
select count(*)
into l_count
from sup_frete_x_nf_entrada
where sup_frete_x_nf_entrada.empresa       = p_cod_empresa
and sup_frete_x_nf_entrada.aviso_recebto = p_nf_sup.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("select","sup_frete_x_nf_entrada")
end if

if p_nf_sup.num_conhec > 0 or l_count > 0 then
	call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
	let p_houve_erro = true
return
else
	if sup3760_valida_frete_cif_nf() = true then
		call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
		let p_houve_erro = true
		return
	end if
end if
#tewmqn

if sup376_verifica_cond_delecao("excluir") = true then
	if ((p_dados_tela.cod_operacao[1] = "7" and
		(p_dados_tela.ies_especie_nf = "nfe" or
		p_dados_tela.ies_especie_nf = "nfp" )) or m_nfr_import) and
		((m_ies_utiliz_provisao = "s" and
		m_utiliz_nfm_import = "n" and
		m_num_processo >= m_inicio_provisao) or
		p_nf_sup.ies_situa_import = "r") then
		let m_num_processo = sup3760_busca_numero_processo_importacao()
		if m_num_processo is null then
			let m_num_processo = -1
		end if
		if m_num_processo <> -1 then
			if m_num_processo >= g_proc_ini_os163407 then
				if not imp0101_desfaz_rateio(m_num_processo,p_dados_tela.num_aviso_rec,p_num_seq) then
					error "problema ao desfazer o rateio das despesas de importacao"
					sleep 2
					let p_houve_erro = true
					return
				end if
			else
				if not imp0101_desfaz_rateio_ant(m_num_processo,p_dados_tela.num_aviso_rec,p_num_seq) then
					error "problema ao desfazer o rateio das despesas de importacao"
					sleep 2
					let p_houve_erro = true
					return
				end if
			end if
		end if
	end if
	if find4glfunction('supr_imposto_substituto_transf_saldo') then
		call supr_imposto_substituto_set_exclui_dev(true)
		if supr_imposto_substituto_transf_saldo(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq, true) = false then
			call log0030_mensagem("n�o existe nota para transfer�ncia do imposto substituto.","exclamation")
			let p_houve_erro = true
			return
		end if
		call supr_imposto_substituto_set_exclui_dev(false)
	end if

	let l_qtd_fat_item_fci = 0

	whenever error continue
	select sum(qtd_fat_item_fci)
	into l_qtd_fat_item_fci
	from sup_item_fci
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = p_num_seq
	whenever error stop
	if l_qtd_fat_item_fci <> 0 then
		let l_msg = 'esta nota possui fci relacionado com nota fiscal de saida, n�o pode ser excluida/cancelada.'
		call log0030_mensagem(l_msg,"exclamation")
		let p_houve_erro = true
		return
	else
		whenever error continue
		delete from sup_item_fci
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = p_num_seq
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","sup_item_fci(3)")
			let p_houve_erro = true
			return
		end if
	end if

	whenever error continue
	select * into p_ar_ped.*
	from ar_ped
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_seq       = p_num_seq
	whenever error stop

	if p_dados_tela.ies_nf_aguard_nfe <> "7" then
		#if (p_aviso_rec.ies_item_estoq = "n" and    *** rafael - os314473
		#  (p_par_sup_compl.ies_conta_ok_n_est = "2" or
		# (p_par_sup_compl.ies_conta_ok_n_est = "3" and
		# p_dados_tela.ies_especie_nf = "nfs"))) or
		#p_aviso_rec.ies_item_estoq = "s" then
		if sup376_possui_avf_insp_ar() = false then
			if p_aviso_rec.ies_liberacao_insp = "s" and
				p_aviso_rec.ies_situa_ar = "e" then
				### os237529 ###
				initialize l_prog_contagem to null
				select par_txt
				into l_prog_contagem
				from par_sup_pad
				where par_sup_pad.cod_empresa   = p_cod_empresa
				and par_sup_pad.cod_parametro = "prog_contagem"
				if sqlca.sqlcode <> 0 or
					l_prog_contagem is null then
					let l_prog_contagem = " "
				end if

				if l_prog_contagem = "sup0799" then
					call log0030_mensagem(" exclua primeiramente resultado de contagem - sup0799 ","exclamation")
					let p_houve_erro = true
					return
				end if

				error " aguarde ... excluindo inspecao ... "
				call log_setvar("nom_usuario",p_user)

				let comando3 = p_cod_empresa, " ",
				p_aviso_rec.num_aviso_rec,  " ",
				p_num_seq, " ",
				"exclusao"," ",
				"sup3760"
				call log1200_executa_programa("sup0570",comando3)

				let p_ies_situa_ar = null
				call sup376_busca_aviso_rec(p_cod_empresa, p_aviso_rec.num_aviso_rec, p_num_seq)
				let p_ies_situa_ar = p_aviso_rec.ies_situa_ar

				if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
					p_cod_empresa,
					p_aviso_rec.num_aviso_rec) = false then
					if p_aviso_rec.ies_item_estoq = "s" then
						call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
					else
						call sup0063_verifica_controles(11, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
					end if
				end if

				if p_ies_custo_grade = "s" and
					m_controles <> " "     then
					## quando a empresa utiliza custo por grade, a contagem
					## eh excluida ja quando faz a exclusao da inspecao.
					if p_ies_situa_ar <> "c" then
						call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
						let p_houve_erro = true
						return
					end if
				else
					if p_ies_situa_ar <> "i" then
						call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
						let p_houve_erro = true
						return
					end if
				end if
				error " exclusao de inspecao realizada com sucesso. "
			end if
		else
			if p_aviso_rec.ies_item_estoq = "s" then
				if avf1003_exclusao_qualidade(p_aviso_rec.num_aviso_rec,
					p_num_seq) = false then
					let p_houve_erro = true
					call log0030_mensagem(" problemas na exclusao da inspecao (avf). ","exclamation")
					return
				end if
			end if
		end if

		if p_aviso_rec.ies_liberacao_cont = "s" then
			error " aguarde ... excluindo contagem ... "

			call sup3760_atualiza_nota(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
			p_dados_tela.num_aviso_rec, p_dados_tela.cnd_pgto_nf)

			let comando3 = p_cod_empresa, " ",
			p_dados_tela.num_aviso_rec," ",
			p_num_seq, " ",
			3760," ",
			"s"," ","exclusao"
			call log1200_executa_programa("sup0530",comando3)

			let p_ies_situa_ar = null
			call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_num_seq)
			let p_ies_situa_ar = p_aviso_rec.ies_situa_ar
			if p_ies_situa_ar <> "c" then
				call log0030_mensagem(" problemas na exclusao da contagem. ","exclamation")
				sleep 2
				return
			end if
			error " exclusao de contagem realizada com sucesso. "
		end if
		#end if
	end if

	whenever error continue
	let l_cont = 0
	select count(*)
	into l_cont
	from deb_fornec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_seq       = p_num_seq
	whenever error stop
	if l_cont = 0 then
	else call log0030_mensagem(" existe deb_fornec - excluir registro no sup5960","exclamation")
		sleep 2
		let p_houve_erro = true
		return
	end if

	whenever error continue
	let l_cont = 0
	select count(*)
	into l_cont
	from dev_fornec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_seq       = p_num_seq
	whenever error stop
	if l_cont = 0 then
	else call log0030_mensagem(" existe devolu��o a fornecedores - excluir registro no sup0460","exclamation")
		sleep 2
		let p_houve_erro = true
		return
	end if

	whenever error continue
	call log085_transacao("begin")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("begin transaction","exclusao item")
		return
	end if

	if m_cred_st_fat = "s"
		or m_cred_st_fat = "e" then
		if not sup1466_valida_saldo_com_revd_st(p_cod_empresa,p_dados_tela.num_aviso_rec,p_num_seq,"exclusao") then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback transaction","exclusao item")
			end if
			return
		end if
	end if

	let p_nr_nf = p_dados_tela.num_nf

	if p_dados_tela.ies_especie_nf = "nfm" then
		whenever error continue
## os 205898
		initialize l_qtd_recebida to null
		select qtd_recebida
		into l_qtd_recebida
		from nf_pend
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and cod_fornecedor = p_dados_tela.cod_fornecedor
		and cod_item       = p_aviso_rec.cod_item
		let l_qtd_recebida = l_qtd_recebida - p_aviso_rec.qtd_declarad_nf
		if l_qtd_recebida = 0 then
			delete from nf_pend
			where cod_empresa    = p_cod_empresa
			and num_nf         = p_dados_tela.num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and cod_fornecedor = p_dados_tela.cod_fornecedor
			and cod_item       = p_aviso_rec.cod_item
		else
			update nf_pend
			set qtd_recebida = qtd_recebida - p_aviso_rec.qtd_declarad_nf
			where cod_empresa    = p_cod_empresa
			and num_nf         = p_dados_tela.num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and cod_fornecedor = p_dados_tela.cod_fornecedor
			and cod_item       = p_aviso_rec.cod_item
		end if
		whenever error stop
	end if

	if p_dados_tela.ies_especie_nf = "nfp" then
		declare cq_ar_x_nf_pend3 cursor for
		select *
		from ar_x_nf_pend
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		and num_seq       = p_num_seq

		foreach cq_ar_x_nf_pend3 into lr_ar_x_nf_pend.*
		whenever error continue
		update nf_pend
		set qtd_regularizada = qtd_regularizada -
		lr_ar_x_nf_pend.qtd_regularizada
		where cod_empresa    = lr_ar_x_nf_pend.cod_empresa
		and num_nf         = lr_ar_x_nf_pend.num_nf
		and ser_nf         = lr_ar_x_nf_pend.ser_nf
		and ssr_nf         = lr_ar_x_nf_pend.ssr_nf
		and cod_fornecedor = lr_ar_x_nf_pend.cod_fornecedor
		and cod_item       = lr_ar_x_nf_pend.cod_item
		whenever error stop
	end foreach

	whenever error continue
	delete from ar_x_nf_pend
	where cod_empresa    = p_cod_empresa
	and num_aviso_rec  = p_dados_tela.num_aviso_rec
	and num_seq        = p_num_seq
	whenever error stop
end if

delete from ar_pis_cofins
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

#os 359707
whenever error continue
delete from obf_dvcli_piscofin
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop

whenever error continue
delete from obf_p_dvcli_cofins
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop
#os 359707

#-in�cio ch-tfh675-#
if log0150_verifica_se_tabela_existe("sup_grd_nfe") then
	whenever error continue
	delete from sup_grd_nfe
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = p_num_seq
	whenever error stop
end if
#-fim ch-tfh675-#

whenever error continue ##os 361268
delete from sup_par_devol_cli
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop

whenever error continue
delete from sup_ar_piscofim
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop

whenever error continue
delete from sup_fr_pis_cofins
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop

if not sup3760_desfaz_relac_desp_proc() then
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

delete from aviso_rec_proc_imp
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

#fluxo de caixa
if not fcl1150_integra_sequencia_ar_fcx(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_num_seq,"ex") then
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

delete from ar_ped
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

delete from ar_os_esp
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

delete from nf_sup_erro
where empresa       = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

delete from dest_aviso_rec
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

if p_ies_contab_aen = "4" then
	delete from dest_aviso_rec4
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_seq       = p_num_seq
end if

delete from ar_diverg
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

delete from ar_diverg_provid
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

if m_exst_carcoraut then # 523038
	whenever error continue
	delete from sup_cart_corr_aut
	where empresa       = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","sup_cart_corr_aut(3)")
	end if
end if

whenever error continue
delete from ar_nf_item
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq
whenever error stop

whenever error continue
delete from sup_par_ar
where empresa           = p_cod_empresa
and aviso_recebto     = p_aviso_rec.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop

if find4glfunction('supr_ar_item_fisc_exclui_todos') then
	call supr_ar_item_fisc_exclui_todos(p_cod_empresa,'0',p_aviso_rec.num_aviso_rec,p_num_seq,0)
returning l_status
	if l_status = false then
		return false
	end if
else
	### dmansuplgx-1251
	if m_sup_ar_item_fisc = true then
		whenever error continue
		delete from sup_ar_item_fisc
		where empresa       = p_cod_empresa
		and aviso_recebto = p_aviso_rec.num_aviso_rec
		and seq_aviso_recebto = p_num_seq
		whenever error stop
	end if

	#### os 139067
	whenever error continue
	delete from ar_subst_tribut
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and num_seq       = p_num_seq
	whenever error stop
end if

delete from dev_item
where cod_empresa   = p_cod_empresa
and num_nff       = p_dados_tela.num_aviso_rec
and num_sequencia = p_num_seq

whenever error continue
delete from sup_nf_devol_cli
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop

### tfcejr - se tiver registro na sup_parametro_item referente registro f150 para o ar este dever� ser eliminado na
### exclus�o do item relacionado a devolu��o de cliente
### dmanentlgx-5970 (funcao utilizada no cancelamento e exclusao nota fiscal - nao estava considerando chave primaria da tabela)
call sup0686_retorna_tipo_entrada(p_dados_tela.cod_operacao,
0)
returning l_status,
l_ies_tip_entrada
if p_dados_tela.ies_especie_nf = "nfd" or l_ies_tip_entrada = '5' then
	let l_parametro = 'f150_vl_tot_est_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(1)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_est_imp_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(2)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_vl_bc_est_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(3)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_vl_bc_men_est_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(4)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_cst_pis_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(5)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_aliq_pis_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(6)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_vl_cred_pis_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(7)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_cst_cofins_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(8)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_aliq_cofins_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(9)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_vl_cred_cofins_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(10)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_desc_est_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(11)")
		let p_houve_erro = true
	end if

	let l_parametro = 'f150_cod_cta_', p_dados_tela.num_aviso_rec using '&&&&&&', p_num_seq using '&&&','%'
	whenever error continue
	delete from sup_parametro_item
	where empresa = p_cod_empresa
	and item = p_aviso_rec.cod_item
	and parametro like l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_parametro_item(12)")
		let p_houve_erro = true
	end if
end if

### fim tfcejr

whenever error continue
delete from sup_trib_benef_nf_devol_cli
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = p_num_seq
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("(3)delete","sup_trib_benef_nf_devol_cli")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

{awc}
whenever error continue
delete from sup_nf_fat_remessa
where sup_nf_fat_remessa.empresa           = p_cod_empresa
and sup_nf_fat_remessa.nota_fiscal       = p_dados_tela.num_nf
and sup_nf_fat_remessa.serie_nota_fiscal = p_dados_tela.ser_nf
and sup_nf_fat_remessa.subserie_nf       = p_dados_tela.ssr_nf
and sup_nf_fat_remessa.espc_nota_fiscal  = p_dados_tela.ies_especie_nf
and sup_nf_fat_remessa.fornecedor        = p_dados_tela.cod_fornecedor
and sup_nf_fat_remessa.seq_item_nf       = p_num_seq
whenever error stop

if log0150_verifica_se_tabela_existe("cap_rateio_natureza_rendto") and
	find4glfunction('capm212_cap_rateio_natureza_rendto_exclui_item') then
	call capm212_cap_rateio_natureza_rendto_exclui_item(p_cod_empresa,p_dados_tela.num_nf,
	p_dados_tela.ser_nf,p_dados_tela.ssr_nf,
	p_dados_tela.ies_especie_nf,p_dados_tela.cod_fornecedor, p_num_seq,
	false,false,false)
end if


delete from ar_iss
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq

if (p_dados_tela.ies_especie_nf = "nfr"  or
	p_dados_tela.ies_especie_nf = "nfe") and ### os 511148
	p_dados_tela.ies_nf_aguard_nfe = "x" then
	call sup3760_exclui_nf_consig("aviso",p_dados_tela.num_aviso_rec,p_num_seq)
	#-- ch tfskoh inicio --#
	if p_houve_erro = true then
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
	#-- ch tfskoh fim --#
else
	if sup376_elimina_item_ret_terc(p_dados_tela.num_aviso_rec,p_num_seq,"1") = false then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
end if

#dmanentlgx-236
if p_dados_tela.ies_especie_nf = 'nfs' then
	if not avfr6_exclusao_inspecao(p_cod_empresa,
		p_aviso_rec.num_aviso_rec,
		p_num_seq) then
		call log0030_mensagem(" problemas na exclus�o da inspecao (avf). ","exclamation")
		return
	end if
end if
#dmanentlgx-236

#if p_par_sup_compl.ies_rastreio = "1" then
delete from avf_insp_ar
where avf_insp_ar.empresa           = p_cod_empresa
and avf_insp_ar.aviso_recebto     = p_dados_tela.num_aviso_rec
and avf_insp_ar.seq_aviso_recebto = p_num_seq
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclusao","avf_insp_ar")
	let p_houve_erro = true
end if

#inicio trov74
if log_existe_epl("sup3760y_after_process_delete_avf_insp_ar_2") then
	call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
	#epl n�mero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('num_seq', p_num_seq)
	#epl sequ�ncia do ar
	#epl tipo: aviso_rec.num_seq

	call log_setvar('cod_item', p_aviso_rec.cod_item)
	#epl codigo do item do ar
	#epl tipo: aviso_rec.cod_item

	call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
	#epl codigo do fornecedor do ar
	#epl tipo: nf_sup.cod_fornecedor

	if sup3760y_after_process_delete_avf_insp_ar_2() = false then
		let p_houve_erro = true
	end if
end if
#inicio trov74

whenever error continue #os560935
delete from avf_pl_insp_ar
where avf_pl_insp_ar.empresa           = p_cod_empresa
and avf_pl_insp_ar.aviso_recebto     = p_dados_tela.num_aviso_rec
and avf_pl_insp_ar.seq_aviso_recebto = p_num_seq
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql('delete','avf_pl_insp_ar')
end if
#end if

delete from aviso_rec
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclusao","aviso_rec")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

if sup3760_cursor_excl_sup_retn_item_terc(true) = false then
	let p_houve_erro = true
end if

if not p_houve_erro then
	whenever error continue
	open cq_exclui_grd using p_cod_empresa,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.ies_especie_nf,
	p_dados_tela.cod_fornecedor,
	p_num_seq
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open","sup_retn_item_terc(2)")
		let p_houve_erro = true
	end if

	if not p_houve_erro then
		while true
			whenever error continue
			fetch cq_exclui_grd into l_nf_remessa, l_seq_nf_remessa,
			l_seq_tabulacao, l_qtd_devolvida
			whenever error stop
			if sqlca.sqlcode <> 0 then
				if sqlca.sqlcode <> 100 then
					call log003_err_sql("fetch","sup_retn_item_terc(2)")
					let p_houve_erro = true
				end if

				exit while
			end if

			whenever error continue
			delete from sup_retn_item_terc
			where sup_retn_item_terc.empresa           = p_cod_empresa
			and sup_retn_item_terc.nota_fiscal       = p_dados_tela.num_nf
			and sup_retn_item_terc.serie_nota_fiscal = p_dados_tela.ser_nf
			and sup_retn_item_terc.subserie_nf       = p_dados_tela.ssr_nf
			and sup_retn_item_terc.espc_nota_fiscal  = p_dados_tela.ies_especie_nf
			and sup_retn_item_terc.fornecedor        = p_dados_tela.cod_fornecedor
			and sup_retn_item_terc.seq_aviso_recebto = p_num_seq
			and sup_retn_item_terc.nf_remessa        = l_nf_remessa
			and sup_retn_item_terc.seq_nf_remessa    = l_seq_nf_remessa
			and sup_retn_item_terc.seq_tabulacao     = l_seq_tabulacao
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("delete","sup_retn_item_terc(2)")
				let p_houve_erro = true
			end if

			if not p_houve_erro then
				whenever error continue
				update sup_itterc_grade
				set sup_itterc_grade.qtd_tot_receb = sup_itterc_grade.qtd_tot_receb -
				l_qtd_devolvida
				where sup_itterc_grade.empresa       = p_cod_empresa
				and sup_itterc_grade.nota_fiscal   = l_nf_remessa
				and sup_itterc_grade.seq_item_nf   = l_seq_nf_remessa
				and sup_itterc_grade.fornecedor    = p_dados_tela.cod_fornecedor
				and sup_itterc_grade.seq_tabulacao = l_seq_tabulacao
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("update","sup_itterc_grade(2)")
					let p_houve_erro = true
				end if
			end if

			if p_houve_erro then
				exit while
			end if
		end while
	end if
end if

### os 277425 ###
if sup3766_exclui_sup_ar_grade(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_num_seq) = false then
	let p_houve_erro = true
end if
### fim os 277425 ###

if not sup1031_grava_audit_ar(p_dados_tela.num_aviso_rec,
	p_num_seq,
	"sup3760","5") then
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

#-in�cio ch-tfrc09-#
if log_existe_epl('sup3760y_after_process_delete_aviso_rec_item') then
	call log_setvar('cod_empresa', p_cod_empresa)
	#epl codigo da empresa
	#epl tipo: aviso_rec.cod_empresa

	call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('num_seq', p_num_seq)
	#epl numero da sequencia do ar
	#epl tipo: aviso_rec.num_seq

	call log_setvar('num_oc', p_aviso_rec.num_oc)
	#epl numero da oc
	#epl tipo: aviso_rec.num_oc

	call log_setvar('cod_item', p_aviso_rec.cod_item)
	#epl c�digo do item
	#epl tipo: aviso_rec.cod_item

	call log_setvar('houve_erro', p_houve_erro)
	#epl indicador se houve erro no processamento
	#epl tipo: smallint

	call log_setvar('ies_situa_ar', p_aviso_rec.ies_situa_ar)
	#epl situa��o do ar
	#epl tipo: char(01)

	call sup3760y_after_process_delete_aviso_rec_item()
	let p_houve_erro = log_getvar('houve_erro')
end if
#-fim ch-tfrc09-#

### os 159597 ###
if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
	whenever error continue
	update sup_ctr_balanca
	set aviso_recebto     = null
	where empresa           = p_cod_empresa
	and num_docum         = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	and seq_nota_fiscal   = p_num_seq
	and tip_pesagem       = "1"
	whenever error stop
end if

if p_dados_tela.ies_nf_aguard_nfe = "a" then
	let l_cont = 0
	select count(*)
	into l_cont
	from aviso_rec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	if l_cont = 1 then
		delete from ar_depos
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
	end if
end if

if p_dados_tela.ies_nf_aguard_nfe = "b" then
	delete from item_de_terc_dep
	where cod_empresa     = p_cod_empresa
	and num_nf          = p_dados_tela.num_nf
	and ser_nf          = p_dados_tela.ser_nf
	and ies_especie_nf  = p_dados_tela.ies_especie_nf
	and cod_fornecedor  = p_dados_tela.cod_fornecedor
	and num_sequencia   = p_num_seq

	whenever error continue
	declare cq_ar_depos cursor for
	select ar_fornecedor, seq_fornecedor
	from sup_ar_it_forn_dep
	where empresa        = p_cod_empresa
	and ar_depositante = p_dados_tela.num_aviso_rec
	and seq_depositante = p_num_seq
	whenever error stop

	whenever error continue
	foreach cq_ar_depos into l_ar_fornecedor, l_seq_fornecedor
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_ar_depos")
		exit foreach
	end if

	whenever error continue
	delete from sup_ar_it_forn_dep
	where empresa        = p_cod_empresa
	and ar_fornecedor  = l_ar_fornecedor
	and seq_fornecedor = l_seq_fornecedor
	and ar_depositante = p_dados_tela.num_aviso_rec
	and seq_depositante = p_num_seq
	whenever error stop

	whenever error continue
	select 1 from sup_ar_it_forn_dep
	where empresa        = p_cod_empresa
	and ar_fornecedor  = l_ar_fornecedor
	and ar_depositante = p_dados_tela.num_aviso_rec
	whenever error continue
	if sqlca.sqlcode = 100 or sqlca.sqlcode = notfound then
		whenever error continue
		delete from ar_fornec_depos
		where cod_empresa   = p_cod_empresa
		and num_ar_fornec = l_ar_fornecedor
		and num_ar_depos  = p_dados_tela.num_aviso_rec
		whenever error stop
	end if

	let l_total = 0
	whenever error continue
	select sum(qtd_regularizada) into l_total
	from sup_ar_it_forn_dep
	where empresa        = p_cod_empresa
	and ar_fornecedor  = l_ar_fornecedor
	and seq_fornecedor = l_seq_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 or l_total is null then
		let l_total = 0
	end if

	whenever error continue
	update sup_ar_item_fornec set qtd_regularizada = l_total
	where empresa           = p_cod_empresa
	and aviso_recebto     = l_ar_fornecedor
	and seq_aviso_recebto = l_seq_fornecedor
	whenever error stop
end foreach
whenever error stop
end if

delete from sup_infc_strib_nfe
where empresa            = p_cod_empresa
and nf_entrada         = p_dados_tela.num_nf
and serie_nf_entrada   = p_dados_tela.ser_nf
and subserie_nfe       = p_dados_tela.ssr_nf
and especie_nf_entrada = p_dados_tela.ies_especie_nf
and fornecedor         = p_dados_tela.cod_fornecedor
and seq_item_nfe       = p_aviso_rec.num_seq
if p_dados_tela.cod_empresa_estab is null then
	whenever error continue
	delete from rec_find_ent_ar
	where empresa         = p_cod_empresa
	and empresa_estabel is null
	and aviso_recebto   = p_dados_tela.num_aviso_rec
	whenever error stop
else
	whenever error continue
	delete from rec_find_ent_ar
	where empresa         = p_cod_empresa
	and empresa_estabel = p_dados_tela.cod_empresa_estab
	and aviso_recebto   = p_dados_tela.num_aviso_rec
	whenever error stop
end if

delete from aviso_rec_aux
where cod_empresa = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclusao","aviso_rec_aux")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

delete from aviso_rec_compl_sq
where cod_empresa  = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_seq       = p_num_seq
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclusao","aviso_rec")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

## os 407088
call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor
call sup3760_exclui_item_de_terc(l_cod_fornecedor, p_aviso_rec.num_seq )

delete from item_dev_terc_comp
where item_dev_terc_comp.cod_empresa = p_cod_empresa
and item_dev_terc_comp.num_nf = p_dados_tela.num_nf
and item_dev_terc_comp.ser_nf = p_dados_tela.ser_nf
and item_dev_terc_comp.ssr_nf = p_dados_tela.ssr_nf
and item_dev_terc_comp.num_sequencia = p_aviso_rec.num_seq

if sup3760_verifica_fornec_incl_regime_compex(p_cod_empresa,
	p_dados_tela.dat_emis_nf,
	p_dados_tela.cod_fornecedor) then
	call sup3760_exclusao_inclusao_item_compex(p_cod_empresa,
	p_aviso_rec.num_aviso_rec)
end if

if m_exst_rel_fre_indt then
	whenever error continue
	delete from sup_relc_ftre_indt
	where sup_relc_ftre_indt.empresa   = p_cod_empresa
	and sup_relc_ftre_indt.aviso_recebto = p_dados_tela.num_aviso_rec
	and sup_relc_ftre_indt.seq_aviso_recebto = p_aviso_rec.num_seq
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","sup_relc_ftre_indt")
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("rollback transaction","exclusao item")
		end if
		return
	end if
end if

##se for integra��o on-line poder� existir lan�amentos cont�beis para o documento,
##j� que o indicador ies_incl_contab s� passar� para "s" quando for efetuado
##a integra��o cont�bil (gera��o do lote ou arquivo texto).
if not supr6_integracao_batch(p_cod_empresa) and
	supr6_data_posterior_data_corte_logix_10(p_cod_empresa,
	p_dados_tela.dat_entrada_nf) then

	if not supr6_validacao_data_inicial_e_final_processamento(p_cod_empresa,
		p_dados_tela.dat_entrada_nf,
		p_dados_tela.dat_entrada_nf,
		"manual",
		false) then
		let p_houve_erro = true
	else
		if m_dat_entrada_ant is null then
			let l_dat_entrada_nf = p_dados_tela.dat_entrada_nf
		else
			let l_dat_entrada_nf = m_dat_entrada_ant
		end if

		if not supr6_exclui_lancamento_contabil_documento("manual",
			p_cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.num_aviso_rec,
			l_dat_entrada_nf,
			p_num_seq,false) then
			let p_houve_erro = true
		end if
	end if
end if

if p_aviso_rec.num_oc > 0 then
	#fluxo de caixa

	#atualizar saldo da ordem de compra no
	#fluxo de caixa ap�s exclus�o de inf. fiscais do ar
	if not fcl1150_integra_oc_fcx(p_aviso_rec.cod_empresa,
		p_aviso_rec.num_oc,"in") then
		let p_houve_erro = true
	end if
end if

if p_houve_erro = true then
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
else
	whenever error continue
	call log085_transacao("commit")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("commit transaction","exclusao item")
		call log085_transacao("rollback") #os596059
		return
	end if
end if

if  m_recalcula_impostos_nf_imp = "s"
	and p_dados_tela.cod_operacao[1,1] = "7"  then
	call sup3760_recalcula_impostos_nf_imp()
end if

### tejwu8 - ao excluir item na nota ser� obrigat�rio que seja efetuada reconsist�ncia da nota fiscal.
select *
from nf_sup_erro
where nf_sup_erro.empresa = p_cod_empresa
and nf_sup_erro.num_aviso_rec = p_dados_tela.num_aviso_rec
and nf_sup_erro.num_seq   = 0
and nf_sup_erro.des_pendencia_item =  "falta efetuar consistencia"
and nf_sup_erro.ies_origem_erro = "1"
if sqlca.sqlcode <> 0 then
	insert into nf_sup_erro ( empresa, num_aviso_rec, num_seq, des_pendencia_item, ies_origem_erro, ies_erro_grave )  values ( p_dados_tela.cod_empresa,
	p_dados_tela.num_aviso_rec,
	0,
	"falta efetuar consistencia",
	"1",
	"s")
	if sqlca.sqlcode <> 0 then
		let p_houve_erro = true
	end if
end if

message "item do aviso de recebimento excluido com sucesso. " attribute(reverse)
initialize p_array[p_num_seq].* to null
initialize p_array_compl[p_num_seq].* to null
call sup376_exibe_array() # os 415085 - winston
else
	if p_aviso_rec.ies_receb_fiscal = "s"then
		if sup376_deleta_inf_fiscais(p_num_seq) = false  then
			return
		end if
	end if
end if

end function

#---------------------------------------------#
function sup376_calcula_val_liquido(p_funcao)
#---------------------------------------------#
	define p_funcao char(30)
	define p_qtd_estoque like estoque.qtd_liberada

	let p_qtd_estoque = 0
	if p_funcao = "modificacao" then
		select * into p_aviso_rec.*
		from  aviso_rec
		where aviso_rec.cod_empresa   = p_cod_empresa
		and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
		and aviso_rec.num_seq       = p_array[p_ind].seq
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("leitura","aviso_rec")
		end if
	end if
	if p_funcao = "inclusao" or p_funcao = "inclu.itens" then
		if p_nfe_vendas = false or m_nf_tipo_x  = false then ### os 511148
			let p_aviso_rec.val_desc_item = 0
		end if
		let p_aviso_rec.val_acrescimos     = 0
		let p_aviso_rec.val_enc_financ     = 0
		let p_aviso_rec.val_despesa_aces_i = 0
		if p_nfe_import = true or p_nfm_import = true then
			if p_array[p_ind].qtd_declarad_nf = 0 then
				if m_num_processo >= g_proc_ini_os163407 then
					let p_aviso_rec.ies_da_bc_ipi = sup3760_determina_indicador_da(p_cod_empresa, m_num_processo)
					let p_aviso_rec.val_despesa_aces_i = p_array_imp[p_ind].val_da_icms
				else
					let p_aviso_rec.ies_da_bc_ipi = "s"
					let p_aviso_rec.val_despesa_aces_i =
					p_array_imp[p_ind].val_ii + p_array_imp[p_ind].val_desp_imp
				end if
			else
				if m_num_processo >= g_proc_ini_os163407 then
					let p_aviso_rec.val_despesa_aces_i = p_array_imp[p_ind].val_da_icms
				else
					let p_aviso_rec.val_despesa_aces_i =
					p_array_imp[p_ind].val_ii + p_array_imp[p_ind].val_desp_imp
				end if
			end if
		else
			if p_nfe_vendas = true or #and - os 548081 - se for nota de devolu��o de vendas com frete cliente na nota de sa�da, deve gerar o valor de despesa acess�ria.
				m_nf_tipo_x  = true ### os 511148
				or p_ies_nf_transf = true or g_ies_nf_permuta = true # chamado 757.882
				then
				let p_aviso_rec.val_despesa_aces_i = p_array_imp[p_ind].val_da_icms
				if p_aviso_rec.val_despesa_aces_i is null then
					let p_aviso_rec.val_despesa_aces_i = 0
				end if
				let p_aviso_rec.ies_da_bc_ipi      = "s"
			end if
		end if
	end if
	if p_array[p_ind].qtd_declarad_nf = 0 then
		let p_aviso_rec.val_liquido_item = ((p_array[p_ind].pre_unit_nf     -
		p_aviso_rec.val_desc_item) * 1) +
		(p_aviso_rec.val_despesa_aces_i +
		p_aviso_rec.val_acrescimos)
	else
		let p_aviso_rec.val_liquido_item = ((p_array[p_ind].pre_unit_nf     -
		p_aviso_rec.val_desc_item)   *
		p_array[p_ind].qtd_declarad_nf) +
		(p_aviso_rec.val_despesa_aces_i +
		p_aviso_rec.val_acrescimos)
	end if
	let p_array[p_ind].val_liquido_item = p_aviso_rec.val_liquido_item
	let p_aviso_rec.val_contabil_item = p_aviso_rec.val_liquido_item
	if p_aviso_rec.ies_item_estoq  = "s" and
		p_array[p_ind].qtd_declarad_nf = 0 and
		p_par_sup.ies_modulo_estoque = "s" and
		p_par_sup.ies_vinc_fiscal    = "s" then
		select estoque.qtd_liberada  + estoque.qtd_lib_excep +
		estoque.qtd_impedida  + estoque.qtd_rejeitada
		into p_qtd_estoque
		from estoque
		where estoque.cod_empresa     = p_cod_empresa
		and estoque.cod_item         = p_array[p_ind].cod_item
		if sqlca.sqlcode = 0 then
			if p_qtd_estoque = 0 then
				open window w_exibe_err5 at 10,04
				with 3 rows, 56 columns
				attribute(border, prompt line last)
				display "a contabilizacao desta nota fiscal deve ser efetuada" at 1,1
				display "manualmente, pois o estoque deste item esta' = zero." at 2,1
				error " nota fiscal complementar de preco com estoque = 0 " attribute (reverse)
				if log004_confirm(14,42) then
					close window w_exibe_err5
				else
					close window w_exibe_err5
					return
				end if
			end if
		end if
	end if
	if p_array[p_ind].qtd_declarad_nf = 0 then
		let p_aviso_rec.val_liquido_item = ((p_array[p_ind].pre_unit_nf     -
		p_aviso_rec.val_desc_item) * 1) +
		(p_aviso_rec.val_despesa_aces_i +
		p_aviso_rec.val_acrescimos)
	else
		let p_aviso_rec.val_liquido_item = ((p_array[p_ind].pre_unit_nf     -
		p_aviso_rec.val_desc_item)   *
		p_array[p_ind].qtd_declarad_nf) +
		(p_aviso_rec.val_despesa_aces_i +
		p_aviso_rec.val_acrescimos)
	end if
	let p_array[p_ind].val_liquido_item = p_aviso_rec.val_liquido_item
	let p_aviso_rec.val_contabil_item = p_aviso_rec.val_liquido_item

	if m_wms_instal = 's' then
		let p_array_wms[p_ind].val_liquido_item = p_aviso_rec.val_liquido_item
	end if
end function

#-----------------------------------------#
function sup376_inclusao_item_aviso_rec()
#-----------------------------------------#
	define p_funcao                char(30),
	p_par_forn              char(01),
	l_cfop_destino          like aviso_rec.cod_fiscal_item,
	l_contrato              like wms_contrato.contrato,       # wms - columbia
	l_trans_contrato        like wms_contrato.trans,          # wms - columbia
	l_tip_estoque           like wms_tip_estoque.tip_estoque, # wms - columbia
	l_sqlcode               smallint, # wms - columbia
	l_status                smallint, # wms - columbia
	l_comando               char(100),
	l_status_epl            smallint,
	l_retorno_epl           smallint,
	l_cod_empresa_orig      char(02)

	define l_cod_fornecedor        like nf_sup.cod_fornecedor,
	l_continua              smallint #wms columbia

	let l_status_epl = true
	if log_existe_epl('sup3760y_before_process_inclusao_item_aviso_rec') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: aviso_rec.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		call log_setvar('status', l_status_epl)
		#epl status de retorno de epl
		#epl tipo: smallint

		call sup3760y_before_process_inclusao_item_aviso_rec()
		let l_status_epl = log_getvar('status')
	end if

	if not l_status_epl then
		return
	end if

	let g_ies_transf_benef = false
	let m_solicitou_mp     = false
	let m_solicitou_ciap   = false
	let m_confirmou_mp     = true
	let m_confirmou_ciap   = true

	if p_dados_tela.cod_operacao[1] = "7" and sup3760_possui_rateio_compl() then
		error " nota fiscal possui rateio de despesa complementar de importacao (sup5010) "
		return
	end if

	initialize p_fornec_incl_item to null
	for p_ind9 = 1 to arraylength(p_array_compl)
		if p_array_compl[p_ind9].num_pedido is not null and p_array_compl[p_ind9].num_pedido <> 0 then
			call sup376_busca_pedido_sup(p_cod_empresa, p_array_compl[p_ind9].num_pedido)
			if sqlca.sqlcode = 0 then
				let p_fornec_incl_item = p_pedido_sup.cod_fornecedor
				exit for
			end if
		end if
	end for

	let m_nfr_import = false
	if sup3760_nfr_consignatario("inclu.itens") then
		let m_nfr_import = true
	end if

	let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_nf_sup.cnd_pgto_nf)
	if l_cod_empresa_orig is not null then
		let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
	end if
	let p_ies_pagamento = p_cond_pgto_cap.ies_pagamento

	let p_formonlyr.*   = p_formonly.*
	let p_dados_telar.* = p_dados_tela.*
	let m_num_nfe_r     = m_num_nfe

	call sup3760_initialize_itens_nf()

	let p_funcao = "inclu.itens"

	declare cm_prx_seq scroll cursor for
	select max(num_seq)
	from aviso_rec
	where aviso_rec.cod_empresa = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec

	open cm_prx_seq
	fetch cm_prx_seq into p_prx_seq
	close cm_prx_seq

	let p_prx_seq = p_prx_seq + 1
	let p_inclu_item = "s"
	let int_flag = 0
	let p_houve_erro = 0

	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	let m_inclui_item_nota = true
	let l_continua = true
	if m_wms_instal = 's' and m_utiliza_codf_deposit = 's' then
		if p_dados_tela.ies_nf_aguard_nfe = "a" then
			whenever error continue
			select ar_depos.cod_depositante
			into m_wms_depositante
			from ar_depos
			where ar_depos.cod_empresa = p_cod_empresa
			and ar_depos.num_aviso_rec = p_dados_tela.num_aviso_rec
			whenever error stop
		else
			let m_wms_depositante =  p_dados_tela.cod_fornecedor
		end if
		# - - - - - - - - - - - - - - - -#
		let l_continua = sup376_insere_array_wms(p_funcao)
	else
		let l_continua = sup376_insere_array(p_funcao)
	end if

	call sup3766_set_m_ind_grade(0)
	let m_inclui_item_nota = false
	#--------------------------#

	if l_continua then
		message " aguarde ... efetuando inclusao de itens na nota fiscal ... " attribute(reverse)
		let p_inclu_item = "n"
		call log085_transacao("begin")
		for p_ind = 1 to arraylength(p_array)

			if p_array[p_ind].cod_item is not null and p_array[p_ind].qtd_declarad_nf is not null then
				call sup376_inicializa_campos_ar()

				let p_aviso_rec.val_despesa_aces_i = 0
				if p_dados_tela.ies_especie_nf <> "nfr" and p_dados_tela.ies_especie_nf <> "nfd" then
					call sup376_inclui_ar_ped()
				end if
				call sup376_move_campos_ar()

				### trvk25
				if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec) and
					p_array[p_ind].seq is null then
					exit for
				end if

				if p_dados_tela.ies_especie_nf = "nfr" then
					let p_par_forn = null
					call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
					p_aviso_rec.cod_item,
					p_dados_tela.dat_emis_nf,
					p_dados_tela.num_aviso_rec) returning p_par_forn
					if p_par_forn = "3" then
						let p_aguarda_fatura = "s"
					end if

					if p_par_forn = "1" then
						let p_cont_aut_terc = true


						if p_par_sup_compl_1.cod_tip_desp_terc is not null and
							p_par_sup_compl_1.cod_tip_desp_terc <> " " then
							let p_aviso_rec.cod_tip_despesa = p_par_sup_compl_1.cod_tip_desp_terc
						end if
					end if

					call sup376_busca_parametros_item(p_aviso_rec.cod_item)
					let p_parametros = p_item_parametro.parametros[2,2]

					if p_parametros = "2" then
						if p_par_sup_compl_1.cod_tip_desp_banc is not null and
							p_par_sup_compl_1.cod_tip_desp_banc <> " " then
							let p_aviso_rec.cod_tip_despesa = p_par_sup_compl_1.cod_tip_desp_banc
						end if
					end if
					if p_par_forn = "3" then
						let p_aviso_rec.ies_item_estoq = "n"
						let p_aviso_rec.ies_situa_ar   = "c"
						let p_aviso_rec.ies_liberacao_cont = "n"
						let p_array_compl[p_ind].move_estoque = "n"
						if p_par_sup_compl_1.cod_tip_desp_cons is not null and
							p_par_sup_compl_1.cod_tip_desp_cons <> " " then
							let p_aviso_rec.cod_tip_despesa = p_par_sup_compl_1.cod_tip_desp_cons
						end if
					end if
				end if

				### os331455
				let p_array_compl1[p_ind].cod_tip_despesa = p_aviso_rec.cod_tip_despesa
				### os331455
				if p_dados_tela.ies_nf_aguard_nfe = "2" or
					p_dados_tela.ies_nf_aguard_nfe = "5" then
					let p_aviso_rec.ies_liberacao_insp = "s"
				end if

				if p_dados_tela.ies_especie_nf = "nfr" and
					m_ies_obj_entrada = "99"    then
					let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
				end if

##### o.s. 245661
				if p_dados_tela.ies_especie_nf = "nfr" then
					if p_dados_tela.ies_nf_aguard_nfe = "4" then
						if p_aviso_rec.ies_incid_icms_ite <> "e" then
							let p_aviso_rec.gru_ctr_desp_item = p_cod_grp_desp_nfr
						end if
						let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
					else
						if m_ies_obj_entrada = "99" and
							p_dados_tela_f.val_tot_icms_nf_d = 0  and
							p_dados_tela_f.val_ipi_nf        = 0   then
							let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
							################### os 180603
							if m_grupo_despesa_nfr = "s" and
								p_dados_tela.ies_especie_nf = "nfr" and
								(p_aviso_rec.num_oc = 0 or p_aviso_rec.num_oc is null) then
								if p_ies_pagamento = 3 then
								else
									let p_aviso_rec.gru_ctr_desp_item    = m_ies_obj_entrada
								end if
							else
								let p_aviso_rec.gru_ctr_desp_item    = m_ies_obj_entrada
							end if
						end if
					end if
				end if

				if p_dados_tela.ies_especie_nf    = "nfr" and
					p_dados_tela.ies_nf_aguard_nfe = "4"   and
					p_dados_tela_f.val_ipi_nf     <> 0     and
					(p_ies_obj_entrada_fisc = "3" or  p_ies_obj_entrada_fisc = "4") then
				else
					if p_dados_tela.ies_especie_nf = "nfr" and
						p_ies_achou_itsup  = false then
						let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
					else
						if (p_dados_tela.ies_especie_nf = "nfd" or
							p_ies_tip_entrada = "5") and
							((p_array_compl[p_ind].ies_tip_item = "c" or
							p_array_compl[p_ind].ies_tip_item = "b") or
							p_ies_achou_itsup = false) then
							let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
						end if
					end if
				end if

				call sup376_inclui_dest_entrega(p_array[p_ind].val_liquido_item)
				if p_dados_tela.ies_especie_nf = "nfr" or
					p_dados_tela.ies_especie_nf = "nfd" or
					p_dados_tela.ies_especie_nf  = "nfc" or
					(p_dados_tela.ies_especie_nf = "nfe" and
					p_dados_tela.ies_nf_aguard_nfe = "x") then
					if p_par_forn = "3" then
					else
						let p_aviso_rec.ies_situa_ar = "e"
						let p_aviso_rec.ies_liberacao_ar = "2"
					end if
					let p_aviso_rec.ies_diverg_listada = "s"
					if p_array_compl[p_ind].move_estoque = "s" then
						let p_aviso_rec.ies_situa_ar = "c"
						let p_aviso_rec.ies_item_estoq   = "s"
						let p_aviso_rec.ies_liberacao_ar = "1"
					end if
				end if
				#--------------------class. fiscal-----------------------#
				if p_aviso_rec.ies_item_estoq = "n" then
					if p_aviso_rec.cod_cla_fisc_nf is not null and
						p_aviso_rec.cod_cla_fisc_nf <> " " then
						let p_aviso_rec.cod_cla_fisc = p_aviso_rec.cod_cla_fisc_nf
					end if
				end if
				#--------------------------------------------------------#

				if p_dados_tela.ies_nf_aguard_nfe = "5" then
					let p_aviso_rec.ies_liberacao_insp = "s"
				end if
				#--------------------------------------------------------#


				if p_aviso_rec.num_oc <> 0 then
					let p_cod_secao_rec = null
					initialize p_ordem_sup.* to null
					call sup3762_busca_ordem_sup(p_aviso_rec.cod_empresa,
					p_aviso_rec.num_oc)
					let p_cod_secao_rec    = p_ordem_sup.cod_secao_receb
					let p_ies_item_estoq   = p_ordem_sup.ies_item_estoq
					let p_ies_insp_recebto = p_ordem_sup.ies_insp_recebto
					if p_cod_secao_rec is not null and
						p_cod_secao_rec <> " " then
						let p_aviso_rec.cod_local_estoq = p_cod_secao_rec
					end if

					if p_dados_tela.ies_especie_nf = 'nfr' and
						p_dados_tela.ies_nf_aguard_nfe = '4' then
						let p_aviso_rec.ies_item_estoq = 'n'
						let p_aviso_rec.ies_situa_ar = 'c'
						let p_aviso_rec.ies_liberacao_cont = 'n'
					else
						let p_aviso_rec.ies_item_estoq = p_ies_item_estoq
					end if
				end if

#---- alteracao ref os 103757
				if p_dados_tela.ies_nf_aguard_nfe = "5"
					then let p_aviso_rec.ies_liberacao_cont = "n"
					let p_aviso_rec.ies_liberacao_insp = "s"
					let p_aviso_rec.ies_situa_ar       = "e"
					let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
				else call sup376_analisa_contagem_inspecao()
				end if
				if p_aviso_rec.num_oc <> 0 then
					if p_aviso_rec.ies_item_estoq = "n" then
#### os 286425 - nfr consignacao com oc relacionada (obedece inspecao cadastrada para material)
						if p_ies_insp_recebto is not null and
							((p_ies_insp_recebto <> "4") or
							(p_ies_insp_recebto = "4" and
							p_dados_tela.ies_nf_aguard_nfe = "4")) then
							let p_aviso_rec.ies_liberacao_insp = "n"
							let p_aviso_rec.ies_liberacao_cont = "n"
							if p_par_sup_compl.ies_conta_ok_n_est = "2" or
								(p_par_sup_compl.ies_conta_ok_n_est = "3" and
								p_dados_tela.ies_especie_nf = "nfs") then
								let p_aviso_rec.ies_situa_ar = "i"
							else
								let p_aviso_rec.ies_situa_ar = "c"
							end if
						else
							let p_aviso_rec.ies_liberacao_insp = "s"
						end if
						if p_cod_oper_ent_comp is not null and
							p_cod_oper_ent_comp <> " " then

							initialize p_contador to null
							select count(*)
							into p_contador
							from estrutura_vdp_hp
							where estrutura_vdp_hp.cod_empresa = p_aviso_rec.cod_empresa
							and estrutura_vdp_hp.cod_item    = p_aviso_rec.cod_item
							if sqlca.sqlcode <> 0 or
								p_contador is null then
								let p_contador = 0
							end if

							if p_contador > 0 then
								if p_aviso_rec.ies_situa_ar = "c" then
									let p_aviso_rec.ies_situa_ar = "i"
								end if
								let p_aviso_rec.ies_liberacao_cont = "n"
							end if

						end if
					end if
				end if

				if p_dados_tela.ies_especie_nf = "nfm" then
					let p_aviso_rec.ies_situa_ar = "e"
					let p_aviso_rec.ies_item_estoq = "n"
				end if

				if p_aviso_rec.cod_unid_med_nf is null then
					let p_aviso_rec.cod_unid_med_nf = " "
				end if

				if p_dados_tela.ies_especie_nf = "nfs" then
					if m_incid_icms_nfs is null or m_incid_icms_nfs = " " then
					else
						let p_aviso_rec.ies_incid_icms_ite = m_incid_icms_nfs
					end if
				end if

				if sup376_tem_classificacao_sucata(p_aviso_rec.cod_item) then
					let p_aviso_rec.ies_item_estoq = "n"
				end if

				if p_nf_sup.ies_nf_aguard_nfe = "4" then
					if sup376_verifica_armazem_itau() then
						let p_aviso_rec.ies_item_estoq = "s"
					end if
				end if

## os 205898
				if p_dados_tela.ies_especie_nf = "nfm" then
					if p_aviso_rec.cod_item is null or
						p_aviso_rec.cod_item =  " "  then
					else
						whenever error continue
						insert into nf_pend values (p_cod_empresa, p_dados_tela.num_nf,
						p_dados_tela.ser_nf, p_dados_tela.ssr_nf,
						p_dados_tela.cod_fornecedor,
						p_aviso_rec.cod_item,
						p_aviso_rec.qtd_declarad_nf, 0, null,
						today)
						whenever error stop
						if sqlca.sqlcode = -239 or
							sqlca.sqlcode = -268 then
							update nf_pend
							set qtd_recebida = qtd_recebida + p_aviso_rec.qtd_declarad_nf
							where cod_empresa    = p_cod_empresa
							and num_nf         = p_dados_tela.num_nf
							and ser_nf         = p_dados_tela.ser_nf
							and ssr_nf         = p_dados_tela.ssr_nf
							and cod_fornecedor = p_dados_tela.cod_fornecedor
							and cod_item       = p_aviso_rec.cod_item
							if sqlca.sqlcode <> 0 then
								let p_houve_erro = true
							end if
						end if
					end if
				end if

				if p_aviso_rec.ies_tip_incid_ipi is null then
					let p_aviso_rec.ies_tip_incid_ipi = " "
				end if

				call sup3760_verifica_codigo_fiscal_item(p_dados_tela.cod_operacao,
				p_dados_tela.ies_nf_aguard_nfe)

				if p_dados_tela.ies_nf_aguard_nfe = "5" and
					p_dados_tela.ies_especie_nf = "nfc" then
					call sup3760_busca_grupo_x_tipo_despesa()
				end if

				#536059
				if p_dados_tela.ies_especie_nf  = 'nfr' and
					p_dados_tela.ies_nf_aguard_nfe     = 'b'   then
					let p_aviso_rec.ies_situa_ar       = 'e'
					let p_aviso_rec.ies_liberacao_cont = 's'
					let p_aviso_rec.ies_liberacao_insp = 's'
					let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
					let p_aviso_rec.qtd_liber          = p_aviso_rec.qtd_declarad_nf
				end if

				#808022
				if p_aviso_rec.num_oc is null or p_aviso_rec.num_oc = 0 then
					if (p_par_sup_compl.ies_conta_ok_n_est = "2" or
						(p_par_sup_compl.ies_conta_ok_n_est = "3" and
						p_dados_tela.ies_especie_nf = "nfs") and
						m_cont_insp_especial = 's') or p_dados_tela.ies_especie_nf = "nfc" then
						if p_aviso_rec.ies_item_estoq = 'n'
							and p_dados_tela.ies_nf_aguard_nfe <> 't'
							and p_dados_tela.ies_nf_aguard_nfe <> "4" then
							let p_aviso_rec.ies_liberacao_cont = 's'
							### telmbi - verifica se o item n�o estoque sem oc/pc tem controle de gao, neste caso deve chamar o sup0530
							### (ies_liberacao_cont deve manter como "n")
							if sup3760_permite_alteracao_gao() then
								let p_aviso_rec.ies_situa_ar       = 'e'
								let p_aviso_rec.ies_liberacao_cont = 's'
								let p_aviso_rec.ies_liberacao_insp = 's'
								let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
								let p_aviso_rec.qtd_liber          = p_aviso_rec.qtd_declarad_nf
							else
								let p_aviso_rec.ies_liberacao_cont = 'n'
							end if
						end if
					end if
				end if
				#fim 808022

				#--inicio--vanderlei os 393178 #
				if sup3760_item_bonificado(p_cod_empresa,
					p_aviso_rec.num_aviso_rec,
					p_aviso_rec.num_seq,
					"item_bonificacao") = 'b' then
					let p_aviso_rec.ies_total_nf = 'n'
				end if
				#---fim----vanderlei os 393178 #

				## 404133
				if g_ies_transf_benef = true and
					(g_ies_retorno_ind = true or
					g_ret_sem_ind = true) and
					p_aviso_rec.ies_item_estoq = "n" then
					if sup3760_gera_item_ret_terc() = false then
						let p_houve_erro = true
						exit for
					end if
				end if

				call sup3760_verifica_cfop_destino(p_dados_tela.cod_operacao)
				returning p_status, l_cfop_destino

				if p_status then
					let p_aviso_rec.cod_fiscal_item = l_cfop_destino
				end if

				if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec) then
					if p_array[p_ind].cod_item is null then
						let p_array[p_ind].cod_item = " "
					end if
					if p_array[p_ind].den_item is null then
						let p_array[p_ind].den_item = " "
					end if
					if p_array[p_ind].qtd_declarad_nf is null then
						let p_array[p_ind].qtd_declarad_nf = 0
					end if
					if p_array[p_ind].cod_unid_med_nf is null then
						let p_array[p_ind].cod_unid_med_nf = " "
					end if
					if p_array[p_ind].pre_unit_nf is null then
						let p_array[p_ind].pre_unit_nf = 0
					end if
					if p_array[p_ind].val_liquido_item is null then
						let p_array[p_ind].val_liquido_item = 0
					end if
					if p_array[p_ind].cod_cla_fisc_nf is null then
						let p_array[p_ind].cod_cla_fisc_nf = " "
					end if
					if p_array[p_ind].pct_ipi is null then
						let p_array[p_ind].pct_ipi = 0
					end if
				end if

				if p_aviso_rec.val_base_c_ipi_it is null then
					let p_aviso_rec.val_base_c_ipi_it   = 0
				end if

				if p_aviso_rec.val_ipi_calc_item is null then
					let p_aviso_rec.val_ipi_calc_item   = 0
				end if

				if p_aviso_rec.val_base_c_item_c is null then
					let p_aviso_rec.val_base_c_item_c   = 0
				end if

				call sup3760_verifica_insp_nfr()

				whenever error continue
				insert into aviso_rec values(p_aviso_rec.*)
				whenever error stop

				if sqlca.sqlcode <> 0 then
					let p_houve_erro = true
				else
					if find4glfunction('supr87_verif_item_x_fornec') then
						if not supr87_verif_item_x_fornec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_aviso_rec.num_seq,
							p_aviso_rec.cod_item, p_dados_tela.cod_fornecedor) then
							let p_houve_erro = true
						end if
					end if

					if m_cred_st_fat = "s"    #os. 479344
						or m_cred_st_fat = "e" then
						if not sup2621_verifica_nota_transferencia(p_aviso_rec.*, p_dados_tela.cod_fornecedor) then
						end if
					end if                    #os. 479344

					#-- ch tfggcx inicio --#
					call sup3766_set_m_ind_grade(p_ind)
					if sup3766_processa_movtos_estoque(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						p_aviso_rec.num_seq,
						p_aviso_rec.cod_item) = false then
						error " problemas na inclus�o dos controles de grade/dimensional "
						let p_houve_erro = true
					end if
					call sup3766_set_m_ind_grade(0)
					#-- ch tfggcx fim --#

					if not sup1031_grava_audit_ar(p_aviso_rec.num_aviso_rec,
						p_aviso_rec.num_seq,
						"sup3760","1") then
						let p_houve_erro = true
						exit for
					end if

					if find4glfunction('supy23_atualiza_oc_pd_fluxo_caixa') then
						if not supy23_atualiza_oc_pd_fluxo_caixa(p_ordem_sup.cod_empresa,
							p_ordem_sup.cod_item,
							p_ordem_sup.num_oc,
							p_ordem_sup.cod_fornecedor,
							p_ordem_sup.cnd_pgto,
							p_ordem_sup.cod_mod_embar,
							p_ordem_sup.cod_moeda,
							p_aviso_rec.pre_unit_nf) then
							let p_houve_erro = true
							exit for
						end if
					end if

					if m_gera_rsv_transf = "s" and
						p_dados_tela.ies_nf_aguard_nfe  = "8" then
						call sup3760_carrega_strib_nfe()
					end if
				end if

				#inicio tfopim
				if log_existe_epl('sup3760y_after_process_insert_aviso_rec_itens') then
					call log_setvar('cod_empresa', p_cod_empresa)
					#epl codigo da empresa
					#epl tipo: aviso_rec.cod_empresa

					call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
					#epl numero do ar
					#epl tipo: aviso_rec.num_aviso_rec

					call log_setvar('num_seq', p_aviso_rec.num_seq)
					#epl numero da sequencia do ar
					#epl tipo: aviso_rec.num_seq

					call log_setvar('num_oc', p_aviso_rec.num_oc)
					#epl numero da oc
					#epl tipo: aviso_rec.num_oc

					call log_setvar('cod_item', p_aviso_rec.cod_item)
					#epl c�digo do item
					#epl tipo: aviso_rec.cod_item

					call log_setvar('houve_erro', p_houve_erro)
					#epl indicador se houve erro no processamento
					#epl tipo: smallint

					call log_setvar('ies_situa_ar', p_aviso_rec.ies_situa_ar)
					#epl situa��o do ar
					#epl tipo: char(01)

					call sup3760y_after_process_insert_aviso_rec_itens()
					let p_houve_erro = log_getvar('houve_erro')
				end if
				#fim tfopim

				#trnoc7
				initialize m_num_oc_ant to null
				initialize m_num_pedido_ant to null
				call sup376_grava_seq_adicao_imp()

				if p_dados_tela.ies_especie_nf = "nfr" then
					if p_par_forn = "3" and
						m_ies_armaz_itau <> "s" and
						p_dados_tela.ies_nf_aguard_nfe <> "7" then #736225 antonio/carla
						let p_dados_tela.ies_nf_aguard_nfe = "4"
						if sup376_gera_item_d_terc() = false then
							let p_houve_erro = true
						end if
					else
						if p_dados_tela.ies_nf_aguard_nfe = "t" then
							if sup376_gera_item_d_terc() = false then
								let p_houve_erro = true
							end if
						end if
					end if

					if   (p_parametros = '6' #os481195
						and ((p_dados_tela.ies_nf_aguard_nfe = 'a'
						and   m_contr_terc_no_dep = 'n')
						or   (p_dados_tela.ies_nf_aguard_nfe = 'b'
						and   m_contr_terc_no_dep = 's'))) then
						if sup376_gera_item_d_terc() = false then
						end if
					end if
				else
					if p_dados_tela.ies_nf_aguard_nfe = "t" then
						if sup376_gera_item_d_terc() = false then
							let p_houve_erro = true
						end if
					end if
				end if

				if sup0812_verifica_nota_transferencia(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					p_dados_tela.num_nf,
					p_dados_tela.ser_nf,
					p_dados_tela.ssr_nf,
					p_dados_tela.cod_fornecedor,
					p_dados_tela.cod_operacao,
					p_dados_tela.cod_fiscal_compl) = true then
					call sup376_verifica_cod_fiscal_item()
				end if

				let p_aviso_rec_compl_sq.cod_empresa       = p_aviso_rec.cod_empresa
				let p_aviso_rec_compl_sq.cod_empresa_estab = p_aviso_rec.cod_empresa_estab
				let p_aviso_rec_compl_sq.num_aviso_rec     = p_aviso_rec.num_aviso_rec
				let p_aviso_rec_compl_sq.num_seq           = p_aviso_rec.num_seq
				let p_aviso_rec_compl_sq.val_base_d_ipi_it = 0

				if p_aviso_rec_compl_sq.cod_fiscal_compl is null then
					let p_aviso_rec_compl_sq.cod_fiscal_compl = 0
				end if

				let p_aviso_rec_compl_sq.dat_ini_garantia = null
				let p_aviso_rec_compl_sq.dat_fim_garantia = null

				insert into aviso_rec_compl_sq values (p_aviso_rec_compl_sq.*)
				if sqlca.sqlcode <> 0  then
					call log003_err_sql("inclusao","aviso_rec_compl_sq")
					let p_houve_erro = true
				end if

				call sup376_gera_iss()

				#--------------------------#
				# altera��o wms os: 450083 #
				#--------------------------#
				# passo 28                 #
				if not p_houve_erro then
					if m_wms_instal = "s" then
						call wms0004_item_sob_controle_wms(p_cod_empresa, p_aviso_rec.cod_item) returning l_sqlcode, l_status
						if l_sqlcode = false then
							let p_houve_erro = true
						end if
						if l_status and p_houve_erro = false then
							if p_dados_tela.ies_nf_aguard_nfe = "a" or
								p_dados_tela.ies_nf_aguard_nfe = "b" then
								call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
								m_wms_depositante,
								today,
								0) returning l_contrato, l_status
								if l_contrato <> "0" then
									let l_trans_contrato = wmst15_wms_contrato_busca_transacao(p_cod_empresa,
									l_contrato)
									if wmsm15_wms_contrato_leitura(p_cod_empresa,
										l_trans_contrato,
										true,1) then
										# passo 28.1 #
										if wmsm15_wms_contrato_get_altera_tip_estoque_nota_fiscal() = "n" then
											let l_tip_estoque = wmst129_retorna_tip_estoque_padrao(p_cod_empresa,
											m_wms_depositante,
											0)
											whenever error continue
											insert into sup_par_ar (empresa,
											aviso_recebto,
											seq_aviso_recebto,
											parametro,
											par_ind_especial,
											parametro_texto,
											parametro_val,
											parametro_dat)
											values (p_cod_empresa,
											p_aviso_rec.num_aviso_rec, #p_nf_sup.num_aviso_rec,
											p_aviso_rec.num_seq,
											"tip_estoque",
											null,
											l_tip_estoque,
											null,
											null)
											whenever error stop
											if sqlca.sqlcode <> 0 then
												call log003_err_sql("inclusao","sup_par_ar - wms")
												let p_houve_erro = true
											end if
										end if
									end if
								else
									call log0030_processa_mensagem("n�o existe contrato ativo para este depositante.","exclamation",0)
									let p_houve_erro = true
								end if
							end if
						end if
					end if
				end if
				# fim -----------------------------------------#
			else
				exit for
			end if
		end for

		if sup3760_verifica_fornec_incl_regime_compex(p_cod_empresa,p_dados_tela.dat_emis_nf,p_dados_tela.cod_fornecedor) then
			call sup3760_exclusao_inclusao_item_compex(p_cod_empresa,p_aviso_rec.num_aviso_rec)
		end if

		if sup1149_efetua_rateio_contabil() then
			if sup1149_rateio_contabil(p_dados_tela.num_aviso_rec) = false then
				let p_houve_erro = true
			end if
		end if

		if p_houve_erro = false then
			call log085_transacao("commit")
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","aviso_rec")
				call log085_transacao("rollback")
			else
				message " inclusao de itens da nota fiscal efetuada com sucesso " attribute(reverse)

				let p_cod_empresa_arg = p_cod_empresa
				let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
				call sup376_busca_argumen()
				select *
				from nf_sup_erro
				where nf_sup_erro.empresa = p_cod_empresa
				and nf_sup_erro.num_aviso_rec = p_dados_tela.num_aviso_rec
				and nf_sup_erro.num_seq   = 0
				and nf_sup_erro.des_pendencia_item =  "falta efetuar consistencia"
				and nf_sup_erro.ies_origem_erro = "1"
				if sqlca.sqlcode <> 0 then
					insert into nf_sup_erro ( empresa, num_aviso_rec, num_seq, des_pendencia_item, ies_origem_erro, ies_erro_grave )  values ( p_dados_tela.cod_empresa,
					p_dados_tela.num_aviso_rec,
					0,
					"falta efetuar consistencia",
					"1",
					"s")
					if sqlca.sqlcode <> 0 then
						let p_houve_erro = true
					end if
				end if
				call sup376_manut_item_terc()
				if p_dados_tela.ies_nf_aguard_nfe <> "4" then
					if ((p_ies_tip_entrada = "6" or
						p_ies_tip_entrada = "4") or
						(sup0812_verifica_nota_transferencia(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						p_dados_tela.num_nf,
						p_dados_tela.ser_nf,
						p_dados_tela.ssr_nf,
						p_dados_tela.cod_fornecedor,
						p_dados_tela.cod_operacao,
						p_dados_tela.cod_fiscal_compl) = false and
						p_ies_tip_entrada = "2")) and
						(m_wms_instal = "n"      or
						(m_wms_instal = "s"      and
						p_dados_tela.ies_nf_aguard_nfe <> "a"   and
						p_dados_tela.ies_nf_aguard_nfe <> "b")) then
						if   p_dados_tela.ies_nf_aguard_nfe <> "t"
							and (p_mot_remes_terc is null or p_mot_remes_terc = " " or m_ies_msg_contr_terc = 's') then
							if p_dados_tela.ies_nf_aguard_nfe <> "4" and
								p_dados_tela.ies_nf_aguard_nfe <> "5" then
								if  p_dados_tela.ies_nf_aguard_nfe = "a"
									and sup3760_existe_cadastro_triangulacao()
									and p_dados_tela.ies_especie_nf = "nfr" then
									call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor

									let l_retorno_epl = false

									if log_existe_epl("sup3760y_before_abre_controle_terceiros_automatico") then
										call log_setvar('retorno_epl', false)
										call sup3760y_before_abre_controle_terceiros_automatico()
										let l_retorno_epl  = log_getvar('retorno_epl')
									end if

									if l_retorno_epl = false then
										let comando3 = p_dados_tela.num_nf," ",
										p_dados_tela.ser_nf," ",
										p_dados_tela.ssr_nf," ",
										p_dados_tela.ies_especie_nf," ",
										l_cod_fornecedor," ",
										"@"," ","@"," ","@"," ",
										p_cod_empresa
										call log1200_executa_programa("sup2270",comando3)
									end if
								else
									let l_retorno_epl = false
									if log_existe_epl("sup3760y_before_controlar_terceiros") then
										call log_setvar('retorno_epl', false)
										call sup3760y_before_controlar_terceiros()
										let l_retorno_epl  = log_getvar('retorno_epl')
									end if

									if l_retorno_epl = false then
										error "controlar material de terceiros ??? " attribute(reverse)
										if log004_confirm(21,43) then
											error "material da empresa ??? " attribute (reverse)
											if p_dados_tela.ser_nf = " " or
												p_dados_tela.ser_nf is null then
												let p_dados_tela.ser_nf = "@"
											end if
											if log004_confirm(21,43) then
												#-- os 562700 inicio --#
												if m_ies_nf_remessa_x_especie <> 0 then
													if (m_ies_nf_remessa_x_especie = 1
														and p_dados_tela.ies_especie_nf = "nfr")
														or (m_ies_nf_remessa_x_especie = 2
														and p_dados_tela.ies_especie_nf = "nfe")
														or (m_ies_nf_remessa_x_especie = 3
														and (p_dados_tela.ies_especie_nf = "nfe"
														or p_dados_tela.ies_especie_nf = "nfr") ) then
														call sup3760_controla_nf_remessa_retorno()
													end if
												else
													#-- os 562700 fim --#
													let comando3 = p_dados_tela.num_nf," ",
													p_dados_tela.ser_nf," ",
													p_dados_tela.ssr_nf," ",
													p_dados_tela.ies_especie_nf," ",
													p_dados_tela.cod_fornecedor," ",
													"@"," ",p_cod_empresa
													call log1200_executa_programa("sup2290",comando3)
												end if
											else
												## os 407088
												call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor
												let comando3 = p_dados_tela.num_nf," ",
												p_dados_tela.ser_nf," ",
												p_dados_tela.ssr_nf," ",
												p_dados_tela.ies_especie_nf," ",
												l_cod_fornecedor," ",
												"@"," ","@"," ","@"," ",
												p_cod_empresa
												call log1200_executa_programa("sup2270",comando3)
											end if
											if p_dados_tela.ser_nf = "@" then
												let p_dados_tela.ser_nf = " "
											end if
										end if
									end if
								end if
							end if
						end if
					end if
					if not sup3762_consiste_nf_incluida_no_cap_contab(p_ies_pagamento, 0, "2",
						m_consiste_nf_integr) then

						if m_cons_modific = "s" then
							call sup376_processa_consistencia("n")
						else
							if sup3731_gera_erro_consistencia(p_dados_tela.num_aviso_rec) = false then
							end if
						end if

						call sup0047_rateio_frete()
					end if
				end if

				#--------------------------#
				# altera��o wms os: 450083 #
				#--------------------------#
				# passo 28                 #
				if p_houve_erro = false then
					if p_dados_tela.ies_nf_aguard_nfe = "a" or p_dados_tela.ies_nf_aguard_nfe = "b" then
						call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
						m_wms_depositante,
						today,
						0) returning l_contrato, l_status
						if l_contrato <> "0" then
							let l_trans_contrato = wmst15_wms_contrato_busca_transacao(p_cod_empresa,l_contrato)
							if wmsm15_wms_contrato_leitura(p_cod_empresa,l_trans_contrato,true,1) then
								# passo 28.1 #
								if wmsm15_wms_contrato_get_altera_tip_estoque_nota_fiscal() <> "n" then
									# passo 28.2 #
									let l_comando = p_cod_empresa clipped,"' ",
									p_nf_sup.num_aviso_rec,
									" 's' ",
									" 's' "
									call log1200_executa_programa("wms6132",l_comando)
								end if
							end if
						else
							call log0030_processa_mensagem("n�o existe contrato ativo para este depositante.","exclamation",0)
							let p_houve_erro = true
						end if
					end if
				end if
				#---------------#
			end if
		else
			call log085_transacao("rollback")
			call log003_err_sql("inclusao","aviso_rec")
		end if
	else
		error ""
		call log0030_exibe_ultima_mensagem()
		let p_houve_erro = true
		let p_cod_empresa_arg = p_cod_empresa
		let p_num_aviso_rec_arg = p_dados_tela.num_aviso_rec
	end if

	call sup376_busca_argumen()
	let p_inclu_item = "n"
end function

#-- os 562700 inicio --#
#------------------------------------#
function sup3760_executa_declare()
#------------------------------------#
	define l_sql_stmt       char(3000)

	let l_sql_stmt =
	" select sup_itterc_grade.grade_1            , ",
	"        sup_itterc_grade.grade_2            , ",
	"        sup_itterc_grade.grade_3            , ",
	"        sup_itterc_grade.grade_4            , ",
	"        sup_itterc_grade.grade_5            , ",
	"        sup_itterc_grade.endereco           , ",
	"        sup_itterc_grade.num_volume         , ",
	"        sup_itterc_grade.dat_hor_producao   , ",
	"        sup_itterc_grade.dat_hor_valid      , ",
	"        sup_itterc_grade.peca               , ",
	"        sup_itterc_grade.serie_peca         , ",
	"        sup_itterc_grade.comprimento        , ",
	"        sup_itterc_grade.largura            , ",
	"        sup_itterc_grade.altura             , ",
	"        sup_itterc_grade.diametro             ",
	"   from item_em_terc, sup_itterc_grade        ",
	"  where item_em_terc.cod_empresa    = '", p_cod_empresa ,"' ",
	"    and item_em_terc.num_nf         = ? ",
	"    and item_em_terc.num_sequencia  = ? ",
	"    and item_em_terc.cod_fornecedor = ? ",
	"    and item_em_terc.cod_empresa    = sup_itterc_grade.empresa     ",
	"    and item_em_terc.num_nf         = sup_itterc_grade.nota_fiscal ",
	"    and item_em_terc.num_sequencia  = sup_itterc_grade.seq_item_nf ",
	"    and item_em_terc.cod_fornecedor = sup_itterc_grade.fornecedor  "
	whenever error stop

	whenever error continue
	prepare var_ret_igual_remessa from l_sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","var_ret_igual_remessa")
	end if

	whenever error continue
	declare cq_ret_igual_remessa cursor with hold for var_ret_igual_remessa
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_ret_igual_remessa")
	end if

	free var_ret_igual_remessa

	############################

end function
#-----------------------------------------------#
function sup3760_controla_nf_remessa_retorno()
#-----------------------------------------------#
	define l_msg     char(200),
	l_ind     smallint

	call log130_procura_caminho("sup3760v") returning comando3
	open window w_sup3760v at 02,06 with form comando3
	attribute(border, message line last, prompt line last)

	if p_par_estoque.dat_prx_fecha_est > p_par_estoque.dat_fecha_ult_sup then
		let m_dat_prx_fecha_est = mdy(month(p_par_estoque.dat_prx_fecha_est),
		"01",
		year(p_par_estoque.dat_prx_fecha_est))
	else
		if p_par_estoque.dat_prx_fecha_est = p_par_estoque.dat_fecha_ult_sup then
			let m_dat_prx_fecha_est = mdy(month(p_par_estoque.dat_prx_fecha_est),
			"01",
			year(p_par_estoque.dat_prx_fecha_est))
			let m_dat_prx_fecha_est = m_dat_prx_fecha_est + 1 units month
		end if
	end if

	display p_cod_empresa to cod_empresa

	call sup3760_executa_declare()

	call sup3760_busca_nf_relac()

	menu "op��o"
	before menu
	call sup3760_save_cur_field_name('sup3760_menu_4')

	command "modificar" "modifica relacionamento das nfs."
	message ""
	if log005_seguranca(p_user,"suprimen","sup2031","mo") then
		if ma_tela_relac_nf_rem_retorno[1].num_nf is not null
			or ma_tela_relac_nf_rem_retorno[1].num_nf <> " " then
			call sup3760_altera_nf_remessa_retorno()
			call sup3760_busca_nf_relac()
		end if
	end if

	command "excluir" "exclui o relacionamento das nfs."
	message ""
	let int_flag = 0
	if mr_tela_relac_nf_rem_retorno.num_aviso_rec is not null then
		if log0040_confirm(19,22,"deseja realmente excluir?") then
			for l_ind = 1 to arraylength(ma_tela_relac_nf_rem_retorno)
				if ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida > 0 then
					if ma_tela_relac_nf_rem_retorno[l_ind].dat_emis_nf >= m_dat_prx_fecha_est then
						if log005_seguranca(p_user,"suprimen","sup3760","ex") then
							if sup3760_nota_cancelada() then
								call log0030_mensagem("nota fiscal cancelada.","info")
								exit for
							else
								if ma_tela_relac_nf_compl[l_ind].ies_incl_contab <> "n"
									and sup3760_verifica_mot_remessa_contab(l_ind) then
									call log0030_mensagem(" antes de excluir a nota, exclua os lanctos cont�beis.", "info")
								else
									call sup3760_exclui_relacionamento(l_ind)
								end if
							end if
						end if
					else
						let l_msg = "data de entrada ", ma_tela_relac_nf_rem_retorno[l_ind].dat_emis_nf clipped, " anterior que m�s/ano da data do pr�ximo fechamento de estoque."
						call log0030_mensagem(l_msg, "info")
					end if
				end if
			end for
			call sup3760_busca_nf_relac()
		end if
	else
		call log0030_mensagem(" consulte previamente para fazer a exclusao ", "info")
	end if

	command "seguinte" "exibe pr�ximo item da nf."
	message ""
	if log005_seguranca(p_user,"suprimen","sup2031","in") then
		call sup3760_paginacao_nf_relac("seguinte")
	end if

	command "anterior" "exibe item anterior da nf."
	message ""
	if log005_seguranca(p_user,"suprimen","sup2031","in") then
		call sup3760_paginacao_nf_relac("anterior")
	end if

	command "fim" "retorna ao menu anterior."
	message  ""
	exit menu
end menu
close window w_sup3760v

end function

#---------------------------------------------#
function sup3760_verifica_mot_remessa_contab(l_ind)
#---------------------------------------------#
	define l_cod_motivo_remessa  like motivo_remessa.cod_motivo_remessa,
	l_ind                 smallint

	initialize l_cod_motivo_remessa to null

	whenever error continue
	declare cq_remessa cursor for
	select cod_motivo_remessa
	from item_em_terc
	where cod_empresa    = p_cod_empresa
	and num_nf         = ma_tela_relac_nf_rem_retorno[l_ind].num_nf
	and num_sequencia  = ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia
	and cod_fornecedor = mr_tela_relac_nf_rem_retorno.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_remessa")
	end if

	whenever error continue
	foreach cq_remessa into l_cod_motivo_remessa
	if sqlca.sqlcode < 0 then
		call log003_err_sql("foreach","cq_remessa")
		exit foreach
	end if
	exit foreach
end foreach
whenever error stop
free cq_remessa

if l_cod_motivo_remessa is not null and
	l_cod_motivo_remessa <> " " then
	whenever error continue
	select ies_contabiliza
	from motivo_remessa
	where cod_empresa        = p_cod_empresa
	and cod_motivo_remessa = l_cod_motivo_remessa
	and ies_contabiliza    = "s"
	whenever error stop

	if sqlca.sqlcode = 0 then
		return true
	else
		return false
	end if
else
return false
end if

end function

#--------------------------------#
function sup3760_nota_cancelada()
#--------------------------------#

	whenever error continue
	select 1 from aviso_rec_compl
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and ies_situacao = "c"
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true
	else
		return false
	end if

end function

#-----------------------------------------#
function sup3760_exclui_msg_nf_sup_erro(l_num_seq)
#-----------------------------------------#
	define l_num_seq     like nf_sup_erro.num_seq

	whenever error continue
	delete from nf_sup_erro
	where nf_sup_erro.empresa            = p_cod_empresa
	and nf_sup_erro.num_aviso_rec      = p_dados_tela.num_aviso_rec
	and nf_sup_erro.num_seq            = l_num_seq
	and nf_sup_erro.des_pendencia_item = 'nf de retorno n�o relacionada com a nf de remessa.'
	whenever error stop
	if sqlca.sqlcode < 0 then
		call log003_err_sql("delete","nf_sup_erro")
	end if

end function

#--------------------------------------#
function sup3760_insere_erro_nf_sup(l_num_seq, l_msg)
#--------------------------------------#
	define l_num_seq    like aviso_rec.num_seq,
	l_msg        char(100)

	whenever error continue
	insert into nf_sup_erro (empresa,
	num_aviso_rec,
	num_seq,
	des_pendencia_item,
	ies_origem_erro,
	ies_erro_grave)
	values (p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	l_num_seq,
	l_msg,
	"1",
	"n")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","nf_sup_erro_1")
	end if

end function

#-----------------------------------------#
function sup3760_exclui_relacionamento(l_ind)
#-----------------------------------------#
	define l_ind          smallint

	let comando3 = p_dados_tela.num_nf," ",
	p_dados_tela.ser_nf," ",
	p_dados_tela.ssr_nf," ",
	p_dados_tela.ies_especie_nf," ",
	p_dados_tela.cod_fornecedor," ",
	mr_tela_relac_nf_rem_retorno.num_seq," ",
	p_cod_empresa, " ", "1"{1=background}, " ",
	"exclusao ",
	ma_tela_relac_nf_rem_retorno[l_ind].num_nf, " ",
	ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia, " ",
	ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida

	call log1200_executa_programa("sup2290",comando3)

	error "exclus�o efetuado com sucesso."
	call log_refresh_display()

end function

#----------------------------------------#
function sup3760_busca_nf_relac()
#----------------------------------------#
	define l_qtd_devolvida     like item_em_terc.qtd_tot_remessa,
	l_ind               smallint

	initialize mr_tela_relac_nf_rem_retorno.*, ma_tela_relac_nf_rem_retorno, ma_tela_relac_nf_compl to null

	let m_eh_modificacao = false

	whenever error continue
	declare cq_aviso_rec_relac scroll cursor with hold for
	select num_aviso_rec,
	num_seq,
	cod_item,
	qtd_declarad_nf
	from aviso_rec
	where aviso_rec.cod_empresa   = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_aviso_rec_relac")
		return
	end if

	whenever error continue
	open cq_aviso_rec_relac
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open cursor","cq_aviso_rec_relac")
		return
	end if

	whenever error continue
	fetch cq_aviso_rec_relac into mr_tela_relac_nf_rem_retorno.num_aviso_rec,
	mr_tela_relac_nf_rem_retorno.num_seq,
	mr_tela_relac_nf_rem_retorno.cod_item,
	mr_tela_relac_nf_rem_retorno.qtd_declarad_nf
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode = notfound then
			call log0030_mensagem("argumentos de pesquisa n�o encontrados.","info")
		else
			call log003_err_sql("fetch cursor","cq_aviso_rec_relac")
		end if
		close cq_aviso_rec_relac
		free cq_aviso_rec_relac
		return
	end if

	call sup3760_busca_den_item(mr_tela_relac_nf_rem_retorno.cod_item) returning p_status
	let mr_tela_relac_nf_rem_retorno.cod_fornecedor   = p_dados_tela.cod_fornecedor
	let mr_tela_relac_nf_rem_retorno.raz_social_reduz = sup3760_busca_raz_social_reduz(p_dados_tela.cod_fornecedor)
	let mr_tela_relac_nf_rem_retorno.den_item_reduz   = m_den_item

	if sup3760_eh_alteracao() then
		let m_eh_modificacao = true
	end if

	call sup3760_busca_nf_remessa()

	call sup3760_exibe_nf_remessa_retorno()

	error "quantidade declarada: ", mr_tela_relac_nf_rem_retorno.qtd_declarad_nf clipped
	call log_refresh_display()

end function

#-----------------------------------#
function sup3760_busca_nf_remessa()
#-----------------------------------#
	define l_ind             smallint,
	l_qtd_devolvida   like item_em_terc.qtd_tot_remessa

	initialize ma_tela_relac_nf_rem_retorno, ma_tela_relac_nf_compl to null

	let m_tot_qtd_devolvida = 0

	call sup0063_verifica_controles(12,
	mr_tela_relac_nf_rem_retorno.cod_item,
	"inclusao",
	"sup2290") returning m_controles

	whenever error continue
	declare cq_item_em_terc cursor with hold for
	select item_em_terc.dat_emis_nf,
	item_em_terc.num_nf,
	item_em_terc.num_sequencia,
	(item_em_terc.qtd_tot_remessa - item_em_terc.qtd_tot_recebida),
	item_em_terc.ies_incl_contab
	from item_em_terc
	where item_em_terc.cod_empresa    = p_cod_empresa
	and item_em_terc.cod_item       = mr_tela_relac_nf_rem_retorno.cod_item
	and item_em_terc.cod_fornecedor = mr_tela_relac_nf_rem_retorno.cod_fornecedor
	order by item_em_terc.dat_emis_nf
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("selecao","item_em_terc")
		end if
		return
	end if

	whenever error continue
	open cq_item_em_terc
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open","cq_item_em_terc")
	end if

	let l_ind = 1

	while true
		if l_ind > arraylength(ma_tela_relac_nf_rem_retorno) then
			call arrayadditem(ma_tela_relac_nf_rem_retorno,1)
		end if
		whenever error continue
		fetch cq_item_em_terc into ma_tela_relac_nf_rem_retorno[l_ind].dat_emis_nf,
		ma_tela_relac_nf_rem_retorno[l_ind].num_nf,
		ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia,
		ma_tela_relac_nf_rem_retorno[l_ind].qtd_saldo,
		ma_tela_relac_nf_compl[l_ind].ies_incl_contab
		whenever error stop
		if sqlca.sqlcode <> 0 then
			if sqlca.sqlcode <> 100 then
				call log003_err_sql("fetch","cq_item_em_terc")
			end if
			exit while
		end if
		if not m_eh_modificacao then
			if ma_tela_relac_nf_rem_retorno[l_ind].qtd_saldo = 0 then
				let ma_tela_relac_nf_rem_retorno[l_ind].dat_emis_nf   = null
				let ma_tela_relac_nf_rem_retorno[l_ind].num_nf        = null
				let ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia = null
				let ma_tela_relac_nf_rem_retorno[l_ind].qtd_saldo     = null
				continue while
			end if
		end if

		if m_controles <> " " then
			# verifica se a grade dimensional que est� sendo retornada � a mesma da remessa
			if sup3760_informou_sup_ar_grade() then
				if not sup3760_grade_dimen_ret_igual_remessa(ma_tela_relac_nf_rem_retorno[l_ind].num_nf,
					ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia,
					mr_tela_relac_nf_rem_retorno.cod_fornecedor) then
					let ma_tela_relac_nf_rem_retorno[l_ind].dat_emis_nf   = null
					let ma_tela_relac_nf_rem_retorno[l_ind].num_nf        = null
					let ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia = null
					let ma_tela_relac_nf_rem_retorno[l_ind].qtd_saldo     = null
					continue while
				end if
			end if
		end if

		whenever error continue
		select sum(qtd_devolvida)
		into l_qtd_devolvida
		from item_ret_terc
		where item_ret_terc.cod_empresa      = p_cod_empresa
		and item_ret_terc.num_nf           = p_dados_tela.num_nf
		and item_ret_terc.ser_nf           = p_dados_tela.ser_nf
		and item_ret_terc.ssr_nf           = p_dados_tela.ssr_nf
		and item_ret_terc.ies_especie_nf   = p_dados_tela.ies_especie_nf
		and item_ret_terc.cod_fornecedor   = p_dados_tela.cod_fornecedor
		and item_ret_terc.num_sequencia_ar = mr_tela_relac_nf_rem_retorno.num_seq
		and item_ret_terc.num_nf_remessa   = ma_tela_relac_nf_rem_retorno[l_ind].num_nf
		and item_ret_terc.num_sequencia_nf = ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia
		whenever error stop
		if sqlca.sqlcode = 0 then
			if l_qtd_devolvida > 0 then
				let ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida = l_qtd_devolvida
			else
				if m_eh_modificacao
					and ma_tela_relac_nf_rem_retorno[l_ind].qtd_saldo = 0 then
					let ma_tela_relac_nf_rem_retorno[l_ind].dat_emis_nf   = null
					let ma_tela_relac_nf_rem_retorno[l_ind].num_nf        = null
					let ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia = null
					let ma_tela_relac_nf_rem_retorno[l_ind].qtd_saldo     = null
					continue while
				end if
				let ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida = 0
			end if
		end if

		let l_ind = l_ind + 1
	end while
	call set_count(l_ind - 1)

	error "quantidade declarada: ", mr_tela_relac_nf_rem_retorno.qtd_declarad_nf clipped
	call log_refresh_display()

end function

#--------------------------------------------#
function sup3760_informou_sup_ar_grade()
#--------------------------------------------#

	whenever error continue
	select 1
	from sup_ar_grade
	where sup_ar_grade.empresa        = p_cod_empresa
	and sup_ar_grade.aviso_recebto  = mr_tela_relac_nf_rem_retorno.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode = 0
		or sqlca.sqlcode = -284 then
		return true
	else
		return false
	end if

end function

#----------------------------------------------------------------#
function sup3760_grade_dimen_ret_igual_remessa(l_num_nf,
	l_num_sequencia,
	l_cod_fornecedor)
#----------------------------------------------------------------#
	define l_num_nf         like item_em_terc.num_nf,
	l_num_sequencia  like item_em_terc.num_sequencia,
	l_cod_fornecedor like item_em_terc.cod_fornecedor
	define lr_sup_itterc_grade record
	grade_1            like sup_itterc_grade.grade_1            ,
	grade_2            like sup_itterc_grade.grade_2            ,
	grade_3            like sup_itterc_grade.grade_3            ,
	grade_4            like sup_itterc_grade.grade_4            ,
	grade_5            like sup_itterc_grade.grade_5            ,
endereco           like sup_itterc_grade.endereco           ,
num_volume         like sup_itterc_grade.num_volume         ,
dat_hor_producao   like sup_itterc_grade.dat_hor_producao   ,
dat_hor_valid      like sup_itterc_grade.dat_hor_valid      ,
peca               like sup_itterc_grade.peca               ,
serie_peca         like sup_itterc_grade.serie_peca         ,
comprimento        like sup_itterc_grade.comprimento        ,
largura            like sup_itterc_grade.largura            ,
altura             like sup_itterc_grade.altura             ,
diametro           like sup_itterc_grade.diametro
end record
define l_existe_nota_de_retorno smallint

let l_existe_nota_de_retorno = false

whenever error continue
open cq_ret_igual_remessa using l_num_nf        ,
l_num_sequencia ,
l_cod_fornecedor

whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("open","cq_ret_igual_remessa")
end if

while true
	whenever error continue
	fetch cq_ret_igual_remessa into lr_sup_itterc_grade.grade_1            ,
	lr_sup_itterc_grade.grade_2            ,
	lr_sup_itterc_grade.grade_3            ,
	lr_sup_itterc_grade.grade_4            ,
	lr_sup_itterc_grade.grade_5            ,
	lr_sup_itterc_grade.endereco           ,
	lr_sup_itterc_grade.num_volume         ,
	lr_sup_itterc_grade.dat_hor_producao   ,
	lr_sup_itterc_grade.dat_hor_valid      ,
	lr_sup_itterc_grade.peca               ,
	lr_sup_itterc_grade.serie_peca         ,
	lr_sup_itterc_grade.comprimento        ,
	lr_sup_itterc_grade.largura            ,
	lr_sup_itterc_grade.altura             ,
	lr_sup_itterc_grade.diametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("fetch","cq_ret_igual_remessa")
		end if
		exit while
	end if

	whenever error continue
	select 1
	from sup_ar_grade
	where sup_ar_grade.empresa           = p_cod_empresa
	and sup_ar_grade.aviso_recebto     = mr_tela_relac_nf_rem_retorno.num_aviso_rec
	and sup_ar_grade.seq_aviso_recebto = mr_tela_relac_nf_rem_retorno.num_seq
	and sup_ar_grade.endereco          = lr_sup_itterc_grade.endereco
	and sup_ar_grade.num_volume        = lr_sup_itterc_grade.num_volume
	and sup_ar_grade.grade_1           = lr_sup_itterc_grade.grade_1
	and sup_ar_grade.grade_2           = lr_sup_itterc_grade.grade_2
	and sup_ar_grade.grade_3           = lr_sup_itterc_grade.grade_3
	and sup_ar_grade.grade_4           = lr_sup_itterc_grade.grade_4
	and sup_ar_grade.grade_5           = lr_sup_itterc_grade.grade_5
	and sup_ar_grade.dat_hor_producao  = lr_sup_itterc_grade.dat_hor_producao
	and sup_ar_grade.dat_hor_valid     = lr_sup_itterc_grade.dat_hor_valid
	and sup_ar_grade.peca              = lr_sup_itterc_grade.peca
	and sup_ar_grade.serie_peca        = lr_sup_itterc_grade.serie_peca
	and sup_ar_grade.comprimento       = lr_sup_itterc_grade.comprimento
	and sup_ar_grade.largura           = lr_sup_itterc_grade.largura
	and sup_ar_grade.altura            = lr_sup_itterc_grade.altura
	and sup_ar_grade.diametro          = lr_sup_itterc_grade.diametro
	whenever error stop
	if sqlca.sqlcode = 0
		or sqlca.sqlcode = -284 then
		let l_existe_nota_de_retorno = true
	end if

	if l_existe_nota_de_retorno then
		exit while
	end if

end while
close cq_ret_igual_remessa

if l_existe_nota_de_retorno then
return true
else
return false
end if

end function

#------------------------------------------#
function sup3760_busca_raz_social_reduz(l_cod_fornecedor)
#------------------------------------------#
	define l_raz_social_reduz      like fornecedor.raz_social_reduz,
	l_cod_fornecedor        like fornecedor.cod_fornecedor

	whenever error continue
	select raz_social_reduz
	into l_raz_social_reduz
	from fornecedor
	where fornecedor.cod_fornecedor = l_cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("selecao","fornecedor")
		end if
		return "n�o cadastrado"
	else
		return l_raz_social_reduz
	end if

end function

#-------------------------------------------------#
function sup3760_exibe_nf_remessa_retorno()
#-------------------------------------------------#
	define l_ind        smallint

	let l_ind = arr_count()

	display by name mr_tela_relac_nf_rem_retorno.num_aviso_rec    ,
	mr_tela_relac_nf_rem_retorno.num_seq          ,
	mr_tela_relac_nf_rem_retorno.cod_fornecedor   ,
	mr_tela_relac_nf_rem_retorno.raz_social_reduz ,
	mr_tela_relac_nf_rem_retorno.cod_item         ,
	mr_tela_relac_nf_rem_retorno.den_item_reduz

	if l_ind > 8 then
		display array ma_tela_relac_nf_rem_retorno to s_tela.*
		if int_flag  then
			let int_flag = 0
		else
			let l_ind = arr_curr()
		end if
	else
		if arraylength(ma_tela_relac_nf_rem_retorno) < 8 then
			call arrayadditem(ma_tela_relac_nf_rem_retorno,8-arraylength(ma_tela_relac_nf_rem_retorno))
		end if

		display ma_tela_relac_nf_rem_retorno[1].* to s_tela[1].*
		display ma_tela_relac_nf_rem_retorno[2].* to s_tela[2].*
		display ma_tela_relac_nf_rem_retorno[3].* to s_tela[3].*
		display ma_tela_relac_nf_rem_retorno[4].* to s_tela[4].*
		display ma_tela_relac_nf_rem_retorno[5].* to s_tela[5].*
		display ma_tela_relac_nf_rem_retorno[6].* to s_tela[6].*
		display ma_tela_relac_nf_rem_retorno[7].* to s_tela[7].*
		display ma_tela_relac_nf_rem_retorno[8].* to s_tela[8].*
	end if
end function

#----------------------------------------#
function sup3760_exibe_qtd_declarada()
#----------------------------------------#
	error "quantidade declarada: ", mr_tela_relac_nf_rem_retorno.qtd_declarad_nf clipped
	call log_refresh_display()
end function

#------------------------------------------------#
function sup3760_altera_nf_remessa_retorno()
#------------------------------------------------#
	define l_arr_curr      smallint,
	l_scr_line      smallint,
	l_arr_count     smallint,
	l_funcao        char(20),
	l_qtd_devolvida like item_em_terc.qtd_tot_recebida,
	l_ind           smallint,
	l_msg           char(200),
	la_qtd_devolvida_ant  array[] of record
	qtd_devolvida    like item_em_terc.qtd_tot_recebida
end record

let m_eh_modificacao = false
initialize la_qtd_devolvida_ant to null

for l_ind = 1 to arraylength(ma_tela_relac_nf_rem_retorno)
	call arrayadditem(la_qtd_devolvida_ant,1)
	let la_qtd_devolvida_ant[l_ind].qtd_devolvida = ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida
end for

call log006_exibe_teclas("01 02 07", p_versao)
current window is w_sup3760v

let int_flag = 0
input array ma_tela_relac_nf_rem_retorno without defaults from s_tela.*

before row
let l_arr_curr  = arr_curr()
let l_scr_line  = scr_line()
let l_arr_count = arr_count()

before field qtd_devolvida
if ma_tela_relac_nf_rem_retorno[l_arr_curr].num_nf = " "
	or ma_tela_relac_nf_rem_retorno[l_arr_curr].num_nf is null then
	let ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida = 0
else
	if l_arr_curr = 1 then
		if ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida is null
			or ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida = 0 then
			let ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida = mr_tela_relac_nf_rem_retorno.qtd_declarad_nf
			display ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida to s_tela[l_scr_line].qtd_devolvida
		end if
	end if
end if
call sup3760_exibe_qtd_declarada()
call sup3760_save_cur_field_name('qtd_devolvida')

after field qtd_devolvida
if ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida > 0 then
	if ma_tela_relac_nf_rem_retorno[l_arr_curr].dat_emis_nf > p_dados_tela.dat_emis_nf then
		call log0030_mensagem("data de remessa posterior a data da nota fiscal de retorno.","info")
		let ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida = 0
		display ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida to s_tela[l_scr_line].qtd_devolvida
	next field qtd_devolvida
end if
if  ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida > ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_saldo then
	call log0030_mensagem("quantidade a baixar maior que o saldo.","info")
next field qtd_devolvida
end if
end if

after input
if not int_flag then
	let l_ind = 1
	let l_qtd_devolvida = 0
	for l_ind = 1 to arraylength(ma_tela_relac_nf_rem_retorno)
		if ma_tela_relac_nf_rem_retorno[l_ind].num_nf = " "
			or ma_tela_relac_nf_rem_retorno[l_ind].num_nf is null then
			exit for
		end if

		let l_qtd_devolvida = l_qtd_devolvida + ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida

		if ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida > 0 then
			if ma_tela_relac_nf_rem_retorno[l_ind].dat_emis_nf > p_dados_tela.dat_emis_nf then
				call log0030_mensagem("existe data de remessa posterior a data da nota fiscal de retorno.","info")
			next field qtd_devolvida
		end if
		if  ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida > ma_tela_relac_nf_rem_retorno[l_ind].qtd_saldo then
			call log0030_mensagem("existe quantidade a baixar maior que o saldo.","info")
		next field qtd_devolvida
	end if
end if
end for

# uma nf pode ter varias nf de remessa para totalizar ela, por isso � feito o for
# para fazer a soma .
if l_qtd_devolvida <> mr_tela_relac_nf_rem_retorno.qtd_declarad_nf then
	let l_msg = "quantidade devolvida(", log0800_trim(l_qtd_devolvida)  ,") maior que a quantidade declarada da nf (", log0800_trim(mr_tela_relac_nf_rem_retorno.qtd_declarad_nf) ,")"
	call log0030_mensagem(l_msg,"info")
next field qtd_devolvida
end if
end if

on key (control-z, f4)
case
when infield(qtd_devolvida)
let comando3 = p_dados_tela.num_nf," ",
p_dados_tela.ser_nf," ",
p_dados_tela.ssr_nf," ",
p_dados_tela.ies_especie_nf," ",
p_dados_tela.cod_fornecedor," ",
mr_tela_relac_nf_rem_retorno.num_seq," ",
p_cod_empresa, " ", "1"{1=background}, " ",
"modificacao"," ",
ma_tela_relac_nf_rem_retorno[l_arr_curr].num_nf, " ",
ma_tela_relac_nf_rem_retorno[l_arr_curr].num_sequencia, " ",
ma_tela_relac_nf_rem_retorno[l_arr_curr].qtd_devolvida

call log1200_executa_programa("sup2290",comando3)
end case
end input

if not int_flag then
	if m_eh_modificacao then
		let l_funcao = "modificacao"
	else
		let l_funcao = "inclusao"
	end if
	for l_ind = 1 to arraylength(ma_tela_relac_nf_rem_retorno)
		if ma_tela_relac_nf_rem_retorno[l_ind].num_nf = " "
			or ma_tela_relac_nf_rem_retorno[l_ind].num_nf is null
			or ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida = " "
			or ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida = 0 then
			continue for
		end if
		if la_qtd_devolvida_ant[l_ind].qtd_devolvida <> ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida then

			call sup0063_verifica_controles(12,mr_tela_relac_nf_rem_retorno.cod_item,"inclusao","sup2290")
			returning m_controles
			if m_controles <> " " then
				let l_msg = "deseja informar grade/dimensional da nf remessa ", log0800_trim(ma_tela_relac_nf_rem_retorno[l_ind].num_nf) ,
				" seq: ", log0800_trim(ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia)," ?"
				if not log0040_confirm(19,22,l_msg) then
					let ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida = la_qtd_devolvida_ant[l_ind].qtd_devolvida
					let m_tot_qtd_devolvida = m_tot_qtd_devolvida + la_qtd_devolvida_ant[l_ind].qtd_devolvida
					display ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida to s_tela[l_ind].qtd_devolvida
					continue for
				else
					let m_tot_qtd_devolvida = m_tot_qtd_devolvida + ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida
				end if
			end if
			if m_tot_qtd_devolvida > mr_tela_relac_nf_rem_retorno.qtd_declarad_nf then
				let l_msg = "quantidade devolvida(", log0800_trim(m_tot_qtd_devolvida)  ,") maior que a quantidade declarada da nf (", log0800_trim(mr_tela_relac_nf_rem_retorno.qtd_declarad_nf) ,")"
				call log0030_mensagem(l_msg,"info")
				exit for
			else
				let comando3 = p_dados_tela.num_nf," ",
				p_dados_tela.ser_nf," ",
				p_dados_tela.ssr_nf," ",
				p_dados_tela.ies_especie_nf," ",
				p_dados_tela.cod_fornecedor," ",
				mr_tela_relac_nf_rem_retorno.num_seq," ",
				p_cod_empresa, " ", "1"{1=background}, " ",
				l_funcao," ",
				ma_tela_relac_nf_rem_retorno[l_ind].num_nf, " ",
				ma_tela_relac_nf_rem_retorno[l_ind].num_sequencia, " ",
				ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida

				call log1200_executa_programa("sup2290",comando3)
			end if
		else
			let m_tot_qtd_devolvida = m_tot_qtd_devolvida + ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida
		end if
	end for
else
	for l_ind = 1 to arraylength(ma_tela_relac_nf_rem_retorno)
		if ma_tela_relac_nf_rem_retorno[l_ind].num_nf is not null
			or ma_tela_relac_nf_rem_retorno[l_ind].num_nf <> " " then
			let ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida = 0
		end if
	end for
end if

if m_tot_qtd_devolvida > mr_tela_relac_nf_rem_retorno.qtd_declarad_nf then
	for l_ind = 1 to arraylength(ma_tela_relac_nf_rem_retorno)
		if ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida > 0 then
			call sup3760_exclui_relacionamento(l_ind)
		end if
	end for
	let l_msg = "houve diverg�ncia entre a quantidade declarada (", log0800_trim(mr_tela_relac_nf_rem_retorno.qtd_declarad_nf) ,")",
	"  e a devolvida (", log0800_trim(m_tot_qtd_devolvida) ,")",
	"\nfavor relacionar novamente."
	call log0030_mensagem(l_msg,"info")
end if

if l_funcao = "inclusao" then
	error "inclus�o efetuada com sucesso."
	call log_refresh_display()
else
	error "modifica��o efetuada com sucesso."
	call log_refresh_display()
end if

end function

#-----------------------------------------#
function sup3760_verifica_qtd_devolvida()
#-----------------------------------------#
	define l_qtd_devolvida     like item_em_terc.qtd_tot_remessa,
	l_ind               smallint,
	l_msg               char(200)

	initialize ma_tela_relac_nf_rem_retorno, ma_tela_relac_nf_compl to null

	whenever error continue
	declare cq_aviso_rec_relac1 scroll cursor with hold for
	select num_aviso_rec,
	num_seq,
	cod_item,
	qtd_declarad_nf
	from aviso_rec
	where aviso_rec.cod_empresa   = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_aviso_rec_relac1")
		return
	end if

	whenever error continue
	open cq_aviso_rec_relac1
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open cursor","cq_aviso_rec_relac1")
		return
	end if

	whenever error continue
	fetch cq_aviso_rec_relac1 into mr_tela_relac_nf_rem_retorno.num_aviso_rec,
	mr_tela_relac_nf_rem_retorno.num_seq,
	mr_tela_relac_nf_rem_retorno.cod_item,
	mr_tela_relac_nf_rem_retorno.qtd_declarad_nf
	whenever error stop
	if sqlca.sqlcode <> 0 then
		close cq_aviso_rec_relac1
		free cq_aviso_rec_relac1
		return
	end if

	let m_eh_modificacao = true
	call sup3760_busca_nf_remessa()

	if m_tot_qtd_devolvida > mr_tela_relac_nf_rem_retorno.qtd_declarad_nf then
		for l_ind = 1 to arraylength(ma_tela_relac_nf_rem_retorno)
			if ma_tela_relac_nf_rem_retorno[l_ind].qtd_devolvida > 0 then
				call sup3760_exclui_relacionamento(l_ind)
			end if
		end for
		let l_msg = "houve diverg�ncia entre a quantidade declarada e a devolvida.\n",
		" favor relacionar novamente."
		call log0030_mensagem(l_msg,"info")
	end if

	error "quantidade declarada: ", mr_tela_relac_nf_rem_retorno.qtd_declarad_nf clipped
	call log_refresh_display()

end function

#---------------------------------#
function sup3760_eh_alteracao()
#---------------------------------#
	define l_arr_curr          smallint,
	l_qtd_devolvida     like item_ret_terc.qtd_devolvida

	whenever error continue
	select sum(qtd_devolvida)
	into l_qtd_devolvida
	from item_ret_terc
	where item_ret_terc.cod_empresa      = p_cod_empresa
	and item_ret_terc.num_nf           = p_dados_tela.num_nf
	and item_ret_terc.ser_nf           = p_dados_tela.ser_nf
	and item_ret_terc.ssr_nf           = p_dados_tela.ssr_nf
	and item_ret_terc.ies_especie_nf   = p_dados_tela.ies_especie_nf
	and item_ret_terc.cod_fornecedor   = p_dados_tela.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode = 0 then
		if l_qtd_devolvida > 0 then
			return true
		else
			return false
		end if
	else
		return false
	end if

end function

#------------------------------------------------#
function sup3760_paginacao_nf_relac(l_acao)
#------------------------------------------------#
	define l_acao         char(10),
	l_msg_erro char(100)

	let l_acao = upshift(l_acao)

	whenever error continue
	case l_acao
	when "anterior" fetch previous cq_aviso_rec_relac into mr_tela_relac_nf_rem_retorno.num_aviso_rec,
	mr_tela_relac_nf_rem_retorno.num_seq,
	mr_tela_relac_nf_rem_retorno.cod_item,
	mr_tela_relac_nf_rem_retorno.qtd_declarad_nf
	when "seguinte" fetch next     cq_aviso_rec_relac into mr_tela_relac_nf_rem_retorno.num_aviso_rec,
	mr_tela_relac_nf_rem_retorno.num_seq,
	mr_tela_relac_nf_rem_retorno.cod_item,
	mr_tela_relac_nf_rem_retorno.qtd_declarad_nf
end case
whenever error stop

if sqlca.sqlcode = 0 then
	call sup3760_busca_nf_remessa()
	call sup3760_busca_den_item(mr_tela_relac_nf_rem_retorno.cod_item) returning p_status
	let mr_tela_relac_nf_rem_retorno.den_item_reduz = m_den_item
else
	error "n�o existem mais dados nesta dire��o."
end if

call sup3760_exibe_nf_remessa_retorno()

end function
#-- os 562700 fim --#

#--------------------------------#
function sup376_consulta_dados()
#--------------------------------#
	define l_status             smallint, ### trxyyh
	l_cod_empresa_orig   char(02)

	select *
	into p_nf_sup.*
	from nf_sup
	where nf_sup.cod_empresa        = p_cod_empresa
	and nf_sup.cod_fornecedor     = p_dados_tela.cod_fornecedor
	and nf_sup.num_nf             = p_dados_tela.num_nf
	and nf_sup.ser_nf             = p_dados_tela.ser_nf
	and nf_sup.ssr_nf             = p_dados_tela.ssr_nf
	and nf_sup.ies_especie_nf     = p_dados_tela.ies_especie_nf

	select 1
	from aviso_rec_compl
	where cod_empresa   = p_nf_sup.cod_empresa
	and num_aviso_rec = p_nf_sup.num_aviso_rec
	and ies_situacao  = "c"
	if sqlca.sqlcode = 0 then
		let p_ies_canc = true
	else
		let p_ies_canc = false
	end if

	let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_nf_sup.cnd_pgto_nf)
	if l_cod_empresa_orig is not null then
		let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
	end if

	let p_ies_pagamento = p_cond_pgto_cap.ies_pagamento

	if sup3762_busca_frete_sup() = false then
		let p_frete_sup.num_conhec = 0
	end if

	if sup3760_verifica_desconto_acrescimo_nf() then
		let p_dados_tela_f.ies_desc_acres = "s"
	else
		let p_dados_tela_f.ies_desc_acres = "n"
	end if

	### carrega na consulta o tipo e objetivo de entrada do cfop em tela.
	initialize p_ies_tip_entrada, m_ies_obj_entrada to null
	call sup0686_retorna_tip_obj_entrada(p_dados_tela.cod_operacao,p_dados_tela.cod_fiscal_compl)
returning status,p_ies_tip_entrada,m_ies_obj_entrada

	select cod_operacao, cod_fiscal_compl
	into p_cod_oper_ant, p_dados_tela.cod_fiscal_compl
	from aviso_rec_compl
	where aviso_rec_compl.cod_empresa   = p_cod_empresa
	and aviso_rec_compl.num_aviso_rec = p_dados_tela.num_aviso_rec

	let m_tipo_nf = p_dados_tela.ies_nf_aguard_nfe
	let m_data_ent = p_dados_tela.dat_entrada_nf
	if p_ies_cod_operac = "s" then
		initialize p_dados_tela.cod_operac_estoq to null
		select cod_operacao
		into p_dados_tela.cod_operac_estoq
		from aviso_rec_compl
		where aviso_rec_compl.cod_empresa = p_cod_empresa
		and aviso_rec_compl.num_aviso_rec = p_dados_tela.num_aviso_rec
	end if

	display "                                                                               " at 10,01

	if p_nf_sup.num_conhec <> 0 then
		display " conhecimento: ",p_nf_sup.num_conhec," " at 20,20 attribute(reverse)
		call sup3760_mostra_conhec_sup_frete_x()
	end if

	if p_ies_canc = true then
		display " nota fiscal cancelada " at 20,50 attribute(reverse)
	end if
end function

#------------------------------------------------------------------#
function sup3760_inicializa_dados_array_pedido() ### tetkiv
#------------------------------------------------------------------#
### tetkiv - ao consultar dados deve inicializar p_pedidos, isso para n�o considerar os registro
### do pedido incluido na nota incluida anteriormente.

	initialize p_ordens      to null
	initialize p_ordens_p1   to null
	initialize p_ordens_p2   to null
	initialize p_ordens_p3   to null
	initialize p_ordens_p4   to null
	initialize p_ordens_p5   to null
	initialize p_ordens_p6   to null
	initialize p_ordens_p7   to null
	initialize p_ordens_p8   to null

	initialize p_ordens_p9    to null
	initialize p_ordens_p10   to null
	initialize p_ordens_p11   to null
	initialize p_ordens_p12   to null
	initialize p_ordens_p13   to null
	initialize p_ordens_p14   to null
	initialize p_ordens_p15   to null
	initialize p_ordens_p16   to null

	initialize p_pedidos     to null
	initialize p_pedidos_p1  to null
	initialize p_pedidos_p2  to null
	initialize p_pedidos_p3  to null
	initialize p_pedidos_p4  to null
	initialize p_pedidos_p5  to null
	initialize p_pedidos_p6  to null

	initialize p_pedidos_p7   to null
	initialize p_pedidos_p8   to null
	initialize p_pedidos_p9   to null
	initialize p_pedidos_p10  to null
	initialize p_pedidos_p11  to null
	initialize p_pedidos_p12  to null

	initialize p_prog_ordem  to null
	initialize p_prog_ordem1 to null
	initialize p_prog_ordem2 to null
	initialize p_prog_ordem3 to null
	initialize p_prog_ordem4 to null

	initialize p_prog_ordem5 to null
	initialize p_prog_ordem6 to null
	initialize p_prog_ordem7 to null
	initialize p_prog_ordem8 to null

	initialize p_array_pedidos to null
	initialize p_array_ped_itens to null
end function

#------------------------------# #terbd0
function sup376_anulacao_tms()
#------------------------------#
	define l_msg   char(50)

	define l_num_nf_devol_cli  like sup_nf_devol_cli.nota_fiscal_fatura,
	l_ser_nf_devol_cli  like sup_nf_devol_cli.ser_nf_fatura

	if m_nf_anulacao = '1' then
		if find4glfunction('omc9214_set_conhec_transporte') = true then
			if find4glfunction('supr81_set_ies_especie_nf') then
				call supr81_set_ies_especie_nf(p_dados_tela.ies_especie_nf)
			end if
			call supr81_get_anulacao_nf_sup(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf, p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor)
			returning l_num_nf_devol_cli, l_ser_nf_devol_cli
			if l_num_nf_devol_cli <> false then
				call log085_transacao("begin")
				call omc9214_set_empresa(p_cod_empresa)                     ## empresa do conhecimento
				call omc9214_set_conhec_transporte(l_num_nf_devol_cli)                        ## numero do conhecimento
				call omc9214_set_ser_conh_tran(l_ser_nf_devol_cli)                            ## serie do conhecimento
				call omc9214_set_salva_historico(true)                      ## salva hist�rico da nota fiscal

				if not omc9214_libera_nota() then
					call log085_transacao("rollback")
					let l_msg = omc9214_get_descricao_err()
					call log0030_mensagem(l_msg,"info")
				else
					call log085_transacao("commit")
				end if
			end if
		else
			call log0030_mensagem("favor avisar para a ti baixar o chamado terbd0 disponivel no site.","info")
		end if
	end if

end function

#mman-7598
##--------------------------------------#
# function sup3760_verifica_erro_relac_nfd() #tvrk06 - evitar exclus�o da contagem automatica ao relacionar com nota de saida no sup5240
##--------------------------------------#
##chamado feito em conjunto - ana paula castro/alcidio/paula maia. notas fiscais de retorno de terceiros - viqua
# define l_conta   smallint
#
# let l_conta = 0
#
# whenever error continue
# select count(*)
#   into l_conta
#   from nf_sup_erro
#  where nf_sup_erro.empresa            = p_cod_empresa
#    and nf_sup_erro.num_aviso_rec      = p_dados_tela.num_aviso_rec
#    and (nf_sup_erro.des_pendencia_item = 'falta relacionar nf de saida para nf de devolucao'
#     or nf_sup_erro.des_pendencia_item = 'falta confirmar relacionamento nf de devolucao para gerar nc/abat. duplicata.')
# whenever error stop
# if l_conta > 0 then
#    return true
# end if
#
# return false
#
# end function


#------------------------------------------------------------------#
function sup376_gera_movimento_estoque(p_tipo_mov,p_tipo_chamada)
#------------------------------------------------------------------#
	define p_tipo_mov          char(20),
	p_ies_somente_erro5 smallint,
	p_tipo_chamada      char(20),
	p_conta_erro        smallint,
	l_num_oc_ar         like aviso_rec.num_oc,
	l_ind               smallint,
	l_pv_cliente        like pedidos.num_pedido_cli,
	l_num_montag        smallint,
	l_parametro         char(01),
	l_consiste          smallint,
	l_ies_efetua_cont_manual char(01),
	l_ies_erro_dif_gao  smallint,
	l_item_factory      smallint

	#857334
	let l_ies_efetua_cont_manual = 'n'
	let l_item_factory = false

	if log_existe_epl('sup3760y_before_process_cont_automatica') then
		call log_setvar('ies_efetua_cont_manual', l_ies_efetua_cont_manual)
		#epl t�tulo: efetua contagem manual
		#epl tipo: char(1)

		call sup3760y_before_process_cont_automatica()

		let l_ies_efetua_cont_manual = log_getvar('ies_efetua_cont_manual')
		#epl t�tulo: efetua contagem manual
		#epl tipo: char(1)
	end if
	#857334

	let p_ies_somente_erro5 = false
	let l_ies_erro_dif_gao  = false
	let p_conta_erro = 0

	if p_dados_tela.ies_nf_aguard_nfe <> "7" then
		if p_tipo_mov = "normal" then
			let p_ies_somente_erro5 = false
			if sup376_verifica_erro_tipo_6() then
				call sup376_verifica_erro_tipo_5(p_tipo_chamada) returning p_ies_somente_erro5
				call sup376_verifica_erro_dif_gao() returning l_ies_erro_dif_gao
				if (p_par_estoque.ies_custo_medio = "d" and (p_ies_somente_erro5 = true or p_nf_sup.ies_nf_com_erro = "n" or
					(p_nf_sup.ies_nf_com_erro = "s" and ((p_nf_sup.nom_resp_aceite_er is not null and p_nf_sup.nom_resp_aceite_er <> " ") or
					l_ies_erro_dif_gao))
					)) or p_par_estoque.ies_custo_medio = "m" then

					if sup376_verifica_itens_contagem_automatica() = true then
#--inicio--ch727947 antonio #
						#mman-7598
						if m_contagem_automatica = true or (p_dados_tela.ies_especie_nf = 'nfd' and l_ies_efetua_cont_manual    = 's') then
							#and sup3760_verifica_erro_relac_nfd() )) then ##tvrk06 mman-7598(lorenzetti) altera��o realizada no sup5240 viqua
							let p_aviso_rec.ies_liberacao_cont = 'n'
							let p_aviso_rec.ies_situa_ar = 'c'
						else
							#mman-7598
#---fim----ch727947#
							error " aguarde ... realizando contagem .... "

							call sup3760_atualiza_nota(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
							p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
							p_dados_tela.num_aviso_rec, p_dados_tela.cnd_pgto_nf)

							let comando3 = p_cod_empresa, " ",
							p_dados_tela.num_aviso_rec," ",
							0, " ",
							3760," ",
							"s"," ","inclusao"
							call log1200_executa_programa("sup0530",comando3)
						end if
						if m_gera_rsv_transf = "s" and p_dados_tela.ies_nf_aguard_nfe = "8" then
							for l_ind = 1 to 999
								initialize l_num_oc_ar to null
								whenever error continue
								select num_oc
								into l_num_oc_ar
								from aviso_rec
								where cod_empresa   = p_cod_empresa
								and num_aviso_rec = p_dados_tela.num_aviso_rec
								and num_seq       = l_ind
								whenever error stop
								if sqlca.sqlcode <> 0 then
									#nao tem mais sequencia.
									exit for
								end if

								initialize m_num_ped_fornec to null
								whenever error continue
								select num_pedido_fornec
								into m_num_ped_fornec
								from prog_ordem_sup
								where cod_empresa      = p_cod_empresa
								and num_oc           = l_num_oc_ar
								and num_versao       = 001
								and num_prog_entrega = 001
								whenever error stop

								let m_pedido_venda = m_num_ped_fornec[1,6]
								if sup3760_busca_ped_venda() = false then
									return
								end if

								initialize l_pv_cliente to null
								whenever error continue
								select num_pedido_cli
								into l_pv_cliente
								from pedidos
								where cod_empresa = p_cod_emp_transf
								and num_pedido  = m_pedido_venda
								whenever error stop

								let l_num_montag = 0
								whenever error continue
								select count(*)
								into l_num_montag
								from ordem_montag_item
								where cod_empresa = p_cod_empresa
								and num_pedido  = l_pv_cliente
								whenever error continue
								if l_num_montag = 0 then
									let l_parametro = "s"
									let comando3 = p_cod_empresa,
									" ",l_pv_cliente,
									" ",l_parametro,
									" ",p_dados_tela.num_aviso_rec
									call log1200_executa_programa("vdp4577",comando3)
								end if
							end for
							### verifica se gerou ordem de montagem para o item, caso nao
							### tenha gerado exclui a nota fiscal

							call log1200_executa_programa("vdp1030",p_cod_empresa)

							let l_num_montag = 0
							whenever error continue
							select count(*)
							into l_num_montag
							from ordem_montag_item
							where cod_empresa = p_cod_empresa
							and num_pedido  = l_pv_cliente
							whenever error stop
							if l_num_montag = 0 then
								whenever error continue
								call log085_transacao("commit")
								whenever error stop
								if sqlca.sqlcode <> 0 then
									call log003_err_sql("transacao","commit")
									call log085_transacao("rollback") #os596059
								end if

								call log0030_mensagem("problemas na geracao da ordem de montagem. nota sera excluida","exclamation")
								let m_log004 = false
								call sup376_exclusao_nota()
								call log085_transacao("begin")
							else
								call log0030_mensagem('processamento das om�s efetuado com sucesso. ','info')
							end if
						end if
					end if
				end if
			end if
		else
			if sup376_verifica_itens_contagem_automatica() = true then
#--inicio--ch727947 antonio #
				if m_contagem_automatica = true or (p_dados_tela.ies_especie_nf = 'nfd' and l_ies_efetua_cont_manual = 's') then
					let p_aviso_rec.ies_liberacao_cont = 'n'
					let p_aviso_rec.ies_situa_ar = 'c'
				else
#---fim----ch727947#
					error " aguarde ... realizando contagem .... "

					call sup3760_atualiza_nota(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
					p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
					p_dados_tela.num_aviso_rec, p_dados_tela.cnd_pgto_nf)
					let comando3 = p_cod_empresa, " ",
					p_dados_tela.num_aviso_rec," ",
					0, " ",
					3760," ",
					"d"," ",
					"inclusao"
					call log1200_executa_programa("sup0530",comando3)
				end if

				if m_gera_rsv_transf = "s" and p_dados_tela.ies_nf_aguard_nfe = "8" then
					for l_ind = 1 to 999
						initialize l_num_oc_ar to null
						whenever error continue
						select num_oc
						into l_num_oc_ar
						from aviso_rec
						where cod_empresa   = p_cod_empresa
						and num_aviso_rec = p_dados_tela.num_aviso_rec
						and num_seq       = l_ind
						whenever error stop
						if sqlca.sqlcode <> 0 then
							#nao tem mais sequencia.
							exit for
						end if

						initialize m_num_ped_fornec to null
						whenever error continue
						select num_pedido_fornec
						into m_num_ped_fornec
						from prog_ordem_sup
						where cod_empresa      = p_cod_empresa
						and num_oc           = l_num_oc_ar
						and num_versao       = 001
						and num_prog_entrega = 001
						whenever error stop

						let m_pedido_venda = m_num_ped_fornec[1,6]
						if sup3760_busca_ped_venda() = false then
							return
						end if

						initialize l_pv_cliente to null
						whenever error continue
						select num_pedido_cli
						into l_pv_cliente
						from pedidos
						where cod_empresa = p_cod_emp_transf
						and num_pedido  = m_pedido_venda
						whenever error stop

						let l_num_montag = 0
						whenever error continue
						select count(*)
						into l_num_montag
						from ordem_montag_item
						where cod_empresa = p_cod_empresa
						and num_pedido  = l_pv_cliente
						whenever error stop
						if l_num_montag = 0 then
							let l_parametro = "s"
							let comando3 = p_cod_empresa,
							" ", l_pv_cliente,
							" ", l_parametro,
							" ", p_dados_tela.num_aviso_rec
							call log1200_executa_programa("vdp4577",comando3)
						end if
						whenever error continue
						call log085_transacao("commit")
						whenever error stop
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("commit","chamada vdp4577")
							call log085_transacao("rollback") #os596059
							return
						end if

					end for

					call log1200_executa_programa("vdp1030",p_cod_empresa)

					let l_num_montag = 0
					whenever error continue
					select count(*)
					into l_num_montag
					from ordem_montag_item
					where cod_empresa = p_cod_empresa
					and num_pedido  = l_pv_cliente
					whenever error stop
					if l_num_montag = 0 then
						let m_log004 = false
						call sup376_exclusao_nota()
					else
						call log0030_mensagem('processamento efetuado com sucesso.','info')
					end if
				end if
			end if
		end if
	end if

	current window is w_sup37601
	let p_conta_erro = 0
	declare cq_erros_nf cursor for
	select *
	from nf_sup_erro
	where nf_sup_erro.empresa  = p_cod_empresa
	and nf_sup_erro.num_aviso_rec  = p_dados_tela.num_aviso_rec
	and nf_sup_erro.ies_origem_erro <> "4"
	foreach cq_erros_nf into p_nf_sup_erro.*
	if p_nf_sup_erro.ies_erro_grave = "s" then
		let p_conta_erro = p_conta_erro + 1
	else
		if (p_nf_sup.nom_resp_aceite_er is null or
			p_nf_sup.nom_resp_aceite_er = " ") then
			let p_conta_erro = p_conta_erro + 1
		end if
	end if
end foreach

if p_conta_erro = 0 then
	whenever error continue
	update nf_sup set ies_nf_com_erro = "n"
	where nf_sup.cod_empresa   = p_cod_empresa
	and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("update","nf_sup")
		return false
	end if

	whenever error continue
	update nf_sup_aux set ies_nf_com_erro = "n", nom_resp_aceite_er = p_nf_sup.nom_resp_aceite_er
	where nf_sup_aux.cod_empresa   = p_cod_empresa
	and nf_sup_aux.num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("update","nf_sup_aux")
		return false
	end if
else
	if p_tipo_chamada = "assumir" then
		call log0030_mensagem(" nao e' possivel assumir os erros, existem erros graves.","exclamation")
	end if
	whenever error continue
	update nf_sup
	set ies_nf_com_erro = "s",
	nom_resp_aceite_er = null
	where nf_sup.cod_empresa   = p_cod_empresa
	and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
end if

if sqlca.sqlcode <> 0 then
	call log003_err_sql("atualizacao","nf_sup")
return false
end if

end function

#----------------------------#
function sup376_zoom_itens()
#----------------------------#
	define  p_ind           smallint

	# 775462
	if m_wms_instal = 's' and m_utiliza_codf_deposit = 's' then
		call log006_exibe_teclas("01 02 17 18", p_versao)
		call log130_procura_caminho("sup3760w") returning comando3
		open window w_sup37602 at 06,02 with form comando3
		attribute(border, message line last, prompt line last, form line 1)
		call set_count(999)
		display array p_array_wms to s_sup3760w.*
		if int_flag  then
			let int_flag = 0
		else
			let p_ind = arr_curr()
		end if
	else
		call log006_exibe_teclas("01 02 17 18", p_versao)
		call log130_procura_caminho("sup37602") returning comando3
		open window w_sup37602 at 06,02 with form comando3
		attribute(border, message line last, prompt line last, form line 1)
		call set_count(999)
		display array p_array to s_sup37602.*
		if int_flag  then
			let int_flag = 0
		else
			let p_ind = arr_curr()
		end if
	end if
	close window w_sup37602
end function

#-----------------------------------#
function sup3760_busca_valor_prog(l_num_prog_entrega)
#-----------------------------------#
	define p_val_solic        decimal(17,2),
	p_val_receb        decimal(17,2),
	l_num_prog_entrega like prog_ordem_sup_com.num_prog_entrega

	#whenever error continue
	select sum(val_solic), sum(val_receb)
	into p_val_solic, p_val_receb
	from prog_ordem_sup_com, ordem_sup
	where prog_ordem_sup_com.cod_empresa      = p_cod_empresa
	and prog_ordem_sup_com.num_oc           = p_ordem_sup.num_oc
	and prog_ordem_sup_com.num_versao       = ordem_sup.num_versao
	and prog_ordem_sup_com.num_prog_entrega = l_num_prog_entrega
	and ordem_sup.cod_empresa               = prog_ordem_sup_com.cod_empresa
	and ordem_sup.num_oc                    = prog_ordem_sup_com.num_oc
	and ordem_sup.ies_versao_atual          = "s"
	whenever error stop

	if p_val_solic is null then
		let p_val_solic = 0
	end if

	if p_val_receb is null then
		let p_val_receb = 0
	end if

return p_val_solic, p_val_receb

end function

#--------------------------------------------------#
function sup376_processa_conversao(l_ind,l_funcao)
#--------------------------------------------------#
	define l_ind               smallint

	define p_fat_conver_unid   like ordem_sup.fat_conver_unid,
	p_dat_ref_cotacao   like ordem_sup.dat_ref_cotacao,
	p_val_cotacao       like cotacao.val_cotacao,
	l_dat_ref_cotacao   date,
	p_preco_oc_x        decimal(17,7),
	p_par_ies           char(01),
	p_per_juros_ped     decimal(7,3),
	l_val_solicitado    like prog_ordem_sup_com.val_solic, #tfrzdr
	l_val_recebido      like prog_ordem_sup_com.val_receb, #tfrzdr,
	l_val_bruto         like prog_ordem_sup_com.val_receb,
	l_funcao            char(50)

	define l_msg               char(200) #555957

	initialize l_msg to null #555957
	let p_cod_moeda_ped   = null
	let p_val_cotacao     = null
	let p_fat_conver_unid = null
	let p_dat_ref_cotacao = null
	let p_preco_oc_x      = null

	if p_nfe_import = true or p_nfm_import = true then
		let p_cod_moeda_ped = p_processo_imp.cod_moeda
	else
		call sup376_busca_pedido_sup(p_cod_empresa, p_array_compl[l_ind].num_pedido)
		let p_cod_moeda_ped = p_pedido_sup.cod_moeda
	end if

	initialize p_ordem_sup.* to null
	call sup3762_busca_ordem_sup(p_cod_empresa,p_array_compl[l_ind].num_oc)

	#tfrzdr #trmj32 pegar valor solicitado rateada por programa��o de valor de mesma oc(sup1260)
	if (p_preco_oc_x is null or
		p_preco_oc_x = " " or
		p_preco_oc_x = 0) and
		sup376_verifica_controla_valor(p_array_compl[l_ind].num_oc) then

		if p_array_volta[l_ind].qtd_entregue is not null and p_array_volta[l_ind].qtd_entregue <> 0 then
			let l_val_solicitado = p_array_volta[l_ind].qtd_entregue
		else
			if p_array_pedidos[l_ind].num_prog_entrega is null or
				p_array_pedidos[l_ind].num_prog_entrega = "" then
				call sup376_busca_totais_ordem() returning l_val_solicitado, l_val_recebido
			else
				call sup3760_busca_valor_prog(p_array_pedidos[l_ind].num_prog_entrega)
				returning l_val_solicitado, l_val_recebido
			end if
		end if

		let p_preco_oc_x = l_val_solicitado
		let p_array[l_ind].pre_unit_nf = l_val_solicitado

		if m_wms_instal = 's' then
			let p_array_wms[l_ind].pre_unit_nf = l_val_solicitado
		end if
	end if
	#tfrzdr

	if m_preco_bruto is null then
		whenever error continue
		select distinct par_ind_especial
		into m_preco_bruto
		from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and parametro         = "preco_bruto"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let m_preco_bruto = "n"
		end if
	end if

	if m_preco_bruto = "s" then
		call sup3760_busca_valor_bruto() returning l_val_bruto
		if l_val_bruto > 0 then
			let p_array[l_ind].pre_unit_nf = l_val_bruto
		end if
	end if
	#tfrzdr

	let p_fat_conver_unid = p_ordem_sup.fat_conver_unid
	let p_dat_ref_cotacao = p_ordem_sup.dat_ref_cotacao
	if p_cod_moeda_ped is not null and
		p_par_con.cod_moeda_padrao <> p_cod_moeda_ped then
		### dmanentlgx-1985 - verifica se cliente trabalha com conceito de multimoeda
		### verifica regra e busca a cota��o da moeda para converter valor em reais
		### paula aqui
		if m_cap_utiliz_var_camb_calc_reali = 's' and
			(p_cod_moeda_ped is not null and
			p_par_con.cod_moeda_padrao <> p_cod_moeda_ped and
			p_fornecedor.cod_pais = p_cod_pais_emp) then
			let p_val_cotacao = supr_multimoedas_cotacao_conforme_regra_da_moeda_estrangeira(p_cod_empresa, p_array_compl[l_ind].num_pedido, p_array_compl[l_ind].num_oc, p_dados_tela.num_aviso_rec, p_dados_tela.dat_emis_nf)
			let p_preco_oc_x = p_array[l_ind].pre_unit_nf
			let p_array[l_ind].pre_unit_nf = p_preco_oc_x * p_val_cotacao
			call conout ("linha 30467 p_array[l_ind].pre_unit_nf: ", p_array[l_ind].pre_unit_nf)
		else
			if p_ies_indexacao = "s" and
				p_fornecedor.cod_pais = p_cod_pais_emp then

				call sup3760_busca_dat_ref_cotacao_moeda(p_cod_moeda_ped,
				p_ordem_sup.cod_fornecedor,
				p_dat_ref_cotacao) returning l_dat_ref_cotacao

				whenever error continue
				select val_cotacao into p_val_cotacao
				from cotacao
				where cotacao.cod_moeda = p_cod_moeda_ped
				and cotacao.dat_ref   = l_dat_ref_cotacao
				whenever error stop

				if sqlca.sqlcode =  0 then
					if p_val_cotacao = 0 then
						let l_msg = "cota��o para a moeda ",p_cod_moeda_ped," na data ",p_dat_ref_cotacao, " est� zerada (pat0150)" ##555957
						call log0030_mensagem(l_msg,"exclamation") ##555957
						let p_houve_erro = true
						return
					end if
					let p_preco_oc_x = p_array[l_ind].pre_unit_nf / p_val_cotacao

					call sup3760_busca_dat_ref_cotacao_moeda(p_cod_moeda_ped,
					p_ordem_sup.cod_fornecedor,
					p_dados_tela.dat_emis_nf) returning l_dat_ref_cotacao

					whenever error continue
					select val_cotacao into p_val_cotacao
					from cotacao
					where cotacao.cod_moeda  = p_cod_moeda_ped
					and cotacao.dat_ref    = l_dat_ref_cotacao
					whenever error stop

					if sqlca.sqlcode = 0 then
						if p_val_cotacao = 0 then
							let l_msg = "cota��o para a moeda ",p_cod_moeda_ped," na data ",p_dados_tela.dat_emis_nf, " est� zerada (pat0150)" ##555957
							call log0030_mensagem(l_msg,"exclamation") ##555957
							let p_houve_erro = true
							return
						end if
						let p_array[l_ind].pre_unit_nf = p_preco_oc_x * p_val_cotacao
					else
						let l_msg = "n�o existe cota��o para a moeda ",p_cod_moeda_ped," na data ",p_dados_tela.dat_emis_nf ##555957
						if not log0040_confirm(21,43,l_msg) then ##555957
							let p_houve_erro = true
							return
						end if
					end if
				end if
			else
				##### se for importacao - valores ja estao na moeda padrao ######
				if p_nfe_import = true or p_nfm_import = true then
				else
					let p_preco_oc_x = p_array[l_ind].pre_unit_nf

					call sup3760_busca_dat_ref_cotacao_moeda(p_cod_moeda_ped,
					p_ordem_sup.cod_fornecedor,
					p_dados_tela.dat_emis_nf) returning l_dat_ref_cotacao

					whenever error continue
					select val_cotacao into p_val_cotacao
					from cotacao
					where cotacao.cod_moeda  = p_cod_moeda_ped
					and cotacao.dat_ref    = l_dat_ref_cotacao
					whenever error stop

					if sqlca.sqlcode = 0 then
						if p_val_cotacao = 0 then
							let l_msg = "cota��o para a moeda ",p_cod_moeda_ped," na data ",p_dados_tela.dat_emis_nf, " est� zerada (pat0150)" ##555957
							call log0030_mensagem(l_msg,"exclamation") ##555957
							let p_houve_erro = true
							return
						end if
						let p_array[l_ind].pre_unit_nf = p_preco_oc_x * p_val_cotacao
					else
						let l_msg = "n�o existe cota��o para a moeda ",p_cod_moeda_ped," na data ",p_dados_tela.dat_emis_nf ##555957
						if not log0040_confirm(21,43,l_msg) then ##555957
							let p_houve_erro = true
							return
						end if
					end if
				end if
			end if
		end if
	end if

	initialize m_pre_unit_oc to null
	if p_fat_conver_unid <> 1 then
		call sup3760_busca_preco_sup_par_oc(p_array_compl[l_ind].num_oc)
	end if

	if m_pre_unit_oc is null  then
		let p_array[l_ind].pre_unit_nf = p_array[l_ind].pre_unit_nf  * p_fat_conver_unid
	else
		let p_array[l_ind].pre_unit_nf = m_pre_unit_oc * p_fat_conver_unid
		call sup3760_recalculo_pre_liquido(l_ind,p_fat_conver_unid)
	end if


	let p_par_ies = sup376_busca_par_sup_pad("taxa_juro_pedido",1)
	if p_par_ies = "s" then
		select per_juros_ped
		into p_per_juros_ped
		from pedidos_sup_juros
		where pedidos_sup_juros.cod_empresa = p_cod_empresa
		and pedidos_sup_juros.num_pedido  = p_array_compl[l_ind].num_pedido

		if sqlca.sqlcode = 0 then
			let p_array[l_ind].pre_unit_nf = p_array[l_ind].pre_unit_nf  + (p_array[l_ind].pre_unit_nf
			* (p_per_juros_ped / 100))
		end if
	end if

	if m_wms_instal = 's' then
		let p_array_wms[l_ind].pre_unit_nf =  p_array[l_ind].pre_unit_nf
	end if

end function

#------------------------------#
function sup376_inclui_ar_ped()
#------------------------------#
	define   sql_stmt           char(1200),
	p_funcao           char(30),
	p_ind7             smallint,
	p_seq              smallint,
	p_ultimo           smallint,
	p_tot_reservada    like prog_ordem_sup.qtd_solic,
	p_dif              like prog_ordem_sup.qtd_solic,
	p_tot_val_reserv   like prog_ordem_sup_com.val_solic,
	p_dif_val          like prog_ordem_sup_com.val_solic,
	p_val_tot_prog     like prog_ordem_sup_com.val_solic,
	l_num_prog         like prog_ordem_sup.num_prog_entrega,
	l_qtd_declarada    smallint

	if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = true then
		let p_tot_val_reserv = 0
		for p_ind7 = 1 to 50
			if p_array_it_prg_entr[p_ind,p_ind7].num_prog_entrega is not null then
				let p_tot_val_reserv = p_tot_val_reserv + p_array_it_prg_entr[p_ind,p_ind7].val_reservado
			else
				exit for
			end if
		end for

		let p_ultimo = p_ind7 - 1

		let p_dif_val = 0
		if p_array[p_ind].val_liquido_item > p_tot_val_reserv  then
			let p_dif_val = p_array[p_ind].val_liquido_item  - p_tot_val_reserv
		else
			let p_dif_val = 0
		end if

		for p_ind7 = 1 to 50
			if p_array_it_prg_entr[p_ind,p_ind7].num_prog_entrega is not null then
				if p_ind7 = p_ultimo then
					let p_ar_ped.qtd_reservada = p_array_it_prg_entr[p_ind,p_ind7].val_reservado + p_dif_val
				else
					let p_ar_ped.qtd_reservada = p_array_it_prg_entr[p_ind,p_ind7].val_reservado
				end if
				let p_ar_ped.cod_empresa      = p_cod_empresa
				let p_ar_ped.num_aviso_rec    = p_dados_tela.num_aviso_rec
				let p_ar_ped.num_seq          = p_array[p_ind].seq
				let p_ar_ped.num_pedido       = p_array_compl[p_ind].num_pedido
				let p_ar_ped.num_oc           = p_array_compl[p_ind].num_oc
				let p_ar_ped.num_prog_entrega = p_array_it_prg_entr[p_ind, p_ind7].num_prog_entrega
				call sup376_busca_tip_entrega()
				let p_ar_ped.qtd_recebida     = 0
				let p_ar_ped.qtd_devolvid     = 0
				if p_dados_tela.ies_nf_aguard_nfe <> "d" then
					call sup376_insere_ar_ped()
				end if
			else
				if (p_ies_nf_transf = true or g_ies_nf_permuta = true) and
					p_array_compl[p_ind7].num_oc is not null and
					p_array_compl[p_ind7].num_oc <> 0 then

					initialize l_num_prog to null
					if p_array_compl[p_ind7].num_prog_entrega is null or
						p_array_compl[p_ind7].num_prog_entrega = 0 then
						declare cq_busca_prg cursor with hold for
						select prog_ordem_sup.num_prog_entrega
						from prog_ordem_sup, ordem_sup
						where prog_ordem_sup.cod_empresa = p_cod_empresa
						and prog_ordem_sup.num_oc      = p_array_compl[p_ind7].num_oc
						and prog_ordem_sup.ies_situa_prog = "f"
						and ordem_sup.cod_empresa      = prog_ordem_sup.cod_empresa
						and ordem_sup.num_oc           = prog_ordem_sup.num_oc
						and ordem_sup.num_versao       = prog_ordem_sup.num_versao
						and ordem_sup.ies_versao_atual = "s"
						order by num_prog_entrega
						foreach cq_busca_prg into l_num_prog
						exit foreach
					end foreach
				else
					let l_num_prog = p_array_compl[p_ind7].num_prog_entrega
				end if

				let p_ar_ped.qtd_reservada = p_array[p_ind7].qtd_declarad_nf
				let p_ar_ped.cod_empresa      = p_cod_empresa
				let p_ar_ped.num_aviso_rec    = p_dados_tela.num_aviso_rec
				let p_ar_ped.num_seq          = p_array[p_ind7].seq
				let p_ar_ped.num_pedido       = p_array_compl[p_ind7].num_pedido
				let p_ar_ped.num_oc           = p_array_compl[p_ind7].num_oc
				let p_ar_ped.num_prog_entrega = l_num_prog
				call sup376_busca_tip_entrega()
				let p_ar_ped.qtd_recebida     = 0
				let p_ar_ped.qtd_devolvid     = 0
				if p_dados_tela.ies_nf_aguard_nfe <> "d" then
					call sup376_insere_ar_ped()
				end if
			else
				exit for
			end if
		end if
	end for
else
	let p_tot_reservada = 0
	for p_ind7 = 1 to 50
		if p_array_it_prg_entr[p_ind,p_ind7].num_prog_entrega is not null then
			let p_tot_reservada = p_tot_reservada +
			p_array_it_prg_entr[p_ind,p_ind7].qtd_reservada
		else
			if (p_ies_nf_transf = true or g_ies_nf_permuta = true) and
				p_array_compl[p_ind7].num_oc is not null and
				p_array_compl[p_ind7].num_oc <> 0 then
				let p_tot_reservada = p_tot_reservada +
				p_array[p_ind7].qtd_declarad_nf
			else
				exit for
			end if
		end if
	end for
	let p_ultimo = p_ind7 - 1
	let p_dif = 0

	if p_array[p_ind].qtd_declarad_nf > p_tot_reservada  then
		let p_dif =   p_array[p_ind].qtd_declarad_nf  - p_tot_reservada
	else
		let p_dif = 0
	end if

	let l_qtd_declarada = p_array[p_ind].qtd_declarad_nf
	for p_ind7 = 1 to 50

		if p_array_compl[p_ind7].num_oc is null then
			exit for
		end if

		if p_array_it_prg_entr[p_ind,p_ind7].num_prog_entrega is not null then

			let p_ar_ped.qtd_reservada    = p_array_it_prg_entr[p_ind,p_ind7].qtd_reservada

			if p_ind7 = p_ultimo and p_dif > 0 then
				let p_ar_ped.qtd_reservada = p_ar_ped.qtd_reservada + p_dif
			end if

			let p_ar_ped.cod_empresa      = p_cod_empresa
			let p_ar_ped.num_aviso_rec    = p_dados_tela.num_aviso_rec
			let p_ar_ped.num_seq          = p_array[p_ind].seq
			let p_ar_ped.num_pedido       = p_array_compl[p_ind].num_pedido
			let p_ar_ped.num_oc           = p_array_compl[p_ind].num_oc
			let p_ar_ped.num_prog_entrega = p_array_it_prg_entr[p_ind, p_ind7].num_prog_entrega
			call sup376_busca_tip_entrega()
			let p_ar_ped.qtd_recebida     = 0
			let p_ar_ped.qtd_devolvid     = 0

			let l_qtd_declarada = l_qtd_declarada - p_ar_ped.qtd_reservada
			if p_dados_tela.ies_nf_aguard_nfe <> "d" then
				call sup376_insere_ar_ped()
			end if
		else
			if (p_ies_nf_transf = true or g_ies_nf_permuta = true) and
				p_array_compl[p_ind7].num_oc is not null and
				p_array_compl[p_ind7].num_oc <> 0 then

				initialize l_num_prog to null
				if p_array_compl[p_ind7].num_prog_entrega is null or
					p_array_compl[p_ind7].num_prog_entrega = 0 then
					declare cq_busca_prg1 cursor with hold for
					select prog_ordem_sup.num_prog_entrega
					from prog_ordem_sup, ordem_sup
					where prog_ordem_sup.cod_empresa = p_cod_empresa
					and prog_ordem_sup.num_oc      = p_array_compl[p_ind7].num_oc
					and prog_ordem_sup.ies_situa_prog = "f"
					and ordem_sup.cod_empresa      = prog_ordem_sup.cod_empresa
					and ordem_sup.num_oc           = prog_ordem_sup.num_oc
					and ordem_sup.num_versao       = prog_ordem_sup.num_versao
					and ordem_sup.ies_versao_atual = "s"
					order by num_prog_entrega
					foreach cq_busca_prg1 into l_num_prog
					exit foreach
				end foreach
			else
				let l_num_prog = p_array_compl[p_ind7].num_prog_entrega
			end if


			#let p_ar_ped.qtd_reservada = p_array[p_ind7].qtd_declarad_nf
			let p_ar_ped.qtd_reservada = l_qtd_declarada
			let p_ar_ped.cod_empresa      = p_cod_empresa
			let p_ar_ped.num_aviso_rec    = p_dados_tela.num_aviso_rec
			let p_ar_ped.num_seq          = p_array[p_ind7].seq
			let p_ar_ped.num_pedido       = p_array_compl[p_ind7].num_pedido
			let p_ar_ped.num_oc           = p_array_compl[p_ind7].num_oc
			let p_ar_ped.num_prog_entrega = l_num_prog
			call sup376_busca_tip_entrega()
			let p_ar_ped.qtd_recebida     = 0
			let p_ar_ped.qtd_devolvid     = 0
			if p_dados_tela.ies_nf_aguard_nfe <> "d"then
				call sup376_insere_ar_ped()
			end if
		else
			exit for
		end if
	end if
end for
end if

end function

#------------------------------#
function sup376_insere_ar_ped()
#------------------------------#
	whenever error continue

#sdmdpk
	if p_dados_tela.ies_especie_nf = "nfm" then
		let p_ar_ped.num_pedido       = 0
		let p_ar_ped.num_oc           = 0
		let p_ar_ped.num_prog_entrega = 0
		let p_ar_ped.ies_tip_entrega  = ' '
		let p_ar_ped.qtd_reservada    = 0
		let p_ar_ped.qtd_recebida     = 0
		let p_ar_ped.qtd_devolvid     = 0
	end if
#sdmdpk

	if p_ar_ped.qtd_reservada is null then
		let p_ar_ped.qtd_reservada = 0
	end if
	if p_ar_ped.qtd_recebida is null then
		let p_ar_ped.qtd_recebida = 0
	end if
	if p_ar_ped.qtd_devolvid is null then
		let p_ar_ped.qtd_devolvid = 0
	end if

	whenever error continue
	insert into ar_ped values (p_ar_ped.*)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode = -239 or
			sqlca.sqlcode = -268 then
			call sup376_alimenta_audit("inclusao",
			"ar_ped",
			p_ar_ped.num_aviso_rec,
			p_ar_ped.num_seq,
			p_ar_ped.num_pedido,
			p_ar_ped.num_oc,
			p_ar_ped.num_prog_entrega)
		else
			call log003_err_sql("inclusao","ar_ped")
			let p_houve_erro = true
		end if
	end if

	whenever error stop
end function

#----------------------------------------------#
function sup376_deleta_inf_fiscais(p_num_seq)
#----------------------------------------------#
	define p_num_seq      like aviso_rec.num_seq,
	l_cod_operacao like nf_sup.cod_operacao,
	l_msg          char(80)

	if p_par_estoque.ies_custo_medio = "d" then
		if p_aviso_rec.ies_item_estoq = "n" and
			(p_par_sup_compl.ies_conta_ok_n_est = "2" or
			(p_par_sup_compl.ies_conta_ok_n_est="3"  and
			p_dados_tela.ies_especie_nf="nfs"))    then
		else
			if p_aviso_rec.ies_situa_ar = "e" then
				if p_aviso_rec.ies_liberacao_cont = "s" then
					call log0030_mensagem(" funcao nao permitida. excluir inspecao e contagem ","exclamation")
				else
					call log0030_mensagem(" funcao nao permitida. excluir inspecao ","exclamation")
				end if
				return false
			end if
			if p_aviso_rec.ies_liberacao_cont = "s" then
				call log0030_mensagem(" funcao nao permitida. excluir contagem","exclamation")
				return false
			end if
		end if
	end if

	if log0040_confirm(21,43,"excluir informacoes fiscais desta sequencia?") then
		#fluxo de caixa
		if not fcl1150_integra_sequencia_ar_fcx(p_cod_empresa,p_dados_tela.num_aviso_rec,
			p_num_seq,"ex") then
			return false
		end if

		{if sup1069_verifica_erro_grave_gao(p_aviso_rec.cod_empresa,
		p_aviso_rec.num_aviso_rec,
		p_aviso_rec.num_seq) then
		let l_cod_operacao = sup3760_recupera_operacao_estoq()
		call sup1069_atualizacao_orcamento_nf_espec("exclusao",
		"sup3760",
		p_aviso_rec.cod_empresa,
		p_aviso_rec.num_aviso_rec,
		p_aviso_rec.num_seq,
		p_aviso_rec.qtd_recebida,
		l_cod_operacao,
		0,
		"",
		0,
		0,
		"",
		false,
		false,
		's')
		returning p_status, l_msg

		if p_status = false then
			call log0030_mensagem(l_msg,'exclamation')
			return false
		end if
	end if}
	let p_aviso_rec.pct_enc_financ      =  0
	#let p_aviso_rec.pre_unit_nf         =  0
	let p_aviso_rec.val_despesa_aces_i  =  0
	if p_nf_sup.ies_situa_import is null or
		p_nf_sup.ies_situa_import = " " then
		### tvtda5 - se fornecedor n�o contribuinte de ipi n�o deve calcular ipi sobre as despesas acess�rias
		if p_ies_contrib_ipi = 'n' then
			let p_aviso_rec.ies_da_bc_ipi = "p"
		else
			let p_aviso_rec.ies_da_bc_ipi = "s"
		end if
	else
		if p_nfe_import = true or p_nfm_import = true then
			if m_num_processo >= g_proc_ini_os163407 then
				let p_aviso_rec.ies_da_bc_ipi = sup3760_determina_indicador_da(p_cod_empresa, m_num_processo)
			else
				let p_aviso_rec.ies_da_bc_ipi = "s"
			end if
		else
			let p_aviso_rec.ies_da_bc_ipi = "g"
		end if
	end if
	let p_aviso_rec.val_desc_item       =  0
	let p_aviso_rec.val_liquido_item    =  0
	let p_aviso_rec.val_compl_estoque   =  0
	let p_aviso_rec.dat_ref_val_compl   = null
	let p_aviso_rec.cod_incid_ipi       =  0
	let p_aviso_rec.ies_bitributacao    =  "n"
	let p_aviso_rec.ies_incid_icms_ite  =  " "
	let p_aviso_rec.cod_fiscal_item     =  "    "
	let p_aviso_rec.ies_receb_fiscal    =  "n"
	let p_aviso_rec.cod_operac_estoq    =  "    "
	let p_aviso_rec.ies_diverg_listada  =  "n"
	let p_aviso_rec.ies_tip_incid_ipi   =  " "
	let p_aviso_rec.pct_direito_cred    =  0
	let p_aviso_rec.pct_ipi_declarad    =  0
	let p_aviso_rec.val_base_c_ipi_it   =  0
	let p_aviso_rec.val_base_c_ipi_da   =  0
	let p_aviso_rec.val_ipi_decl_item   =  0
	let p_aviso_rec.val_ipi_calc_item   =  0
	let p_aviso_rec.val_ipi_desp_aces   =  0
	let p_aviso_rec.val_contabil_item   =  0
	let p_aviso_rec.cus_tot_item        =  0
	let p_aviso_rec.val_base_c_item_d   =  0
	let p_aviso_rec.val_base_c_item_c   =  0
	let p_aviso_rec.pct_icms_item_d     =  0
	let p_aviso_rec.pct_icms_item_c     =  0
	let p_aviso_rec.pct_red_bc_item_d   =  0
	let p_aviso_rec.pct_red_bc_item_c   =  0
	let p_aviso_rec.pct_diferen_item_d  =  0
	let p_aviso_rec.pct_diferen_item_c  =  0
	let p_aviso_rec.val_icms_item_d     =  0
	let p_aviso_rec.val_icms_item_c     =  0
	let p_aviso_rec.val_base_c_icms_da  =  0
	let p_aviso_rec.val_icms_diferen_i  =  0
	let p_aviso_rec.val_icms_desp_aces  =  0
	let p_aviso_rec.val_enc_financ      =  0
	let p_aviso_rec.val_acrescimos      =  0
	let p_aviso_rec.val_frete           =  0
	let p_aviso_rec.val_icms_frete_d    =  0
	let p_aviso_rec.val_icms_frete_c    =  0
	let p_aviso_rec.pct_icms_frete_d    =  0
	let p_aviso_rec.pct_icms_frete_c    =  0
	let p_aviso_rec.val_base_c_frete_d  =  0
	let p_aviso_rec.val_base_c_frete_c  =  0
	let p_aviso_rec.val_icms_diferen_f  =  0
	let p_aviso_rec.pct_red_bc_frete_d  =  0
	let p_aviso_rec.pct_red_bc_frete_c  =  0
	let p_aviso_rec.pct_diferen_fret_d  =  0
	let p_aviso_rec.pct_diferen_fret_c  =  0

	#-in�cio ch-tfrc09-#
	if log_existe_epl('sup3760y_before_process_update_aviso_rec_inf_fiscal') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: aviso_rec.cod_empresa

		call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		call log_setvar('num_seq', p_num_seq)
		#epl numero da sequencia do ar
		#epl tipo: aviso_rec.num_seq

		call log_setvar('cod_unid_med_nf', p_aviso_rec.cod_unid_med_nf)
		#epl unidade de medida
		#epl tipo: aviso_rec.cod_unid_med_nf

		call log_setvar('cod_cla_fisc_nf', p_aviso_rec.cod_cla_fisc_nf)
		#epl classifica��o fiscal
		#epl tipo: aviso_rec.cod_cla_fisc_nf

		call log_setvar('pre_unit_nf', p_aviso_rec.pre_unit_nf)
		#epl pre�o unit�rio item
		#epl tipo: aviso_rec.pre_unit_nf

		call log_setvar('qtd_declarad_nf', p_aviso_rec.qtd_declarad_nf)
		#epl quantidade
		#epl tipo: aviso_rec.qtd_declarad_nf

		call log_setvar('val_liquido_item', p_aviso_rec.val_liquido_item)
		#epl valor liquido item
		#epl tipo: aviso_rec.val_liquido_item

		call log_setvar('pct_ipi_declarad', p_aviso_rec.pct_ipi_declarad)
		#epl percentual de ipi
		#epl tipo: aviso_rec.pct_ipi_declarad

		call log_setvar('val_base_c_ipi_it', p_aviso_rec.val_base_c_ipi_it)
		#epl valor base ipi
		#epl tipo: aviso_rec.val_base_c_ipi_it

		call log_setvar('houve_erro', p_houve_erro)
		#epl indicador se houve erro no processamento
		#epl tipo: smallint

		call sup3760y_before_process_update_aviso_rec_inf_fiscal()
		let p_houve_erro = log_getvar('houve_erro')
	end if
	#-fim ch-tfrc09-#

	whenever error continue
	update aviso_rec set aviso_rec.* = p_aviso_rec.*
	where aviso_rec.cod_empresa = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
	and aviso_rec.num_seq       = p_num_seq
	whenever error stop
	if sqlca.sqlcode = 0  then
		if not sup1031_grava_audit_ar(p_aviso_rec.num_aviso_rec,
			p_num_seq,
			"sup3760","4") then
			return false
		end if

		insert into nf_sup_erro ( empresa, num_aviso_rec, num_seq, des_pendencia_item, ies_origem_erro, ies_erro_grave )  values ( p_aviso_rec.cod_empresa,
		p_aviso_rec.num_aviso_rec,
		p_aviso_rec.num_seq,
		"nao houve recebimento fiscal do item ",
		"1",
		"s"
		)
		update nf_sup
		set nf_sup.ies_nf_com_erro = "s",
		nf_sup.nom_resp_aceite_er = null
		where nf_sup.cod_empresa   = p_aviso_rec.cod_empresa
		and nf_sup.num_aviso_rec = p_aviso_rec.num_aviso_rec
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","nf_sup")
			return false
		end if
		call sup376_exibe_array() # os 415085 - winston
	else
		call log003_err_sql("update","aviso_rec")
		return false
	end if

	if p_aviso_rec.num_oc > 0 then
		#fluxo de caixa

		#atualizar saldo da ordem de compra no
		#fluxo de caixa ap�s exclus�o de inf. fiscais do ar
		if not fcl1150_integra_oc_fcx(p_aviso_rec.cod_empresa,
			p_aviso_rec.num_oc,"in") then
			return false
		end if
	end if

	message " exclusao de informacoes fiscais efetuada com sucesso. " attribute(reverse)
end if
return true
end function

#------------------------------------#
function sup376_manut_item_terc()
#------------------------------------#
	define p_cod_fiscal_c  like aviso_rec.cod_fiscal_item,
	l_status        smallint

	initialize p_cod_fiscal_c to null
	let p_cod_fiscal_c[2,5] = p_dados_tela.cod_operacao[2,5]
	if p_dados_tela.cod_operacao[1] = "5" then
		let p_cod_fiscal_c[1]    = "1"
	end if
	if p_dados_tela.cod_operacao[1] = "6" then
		let p_cod_fiscal_c[1]    = "2"
	end if
	if p_dados_tela.cod_operacao[1] = "7" then
		let p_cod_fiscal_c[1]    = "3"
	end if

	initialize p_ies_tip_entrada to null
	call sup0686_retorna_tipo_entrada(p_cod_fiscal_c,
	p_dados_tela.cod_fiscal_compl)
returning l_status,
	p_ies_tip_entrada

	if l_status = false then
		let p_ies_tip_entrada = " "
	end if

end function

#-----------------------------------------------#
function sup376_entrada_pedido_ordem(p_funcao)
#-----------------------------------------------#
	define p_funcao       char(30)

	if p_par_sup.ies_modulo_compras = "n" or
		p_par_sup.ies_modulo_compras is null then
		let p_ies_informou_ped = "n"
		return true
	end if

	if p_funcao = "inclusao" then
		let p_fornec_incl_item = "xxxxx"
	end if

	let p_pedidos_p1  = p_pedidos[1,500]
	let p_pedidos_p2  = p_pedidos[501,1000]
	let p_pedidos_p3  = p_pedidos[1001,1200]

	#--# tdjy25 #--#
	let p_pedidos_p4 = p_pedidos[1201,1700]
	let p_pedidos_p5 = p_pedidos[1701,2200]
	let p_pedidos_p6 = p_pedidos[2201,2400]

	let p_pedidos_p7  = p_pedidos[2401,2900]
	let p_pedidos_p8  = p_pedidos[2901,3400]
	let p_pedidos_p9  = p_pedidos[3401,3600]
	let p_pedidos_p10 = p_pedidos[3601,4100]
	let p_pedidos_p11 = p_pedidos[4101,4600]
	let p_pedidos_p12 = p_pedidos[4601,4800]
	#--# tdjy25 #--#

	let p_ordens_p1   = p_ordens[1,500]
	let p_ordens_p2   = p_ordens[501,1000]
	let p_ordens_p3   = p_ordens[1001,1500]
	let p_ordens_p4   = p_ordens[1501,1800]

	#--# tdjy25 #--#
	let p_ordens_p5 = p_ordens[1801,2300]
	let p_ordens_p6 = p_ordens[2301,2800]
	let p_ordens_p7 = p_ordens[2801,3300]
	let p_ordens_p8 = p_ordens[3301,3600]

	let p_ordens_p9  = p_ordens[3601,4100]
	let p_ordens_p10 = p_ordens[4101,4600]
	let p_ordens_p11 = p_ordens[4601,5100]
	let p_ordens_p12 = p_ordens[5101,5400]
	let p_ordens_p13 = p_ordens[5401,5900]
	let p_ordens_p14 = p_ordens[5901,6400]
	let p_ordens_p15 = p_ordens[6401,6900]
	let p_ordens_p16 = p_ordens[6901,7200]
	#--# tdjy25 #--#

	let p_prog_ordem1 = p_prog_ordem[1,300]
	let p_prog_ordem2 = p_prog_ordem[301,600]

	#--# tdjy25 #--#
	let p_prog_ordem3 = p_prog_ordem[601,900]
	let p_prog_ordem4 = p_prog_ordem[901,1200]

	let p_prog_ordem5 = p_prog_ordem[1201,1500]
	let p_prog_ordem6 = p_prog_ordem[1501,1800]
	let p_prog_ordem7 = p_prog_ordem[1801,2100]
	let p_prog_ordem8 = p_prog_ordem[2101,2400]
	#--# tdjy25 #--#

	initialize p_array_volta, p_array_ped_aux to null
	call sup385_entrada_pedidos(p_cod_empresa,
	p_dados_tela.cod_fornecedor,
	p_pedidos_p1,
	p_pedidos_p2,
	p_pedidos_p3,
	p_ordens_p1,
	p_ordens_p2,
	p_ordens_p3,
	p_ordens_p4,
	p_prog_ordem1,
	p_prog_ordem2,
	p_retorno_3760,
	p_fornec_incl_item,
	p_dados_tela.num_aviso_rec,
	p_funcao)
returning p_pedidos_p1,
	p_pedidos_p2,
	p_pedidos_p3,
	p_ordens_p1,
	p_ordens_p2,
	p_ordens_p3,
	p_ordens_p4,
	p_prog_ordem1,
	p_prog_ordem2,
	p_retorno_3760,
	p_qtd_entreg1,
	p_qtd_entreg2,
	p_qtd_entreg3,
	p_qtd_entreg4,
	p_qtd_entreg5,
	p_qtd_entreg6

	#--# tdjy25 #--#
	let p_pedidos_p4   = log_getvar("pedidos_p4")
	let p_pedidos_p5   = log_getvar("pedidos_p5")
	let p_pedidos_p6   = log_getvar("pedidos_p6")

	let p_pedidos_p7   = log_getvar("pedidos_p7")
	let p_pedidos_p8   = log_getvar("pedidos_p8")
	let p_pedidos_p9   = log_getvar("pedidos_p9")
	let p_pedidos_p10  = log_getvar("pedidos_p10")
	let p_pedidos_p11  = log_getvar("pedidos_p11")
	let p_pedidos_p12  = log_getvar("pedidos_p12")

	let p_ordens_p5    = log_getvar("ordens_p5")
	let p_ordens_p6    = log_getvar("ordens_p6")
	let p_ordens_p7    = log_getvar("ordens_p7")
	let p_ordens_p8    = log_getvar("ordens_p8")

	let p_ordens_p9     = log_getvar("ordens_p9")
	let p_ordens_p10    = log_getvar("ordens_p10")
	let p_ordens_p11    = log_getvar("ordens_p11")
	let p_ordens_p12    = log_getvar("ordens_p12")
	let p_ordens_p13    = log_getvar("ordens_p13")
	let p_ordens_p14    = log_getvar("ordens_p14")
	let p_ordens_p15    = log_getvar("ordens_p15")
	let p_ordens_p16    = log_getvar("ordens_p16")

	let p_prog_ordem3  = log_getvar("prog_ordem3")
	let p_prog_ordem4  = log_getvar("prog_ordem4")

	let p_prog_ordem5  = log_getvar("prog_ordem5")
	let p_prog_ordem6  = log_getvar("prog_ordem6")
	let p_prog_ordem7  = log_getvar("prog_ordem7")
	let p_prog_ordem8  = log_getvar("prog_ordem8")

	let p_qtd_entreg7  = log_getvar("qtd_entreg7")
	let p_qtd_entreg8  = log_getvar("qtd_entreg8")
	let p_qtd_entreg9  = log_getvar("qtd_entreg9")
	let p_qtd_entreg10 = log_getvar("qtd_entreg10")
	let p_qtd_entreg11 = log_getvar("qtd_entreg11")
	let p_qtd_entreg12 = log_getvar("qtd_entreg12")

	let p_qtd_entreg13 = log_getvar("qtd_entreg13")
	let p_qtd_entreg14 = log_getvar("qtd_entreg14")
	let p_qtd_entreg15 = log_getvar("qtd_entreg15")
	let p_qtd_entreg16 = log_getvar("qtd_entreg16")
	let p_qtd_entreg17 = log_getvar("qtd_entreg17")
	let p_qtd_entreg18 = log_getvar("qtd_entreg18")
	let p_qtd_entreg19 = log_getvar("qtd_entreg19")
	let p_qtd_entreg20 = log_getvar("qtd_entreg20")
	let p_qtd_entreg21 = log_getvar("qtd_entreg21")
	let p_qtd_entreg22 = log_getvar("qtd_entreg22")
	let p_qtd_entreg23 = log_getvar("qtd_entreg23")
	let p_qtd_entreg24 = log_getvar("qtd_entreg24")
	#--# tdjy25 #--#

	call log006_exibe_teclas("01 02 03 07", p_versao)
	#--inicio--vanderlei os 332356 #
	if (p_funcao = "copia") then
		current window is w_sup37609
	else
		current window is w_sup37601
	end if
	#---fim----vanderlei os 332356 #

	let p_pedidos[1,500]        = p_pedidos_p1
	let p_pedidos[501,1000]     = p_pedidos_p2
	let p_pedidos[1001,1200]    = p_pedidos_p3

	#--# tdjy25 #--#
	let p_pedidos[1201,1700]    = p_pedidos_p4
	let p_pedidos[1701,2200]    = p_pedidos_p5
	let p_pedidos[2201,2400]    = p_pedidos_p6

	let p_pedidos[2401,2900]    = p_pedidos_p7
	let p_pedidos[2901,3400]    = p_pedidos_p8
	let p_pedidos[3401,3600]    = p_pedidos_p9
	let p_pedidos[3601,4100]    = p_pedidos_p10
	let p_pedidos[4101,4600]    = p_pedidos_p11
	let p_pedidos[4601,4800]    = p_pedidos_p12
	#--# tdjy25 #--#

	let p_ordens[1,500]         = p_ordens_p1
	let p_ordens[501,1000]      = p_ordens_p2
	let p_ordens[1001,1500]     = p_ordens_p3
	let p_ordens[1501,1800]     = p_ordens_p4

	#--# tdjy25 #--#
	let p_ordens[1801,2300]     = p_ordens_p5
	let p_ordens[2301,2800]     = p_ordens_p6
	let p_ordens[2801,3300]     = p_ordens_p7
	let p_ordens[3301,3600]     = p_ordens_p8

	let p_ordens[3601,4100]     = p_ordens_p9
	let p_ordens[4101,4600]     = p_ordens_p10
	let p_ordens[4601,5100]     = p_ordens_p11
	let p_ordens[5101,5400]     = p_ordens_p12
	let p_ordens[5401,5900]     = p_ordens_p13
	let p_ordens[5901,6400]     = p_ordens_p14
	let p_ordens[6401,6900]     = p_ordens_p15
	let p_ordens[6901,7200]     = p_ordens_p16
	#--# tdjy25 #--#

	let p_prog_ordem[1,300]     = p_prog_ordem1
	let p_prog_ordem[301,600]   = p_prog_ordem2

	#--# tdjy25 #--#
	let p_prog_ordem[601,900]   = p_prog_ordem3
	let p_prog_ordem[901,1200]  = p_prog_ordem4

	let p_prog_ordem[1201,1500] = p_prog_ordem5
	let p_prog_ordem[1501,1800] = p_prog_ordem6
	let p_prog_ordem[1801,2100] = p_prog_ordem7
	let p_prog_ordem[2101,2400] = p_prog_ordem8
	#--# tdjy25 #--#

	let p_qtd_entreg[1,500]     = p_qtd_entreg1
	let p_qtd_entreg[501,1000]  = p_qtd_entreg2
	let p_qtd_entreg[1001,1500] = p_qtd_entreg3
	let p_qtd_entreg[1501,2000] = p_qtd_entreg4
	let p_qtd_entreg[2001,2500] = p_qtd_entreg5
	let p_qtd_entreg[2501,2600] = p_qtd_entreg6

	#--# tdjy25 #--#
	let p_qtd_entreg[2601,3100] = p_qtd_entreg7
	let p_qtd_entreg[3101,3600] = p_qtd_entreg8
	let p_qtd_entreg[3601,4100] = p_qtd_entreg9
	let p_qtd_entreg[4101,4600] = p_qtd_entreg10
	let p_qtd_entreg[4601,5100] = p_qtd_entreg11
	let p_qtd_entreg[5101,5200] = p_qtd_entreg12

	let p_qtd_entreg[5201,5700]   = p_qtd_entreg13
	let p_qtd_entreg[5701,6200]   = p_qtd_entreg14
	let p_qtd_entreg[6201,6700]   = p_qtd_entreg15
	let p_qtd_entreg[6701,7200]   = p_qtd_entreg16
	let p_qtd_entreg[7201,7700]   = p_qtd_entreg17
	let p_qtd_entreg[7701,7800]   = p_qtd_entreg18
	let p_qtd_entreg[7801,8300]   = p_qtd_entreg19
	let p_qtd_entreg[8301,8800]   = p_qtd_entreg20
	let p_qtd_entreg[8801,9300]   = p_qtd_entreg21
	let p_qtd_entreg[9301,9800]   = p_qtd_entreg22
	let p_qtd_entreg[9801,10300]  = p_qtd_entreg23
	let p_qtd_entreg[10301,10400] = p_qtd_entreg24
	#--# tdjy25 #--#

	if m_cnpj_nf_com_pc = "s" and p_ies_pc_ant_fornec = "s" then
		let p_dados_tela.cod_fornecedor = g_cod_forn_sup3850
		display by name p_dados_tela.cod_fornecedor
	end if

	if g_modifica_nf_transito = false then
		if p_retorno_3760 <> false then
			for p_sub = 1 to 800
				#----------pedido---------#
				if p_pedidos[((6 * p_sub) - 5), (6 * p_sub)] = "xxxxxx" then
					let p_array_pedidos[p_sub].num_pedido = null
					exit for
				else
					let p_array_pedidos[p_sub].num_pedido =
					p_pedidos[((6 * p_sub) - 5), (6 * p_sub)]
				end if
				#--------ordem-----------#
				if p_ordens[((9 * p_sub) - 8), (9 * p_sub)] = "xxxxxxxxx" then
					let p_array_pedidos[p_sub].num_oc = null
				else
					let p_array_pedidos[p_sub].num_oc =
					p_ordens[((9 * p_sub) - 8), (9 * p_sub)]
				end if
				#-----prog_entrega--------#
				if p_prog_ordem[((3 * p_sub) - 2),(3 * p_sub)] = "xxx" then
					let p_array_pedidos[p_sub].num_prog_entrega = null
				else
					let p_array_pedidos[p_sub].num_prog_entrega =
					p_prog_ordem[((3 * p_sub) - 2), (3 * p_sub)]
				end if
				#-----qtde entrega--------#
				if p_qtd_entreg[((13 * p_sub) - 12),(13 * p_sub)] = "xxxxxxxxxxxxx"
					then
					let p_array_ped_aux[p_sub].qtd_entregue = null
				else
					let p_array_ped_aux[p_sub].qtd_entregue =
					p_qtd_entreg[((13 * p_sub) - 12),(13 * p_sub)]
				end if
			end for
			for p_ind9 = p_sub to arraylength(p_array_pedidos)
				initialize p_array_pedidos[p_ind9].* to null
			end for
			let p_ies_informou_ped = "s"
			if p_array_pedidos[1].num_pedido is null or p_pedidos = " "  then
				let p_ies_informou_ped = "n"
			end if
			if p_pedidos is not null then
				call sup376_busca_infor_pedidos()
			end if
		else
			return false
		end if
	end if

return true
end function

#-------------------------------------------------#
function sup376_processa_consistencia(l_pergunta)
#-------------------------------------------------#
	define p_conta_ped            smallint,
	p_conta_est            smallint,
	l_pergunta             char(01),
	l_count_st             smallint,
	l_count_vdp            smallint,
	l_num_seq              like aviso_rec.num_seq,
	l_val_liquido_item     like aviso_rec.val_liquido_item,
	l_cod_item             like aviso_rec.cod_item,
	l_val_frete            like aviso_rec.val_frete,
	l_ies_nf_transf        smallint,
	l_status               smallint,
	l_ies_tip_entrada      like cod_fiscal_sup.ies_tip_entrada,
	l_ies_cred_pis         char(01),
	l_ies_tip_incid_ipi    like aviso_rec.ies_tip_incid_ipi,
	l_val_ipi_decl_item    like aviso_rec.val_ipi_decl_item,
	l_val_ipi_calc_item    like aviso_rec.val_ipi_calc_item,
	l_gru_ctr_desp_item    like aviso_rec.gru_ctr_desp_item,
	l_cod_cla_fisc         like aviso_rec.cod_cla_fisc,
	l_qtd_declarad_nf      like aviso_rec.qtd_declarad_nf,
	l_num_nf               like nf_sup.num_nf,
	l_num_proc_imp_nfs     like nfe_sup_compl.num_proc_imp_nfs,
	l_pend_calc_decl       char(01),
	l_par_forn             char(01),
	l_resposta             smallint,                #vanderlei - os 402649 #
	l_ies_especie_nf       like nf_sup.ies_especie_nf,
	l_cod_fornecedor       like nf_sup.cod_fornecedor,
	l_dat_entrada_nf       date,
	l_num_oc               like ordem_sup.num_oc,
	l_tem_erro_nota        smallint, ## tdkjr0
	l_retorno_epl          smallint,
	l_cod_empresa_estab    like aviso_rec.cod_empresa_estab,
	l_existe_remessa_wms   smallint,
	l_somente_frete        smallint,
	l_gecex                smallint

	let p_conta_ped = 0
	let p_conta_est = 0
	let p_houve_erro = false

	call sup1084_cria_temp()

	call sup3760_declara_cursores_consistencia() # tdkjr0/tdpiyj

	let l_retorno_epl = true

	if log_existe_epl("supy3760_processa_consistencia") then
		call log_setvar('cod_empresa',p_cod_empresa)
		call log_setvar('num_aviso_rec',p_dados_tela.num_aviso_rec)
		call log_setvar('retorno_epl',l_retorno_epl)

		call supy3760_processa_consistencia()

		let l_retorno_epl = log_getvar('retorno_epl')
	end if

	if l_retorno_epl = false then
		let p_houve_erro = true
	end if

	whenever error continue
	select num_aviso_rec
	from aviso_rec_compl
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and ies_situacao  = "c"
	whenever error stop
	if sqlca.sqlcode = 0
		then return
	end if

	if m_wms_instal = 's' and
		m_tipo_documento = 'n' then
		if find4glfunction('wmsr173_gerencia_wms_remessa_fiscal') then
			call wmsr173_wms_remessa_fiscal_ar_existe(p_cod_empresa,p_dados_tela.num_aviso_rec,0) returning l_status,l_existe_remessa_wms
			if l_status = false then
				return
			end if
			if l_existe_remessa_wms then
				if not wmsr173_gerencia_wms_remessa_fiscal(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					'e',
					'',
					1) then
					call log0030_processa_mensagem('consist�ncia n�o permitida. '||log0030_mensagem_get_texto(),'excl',0)
					return
				end if
			end if
		end if
	end if

	initialize l_pend_calc_decl to null
	whenever error continue
	select par_ind_especial
	into l_pend_calc_decl
	from sup_par_ar
	where sup_par_ar.empresa           = p_cod_empresa
	and sup_par_ar.aviso_recebto     = p_dados_tela.num_aviso_rec
	and sup_par_ar.seq_aviso_recebto = 0
	and sup_par_ar.parametro         = "pend_calc_decl"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_pend_calc_decl = "n"
	end if

	if sup376_verifica_fechamento() then
		let p_houve_erro = false
		if l_pergunta = "s" or l_pend_calc_decl = "s" then
			current window is w_sup37601
			#--inicio--vanderlei os 402649 #
			if sup3760_solicita_confirm_recal_imposto_declar(p_cod_empresa,
				p_dados_tela.ies_especie_nf,
				p_dados_tela.num_aviso_rec) then
				#dmansuplgx-495 nfc de venda ponto a ponto, n�o realizar rec�lculo dos impostos.
				if p_dados_tela.ies_especie_nf = "nfc" and obf3760_nota_venda_ponto_a_ponto(p_cod_empresa, p_dados_tela.num_aviso_rec) then
					let l_pergunta = "n"
				else
					if find4glfunction('sup3762_verifica_integracao_mensagem') = true then
						if not sup3762_verifica_integracao_mensagem(p_dados_tela.num_aviso_rec) then
							call log0040_confirm(21,04, "deseja recalcular impostos ?")
							returning l_resposta
						else
							let l_resposta = false
						end if
					else
						call log0040_confirm(21,04, "deseja recalcular impostos ?")
						returning l_resposta
					end if
					if l_resposta then
						let l_pergunta = "s"
					else
						let l_pergunta = "n"
					end if
				end if
			else
				let l_pergunta = "n"
			end if
			#---fim----vanderlei os 402649 #
		else
			#dmansuplgx-495 nfc de venda ponto a ponto, n�o realizar rec�lculo dos impostos.
			if p_dados_tela.ies_especie_nf = "nfc" and obf3760_nota_venda_ponto_a_ponto(p_cod_empresa, p_dados_tela.num_aviso_rec) then
				let l_pergunta = "n"
			end if
			#  if l_pergunta = "i" then
			#     let l_pergunta = "s"
			#  end if
		end if

		##os 575678 ==> transferido esta rotina de inclus�o autom�tica de st para depois da
		##pergunta "deseja recalcular impostos ?", para obedecer a resposta do
		##usu�rio.
		## o.s.513337
		if (l_pergunta = "s" or l_pergunta = "i" ) and
			## o.s 187036
			(p_dados_tela.ies_especie_nf = "nfd" or
			p_dados_tela.ies_especie_nf = "nfe") then
			initialize l_count_st, l_count_vdp to null
			if p_dados_tela.cod_empresa_estab is null then
				whenever error continue
				select count(*)
				into l_count_st
				from ar_subst_tribut
				where cod_empresa       = p_cod_empresa
				and (cod_empresa_estab is null
				or cod_empresa_estab = " ")
				and num_aviso_rec     = p_dados_tela.num_aviso_rec
				and ies_tipo_icms     = "r"
				whenever error stop
			else
				whenever error continue
				select count(*)
				into l_count_st
				from ar_subst_tribut
				where cod_empresa       = p_cod_empresa
				and cod_empresa_estab = p_dados_tela.cod_empresa_estab
				and num_aviso_rec     = p_dados_tela.num_aviso_rec
				and ies_tipo_icms     = "r"
				whenever error stop
			end if

			if l_count_st is null then
				let l_count_st = 0
			end if

			whenever error continue
			select count(*)
			into l_count_vdp
			from sup_nf_devol_cli
			where empresa            = p_cod_empresa
			and aviso_recebto      = p_dados_tela.num_aviso_rec
			and dat_lancto         = p_nf_sup.dat_entrada_nf
			and nota_fiscal_fatura <> 0
			whenever error stop
			if l_count_vdp is null or l_count_vdp = 0 then
				whenever error continue
				select count(*)
				into l_count_vdp
				from dev_item, dev_mestre
				where dev_item.cod_empresa      = p_cod_empresa
				and dev_item.num_nff          = p_dados_tela.num_aviso_rec
				and dev_mestre.cod_empresa    = dev_item.cod_empresa
				and dev_mestre.num_nff        = dev_item.num_nff
				and dev_mestre.dat_lancamento = p_nf_sup.dat_entrada_nf
				and dev_mestre.num_nff_origem <> 0
				whenever error stop
				if l_count_vdp is null then
					let l_count_vdp = 0
				end if
			end if

			if l_count_st > 0 and l_count_vdp > 0  then
				if log0040_confirm(21,04, "deseja recalcular substituicao tributaria ?") then
					if find4glfunction('supr_ar_item_fisc_inicializa') then
						let l_cod_empresa_estab = p_dados_tela.cod_empresa_estab
						if l_cod_empresa_estab is null then
							let l_cod_empresa_estab = '0'
						end if
						call supr_ar_item_fisc_exclui_todos_tipo(p_cod_empresa,l_cod_empresa_estab,
						p_dados_tela.num_aviso_rec,0, 'r', true) returning l_status
					else
						if p_dados_tela.cod_empresa_estab is null then
							whenever error continue
							delete from ar_subst_tribut
							where cod_empresa       = p_cod_empresa
							and (cod_empresa_estab is null
							or cod_empresa_estab = " ")
							and num_aviso_rec     = p_dados_tela.num_aviso_rec
							and ies_tipo_icms     = "r"
							whenever error stop
						else
							whenever error continue
							delete from ar_subst_tribut
							where cod_empresa       = p_cod_empresa
							and cod_empresa_estab = p_dados_tela.cod_empresa_estab
							and num_aviso_rec     = p_dados_tela.num_aviso_rec
							and ies_tipo_icms     = "r"
							whenever error stop
						end if
						if sqlca.sqlcode <> 0 then
							call log003_err_sql("exclusao","ar_subst_tribut")
						end if
					end if
					call sup3762_carrega_ar_subst_tribut()
				end if
			end if
		end if

		# inicio chamado 835591
		if not sup3760_insere_parametro_sup1544(p_dados_tela.num_aviso_rec) then
			return
		end if
		# fim chamado 835591

		error " aguarde...! efetuando consistencia da nf. "

		let comando3 = p_cod_empresa,
		" ",p_dados_tela.num_aviso_rec,
		" ",l_pergunta,
		" ",g_baixou_terceiro
		call log1200_executa_programa("sup0680",comando3)

		let p_houve_erro = false

		if not sup3760_elimina_parametro_sup1544(p_dados_tela.num_aviso_rec) then
			return
		end if

		call sup376_processa_divergencias()

		call log085_transacao("begin")

		call sup376_consulta_dados()

		if p_dados_tela.ies_especie_nf = 'nfr' and m_ies_armaz_itau <> 's' and p_dados_tela.ies_nf_aguard_nfe = '4' then
			whenever error continue
			declare cq_itens_nota cursor for
			select aviso_rec.*
			from aviso_rec
			where aviso_rec.cod_empresa   = p_dados_tela.cod_empresa
			and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("declare","cq_itens_nota")
				let p_houve_erro = true
			end if

			if not p_houve_erro then
				whenever error continue
				foreach cq_itens_nota into p_aviso_rec.*

				if sqlca.sqlcode <> 0 then
					call log003_err_sql("foreach","cq_itens_nota")
					let p_houve_erro = true
					exit foreach
				end if

				call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
				p_aviso_rec.cod_item,
				p_dados_tela.dat_emis_nf,
				p_dados_tela.num_aviso_rec) returning l_par_forn

				if l_par_forn = '3' and
					p_dados_tela.ies_nf_aguard_nfe <> "7" then #736225 antonio/carla
					if sup376_gera_item_d_terc() = false then
						let p_houve_erro = true
					end if

					let p_aviso_rec.ies_item_estoq = 'n'
					let p_aviso_rec.ies_situa_ar = 'c'
					let p_aviso_rec.ies_liberacao_cont = 'n'

					if p_par_sup_compl_1.cod_tip_desp_cons is not null and
						p_par_sup_compl_1.cod_tip_desp_cons <> ' ' then
						let p_aviso_rec.cod_tip_despesa = p_par_sup_compl_1.cod_tip_desp_cons
					end if
				end if

				whenever error continue
				if p_houve_erro = true then
					exit foreach
				end if
			end foreach
			whenever error stop

			free cq_itens_nota
		end if
	end if

	let int_flag = 0
	let l_gecex = sup3760_nota_integrada_gecex(p_cod_empresa, p_dados_tela.num_aviso_rec)

## tdkjr0 - neste ponto ser� verificado pis/cofins e gerado cst pis/cofins, caso n�o encontre cst pis/cofins gera mensagem
## de erro na nf_sup_erro. obs: h� chamada de epl (chamado 794336), verificar se afeta.
	if (m_empr_utiliz_mp66 = "s" or m_empr_utiliz_mp66 = "r") and
		(l_pergunta = "s" or l_pergunta = "i" or
		(l_pergunta = 'n' and (p_dados_tela.cod_operacao[1,1] = "7" or m_nfr_import)) or #calcula somente o frete
		(l_pergunta = 'n' and m_executou_sup3771 and m_visualizar_notas_em_transito = "s") or
		### teriai - recalcula pis/cofins importa��o quando incluido pelo gecex - kordsa
		(l_pergunta = 'n' and l_gecex)) and  ### teriai
		p_houve_erro = false then
		let l_somente_frete = false
		if l_pergunta = 'n' and (p_dados_tela.cod_operacao[1,1] = "7" or m_nfr_import) then
			if (m_executou_sup3771 and m_visualizar_notas_em_transito = "s") or l_gecex then
			else
				let l_somente_frete = true
			end if
		end if
		initialize l_num_seq, l_val_liquido_item, l_cod_item,
		l_val_frete, l_ies_tip_incid_ipi,
		l_val_ipi_decl_item, l_val_ipi_calc_item,
		l_gru_ctr_desp_item, l_cod_cla_fisc,
		l_qtd_declarad_nf to null

		open cq_it_pis using p_cod_empresa, p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("open","cq_it_pis")
		end if

		while true

			whenever error continue
			fetch cq_it_pis into l_num_seq, l_val_liquido_item,
			l_cod_item, l_val_frete,
			l_ies_tip_incid_ipi, l_val_ipi_decl_item,
			l_val_ipi_calc_item, l_gru_ctr_desp_item,
			l_cod_cla_fisc, l_qtd_declarad_nf, l_num_oc
			whenever error stop
			if sqlca.sqlcode <> 0 then
				if sqlca.sqlcode <> 100 then
					call log003_err_sql("fetch","cq_it_pis")
					let p_houve_erro = true
				end if
				exit while
			end if

			let l_ies_nf_transf = false
			if sup0812_verifica_nota_transferencia(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				p_dados_tela.num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.cod_fornecedor,
				p_dados_tela.cod_operacao,
				p_dados_tela.cod_fiscal_compl) then
				let l_ies_nf_transf = true
			end if

			let m_nfr_import     = false
			let l_ies_especie_nf = p_nf_sup.ies_especie_nf
			let l_cod_fornecedor = p_dados_tela.cod_fornecedor
			if sup3760_nfr_consignatario("pis/cofins") then
				let m_nfr_import     = true
				let l_ies_especie_nf = "nfe"
				let l_cod_fornecedor = sup3760_fornecedor_processo_imp(p_dados_tela.cod_fornecedor)
			end if

			if p_dados_tela.cod_operacao[1,1] = "7" or m_nfr_import then
				if sup1084_grava_cred_piscofins_imp(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					l_num_seq,
					l_val_liquido_item,
					l_cod_item,
					l_cod_fornecedor,
					l_val_frete,
					l_ies_especie_nf,
					l_ies_nf_transf,
					l_gru_ctr_desp_item,
					l_cod_cla_fisc,
					l_qtd_declarad_nf) = false then
					let p_houve_erro = true
					exit while
				end if
			else
				if l_somente_frete = false then
					call sup0782_busca_param_item(p_cod_empresa, l_cod_item) returning l_ies_cred_pis

					# inicio chamado 794.336
					if log_existe_epl('sup3760y_after_process_busca_param_item1') then
						call log_setvar('cod_empresa', p_cod_empresa)
						#epl codigo da empresa
						#epl tipo: ordem_sup.cod_empresa

						call log_setvar('num_oc', l_num_oc)
						#epl numero da ordem de compra
						#epl tipo: ordem_sup.num_oc

						call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
						#epl numero do ar
						#epl tipo: aviso_rec.num_aviso_rec

						call log_setvar('num_seq', l_num_seq)
						#epl numero da sequencia do ar
						#epl tipo: aviso_rec.num_seq

						call log_setvar('credito_pis_cofins', l_ies_cred_pis)
						#epl indicador de credito de pis e cofins
						#epl tipo: char(01)

						call sup3760y_after_process_busca_param_item1()
						let l_ies_cred_pis = log_getvar('credito_pis_cofins')
					end if
					# fim chamado 794.336

					if p_dados_tela.ies_especie_nf = "nfc" and
						l_ies_cred_pis = "s" then
						call log0040_confirm(21,04, "nfc tem direito a credito de pis/cofins?") returning g_pergunta
						if g_pergunta = true then
							let g_pergunta = "s"
						else
							let g_pergunta = "n"
						end if
					end if

					initialize l_ies_tip_entrada, l_status to null
					call sup0686_retorna_tipo_entrada(p_dados_tela.cod_operacao,
					p_dados_tela.cod_fiscal_compl)
					returning l_status,
					l_ies_tip_entrada


					if sup0782_grava_ar_pis_cofins(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						l_num_seq,
						l_val_liquido_item,
						l_cod_item,
						l_cod_fornecedor,
						l_val_frete,
						l_ies_especie_nf,
						l_ies_nf_transf,
						l_ies_tip_entrada) = false then
						let p_houve_erro = true
						exit while
					end if
				end if
			end if
		end while
		close cq_it_pis

		if l_somente_frete = false then
### tdkjr0 - verifica se tem pelo menos um item da nota com pis/cofins, neste caso ativa campo no supr78, m_tem_pis_cofins
### este campo ser� utilizado para, em cada nota fiscal, confirmar se tem pelo menos um item com credito de pis/cofins, desta
### forma ser� gerado cst pis/cofins para todos os itens, independente de ter ou n�o cr�dito.
			if find4glfunction('supr78_verifica_pis_cofins_itens') = true then
				call supr78_verifica_pis_cofins_itens(p_cod_empresa, p_dados_tela.num_aviso_rec)
			end if

### tdkjr0 - neste ponto deve ler novamente os itens da nota e chamar fun��o suppr78_sugere_cst_item_nf para que seja
### inclu�da mensagem de erro caso n�o possua cst e tamb�m para incluir cst nas notas em que possua pelo menos um item
### com credito de pis/cofins (exigencia fiscal - chamado tdpiyj).
### obs: como � uma nova fun��o estamos tratando se a mesma existe, se n�o existir n�o ir� executar o sugere_cst, neste
### caso deve ser reconsistida a nota fiscal (existe essa necessidade pois a gera��o da ar_pis_cofins � feita no sup0782
### que � executado depois da rotina de consistencia.

			if find4glfunction('supr78_sugere_cst_item_nf') = true then
				open cq_it_pis2 using p_cod_empresa, p_dados_tela.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("open","cq_it_pis")
				end if

				while true

					whenever error continue
					fetch cq_it_pis2 into l_num_seq
					whenever error stop
					if sqlca.sqlcode <> 0 then
						if sqlca.sqlcode <> 100 then
							call log003_err_sql("fetch","cq_it_pis2")
							let p_houve_erro = true
						end if
						exit while
					end if
					call supr78_sugere_cst_item_nf(p_cod_empresa, p_dados_tela.num_aviso_rec, l_num_seq)
				end while
				close cq_it_pis2
			end if
		end if
	end if

	if p_houve_erro = false then
		whenever error continue
		call log085_transacao("commit")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			initialize p_msg to null
			let p_msg = "erro na efetiva��o dos dados. sqlca.sqlcode = ", sqlca.sqlcode clipped
			call log0030_mensagem(p_msg,"stop")
			call log085_transacao("rollback") #os596059
			return
		end if
	else
		call log0030_mensagem("erro na consistencia da nota, funcao cancelada.","exclamation")
		call log085_transacao("rollback")
		return
	end if

	call log085_transacao("begin")

	## tdkjr0 - troca de nome da variavel para que seja utilizada mais abaixo quando chama programas de contagem de material.
	let l_tem_erro_nota = 0
	select count(*) into l_tem_erro_nota
	from nf_sup_erro
	where nf_sup_erro.empresa  = p_cod_empresa
	and nf_sup_erro.num_aviso_rec  = p_dados_tela.num_aviso_rec
	and nf_sup_erro.ies_origem_erro <> "4"
	if l_tem_erro_nota > 0 then
		# o update na tabela nf_sup deve ficar apos a chama da funcao
		# gera_movimento_estoque pois ao ser feito o update a tabela fica
		# em lock e ao se fazer a contagem (sup0530) o programa ficar�
		# esperando a liberacao da mesma.
		update nf_sup
		set ies_nf_com_erro = "s"
		where nf_sup.cod_empresa   = p_cod_empresa
		and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
		if sqlca.sqlcode = 0 then
			whenever error continue
			call log085_transacao("commit")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("commit","update nf_sup")
				call log085_transacao("rollback") #os596059
				let p_houve_erro = true
			end if
		else
			let p_houve_erro = true
			call log085_transacao("rollback")
		end if
	else
		let p_nf_sup.ies_nf_com_erro = "n"
		# o update na tabela nf_sup deve ficar apos a chama da funcao
		# gera_movimento_estoque pois ao ser feito o update a tabela fica
		# em lock e ao se fazer a contagem (sup0530) o programa ficar�
		# esperando a liberacao da mesma.
		update nf_sup
		set ies_nf_com_erro = "n"
		where nf_sup.cod_empresa   = p_cod_empresa
		and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
		if sqlca.sqlcode = 0 then
			whenever error continue
			update nf_sup_aux set ies_nf_com_erro = "n", nom_resp_aceite_er = p_nf_sup.nom_resp_aceite_er
			where nf_sup_aux.cod_empresa   = p_cod_empresa
			and nf_sup_aux.num_aviso_rec = p_dados_tela.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				call log085_transacao("commit")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("commit","update nf_sup (2)")
					call log085_transacao("rollback") #os596059
					let p_houve_erro = true
				end if
			else
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("rollback transaction","sup376_processa_consistencia")
				end if
			end if
		else
			let p_houve_erro = true
			call log085_transacao("rollback")
		end if
	end if

	call sup376_consulta_dados()

	if l_tem_erro_nota > 0 then
		if p_ies_cont_insp_aut = "3" then
			if p_par_sup_compl.ies_conta_ok_n_est = "2" or
				(p_par_sup_compl.ies_conta_ok_n_est = "3" and
				p_dados_tela.ies_especie_nf = "nfs") then
				if sup376_verifica_itens_nao_estoque() then
					call sup376_consulta_dados()
					call sup376_gera_movimento_estoque("normal","normal")
				else
					call sup376_gera_movimento_estoque("normal","normal")
				end if
			else
				call sup376_gera_movimento_estoque("normal","normal")
			end if
		else
			if p_par_sup_compl.ies_conta_ok_n_est = "2" or
				(p_par_sup_compl.ies_conta_ok_n_est = "3" and
				p_dados_tela.ies_especie_nf = "nfs") then
				if sup376_verifica_itens_nao_estoque() then
					call sup376_consulta_dados()
					call sup376_gera_movimento_estoque("normal","normal")
				else
					call sup376_gera_movimento_estoque("normal","normal")
				end if
			else
				call sup376_gera_movimento_estoque("normal","normal")
			end if
		end if

		let l_tem_erro_nota = 0

		whenever error continue
		select count(*)
		into l_tem_erro_nota
		from nf_sup_erro
		where nf_sup_erro.empresa  = p_cod_empresa
		and nf_sup_erro.num_aviso_rec  = p_dados_tela.num_aviso_rec
		and nf_sup_erro.ies_origem_erro <> "4"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let l_tem_erro_nota = 0
		end if

		if l_tem_erro_nota > 0 then
			call log0030_mensagem(" foram detectados erros na consistencia na n.f ","exclamation")

			if p_dados_tela.num_nf is not null and m_abre_aut_tela_erros = "s" then
				call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)
				let p_nom_resp_aceite_er = p_nf_sup.nom_resp_aceite_er
				call sup377_zoom_erros(p_cod_empresa, p_dados_tela.num_aviso_rec, p_nom_resp_aceite_er)
			end if
		end if

	else
		call sup376_gera_movimento_estoque("normal","normal")

		call sup376_verifica_frete()
		if p_dados_tela.ies_especie_nf = "nfd" and
			(p_dados_tela.ies_nf_aguard_nfe <> "6" and
###    358438
			p_dados_tela.ies_nf_aguard_nfe <> "9") and
			g_ies_tex_inst = "s"                  then
			let p_val_imposto = p_dados_tela_f.val_ipi_nf + p_dados_tela_f.val_tot_icms_nf_d
			if sup6983_gera_arquivo(p_dados_tela.num_aviso_rec,
				p_dados_tela.num_nf,
				0,
				p_dados_tela.num_nf,
				p_dados_tela.dat_entrada_nf,
				p_val_imposto,
				p_dados_tela_f.val_tot_nf_d,
				"sup3760") then
			end if
		else #eduardo o.s.334741
			whenever error continue
			select *
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = '1'
			and parametro         = 'interface_nf_sup6981'
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				select num_proc_imp_nfs
				into l_num_proc_imp_nfs
				from nfe_sup_compl
				where cod_empresa   = p_cod_empresa
				and num_aviso_rec = p_dados_tela.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let l_num_nf = p_nf_sup.num_nf
				else
					if l_num_proc_imp_nfs <> " " and
						l_num_proc_imp_nfs is not null then
						let l_num_nf = l_num_proc_imp_nfs
					else
						let l_num_nf = p_dados_tela.num_nf
					end if
				end if
				if p_dados_tela.ies_especie_nf = "nfd"  and
					p_dados_tela.ies_nf_aguard_nfe = "6" and
					g_ies_tex_inst = "s" then
					let p_val_imposto = p_dados_tela_f.val_ipi_nf +
					p_dados_tela_f.val_tot_icms_nf_d
					if sup6983_gera_arquivo(p_dados_tela.num_aviso_rec,
						l_num_nf,
						0,
						l_num_nf , #p_dados_tela.num_nf,
						p_dados_tela.dat_entrada_nf,
						p_val_imposto,
						p_dados_tela_f.val_tot_nf_d,
						"sup3760") then
					end if
				end if
			end if #eduardo o.s.334741
		end if
		if p_ies_grava_erro_4 = "s" then
			call sup376_grava_liberacao_nota()
		end if
	end if

	#inicio: os sdjmi7 (tdkjr0 retirado coment�rio para s� efetuar segunda chamada se parametro assim determinar)
	if (m_diver_nf    matches "[1-3]" and m_pct_toler_nf    <> 0) or
		(m_diver_custo matches "[1-3]" and m_pct_toler_custo <> 0) then
		error " aguarde...! efetuando consistencia da nf. "

		# inicio chamado 835591
		if not sup3760_insere_parametro_sup1544(p_dados_tela.num_aviso_rec) then
			return
		end if
		# fim chamado 835591

		let comando3 = p_cod_empresa,
		" ",p_dados_tela.num_aviso_rec,
		" ",l_pergunta,
		" ",g_baixou_terceiro
		call log1200_executa_programa("sup0680",comando3)

		# inicio chamado 835591
		if not sup3760_elimina_parametro_sup1544(p_dados_tela.num_aviso_rec) then
			return
		end if
		# fim chamado 835591

	end if
	#fim: os sdjmi7

	if log_existe_epl('sup3760y_after_processa_consistencia') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: aviso_rec.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		call sup3760y_after_processa_consistencia()
	end if

	call sup1473_integra_nf_cap_livro_fiscal(p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	"nota","", "", "",
	p_dados_tela.cod_empresa, "",
	p_dados_tela.cod_fornecedor,
	p_dados_tela.ies_especie_nf)
	if p_nf_sup.num_conhec <> 0 then
		call sup1473_integra_nf_cap_livro_fiscal("",
		"",
		"",
		"frete",p_nf_sup.num_conhec,p_nf_sup.ser_conhec,p_nf_sup.ssr_conhec,
		p_nf_sup.cod_empresa,p_nf_sup.cod_transpor,
		"",
		"")
	end if

	call sup376_anulacao_tms() #terbd0
	##se for integra��o on-line poder� existir lan�amentos cont�beis para o documento,
	##j� que o indicador ies_incl_contab s� passar� para "s" quando for efetuado
	##a integra��o cont�bil (gera��o do lote ou arquivo texto).
	### trtz43
	if p_dados_tela.ies_nf_aguard_nfe <> "7" then
		if not supr6_integracao_batch(p_cod_empresa) and
			supr6_data_posterior_data_corte_logix_10(p_cod_empresa,
			p_dados_tela.dat_entrada_nf) then

			##excluir os lan�amentos para n�o ficar com registro desatualizado,
			##quando o frete ou a nota fiscal tiver erros n�o assumidos e
			##n�o puder ser refeito a contabiliza��o.

			if m_dat_entrada_ant is null then
				let l_dat_entrada_nf = p_dados_tela.dat_entrada_nf
			else
				let l_dat_entrada_nf = m_dat_entrada_ant
			end if

			call sup3762_exclui_lancamento_contabil_nf_e_frete(l_dat_entrada_nf)


		end if

		if not supr6_contabilizacao_por_documento(p_cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.dat_entrada_nf,
			p_dados_tela.num_aviso_rec,false) then
			call log0030_mensagem("ocorreram erros na contabiliza��o do documento.","exclamation")
		end if

		if m_wms_instal = 's' and
			m_tipo_documento = 'n' then
			if find4glfunction('wmsr173_gerencia_wms_remessa_fiscal') then
				call wmsr173_gerencia_wms_remessa_fiscal(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				'i','f',0)
			end if

		end if

	end if
	let m_dat_entrada_ant = p_dados_tela.dat_entrada_nf #798726#
else
	call log0030_exibe_ultima_mensagem()
end if

end function

#------------------------------#
function sup376_inclui_frete()
#------------------------------#
	define comando_rpa  char(01),
	p_prog       char(07),
	comando2     char(100)

	let p_ies_tip_frete = null
	select ies_tip_frete
	into p_ies_tip_frete
	from modo_embarque
	where modo_embarque.cod_mod_embar  = p_dados_tela.cod_mod_embar
	if sqlca.sqlcode = 0 then
		if p_ies_tip_frete = "2" then #dmanentlgx-1474

			if p_dados_tela.ies_especie_nf = "nfs" then
				return
			end if

			if sup376_verifica_parametro_rpa() then
				call log0040_confirm(21,04, "este frete se refere a um r.p.a. ?") returning comando_rpa
				if comando_rpa = true then
					let comando_rpa = "s"
				else
					let comando_rpa = "n"
				end if
				if comando_rpa = "n" or
					comando_rpa = "n" then
					call sup4510_popup_frete(p_cod_uni_feder, p_dados_tela.num_aviso_rec, p_dados_tela_f.val_tot_nf_d,p_ies_tip_frete)
					returning p_cod_transpor, p_num_conhec,
					p_ser_conhec, p_ssr_conhec
				else
					let p_prog = "sup3760"
					if p_nf_sup.ser_nf is null or
						p_nf_sup.ser_nf = " " then
						let p_nf_sup.ser_nf = "@"
					end if

					let comando2 = p_cod_empresa, " ",
					p_nf_sup.num_nf, " ",
					p_nf_sup.ser_nf, " ",
					p_nf_sup.ssr_nf, " ",
					p_nf_sup.cod_fornecedor, " ",
					p_prog, " ",
					p_nf_sup.ies_especie_nf, " "
					call log1200_executa_programa("sup9220",comando2)
					if p_nf_sup.ser_nf = "@" then
						let p_nf_sup.ser_nf = " "
					end if
				end if
			else
				call sup4510_popup_frete(p_cod_uni_feder, p_dados_tela.num_aviso_rec, p_dados_tela_f.val_tot_nf_d,p_ies_tip_frete)
				returning p_cod_transpor, p_num_conhec,
				p_ser_conhec, p_ssr_conhec
			end if
		else
			#--inicio--os 728028 #
			if find4glfunction('supy13_cliente_55') = true and
				p_ies_tip_frete = "1" then
				call sup4510_popup_frete(p_cod_uni_feder, p_dados_tela.num_aviso_rec, p_dados_tela_f.val_tot_nf_d,p_ies_tip_frete)
				returning p_cod_transpor, p_num_conhec,
				p_ser_conhec, p_ssr_conhec

				call log006_exibe_teclas("01", p_versao)

				call supy13_busca_conhec(p_cod_empresa,
				p_nf_sup.num_aviso_rec)
				returning p_nf_sup.cod_transpor,
				p_nf_sup.num_conhec,
				p_nf_sup.ser_conhec,
				p_nf_sup.ssr_conhec


				if p_nf_sup.num_conhec <> 0 then
					display " conhecimento: ",p_nf_sup.num_conhec," " at 20,50 attribute(reverse)
				end if

			end if

			call log006_exibe_teclas("01", p_versao)
			#---fim----os 728028 #
		end if
	end if
	initialize p_cod_transpor, p_num_conhec,
	p_ser_conhec, p_ssr_conhec to null
end function

#--------------------------------------#
function sup3760_gera_item_ret_terc()
#--------------------------------------#
	define lr_item_em_terc  record like item_em_terc.*,
	lr_item_ret_terc record like item_ret_terc.*,
	l_saldo_terc     like item_em_terc.qtd_tot_remessa,
	lr_item_dev_terc record like item_dev_terc.*

	let g_baixou_terceiro = false
	declare cq_it_dv_terc cursor for
	select *
	from item_dev_terc
	where item_dev_terc.cod_empresa = p_cod_emp_transf
	and item_dev_terc.num_nf_retorno = p_dados_tela.num_nf
	and item_dev_terc.num_sequencia_nf = p_array[p_ind].seq
	foreach cq_it_dv_terc into lr_item_dev_terc.*
	declare cq_it_em_terc cursor for
	select *
	from item_em_terc
	where item_em_terc.cod_empresa    = p_cod_empresa
	and item_em_terc.num_nf         = lr_item_dev_terc.num_nf
	and item_em_terc.num_sequencia  = lr_item_dev_terc.num_sequencia
	foreach cq_it_em_terc into lr_item_em_terc.*
	let l_saldo_terc = (lr_item_em_terc.qtd_tot_remessa - lr_item_em_terc.qtd_tot_recebida)
	if l_saldo_terc > 0 then
		let lr_item_ret_terc.cod_empresa = lr_item_em_terc.cod_empresa
		let lr_item_ret_terc.num_nf      = p_dados_tela.num_nf
		let lr_item_ret_terc.ser_nf      = p_dados_tela.ser_nf
		let lr_item_ret_terc.ssr_nf           = p_dados_tela.ssr_nf
		let lr_item_ret_terc.ies_especie_nf   =  "nfr"
		let lr_item_ret_terc.cod_fornecedor   = p_dados_tela.cod_fornecedor
		let lr_item_ret_terc.ies_incl_contab  = "n"
		let lr_item_ret_terc.num_sequencia_ar = p_array[p_ind].seq
		let lr_item_ret_terc.dat_emis_nf      = p_dados_tela.dat_emis_nf
		let lr_item_ret_terc.dat_entrada_nf   = p_dados_tela.dat_entrada_nf
		let lr_item_ret_terc.dat_inclusao_seq = today
		let lr_item_ret_terc.num_nf_remessa   = lr_item_em_terc.num_nf
		let lr_item_ret_terc.num_sequencia_nf = lr_item_em_terc.num_sequencia
		let lr_item_ret_terc.qtd_devolvida    = lr_item_dev_terc.qtd_devolvida

		let g_baixou_terceiro = true

		whenever error continue
		insert into item_ret_terc ( cod_empresa, num_nf, ser_nf, ssr_nf, ies_especie_nf, cod_fornecedor, ies_incl_contab, num_sequencia_ar, dat_emis_nf, dat_entrada_nf, dat_inclusao_seq, num_nf_remessa, num_sequencia_nf, qtd_devolvida, tex_observ )  values ( lr_item_ret_terc.cod_empresa, lr_item_ret_terc.num_nf, lr_item_ret_terc.ser_nf, lr_item_ret_terc.ssr_nf, lr_item_ret_terc.ies_especie_nf, lr_item_ret_terc.cod_fornecedor, lr_item_ret_terc.ies_incl_contab, lr_item_ret_terc.num_sequencia_ar, lr_item_ret_terc.dat_emis_nf, lr_item_ret_terc.dat_entrada_nf, lr_item_ret_terc.dat_inclusao_seq, lr_item_ret_terc.num_nf_remessa, lr_item_ret_terc.num_sequencia_nf, lr_item_ret_terc.qtd_devolvida, lr_item_ret_terc.tex_observ)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","item_ret_terc")
			return false
		end if
		whenever error continue
		update item_em_terc
		set item_em_terc.qtd_tot_recebida = item_em_terc.qtd_tot_recebida +
		lr_item_dev_terc.qtd_devolvida
		where item_em_terc.cod_empresa   = lr_item_em_terc.cod_empresa
		and item_em_terc.num_nf        = lr_item_em_terc.num_nf
		and item_em_terc.num_sequencia = lr_item_em_terc.num_sequencia
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("modificacao","item_em_terc")
			return false
		end if
	else
		let g_baixou_terceiro = false
	end if
end foreach
end foreach
return true
end function

#----------------------------------------------------------------#
function sup376_elimina_item_ret_terc(l_num_aviso_rec, l_num_seq,
	l_tipo)
#----------------------------------------------------------------#
	define lr_item_em_terc       record like item_em_terc.*,
	lr_item_ret_terc      record like item_ret_terc.*,
	lr_sup_itterc_grade   record like sup_itterc_grade.*,
	l_saldo_terc          like item_em_terc.qtd_tot_remessa,
	l_saldo_excluir       like item_em_terc.qtd_tot_remessa,
	l_aviso_rec           record like aviso_rec.*,
	l_num_aviso_rec       like aviso_rec.num_aviso_rec,
	l_num_seq             like aviso_rec.num_seq,
	l_tipo                char(01),
	sql_stmt              char(3000),
	l_contr_local_terc    char(04),
	p_cont                integer,
	p_cont1               integer,
	l_estoque_trans       record like estoque_trans.*,
	l_cod_motivo_remessa  like item_em_terc.cod_motivo_remessa,
	l_local_estoq         like item.cod_local_estoq,
	lr_estoque_trans_end   record like estoque_trans_end.*,
	lr_estoque_obs         record like estoque_obs.*,
	l_qtd_devolvida       like sup_retn_item_terc.qtd_devolvida,
	l_seq_tabulacao       like sup_itterc_grade.seq_tabulacao,
	l_cod_item            like item.cod_item,
	l_cod_item_em_terc    like item_em_terc.cod_item

	let l_contr_local_terc = sup376_busca_par_sup_pad("contr_local_terc",3)

	let sql_stmt = "select * from aviso_rec ",
	" where aviso_rec.cod_empresa = """, p_cod_empresa, """ ",
	"   and aviso_rec.num_aviso_rec = """, l_num_aviso_rec, """ "

	if l_tipo = "1" then
		let sql_stmt = sql_stmt clipped,
		" and aviso_rec.num_seq  = """, l_num_seq, """ "
	end if
	whenever error continue
	prepare var_query11 from sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","var_query1")
	end if
	whenever error continue
	declare cq_ar_terc cursor with hold for var_query11
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_rt_terc")
	end if
	initialize sql_stmt to null
	let sql_stmt = " select * ",
	" from item_ret_terc ",
	" where item_ret_terc.cod_empresa = '", p_cod_empresa, "' ",
	" and item_ret_terc.num_nf = ", p_dados_tela.num_nf, " ",
	" and item_ret_terc.ser_nf = '", p_dados_tela.ser_nf, "' ",
	" and item_ret_terc.ssr_nf = ", p_dados_tela.ssr_nf, " ",
	" and item_ret_terc.ies_especie_nf = '", p_dados_tela.ies_especie_nf, "' ", #mman-5868
	" and item_ret_terc.cod_fornecedor = '", p_dados_tela.cod_fornecedor, "' ",
	" and item_ret_terc.num_sequencia_ar = ? "
	whenever error continue
	prepare var_query2 from sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","var_query2")
	end if
	whenever error continue
	declare cq_rt_terc cursor for var_query2
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_rt_terc")
	end if
	initialize sql_stmt to null
	let sql_stmt = " select * ",
	" from sup_itterc_grade ",
	" where empresa     = '", p_cod_empresa, "' ",
	" and nota_fiscal = ? ",
	" and seq_item_nf = ? ",
	" order by seq_tabulacao desc "
	whenever error continue
	prepare var_query4 from sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","var_query4")
	end if
	whenever error continue
	declare cq_cons2 cursor for var_query4
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_cons2")
	end if
	initialize sql_stmt to null
	let sql_stmt = " select seq_tabulacao, ",
	" qtd_devolvida ",
	" from sup_retn_item_terc ",
	" where empresa           = '", p_cod_empresa, "' ",
	" and nota_fiscal       = ? ",
	" and serie_nota_fiscal = ? ",
	" and subserie_nf       = ? ",
	" and espc_nota_fiscal  = ? ",
	" and fornecedor        = ? ",
	" and seq_aviso_recebto = ? ",
	" and nf_remessa        = ? ",
	" and seq_nf_remessa    = ? "
	whenever error continue
	prepare var_query5 from sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","var_query5")
	end if
	whenever error continue
	declare cq_atu_ret cursor for var_query5
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_atu_ret")
	end if
	initialize sql_stmt to null
	let sql_stmt = " select cod_empresa         , ",
	" cod_item            , ",
	" cod_local           , ",
	" num_lote            , ",
	" endereco            , ",
	" num_volume          , ",
	" cod_grade_1         , ",
	" cod_grade_2         , ",
	" cod_grade_3         , ",
	" cod_grade_4         , ",
	" cod_grade_5         , ",
	" dat_hor_producao    , ",
	" num_ped_ven         , ",
	" num_seq_ped_ven     , ",
	" ies_situa_qtd       , ",
	" qtd_saldo           , ",
	" num_transac         , ",
	" ies_origem_entrada  , ",
	" dat_hor_validade    , ",
	" num_peca            , ",
	" num_serie           , ",
	" comprimento         , ",
	" largura             , ",
	" altura              , ",
	" diametro            , ",
	" dat_hor_reserv_1    , ",
	" dat_hor_reserv_2    , ",
	" dat_hor_reserv_3    , ",
	" qtd_reserv_1        , ",
	" qtd_reserv_2        , ",
	" qtd_reserv_3        , ",
	" num_reserv_1        , ",
	" num_reserv_2        , ",
	" num_reserv_3        , ",
	" tex_reservado ",
	" from estoque_lote_ender ",
	" where estoque_lote_ender.cod_empresa        = ? ",
	" and estoque_lote_ender.cod_item           = ? ",
	" and estoque_lote_ender.endereco           = ? ",
	" and estoque_lote_ender.num_volume         = ? ",
	" and estoque_lote_ender.cod_grade_1        = ? ",
	" and estoque_lote_ender.cod_grade_2        = ? ",
	" and estoque_lote_ender.cod_grade_3        = ? ",
	" and estoque_lote_ender.cod_grade_4        = ? ",
	" and estoque_lote_ender.cod_grade_5        = ? ",
	" and estoque_lote_ender.dat_hor_producao   = ? ",
	" and estoque_lote_ender.dat_hor_validade   = ? ",
	" and estoque_lote_ender.num_peca           = ? ",
	" and estoque_lote_ender.num_serie          = ? ",
	" and estoque_lote_ender.comprimento        = ? ",
	" and estoque_lote_ender.largura            = ? ",
	" and estoque_lote_ender.altura             = ? ",
	" and estoque_lote_ender.diametro           = ? ",
	" and estoque_lote_ender.dat_hor_reserv_1   = ? ",
	" and estoque_lote_ender.dat_hor_reserv_2   = ? ",
	" and estoque_lote_ender.dat_hor_reserv_3   = ? ",
	" and estoque_lote_ender.qtd_reserv_1       = ? ",
	" and estoque_lote_ender.qtd_reserv_2       = ? ",
	" and estoque_lote_ender.qtd_reserv_3       = ? ",
	" and estoque_lote_ender.num_reserv_1       = ? ",
	" and estoque_lote_ender.num_reserv_2       = ? ",
	" and estoque_lote_ender.num_reserv_3       = ? ",
	" and estoque_lote_ender.tex_reservado      = ? ",
	" and estoque_lote_ender.qtd_saldo          > 0 "

	whenever error continue
	prepare var_query6 from sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","var_query6")
	end if

	whenever error continue
	declare cq_est_lote_ender3 cursor for var_query6
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_est_lote_ender3")
		return false
	end if

	whenever error continue
	foreach cq_ar_terc into l_aviso_rec.*
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_ar_terc")
		exit foreach
	end if
	whenever error continue
	foreach cq_rt_terc using l_aviso_rec.num_seq into lr_item_ret_terc.*
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_ar_terc")
		exit foreach
	end if

	call sup3760_busca_local_motivo_remessa(lr_item_ret_terc.cod_empresa,
	lr_item_ret_terc.cod_fornecedor,
	lr_item_ret_terc.num_nf_remessa,
	lr_item_ret_terc.num_sequencia_nf)
returning l_estoque_trans.cod_local_est_orig,
	l_estoque_trans.ies_sit_est_orig,
	l_estoque_trans.cod_local_est_dest,
	l_estoque_trans.ies_sit_est_dest
	#tejwt2 / teumqq - venda/retorno de terceiros - programa padr�o
	let g_ies_excl_end_zero = " "
	if log_existe_epl("vdp10300_verifica_vdp_loc_est_terc") then
		if vdp10300_verifica_vdp_loc_est_terc(lr_item_ret_terc.cod_empresa, l_estoque_trans.cod_local_est_dest, false) then
			if supm20_nf_sup_leitura(lr_item_ret_terc.cod_empresa,
				lr_item_ret_terc.num_nf,
				lr_item_ret_terc.ser_nf,
				lr_item_ret_terc.ssr_nf,
				lr_item_ret_terc.ies_especie_nf,
				lr_item_ret_terc.cod_fornecedor,
				true,false) then

				if vdp0075_verifica_grupo_fiscal_param(lr_item_ret_terc.cod_empresa,'grp_fisc_cfop_ret_terc',
					null,supm20_nf_sup_get_cod_operacao(),true) then
					### retorno de mercadoria, utiliza local de estoque do item (man9922) ###
					initialize l_estoque_trans.cod_local_est_dest, l_estoque_trans.ies_sit_est_dest to null
				else
					### retorno simb�lico, utiliza local de retorno do motivo e n�o exclui estoque zerado no sup0970 ###
					let g_ies_excl_end_zero = "n"
				end if
			else
				return false
			end if
		end if
	end if

	#chamado tegy23- alterado para item que n�o controla estoque, mas componente controla, exclus�o n�o � pelo sup0530
	whenever error stop
	select cod_item
	into l_cod_item_em_terc
	from item_em_terc
	where item_em_terc.cod_empresa   = lr_item_ret_terc.cod_empresa
	and item_em_terc.num_nf        = lr_item_ret_terc.num_nf_remessa
	and item_em_terc.num_sequencia = lr_item_ret_terc.num_sequencia_nf
	and item_em_terc.cod_fornecedor = lr_item_ret_terc.cod_fornecedor
	whenever error continue
	if sqlca.sqlcode = 0 and l_cod_item_em_terc is not null then
		let l_aviso_rec.cod_item = l_cod_item_em_terc
	end if
	call sup0063_verifica_controles(12,
	l_aviso_rec.cod_item,
	"inclusao",
	"sup3760")
returning m_controles
	if m_controles <> " " and
		sup3762_existe_grade_remessa(lr_item_ret_terc.num_nf_remessa,
		lr_item_ret_terc.num_sequencia_nf,
		lr_item_ret_terc.cod_fornecedor) then
		if l_contr_local_terc is not null and
			l_contr_local_terc <> " " and
			l_estoque_trans.cod_local_est_orig is not null and
			l_estoque_trans.cod_local_est_orig <> " " then

			if sup3760_ies_item_ctr_estoq(p_cod_empresa,l_aviso_rec.cod_item) then
				#if m_beneficiamento = false then

				whenever error continue
				foreach cq_cons2 using lr_item_ret_terc.num_nf_remessa,
				lr_item_ret_terc.num_sequencia_nf #831871 l_aviso_rec.num_seq
				into lr_sup_itterc_grade.*
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("foreach","cq_cons2")
					exit foreach
				end if

				let l_qtd_devolvida = 0
				whenever error continue
				select qtd_devolvida
				into l_qtd_devolvida
				from sup_retn_item_terc
				where empresa           = p_cod_empresa
				and nota_fiscal       = p_dados_tela.num_nf
				and serie_nota_fiscal = p_dados_tela.ser_nf
				and subserie_nf       = p_dados_tela.ssr_nf
				and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
				and fornecedor        = p_dados_tela.cod_fornecedor
				and seq_aviso_recebto = l_aviso_rec.num_seq
				and seq_tabulacao     = lr_sup_itterc_grade.seq_tabulacao
				and nf_remessa        = lr_sup_itterc_grade.nota_fiscal
				and seq_nf_remessa    = lr_sup_itterc_grade.seq_item_nf
				whenever error stop
				if sqlca.sqlcode <> 0 then
					if sqlca.sqlcode <> 100 then
						call log003_err_sql("leitura","sup_retn_item_terc")
					end if
					let l_qtd_devolvida = 0
				end if
				initialize lr_estoque_obs.* to null
				let l_estoque_trans.cod_empresa        = p_cod_empresa
				let l_estoque_trans.num_transac        = 0
				let l_estoque_trans.cod_item           = l_aviso_rec.cod_item
				let l_estoque_trans.dat_movto          = p_dados_tela.dat_entrada_nf
				let l_estoque_trans.dat_ref_moeda_fort = lr_item_ret_terc.dat_entrada_nf
				let l_estoque_trans.cod_operacao       = l_contr_local_terc
				let l_estoque_trans.num_docum          = l_aviso_rec.num_aviso_rec
				let l_estoque_trans.num_seq            = lr_item_ret_terc.num_sequencia_ar
				let l_estoque_trans.ies_tip_movto      = "r"
				let l_estoque_trans.qtd_movto          = l_qtd_devolvida
				let l_estoque_trans.cus_unit_movto_p   = 0
				let l_estoque_trans.cus_tot_movto_p    = 0
				let l_estoque_trans.cus_unit_movto_f   = 0
				let l_estoque_trans.cus_tot_movto_f    = 0
				let l_estoque_trans.num_conta          = null
				let l_estoque_trans.num_secao_requis   = null

				initialize l_local_estoq to null
				select cod_local_estoq
				into l_local_estoq
				from item
				where cod_empresa = lr_item_ret_terc.cod_empresa
				and cod_item    = l_aviso_rec.cod_item

				if l_estoque_trans.cod_local_est_orig is null or
					l_estoque_trans.cod_local_est_orig = " " then
					let l_estoque_trans.cod_local_est_orig = l_local_estoq
					let l_estoque_trans.ies_sit_est_orig   = "l"
				else
					if l_estoque_trans.ies_sit_est_orig is null or
						l_estoque_trans.ies_sit_est_orig = " " then
						let l_estoque_trans.ies_sit_est_orig   = "l"
					end if
				end if

				if l_estoque_trans.cod_local_est_dest is null or
					l_estoque_trans.cod_local_est_dest = " " then
					if lr_sup_itterc_grade.local is not null and
						lr_sup_itterc_grade.local <> " " then
						let l_estoque_trans.cod_local_est_dest   = lr_sup_itterc_grade.local
						let l_estoque_trans.ies_sit_est_dest     = lr_sup_itterc_grade.sit_qtd
					else
						let l_estoque_trans.cod_local_est_dest = l_local_estoq
						let l_estoque_trans.ies_sit_est_dest   = "l"
					end if
				else
					if l_estoque_trans.ies_sit_est_dest is null or
						l_estoque_trans.ies_sit_est_dest = " " then
						let l_estoque_trans.ies_sit_est_dest   = "l"
					end if
				end if
				let l_estoque_trans.num_lote_orig      = null
				let l_estoque_trans.num_lote_dest      = null
				let l_estoque_trans.cod_turno          = null
				let l_estoque_trans.nom_usuario        = p_user
				let l_estoque_trans.dat_proces         = today
				let l_estoque_trans.hor_operac         = time
				let l_estoque_trans.num_prog           = "sup2290"


				initialize lr_estoque_trans_end.* to null

				let lr_estoque_trans_end.cod_empresa          = l_estoque_trans.cod_empresa
				let lr_estoque_trans_end.num_transac          = 0
				let lr_estoque_trans_end.endereco             = " "
				let lr_estoque_trans_end.num_volume           = 0
				let lr_estoque_trans_end.qtd_movto            = l_estoque_trans.qtd_movto
				let lr_estoque_trans_end.cod_grade_1          = " "
				let lr_estoque_trans_end.cod_grade_2          = " "
				let lr_estoque_trans_end.cod_grade_3          = " "
				let lr_estoque_trans_end.cod_grade_4          = " "
				let lr_estoque_trans_end.cod_grade_5          = " "
				let lr_estoque_trans_end.dat_hor_prod_ini     = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.dat_hor_prod_fim     = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.vlr_temperatura      = 0
				let lr_estoque_trans_end.endereco_origem      = " "
				let lr_estoque_trans_end.num_ped_ven          = 0
				let lr_estoque_trans_end.num_seq_ped_ven      = 0
				let lr_estoque_trans_end.dat_hor_producao     = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.dat_hor_validade     = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.num_peca             = " "
				let lr_estoque_trans_end.num_serie            = " "
				let lr_estoque_trans_end.comprimento          = 0
				let lr_estoque_trans_end.largura              = 0
				let lr_estoque_trans_end.altura               = 0
				let lr_estoque_trans_end.diametro             = 0
				let lr_estoque_trans_end.dat_hor_reserv_1     = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.dat_hor_reserv_2     = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.dat_hor_reserv_3     = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.qtd_reserv_1         = 0
				let lr_estoque_trans_end.qtd_reserv_2         = 0
				let lr_estoque_trans_end.qtd_reserv_3         = 0
				let lr_estoque_trans_end.num_reserv_1         = 0
				let lr_estoque_trans_end.num_reserv_2         = 0
				let lr_estoque_trans_end.num_reserv_3         = 0
				let lr_estoque_trans_end.tex_reservado        = " "

				let lr_estoque_trans_end.cod_grade_1      = lr_sup_itterc_grade.grade_1
				let lr_estoque_trans_end.cod_grade_2      = lr_sup_itterc_grade.grade_2
				let lr_estoque_trans_end.cod_grade_3      = lr_sup_itterc_grade.grade_3
				let lr_estoque_trans_end.cod_grade_4      = lr_sup_itterc_grade.grade_4
				let lr_estoque_trans_end.cod_grade_5      = lr_sup_itterc_grade.grade_5
				let lr_estoque_trans_end.endereco         = lr_sup_itterc_grade.endereco
				let lr_estoque_trans_end.endereco_origem  = lr_sup_itterc_grade.endereco
				let lr_estoque_trans_end.num_volume       = lr_sup_itterc_grade.num_volume
				let lr_estoque_trans_end.dat_hor_producao = lr_sup_itterc_grade.dat_hor_producao
				let lr_estoque_trans_end.dat_hor_validade = lr_sup_itterc_grade.dat_hor_valid
				let lr_estoque_trans_end.comprimento      = lr_sup_itterc_grade.comprimento
				let lr_estoque_trans_end.largura          = lr_sup_itterc_grade.largura
				let lr_estoque_trans_end.altura           = lr_sup_itterc_grade.altura
				let lr_estoque_trans_end.diametro         = lr_sup_itterc_grade.diametro
				let lr_estoque_trans_end.num_peca         = lr_sup_itterc_grade.peca
				let lr_estoque_trans_end.num_serie        = lr_sup_itterc_grade.serie_peca

				let l_estoque_trans.num_lote_dest        = lr_sup_itterc_grade.lote
				let l_estoque_trans.num_lote_orig        = lr_sup_itterc_grade.lote
				if find4glfunction('supr91_verifica_nf_armazem') then
					if supr91_verifica_nf_armazem(lr_item_ret_terc.cod_empresa, ' ', l_aviso_rec.num_aviso_rec) then
						let l_estoque_trans.ies_sit_est_dest = 'i'
					end if
				end if

				if g_ies_excl_end_zero = " " and #tejwt2 / teumqq - n�o � nf retorno simbolico de armazem
					sup3760_verifica_saldo_transf_grade(l_estoque_trans.cod_item,
					l_estoque_trans.qtd_movto,
					l_estoque_trans.cod_local_est_dest,
					l_estoque_trans.ies_sit_est_dest,
					l_estoque_trans.num_lote_dest) then
					error "quantidade maior do que a encontrada no estoque para a revers�o do componente da ordem de compra."
					return false
				end if

				#-- os 456623 inicio --#
				if p_par_sup_compl.ies_baixa_benef = "2" and
					lr_item_ret_terc.ies_especie_nf = "nfd" then
					if sup3760_zera_num_pedido(l_estoque_trans.*,lr_estoque_trans_end.*) = false then
						return false
					else
						let lr_estoque_trans_end.num_ped_ven     = 0
						let lr_estoque_trans_end.num_seq_ped_ven = 0
					end if
				end if
				#-- os 456623 fim --#

				if sup097_movto_estoque(l_estoque_trans.*,
					lr_estoque_obs.*,
					lr_estoque_trans_end.*,
					0) = false then
					error "problema na movimentacao de estoque, transacao cancelada."
					return false
				end if
				whenever error continue
			end foreach
			whenever error stop
			close cq_cons2
			whenever error continue
			foreach cq_atu_ret using lr_item_ret_terc.num_nf,
			lr_item_ret_terc.ser_nf,
			lr_item_ret_terc.ssr_nf,
			lr_item_ret_terc.ies_especie_nf,
			lr_item_ret_terc.cod_fornecedor,
			lr_item_ret_terc.num_sequencia_ar,
			lr_item_ret_terc.num_nf_remessa,
			lr_item_ret_terc.num_sequencia_nf
			into l_seq_tabulacao,
			l_qtd_devolvida
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("foreach","cq_atu_ret")
				exit foreach
			end if
			whenever error continue
			update sup_itterc_grade
			set qtd_tot_receb = qtd_tot_receb - l_qtd_devolvida
			where empresa       = p_cod_empresa
			and nota_fiscal   = lr_item_ret_terc.num_nf_remessa
			and fornecedor    = lr_item_ret_terc.cod_fornecedor
			and seq_item_nf   = lr_item_ret_terc.num_sequencia_nf
			and seq_tabulacao = l_seq_tabulacao
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("altera��o","sup_itterc_grade")
				return false
			end if
			whenever error continue
		end foreach
		whenever error stop
		close cq_atu_ret
		whenever error continue
		delete from sup_retn_item_terc
		where empresa           = p_cod_empresa
		and nota_fiscal       = lr_item_ret_terc.num_nf
		and serie_nota_fiscal = lr_item_ret_terc.ser_nf
		and subserie_nf       = lr_item_ret_terc.ssr_nf
		and espc_nota_fiscal  = lr_item_ret_terc.ies_especie_nf
		and fornecedor        = lr_item_ret_terc.cod_fornecedor
		and seq_aviso_recebto = lr_item_ret_terc.num_sequencia_ar
		and nf_remessa        = lr_item_ret_terc.num_nf_remessa
		and seq_nf_remessa    = lr_item_ret_terc.num_sequencia_nf
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclus�o","sup_retn_item_terc")
			return false
		end if
		if p_ies_contab_aen = "4" or p_ies_contab_aen = "2" then
			whenever error continue
			update item_em_terc_area
			set item_em_terc_area.qtd_tot_recebida =
			item_em_terc_area.qtd_tot_recebida -
			lr_item_ret_terc.qtd_devolvida
			where item_em_terc_area.cod_empresa = p_cod_empresa
			and item_em_terc_area.num_nf      = lr_item_ret_terc.num_nf_remessa
			and item_em_terc_area.num_sequencia  = lr_item_ret_terc.num_sequencia_nf
			and item_em_terc_area.cod_fornecedor = lr_item_ret_terc.cod_fornecedor
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("alteracao","item_em_terc_area")
				return false
			end if
		end if
	end if
end if
else
	if l_contr_local_terc is not null and l_contr_local_terc <> " " then
		if sup3760_ies_item_ctr_estoq(p_cod_empresa, l_aviso_rec.cod_item) then
			initialize l_estoque_trans.* to null
			initialize lr_estoque_obs.* to null
			let l_estoque_trans.cod_empresa        = lr_item_ret_terc.cod_empresa
			let l_estoque_trans.num_transac        = 0
			let l_estoque_trans.cod_item           = l_aviso_rec.cod_item
			let l_estoque_trans.dat_movto          = lr_item_ret_terc.dat_entrada_nf
			let l_estoque_trans.dat_ref_moeda_fort = lr_item_ret_terc.dat_entrada_nf
			let l_estoque_trans.cod_operacao       = l_contr_local_terc
			let l_estoque_trans.num_docum          = l_aviso_rec.num_aviso_rec
			let l_estoque_trans.num_seq            = lr_item_ret_terc.num_sequencia_ar
			let l_estoque_trans.ies_tip_movto      = "r"
			let l_estoque_trans.qtd_movto          = lr_item_ret_terc.qtd_devolvida
			let l_estoque_trans.cus_unit_movto_p   = 0
			let l_estoque_trans.cus_tot_movto_p    = 0
			let l_estoque_trans.cus_unit_movto_f   = 0
			let l_estoque_trans.cus_tot_movto_f    = 0
			let l_estoque_trans.num_conta          = null
			let l_estoque_trans.num_secao_requis   = null

			initialize l_cod_motivo_remessa to null
			select cod_motivo_remessa
			into l_cod_motivo_remessa
			from item_em_terc
			where cod_empresa    = lr_item_ret_terc.cod_empresa
			and num_nf         = lr_item_ret_terc.num_nf_remessa
			and num_sequencia  = lr_item_ret_terc.num_sequencia_nf
			and cod_fornecedor = lr_item_ret_terc.cod_fornecedor

			initialize l_estoque_trans.cod_local_est_orig to null
			initialize l_estoque_trans.ies_sit_est_orig to null
			initialize l_estoque_trans.cod_local_est_dest to null
			initialize l_estoque_trans.ies_sit_est_dest to null
			select cod_local_remessa, ies_situa_remessa,
			cod_local_retorno, ies_situa_retorno
			into l_estoque_trans.cod_local_est_orig,
			l_estoque_trans.ies_sit_est_orig,
			l_estoque_trans.cod_local_est_dest,
			l_estoque_trans.ies_sit_est_dest
			from motivo_remessa
			where cod_empresa        = lr_item_ret_terc.cod_empresa
			and cod_motivo_remessa = l_cod_motivo_remessa

			#tejwt2 / teumqq - venda/retorno de terceiros - programa padr�o
			let g_ies_excl_end_zero = " "
			if log_existe_epl("vdp10300_verifica_vdp_loc_est_terc") then
				if vdp10300_verifica_vdp_loc_est_terc(lr_item_ret_terc.cod_empresa, l_estoque_trans.cod_local_est_dest, false) then
					if supm20_nf_sup_leitura(lr_item_ret_terc.cod_empresa,
						lr_item_ret_terc.num_nf,
						lr_item_ret_terc.ser_nf,
						lr_item_ret_terc.ssr_nf,
						lr_item_ret_terc.ies_especie_nf,
						lr_item_ret_terc.cod_fornecedor,
						true,false) then

						if vdp0075_verifica_grupo_fiscal_param(lr_item_ret_terc.cod_empresa,'grp_fisc_cfop_ret_terc',
							null,supm20_nf_sup_get_cod_operacao(),true) then
							### retorno de mercadoria, utiliza local de estoque do item (man9922) ###
							initialize l_estoque_trans.cod_local_est_dest, l_estoque_trans.ies_sit_est_dest to null
						else
							### retorno simb�lico, utiliza local de retorno do motivo e n�o exclui estoque zerado no sup0970 ###
							let g_ies_excl_end_zero = "n"
						end if
					else
						return false
					end if
				end if
			end if
			initialize l_local_estoq to null
			whenever error continue
			select local into l_local_estoq
			from sup_itterc_grade
			where empresa     = lr_item_ret_terc.cod_empresa
			and nota_fiscal = lr_item_ret_terc.num_nf_remessa
			and seq_item_nf = lr_item_ret_terc.num_sequencia_nf
			and fornecedor  = lr_item_ret_terc.cod_fornecedor
			and seq_tabulacao = 1
			whenever error stop
			if sqlca.sqlcode <> 0 or l_local_estoq is null or l_local_estoq = ' ' then
				whenever error continue
				select cod_local_estoq
				into l_local_estoq
				from item
				where cod_empresa = lr_item_ret_terc.cod_empresa
				and cod_item    = l_aviso_rec.cod_item
				whenever error stop
				if sqlca.sqlcode <> 0 or l_local_estoq is null then
					let l_local_estoq = " "
				end if
			end if

			if l_estoque_trans.cod_local_est_orig is null or
				l_estoque_trans.cod_local_est_orig = " " then
				let l_estoque_trans.cod_local_est_orig = l_local_estoq
				let l_estoque_trans.ies_sit_est_orig   = "l"
			else
				if l_estoque_trans.ies_sit_est_orig is null or
					l_estoque_trans.ies_sit_est_orig = " " then
					let l_estoque_trans.ies_sit_est_orig   = "l"
				end if
			end if

			if l_estoque_trans.cod_local_est_dest is null or
				l_estoque_trans.cod_local_est_dest = " " then
				let l_estoque_trans.cod_local_est_dest = l_local_estoq
				let l_estoque_trans.ies_sit_est_dest = "l"
			else
				if l_estoque_trans.ies_sit_est_dest is null or
					l_estoque_trans.ies_sit_est_dest = " " then
					let l_estoque_trans.ies_sit_est_dest = "l"
				end if
			end if
			if find4glfunction('supr91_verifica_nf_armazem') then
				if supr91_verifica_nf_armazem(lr_item_ret_terc.cod_empresa, ' ', l_aviso_rec.num_aviso_rec) then
					let l_estoque_trans.ies_sit_est_dest = 'i'
				end if
			end if


			#let l_estoque_trans.cod_local_est_dest = l_local_estoq
			let l_estoque_trans.num_lote_orig      = null
			let l_estoque_trans.num_lote_dest      = null
			#let l_estoque_trans.ies_sit_est_dest   = "l"
			let l_estoque_trans.cod_turno          = null
			let l_estoque_trans.nom_usuario        = p_user
			let l_estoque_trans.dat_proces         = today
			let l_estoque_trans.hor_operac         = time
			let l_estoque_trans.num_prog           = "sup2290"

			if g_ies_excl_end_zero = " " and #tejwt2 / teumqq - n�o � nf retorno simbolico de armazem
				sup376_verifica_saldo_transf(lr_item_ret_terc.cod_empresa,
				l_aviso_rec.cod_item,
				l_estoque_trans.qtd_movto,
				l_estoque_trans.cod_local_est_dest,
				l_estoque_trans.ies_sit_est_dest) then
				error "quantidade maior do que a encontrada no estoque para a revers�o do componente da ordem de compra."
				return false
			end if

			initialize lr_estoque_trans_end.* to null

			let lr_estoque_trans_end.cod_empresa          = l_estoque_trans.cod_empresa
			let lr_estoque_trans_end.num_transac          = 0
			let lr_estoque_trans_end.endereco             = " "
			let lr_estoque_trans_end.num_volume           = 0
			let lr_estoque_trans_end.qtd_movto            = l_estoque_trans.qtd_movto
			let lr_estoque_trans_end.cod_grade_1          = " "
			let lr_estoque_trans_end.cod_grade_2          = " "
			let lr_estoque_trans_end.cod_grade_3          = " "
			let lr_estoque_trans_end.cod_grade_4          = " "
			let lr_estoque_trans_end.cod_grade_5          = " "
			let lr_estoque_trans_end.dat_hor_prod_ini     = extend("1900-01-01 00:00:00", year to second)
			let lr_estoque_trans_end.dat_hor_prod_fim     = extend("1900-01-01 00:00:00", year to second)
			let lr_estoque_trans_end.vlr_temperatura      = 0
			let lr_estoque_trans_end.endereco_origem      = " "
			let lr_estoque_trans_end.num_ped_ven          = 0
			let lr_estoque_trans_end.num_seq_ped_ven      = 0
			let lr_estoque_trans_end.dat_hor_producao     = extend("1900-01-01 00:00:00", year to second)
			let lr_estoque_trans_end.dat_hor_validade     = extend("1900-01-01 00:00:00", year to second)
			let lr_estoque_trans_end.num_peca             = " "
			let lr_estoque_trans_end.num_serie            = " "
			let lr_estoque_trans_end.comprimento          = 0
			let lr_estoque_trans_end.largura              = 0
			let lr_estoque_trans_end.altura               = 0
			let lr_estoque_trans_end.diametro             = 0
			let lr_estoque_trans_end.dat_hor_reserv_1     = extend("1900-01-01 00:00:00", year to second)
			let lr_estoque_trans_end.dat_hor_reserv_2     = extend("1900-01-01 00:00:00", year to second)
			let lr_estoque_trans_end.dat_hor_reserv_3     = extend("1900-01-01 00:00:00", year to second)
			let lr_estoque_trans_end.qtd_reserv_1         = 0
			let lr_estoque_trans_end.qtd_reserv_2         = 0
			let lr_estoque_trans_end.qtd_reserv_3         = 0
			let lr_estoque_trans_end.num_reserv_1         = 0
			let lr_estoque_trans_end.num_reserv_2         = 0
			let lr_estoque_trans_end.num_reserv_3         = 0
			let lr_estoque_trans_end.tex_reservado        = " "

			if sup097_movto_estoque(l_estoque_trans.*,
				lr_estoque_obs.*,
				lr_estoque_trans_end.*,
				0) = false then
				error "problema na movimentacao de estoque, transacao cancelada."
				return false
			end if
		end if
	else
		if find4glfunction('supr91_verifica_nf_armazem') then
			if supr91_verifica_nf_armazem(lr_item_ret_terc.cod_empresa, ' ', l_aviso_rec.num_aviso_rec) then
				let l_estoque_trans.ies_sit_est_dest = 'i'
			end if
		end if
		if sup376_verifica_saldo_transf(lr_item_ret_terc.cod_empresa,
			l_aviso_rec.cod_item,
			l_estoque_trans.qtd_movto,
			l_estoque_trans.cod_local_est_dest,
			l_estoque_trans.ies_sit_est_dest) then
			error "quantidade maior do que a encontrada no estoque para a revers�o do componente da ordem de compra."
			return false
		end if
	end if
end if
if lr_item_ret_terc.ies_incl_contab <> "n" then #sdhnrc
	if sup3760_exclui_contab_terc(lr_item_ret_terc.cod_empresa,lr_item_ret_terc.num_nf,
		lr_item_ret_terc.cod_fornecedor, lr_item_ret_terc.num_nf_remessa,
		lr_item_ret_terc.ies_especie_nf, lr_item_ret_terc.num_sequencia_nf,
		lr_item_ret_terc.num_sequencia_ar, "4") then
		whenever error continue
		delete from item_ret_terc
		where item_ret_terc.cod_empresa = lr_item_ret_terc.cod_empresa
		and item_ret_terc.num_transac = lr_item_ret_terc.num_transac
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","item_ret_terc")
			return false
		end if
	else
		call log0030_mensagem("n�o � permitido a exclus�o. nota fiscal associada a um retorno benef j� contabilizado e efetivado na contabilidade","exclamation")
		return false
	end if
else
	whenever error continue
	delete from item_ret_terc
	where item_ret_terc.cod_empresa = lr_item_ret_terc.cod_empresa
	and item_ret_terc.num_transac = lr_item_ret_terc.num_transac
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","item_ret_terc")
		return false
	end if
end if
#fim sdhnrc
whenever error continue
update item_em_terc
set item_em_terc.qtd_tot_recebida = item_em_terc.qtd_tot_recebida -
lr_item_ret_terc.qtd_devolvida
where item_em_terc.cod_empresa   = lr_item_ret_terc.cod_empresa
and item_em_terc.num_nf        = lr_item_ret_terc.num_nf_remessa
and item_em_terc.num_sequencia = lr_item_ret_terc.num_sequencia_nf
and item_em_terc.cod_fornecedor = lr_item_ret_terc.cod_fornecedor
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("modificacao","item_em_terc")
return false
end if

if p_ies_contab_aen = "4" or p_ies_contab_aen = "2" then
	whenever error continue
	update item_em_terc_area
	set item_em_terc_area.qtd_tot_recebida =
	item_em_terc_area.qtd_tot_recebida -
	lr_item_ret_terc.qtd_devolvida
	where item_em_terc_area.cod_empresa = p_cod_empresa
	and item_em_terc_area.num_nf      = lr_item_ret_terc.num_nf_remessa
	and item_em_terc_area.num_sequencia  = lr_item_ret_terc.num_sequencia_nf
	and item_em_terc_area.cod_fornecedor = lr_item_ret_terc.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("alteracao","item_em_terc_area")
		return false
	end if
end if
end foreach
whenever error stop
close cq_rt_terc
end foreach
whenever error stop
close cq_ar_terc
free cq_cons2
free cq_atu_ret
free cq_rt_terc
free cq_ar_terc
return true

end function

#--------------------------------------------------------------------#
function sup376_verifica_saldo_transf(l_cod_empresa, l_cod_item,
	l_qtd_movto, l_local_est_orig,
	l_sit_est_orig)
#--------------------------------------------------------------------#
	define l_qtd_movto         like estoque_trans.qtd_movto,
	l_local_est_orig    like estoque_trans.cod_local_est_orig,
	l_qtd_saldo         like estoque_lote.qtd_saldo,
	l_qtd_reservada     like estoque_loc_reser.qtd_reservada,
	l_sit_est_orig      like estoque_trans.ies_sit_est_orig,
	l_cod_empresa       like item_ret_terc.cod_empresa,
	l_cod_item          like aviso_rec.cod_item

	select qtd_saldo
	into l_qtd_saldo
	from estoque_lote
	where cod_empresa     = l_cod_empresa
	and cod_item        = l_cod_item
	and cod_local       = l_local_est_orig
	and (num_lote is null
	or  num_lote = " ")
	and ies_situa_qtd = l_sit_est_orig
	if l_qtd_saldo is null then
		let l_qtd_saldo = 0
	end if

	select sum(qtd_reservada)
	into l_qtd_reservada
	from estoque_loc_reser
	where cod_empresa = l_cod_empresa
	and cod_item    = l_cod_item
	and cod_local   = l_local_est_orig
	and (num_lote is null
	or  num_lote = " ")
	and ies_situacao not in ("l","c")

	if l_qtd_reservada is null then
		let l_qtd_reservada = 0
	end if

	if (l_qtd_saldo - l_qtd_reservada) < l_qtd_movto then
		return true
	end if

return false

end function

#----------------------------------#
function sup376_gera_item_d_terc()
#----------------------------------#

	define p_item_de_terc   record like item_de_terc.*,
	p_item_de_terc_c record like item_de_terc_compl.*,
	p_texto          char(100),
	p_mot_remes_item char(2),
	l_fat_conver     like item_fornec.fat_conver_unid,
	l_fat_consig     like item_fornec.fat_conver_unid,
	p_sup_item_terc_end record like sup_item_terc_end.*,
	l_cod_unid_med   like item.cod_unid_med

## 407088
	define l_cod_fornecedor  like nf_sup.cod_fornecedor
	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	if m_wms_instal = "s" and p_dados_tela.ies_nf_aguard_nfe = "b" then
		return true
	end if

	if p_dados_tela.ies_nf_aguard_nfe = "t" or
		p_dados_tela.ies_nf_aguard_nfe = "1" or
		p_dados_tela.ies_nf_aguard_nfe = "a" or
		(p_dados_tela.ies_nf_aguard_nfe = "b" and m_contr_terc_no_dep = "s") then
		let p_item_de_terc.cod_motivo_remessa = p_mot_remes_terc

		select parametros[19,20]
		into p_mot_remes_item
		from item_parametro
		where item_parametro.cod_empresa = p_cod_empresa
		and item_parametro.cod_item    = p_aviso_rec.cod_item
		if sqlca.sqlcode = 0 then
			if   p_mot_remes_item is not null
				and  p_mot_remes_item <> " "
				then let p_item_de_terc.cod_motivo_remessa = p_mot_remes_item
			end if
		end if
	end if

	#870420
	if p_dados_tela.ies_nf_aguard_nfe = '4' then
		if p_par_sup_compl.ies_conta_ok_n_est <> "1" then
			let l_fat_consig = sup376_ver_fat_conver_consig(p_aviso_rec.cod_item)
			if l_fat_consig is null or l_fat_consig = " " then
				let l_fat_consig = 1
			end if
			let p_item_de_terc.qtd_tot_recebida = p_aviso_rec.qtd_declarad_nf * l_fat_consig
		else
			let p_item_de_terc.qtd_tot_recebida   = 0
		end if
	else
		call sup3760_busca_fat_conver() returning l_fat_conver, l_cod_unid_med
		let p_item_de_terc.qtd_tot_recebida   = p_aviso_rec.qtd_declarad_nf * l_fat_conver
	end if
	#870420

	if p_dados_tela.ies_nf_aguard_nfe = "4" then
		let p_texto = sup376_busca_par_sup_pad("cod_motivo_remessa",3)
		let p_item_de_terc.cod_motivo_remessa = p_texto[1,2]
		#--# tdgmn2 #--# espindola
		if p_par_sup_compl.ies_conta_ok_n_est = "1" then
			let p_item_de_terc.qtd_tot_recebida   = 0
		end if
		#--# tdgmn2 #--# espindola
	end if

	let p_item_de_terc.cod_empresa       = p_cod_empresa
	let p_item_de_terc.num_nf            = p_dados_tela.num_nf
	let p_item_de_terc.ser_nf            = p_dados_tela.ser_nf
	let p_item_de_terc.ssr_nf            = p_dados_tela.ssr_nf
	let p_item_de_terc.ies_especie_nf    = p_dados_tela.ies_especie_nf

	## os 407088
	call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor

	let p_item_de_terc.cod_fornecedor    = l_cod_fornecedor

	let p_item_de_terc.ies_incl_contab   = "n"
	let p_item_de_terc.num_sequencia     = p_aviso_rec.num_seq
	let p_item_de_terc.dat_emis_nf       = p_dados_tela.dat_emis_nf
	let p_item_de_terc.dat_entrada_nf    = p_dados_tela.dat_entrada_nf
	let p_item_de_terc.dat_inclusao_seq  = today

	#-- ch tdvvx5 inicio --#
	if p_aviso_rec.cod_cla_fisc_nf is not null
		and p_aviso_rec.cod_cla_fisc_nf <> " " then
		let p_item_de_terc.cod_cla_fisc   = p_aviso_rec.cod_cla_fisc_nf
	else
		let p_item_de_terc.cod_cla_fisc   = p_aviso_rec.cod_cla_fisc
	end if
	#-- ch tdvvx5 fim --#

	let p_item_de_terc.cod_item          = p_aviso_rec.cod_item
	let p_item_de_terc.den_item          = p_aviso_rec.den_item
	if l_cod_unid_med is not null or l_cod_unid_med <> ' ' then
		let p_item_de_terc.cod_unid_med      = l_cod_unid_med
	else
		let p_item_de_terc.cod_unid_med      = p_aviso_rec.cod_unid_med_nf
	end if
	let p_item_de_terc.dat_retorno_prev  = null
	let p_item_de_terc.val_remessa       = p_aviso_rec.val_liquido_item
	let p_item_de_terc.val_icms          = 0
	let p_item_de_terc.val_ipi           = 0
	let p_item_de_terc.qtd_tot_devolvida = 0

	if p_ies_contab_aen = "s" or
		p_ies_contab_aen = "4" then
		call sup376_busca_item(p_cod_empresa, p_item_de_terc.cod_item)
		returning p_status
		let p_item_de_terc.cod_area_negocio = p_item.cod_lin_prod
		let p_item_de_terc.cod_lin_negocio  = p_item.cod_lin_recei
		let p_cod_seg_merc                  = p_item.cod_seg_merc
		let p_cod_cla_uso                   = p_item.cod_cla_uso
		if p_status = false then
			let p_item_de_terc.cod_area_negocio = 0
			let p_item_de_terc.cod_lin_negocio  = 0
			let p_cod_seg_merc                  = 0
			let p_cod_cla_uso                   = 0
		end if
	else
		let p_item_de_terc.cod_area_negocio = 0
		let p_item_de_terc.cod_lin_negocio  = 0
		let p_cod_seg_merc                  = null
		let p_cod_cla_uso                   = null
	end if

	let p_item_de_terc.tex_observ = null
	select cod_empresa
	from item_de_terc
	where item_de_terc.cod_empresa = p_item_de_terc.cod_empresa
	and item_de_terc.num_nf = p_item_de_terc.num_nf
	and item_de_terc.ser_nf = p_item_de_terc.ser_nf
	and item_de_terc.ssr_nf = p_item_de_terc.ssr_nf
	and item_de_terc.ies_especie_nf = p_item_de_terc.ies_especie_nf
	and item_de_terc.cod_fornecedor = p_item_de_terc.cod_fornecedor
	and item_de_terc.num_sequencia = p_item_de_terc.num_sequencia
	if sqlca.sqlcode = 0 then
	else
		#inicio os 514411#
		if m_qtd_dias_final_export is not null and
			m_qtd_dias_final_export <> " " then
			let p_item_de_terc.dat_retorno_prev = today + m_qtd_dias_final_export units day
		end if
		#fim os 514411#
		whenever error continue
		insert into item_de_terc values (p_item_de_terc.*)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","item_de_terc")
			return false
		end if

		let p_sup_item_terc_end.empresa            = p_item_de_terc.cod_empresa
		let p_sup_item_terc_end.nota_fiscal        = p_item_de_terc.num_nf
		let p_sup_item_terc_end.serie_nota_fiscal  = p_item_de_terc.ser_nf
		let p_sup_item_terc_end.subserie_nf        = p_item_de_terc.ssr_nf
		let p_sup_item_terc_end.espc_nota_fiscal   = p_item_de_terc.ies_especie_nf
		let p_sup_item_terc_end.fornecedor         = p_item_de_terc.cod_fornecedor
		let p_sup_item_terc_end.aviso_recebto      = p_aviso_rec.num_aviso_rec
		let p_sup_item_terc_end.seq_aviso_recebto  = p_item_de_terc.num_sequencia
		let p_sup_item_terc_end.seq_tabulacao = 1
		let p_sup_item_terc_end.sequencia_original = 0
		let p_sup_item_terc_end.item               = p_item_de_terc.cod_item
		let p_sup_item_terc_end.local            = p_aviso_rec.cod_local_estoq
		let p_sup_item_terc_end.lote             = p_aviso_rec.num_lote
		let p_sup_item_terc_end.sit_qtd          = "l"
		let p_sup_item_terc_end.endereco         = " "
		let p_sup_item_terc_end.num_volume       = 0
		let p_sup_item_terc_end.grade_1          = " "
		let p_sup_item_terc_end.grade_2          = " "
		let p_sup_item_terc_end.grade_3          = " "
		let p_sup_item_terc_end.grade_4          = " "
		let p_sup_item_terc_end.grade_5          = " "
		let p_sup_item_terc_end.dat_hor_producao = extend("1900-01-01 00:00:00", year to second)
		let p_sup_item_terc_end.dat_hor_valid    = extend("1900-01-01 00:00:00", year to second)
		let p_sup_item_terc_end.peca             = " "
		let p_sup_item_terc_end.serie            = " "
		let p_sup_item_terc_end.comprimento      = 0
		let p_sup_item_terc_end.largura          = 0
		let p_sup_item_terc_end.altura           = 0
		let p_sup_item_terc_end.diametro         = 0
		let p_sup_item_terc_end.dat_hor_reserva_1 = extend("1900-01-01 00:00:00", year to second)
		let p_sup_item_terc_end.dat_hor_reserva_2 = extend("1900-01-01 00:00:00", year to second)
		let p_sup_item_terc_end.dat_hor_reserva_3 = extend("1900-01-01 00:00:00", year to second)
		let p_sup_item_terc_end.qtd_reservada_1 = 0
		let p_sup_item_terc_end.qtd_reservada_2 = 0
		let p_sup_item_terc_end.qtd_reservada_3 = 0
		let p_sup_item_terc_end.num_reserva_1   = 0
		let p_sup_item_terc_end.num_reserva_2   = 0
		let p_sup_item_terc_end.num_reserva_3   = 0
		let p_sup_item_terc_end.texto_reservado = " "
		let p_sup_item_terc_end.qtd_receb       = p_item_de_terc.qtd_tot_recebida #-- ch tefii1
		let p_sup_item_terc_end.qtd_consumida   = 0

		whenever error continue
		insert into sup_item_terc_end values (p_sup_item_terc_end.*)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","sup_item_terc_end")
			return false
		end if

	end if
	if p_ies_contab_aen = "4" then
		select cod_empresa
		from item_de_terc_area
		where item_de_terc_area.cod_empresa = p_item_de_terc.cod_empresa
		and item_de_terc_area.num_nf      = p_item_de_terc.num_nf
		and item_de_terc_area.ser_nf      = p_item_de_terc.ser_nf
		and item_de_terc_area.ssr_nf         = p_item_de_terc.ssr_nf
		and item_de_terc_area.ies_especie_nf = p_item_de_terc.ies_especie_nf
		and item_de_terc_area.cod_fornecedor = p_item_de_terc.cod_fornecedor
		and item_de_terc_area.num_sequencia  = p_item_de_terc.num_sequencia
		if sqlca.sqlcode <> 0 then
			whenever error continue
			insert into item_de_terc_area values (p_item_de_terc.*, p_cod_seg_merc,
			p_cod_cla_uso)
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","item_de_terc_area")
				return false
			end if
		end if
	end if

	let p_item_de_terc_c.cod_empresa     = p_cod_empresa
	let p_item_de_terc_c.num_seq         = p_item_de_terc.num_sequencia
	let p_item_de_terc_c.cod_cliente     = p_item_de_terc.cod_fornecedor
	let p_item_de_terc_c.cod_fornecedor  = null
	let p_item_de_terc_c.num_nf_fatura   = null
	let p_item_de_terc_c.ser_nf_fatura   = null
	let p_item_de_terc_c.num_pedido      = null
	let p_item_de_terc_c.nom_arq_trans   = null
	let p_item_de_terc_c.num_aviso_rec   = p_aviso_rec.num_aviso_rec
	let p_item_de_terc_c.num_nf          = p_item_de_terc.num_nf
	let p_item_de_terc_c.ser_nf          = p_item_de_terc.ser_nf
	let p_item_de_terc_c.ssr_nf          = p_item_de_terc.ssr_nf
	let p_item_de_terc_c.ies_especie_nf  = p_item_de_terc.ies_especie_nf
	let p_item_de_terc_c.cod_fornec_nf   = p_item_de_terc.cod_fornecedor

	select cod_empresa
	from item_de_terc_compl
	where item_de_terc_compl.cod_empresa = p_item_de_terc.cod_empresa
	and item_de_terc_compl.num_nf      = p_item_de_terc.num_nf
	and item_de_terc_compl.ser_nf      = p_item_de_terc.ser_nf
	and item_de_terc_compl.ssr_nf         = p_item_de_terc.ssr_nf
	and item_de_terc_compl.ies_especie_nf = p_item_de_terc.ies_especie_nf
	and item_de_terc_compl.cod_fornec_nf  = p_item_de_terc.cod_fornecedor
	and item_de_terc_compl.num_seq        = p_item_de_terc.num_sequencia
	if sqlca.sqlcode <> 0 then
		whenever error continue
		insert into item_de_terc_compl values (p_item_de_terc_c.*)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","item_de_terc_compl")
			return false
		end if
	end if
return true
end function

#-------------------------------------------------#
function sup376_busca_operacao_estoque(p_funcao)
#-------------------------------------------------#
	define p_funcao char(20),
	l_ies_origem like estoque_operac.ies_origem

	initialize l_ies_origem to null

	case
	when p_funcao = "nor"
	let p_dados_tela.cod_operac_estoq = p_par_sup.cod_operac_estoq_c
	when p_funcao = "dev"
	initialize l_ies_origem to null
	if p_dados_tela.cod_operac_estoq is null or
		p_dados_tela.cod_operac_estoq = " " then
	else
		select ies_origem
		into l_ies_origem
		from estoque_operac
		where cod_empresa  = p_cod_empresa
		and cod_operacao = p_dados_tela.cod_operac_estoq
	end if
	if (p_dados_tela.cod_operac_estoq is null or
		p_dados_tela.cod_operac_estoq = " ") or
		(l_ies_origem is not null and
		l_ies_origem <> "c") then
		initialize p_dados_tela.cod_operac_estoq to null
		select cod_operac_dev_cli
		into p_dados_tela.cod_operac_estoq
		from par_sup_compl
		where par_sup_compl.cod_empresa = p_cod_empresa
		if sqlca.sqlcode <> 0 then
			let p_dados_tela.cod_operac_estoq = p_par_sup.cod_operac_estoq_c
		end if
	end if

	initialize l_ies_origem to null
	select ies_origem
	into l_ies_origem
	from estoque_operac
	where cod_empresa = p_cod_empresa
	and cod_operacao = p_dados_tela.cod_operac_estoq
	if l_ies_origem is not null and
		l_ies_origem = "c" then
	else
		error "operacao de estoque invalida para devolucao de cliente"
	end if
	when p_funcao = "transf"
	if not sup3762_verifica_operacao_srig() then
		if p_oper_trans_unid is not null and
			p_oper_trans_unid <> " " then
			let p_dados_tela.cod_operac_estoq = p_oper_trans_unid
		else
			call log0030_mensagem(" operacao de transferencia entre unidades nao esta parametrizada. ","exclamation")
		end if
	end if
	when p_funcao = "permuta" ##o.s 186311
	if g_operac_permuta is not null and
		g_operac_permuta <> " " then
		let p_dados_tela.cod_operac_estoq = g_operac_permuta
	else
		error " operacao de permuta entre empresas nao esta parametrizada. "
	end if
end case
end function

#---------------------------------------#
function sup376_grava_liberacao_nota()
#---------------------------------------#
	define p_nf_sup_erro record
	empresa              like nf_sup_erro.empresa,
	num_aviso_rec        like nf_sup_erro.num_aviso_rec,
	num_seq              like nf_sup_erro.num_seq,
	des_pendencia_item   like nf_sup_erro.des_pendencia_item,
	ies_origem_erro      like nf_sup_erro.ies_origem_erro,
	ies_erro_grave       like nf_sup_erro.ies_erro_grave
end record

delete from nf_sup_erro
where nf_sup_erro.empresa = p_cod_empresa
and nf_sup_erro.num_aviso_rec = p_dados_tela.num_aviso_rec
and nf_sup_erro.ies_origem_erro = "4"
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclusao","nf_sup_erro")
	let p_houve_erro = true
end if

let p_nf_sup_erro.empresa       = p_dados_tela.cod_empresa
let p_nf_sup_erro.num_aviso_rec = p_dados_tela.num_aviso_rec
let p_nf_sup_erro.num_seq       = 0
let p_nf_sup_erro.ies_origem_erro = "4"
let p_nf_sup_erro.ies_erro_grave = "n"
let p_nf_sup_erro.des_pendencia_item = today, " ",time," " ,p_user

insert into nf_sup_erro ( empresa, num_aviso_rec, num_seq, des_pendencia_item, ies_origem_erro, ies_erro_grave )  values ( p_nf_sup_erro.empresa, p_nf_sup_erro.num_aviso_rec, p_nf_sup_erro.num_seq, p_nf_sup_erro.des_pendencia_item, p_nf_sup_erro.ies_origem_erro, p_nf_sup_erro.ies_erro_grave)
if sqlca.sqlcode <> 0 then
	call log003_err_sql("inclusao","nf_sup_erro")
	let p_houve_erro = true
end if

end function

#-------------------------------#
function sup376_gera_iss()
#-------------------------------#
	define p_tipo_val   record like tipo_valor.*,
	p_val_iss    decimal(17,2),
	l_val_iss    like desc_acrescimos.val_desc_acres,
	l_perc_iss   decimal(6,3),
	p_cont_item  smallint,
	l_num_versao like desc_acrescimos.num_versao

	select *
	from par_cap_pad
	where cod_empresa  = p_cod_empresa
	and cod_parametro = "ies_uso_ctrl_iss"
	and par_ies       = "s"

	if sqlca.sqlcode <> 0 then
		return
	end if

	whenever error continue

	delete from ar_iss
	where ar_iss.cod_empresa    =  p_aviso_rec.cod_empresa
	and ar_iss.num_aviso_rec  =  p_aviso_rec.num_aviso_rec
	and ar_iss.num_seq        =  p_aviso_rec.num_seq

	whenever error stop

	if sqlca.sqlcode <> 0 then
		return
	end if

	if p_ies_imp_iss = "n" or
		p_ies_imp_iss is null then
		return
	end if

	select  *
	into p_tipo_val.*
	from tipo_valor
	where cod_empresa = p_cod_empresa
	and cod_tip_val = p_cod_ret_iss
	and ies_irrf    = "i"

	let p_val_iss = p_aviso_rec.val_liquido_item *
	p_tipo_val.perc_val_princ / 100

	initialize l_num_versao, l_val_iss, l_perc_iss to null
	select max(num_versao)
	into l_num_versao
	from desc_acrescimos
	where cod_empresa    = p_ordem_sup.cod_empresa
	and cod_fornecedor = p_ordem_sup.cod_fornecedor
	and num_cotacao    = p_ordem_sup.num_cotacao
	and cod_item       = p_ordem_sup.cod_item

	if l_num_versao is not null then
		select val_desc_acres
		into l_perc_iss
		from desc_acrescimos
		where cod_empresa      = p_ordem_sup.cod_empresa
		and cod_fornecedor   = p_ordem_sup.cod_fornecedor
		and num_cotacao      = p_ordem_sup.num_cotacao
		and num_versao       = l_num_versao
		and cod_item         = p_ordem_sup.cod_item
		and ies_desc_acres_5 = 5

		if l_perc_iss is not null then
			let l_val_iss  = (l_perc_iss/100) * p_aviso_rec.val_liquido_item
		end if
	end if

	let p_ar_iss.cod_empresa     =  p_aviso_rec.cod_empresa
	let p_ar_iss.num_aviso_rec   =  p_aviso_rec.num_aviso_rec
	let p_ar_iss.num_seq         =  p_aviso_rec.num_seq
	let p_ar_iss.val_iss_decl    =  p_val_iss
	if l_val_iss is not null then
		let p_ar_iss.val_iss_calc  =  l_val_iss
	else
		let p_ar_iss.val_iss_calc  =  p_val_iss
	end if
	let p_ar_iss.val_bc_iss_decl =  p_aviso_rec.val_liquido_item
	let p_ar_iss.val_bc_iss_calc =  p_aviso_rec.val_liquido_item
	let p_ar_iss.perc_iss_decl   =  p_tipo_val.perc_val_princ
	if l_perc_iss is not null then
		let p_ar_iss.perc_iss_calc =  l_perc_iss
	else
		let p_ar_iss.perc_iss_calc =  p_tipo_val.perc_val_princ
	end if
	let p_ar_iss.cod_tip_val_iss =  p_tipo_val.cod_tip_val

	call sup3762_busca_info_fornecedor(p_nf_sup.cod_fornecedor)
	let p_ar_iss.num_inscr_iss = p_fornecedor.ins_estadual

	insert into ar_iss values (p_ar_iss.*)

	if sqlca.sqlcode <> 0 then
		let p_houve_erro = true
	end if

end function

#--------------------------------------------#
function sup376_analisa_contagem_inspecao()
#--------------------------------------------#
	define l_sucesso       smallint,
	l_item_wms      smallint,
	l_grade_dimens  smallint,
	l_revisao       integer,
	l_fornec_triang like nf_sup.cod_fornecedor,
	l_item_triang                 smallint,
	l_triang_em_terc              smallint,
	l_parametro                   char(01),
	l_devol_autom                 smallint,
	l_informa_dimensional         smallint

	#inicio os 373464
	let m_contagem_automatica = false
	if p_par_sup_compl.ies_rastreio = "1" then

		initialize l_revisao to null
		whenever error continue
		select max(avf_plano_item.revisao)
		into l_revisao
		from avf_plano_item
		where avf_plano_item.empresa = p_cod_empresa
		and avf_plano_item.item = p_aviso_rec.cod_item
		whenever error stop

		if sqlca.sqlcode <> 0 and
			sqlca.sqlcode <> 100 and
			sqlca.sqlcode <> -206 then
			call log003_err_sql("select","avf_plano_item")
		else
			if l_revisao is not null and
				l_revisao >= 0 then
				if avf1046_busca_parametro(p_aviso_rec.cod_item
					,p_dados_tela.cod_fornecedor
					,p_dados_tela.num_aviso_rec
					,p_aviso_rec.num_seq
					,l_revisao)then

				end if
			end if
		end if
	end if
	#fim os 373464

	#-----------------contagem item nao estoque ----------------------#
	let p_ies_passou = false
	if p_dados_tela.ies_nf_aguard_nfe <> "7" then
		if p_aviso_rec.ies_item_estoq = "n" and
			p_dados_tela.ies_nf_aguard_nfe <> "4" then
			if p_par_sup_compl.ies_conta_ok_n_est = "2" or
				(p_par_sup_compl.ies_conta_ok_n_est = "3" and
				p_dados_tela.ies_especie_nf = "nfs") then
				let p_ies_passou = true
				let p_aviso_rec.ies_liberacao_insp = "s"
				if p_dados_tela.ies_nf_aguard_nfe = "t"
					then let p_aviso_rec.ies_liberacao_cont = "s"
## obs: ies_liberacao_cont deve ficar como n para efetuar a baixa de pedido de item d�bito direto no sup0530
				else let p_aviso_rec.ies_liberacao_cont = "n"
				end if

## obs: ies_situa_ar deve ficar como e para que seja chamado sup0530 e efetue a baixa de pedido d�bito direto
##      como sup1190 'contagem f�sica' est� diferente de 1 a contagem dd � sempre autom�tica
				if  p_dados_tela.ies_especie_nf    <> "nfr"    #os. 503073
					and p_dados_tela.ies_nf_aguard_nfe <> "x" then
					let p_aviso_rec.ies_situa_ar = "e"
					let p_aviso_rec.qtd_recebida       = p_array[p_ind].qtd_declarad_nf
				else
					let p_aviso_rec.ies_liberacao_insp = "n"
				end if
			end if
		end if
	end if
	#----------#

	initialize  p_cod_local_rec, p_ies_contagem  to null
	call sup376_verifica_operacao_recebimento()
returning p_cod_local_rec, p_ies_contagem

	if p_cod_local_rec is not null and
		p_cod_local_rec <> " " then
		let p_aviso_rec.cod_local_estoq = p_cod_local_rec
	end if

	### tskwdr - item com controle estoque fisico s� busca o local cadastrado para o item se n�o possuir local cadastrado para a opera��o de estoque.
	call sup376_busca_parametros_item(p_aviso_rec.cod_item)
	let p_parametros = p_item_parametro.parametros[17]
	if p_parametros = "s" then
		if p_cod_local_rec is null or
			p_cod_local_rec = " " then
			let p_cod_local_rec = p_array_compl[p_ind].cod_local_estoq
			if p_cod_local_rec is not null then
				let p_aviso_rec.cod_local_estoq = p_cod_local_rec
			end if
		end if
	end if

	if p_ies_busca_loclib = "s"
		then initialize p_cod_local_rec to null
		call sup376_busca_loclib(p_aviso_rec.cod_item)
		returning p_cod_local_rec
		if p_cod_local_rec is not null then
			let p_aviso_rec.cod_local_estoq = p_cod_local_rec
		end if
	end if

	let g_passou_skip_lote = 0
	#---- verifica relacionamento natureza operacao x grupo despesa -----#
	if p_dados_tela.ies_nf_aguard_nfe = "8" then
		call sup3762_busca_grupo_desp_nat_oper() returning p_cod_gru_desp
		if p_cod_gru_desp is not null then
			let p_aviso_rec.gru_ctr_desp_item = p_cod_gru_desp
		end if
	end if

	#se empresa quer inspecao pelo cliente da triangula��o e n�o pelo fornecedor da nota

	if m_informa_cliente_triang_con = "s" and p_dados_tela.ies_especie_nf = "nfr"
		and p_dados_tela.ies_nf_aguard_nfe = "t" then
		call sup3760_fornecedor_relac_triangulacao(p_cod_empresa, p_dados_tela.num_aviso_rec,
		p_aviso_rec.gru_ctr_desp_item)
		returning l_item_triang, l_triang_em_terc
		if l_item_triang = 1 and
			l_triang_em_terc = 0 then
			call sup3760_fornecedor_triangulacao(l_triang_em_terc, true)
			#se foi incluido cliente de triangulacao
			whenever error continue
			select parametro_texto into l_fornec_triang
			from sup_par_ar
			where empresa = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro     = "fornec_triangulacao"
			whenever error continue
			if sqlca.sqlcode = 0 then
				#se considera empresa cliente, ou se n�o existe registro
				whenever error continue
				let l_parametro = "n"
				select parametro_ind into l_parametro
				from sup_par_it_forn
				where empresa    = p_cod_empresa
				and item       = p_aviso_rec.cod_item
				and fornecedor = p_dados_tela.cod_fornecedor
				and parametro  = "consdr_emp_cli"
				whenever error stop
				if sqlca.sqlcode <> 0 or l_parametro = "s" then
					whenever error continue
					initialize p_item_fornec.* to null
					select cod_empresa, cod_item, cod_fornecedor, cod_item_fornec,
					ies_item_iso, dat_aprov, dat_entrega_ult, cnd_pgto,
					cod_mod_embar, cod_moeda, ies_aprovado, cod_unid_med_forn,
					fat_conver_unid, pct_particip_comp, ies_tip_entrega,
					qtd_periodos_seg, qtd_lote_minimo, qtd_lote_maximo,
					qtd_lote_multiplo, qtd_max_mes, qtd_dias_entrega,
					ies_tip_preco, dat_ini_contrato, dat_fim_contrato,
					ies_tem_inspecao, ies_tipo_inspecao, qtd_inspecao,
					ies_tip_aprovacao, tex_observ, ies_reg_espec_icms,
					qtd_entr_sem_insp
					into p_item_fornec.cod_empresa, p_item_fornec.cod_item, p_item_fornec.cod_fornecedor, p_item_fornec.cod_item_fornec,
					p_item_fornec.ies_item_iso, p_item_fornec.dat_aprov, p_item_fornec.dat_entrega_ult, p_item_fornec.cnd_pgto,
					p_item_fornec.cod_mod_embar, p_item_fornec.cod_moeda, p_item_fornec.ies_aprovado, p_item_fornec.cod_unid_med_forn,
					p_item_fornec.fat_conver_unid,  p_item_fornec.pct_particip_comp,  p_item_fornec.ies_tip_entrega,
					p_item_fornec.qtd_periodos_seg,  p_item_fornec.qtd_lote_minimo,  p_item_fornec.qtd_lote_maximo,
					p_item_fornec.qtd_lote_multiplo,  p_item_fornec.qtd_max_mes,  p_item_fornec.qtd_dias_entrega,
					p_item_fornec.ies_tip_preco,  p_item_fornec.dat_ini_contrato,  p_item_fornec.dat_fim_contrato,
					p_item_fornec.ies_tem_inspecao,  p_item_fornec.ies_tipo_inspecao,  p_item_fornec.qtd_inspecao,
					p_item_fornec.ies_tip_aprovacao,  p_item_fornec.tex_observ,  p_item_fornec.ies_reg_espec_icms,
					p_item_fornec.qtd_entr_sem_insp
					from item_fornec
					where item_fornec.cod_empresa    = p_cod_empresa
					and item_fornec.cod_item       = p_aviso_rec.cod_item
					and item_fornec.cod_fornecedor = l_fornec_triang
					whenever error stop
					if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
						call log003_err_sql("selecao","item_fornec")
					end if
				end if
			end if
		end if
	end if

	if p_ies_passou = false then
		if p_ies_cont_insp_aut = "3" then
			let p_ies_passou = true
		end if
		call sup376_verifica_item_fornec_insp() #os 178472 - os275852(chamada fun��o novamente!)
	end if

	#--- seta variaveis para itens com contagem automatica ---#
	### os 277425 ###
	let l_grade_dimens = false

	if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
		p_cod_empresa,
		p_aviso_rec.num_aviso_rec) = false and
		sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
		p_cod_empresa,
		p_aviso_rec.num_aviso_rec) = false then
		call sup0063_verifica_controles(1,
		p_aviso_rec.cod_item,
		"inclusao",
		"sup3760")
		returning m_controles
		if m_controles <> " " then
			if sup3762_verifica_apenas_controle_lote_automatico(p_aviso_rec.cod_item) = false then
				### ir� obrigar contagem manual, pois precisa ser informada a grade
				### da contagem.
				let l_grade_dimens = true
			end if
		end if
	end if

	#se nota de devolu��o com o mesmo n�mero da nota, e parametro para contagem automatica
	if find4glfunction('sup1283_verifica_nota_devolucao_automatica') then
		if sup1283_verifica_nota_devolucao_automatica(p_cod_empresa,
			p_aviso_rec.num_aviso_rec,
			p_dados_tela.ies_especie_nf,
			false) then
			let l_devol_autom = true
		else
			let l_devol_autom = false
		end if
	else
		let l_devol_autom = false
	end if

	if l_grade_dimens = true then
		### os 277425 ###
		if m_informou_grade = true or
			sup0812_verifica_nota_transferencia(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			p_dados_tela.cod_fiscal_compl) then
			### ir� permitir contagem automatica, se estiver parametrizado
			### para tal, buscando a grade do recebimento para a contagem.
			### ou se for nota fiscal de transferencia entre unidades !!!(os380921)
			let l_grade_dimens = false
		end if
		if l_devol_autom then
			let l_grade_dimens = false
		end if
	end if

## 476411 (deve verificar contagem/inspe��o automatica ou n�o usando verifica_cont_insp_autom,
##         em seguida deve verificar se trabalha com grade/dimensional para gerar contagem autom�tica,
##         j� a inspe��o deve continuar obedecendo o crit�rio normal de verifica��o (sup0090, skip lote ...etc)
	if ((p_ies_cont_insp_aut="1" or
		p_ies_cont_insp_aut="2" or
		p_par_estoque.ies_custo_medio="d")    and
		p_dados_tela.ies_nf_aguard_nfe <> "7" and
		p_ies_passou = false) or
		(p_ies_contagem = "s") or
		(p_ies_passou = true   and
		p_dados_tela.ies_nf_aguard_nfe = "5" )and
		p_dados_tela.ies_nf_aguard_nfe <> "4" then

		if l_devol_autom then
			let p_ies_item_cont_aut = 's'
			let p_ies_item_insp_aut = 's'
		else
			call sup376_verifica_cont_insp_automat(p_aviso_rec.cod_item, m_cont_insp_especial)
			returning p_ies_item_cont_aut, p_ies_item_insp_aut
		end if
		if p_aviso_rec.ies_item_estoq = "s" then

			if p_ies_contagem is not null then

				let l_item_wms = false

				if g_ies_wis_instalado = "s" then
					if p_aviso_rec.cod_item is not null and
						p_aviso_rec.cod_item <> " " then
						call vdp3188_item_sob_controle_wis(p_cod_empresa,p_aviso_rec.cod_item)
						returning l_sucesso , l_item_wms
					end if
				end if

				if g_ies_wms_instalado = "s" then
					call wms0004_item_sob_controle_wms(p_cod_empresa,p_aviso_rec.cod_item)
					returning l_sucesso , l_item_wms
				end if

				if l_item_wms = false then
					if p_ies_contagem = "s" then
						let p_ies_item_cont_aut = "s"
					else
						let p_ies_item_cont_aut = "n"
					end if
				else
					let p_ies_item_cont_aut = "n"
				end if

			end if

		end if

		if (p_ies_item_cont_aut = "s" or
			p_par_estoque.ies_custo_medio = "d") and
			sup376_verifica_itens_invent() = false then
			if p_ies_item_insp_aut = "s" then
				let p_aviso_rec.ies_liberacao_insp = "s"
				if p_ies_item_cont_aut = "s" then
					let p_aviso_rec.ies_situa_ar = "e"
					let p_aviso_rec.qtd_recebida = p_aviso_rec.qtd_declarad_nf
				else let p_aviso_rec.ies_situa_ar = "c"
				end if
			else
				let p_aviso_rec.ies_liberacao_insp = "n"
				if p_ies_item_cont_aut = "s" then
					let p_aviso_rec.ies_situa_ar = "i"
					let p_aviso_rec.qtd_recebida = p_aviso_rec.qtd_declarad_nf
				else let p_aviso_rec.ies_situa_ar = "c"
				end if
			end if
		else
			let p_aviso_rec.ies_situa_ar = "c"
			if p_ies_item_insp_aut = "s" then
				let p_aviso_rec.ies_liberacao_insp = "s"
			else
				let p_aviso_rec.ies_liberacao_insp = "n"
			end if
		end if
	end if

	if l_grade_dimens = true and
		p_dados_tela.ies_nf_aguard_nfe <> "4" then
		if p_ies_passou = false then
			let p_ies_item_cont_aut = "n"
			if p_aviso_rec.ies_item_estoq = "s" then
				let p_aviso_rec.ies_liberacao_cont = "n"
				let p_aviso_rec.ies_situa_ar  = "c"
				## a inspe��o ser� realizada conforme par�metros (sup0090, etc...)
			else
				let p_aviso_rec.ies_liberacao_cont = "s"
				let p_aviso_rec.ies_liberacao_insp = "s"
				let p_aviso_rec.ies_situa_ar  = "e"
			end if
		end if
	end if

	if (p_dados_tela.ies_nf_aguard_nfe = "2" or
		p_dados_tela.ies_nf_aguard_nfe = "5") and
		l_grade_dimens = false then
		let p_aviso_rec.ies_liberacao_insp = "s"
	end if

	if m_cont_insp_especial = "s" and
		l_grade_dimens = false then
		if (p_aviso_rec.cod_item is null or p_aviso_rec.cod_item = " ") or
			p_aviso_rec.qtd_declarad_nf = 0 or
			(p_aviso_rec.ies_item_estoq = "n" and
			p_dados_tela.ies_nf_aguard_nfe <> "4") then
			let p_aviso_rec.ies_liberacao_insp = "s"
			let p_aviso_rec.ies_situa_ar       = "e"
			let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
			let p_aviso_rec.qtd_liber          = p_aviso_rec.qtd_declarad_nf #ch738229 antonio
		end if
	end if

	call sup376_verifica_avf_insp_ar()

# os 487300 - foi deixado em coment�rio a parte descrita abaixo pois quando trabalha com grade/dimensional
#             os controles j� s�o informados na contagem do material (conforme mudan�a de conceito efetuada
#             a partir da v0500)
#
#if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
#                             p_cod_empresa,
#                             p_aviso_rec.num_aviso_rec) = false and
#   sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
#                           p_cod_empresa,
#                           p_aviso_rec.num_aviso_rec) = false then
#   if p_aviso_rec.ies_item_estoq = "s" and
#      l_grade_dimens = false then
#      call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
#      if m_controles <> " " then
#         if p_aviso_rec.ies_situa_ar = "e" then
#            let p_aviso_rec.ies_situa_ar = "i"
#         end if
#         let p_aviso_rec.ies_liberacao_insp = "n"
#      end if
#   else
#      call sup0063_verifica_controles(11, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
#      if m_controles <> " " then
#         if p_aviso_rec.ies_situa_ar = "e" then
#            let p_aviso_rec.ies_situa_ar = "i"
#         end if
#         let p_aviso_rec.ies_liberacao_insp = "n"
#      end if
#   end if
#end if

	if m_cont_insp_especial = "s" and
		l_grade_dimens = false then
		if (p_aviso_rec.cod_item is null or p_aviso_rec.cod_item = " ") or
			p_aviso_rec.qtd_declarad_nf = 0 or
			(p_aviso_rec.ies_item_estoq = "n" and
			p_dados_tela.ies_nf_aguard_nfe <> "4") then
			let p_aviso_rec.ies_liberacao_insp = "s"
			let p_aviso_rec.ies_situa_ar       = "e"
			let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
		end if
	end if

	if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
		p_cod_empresa,
		p_aviso_rec.num_aviso_rec) = false and
		sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
		p_cod_empresa,
		p_aviso_rec.num_aviso_rec) = false then
		call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao","sup3760")
		returning m_controles

		#--inicio--vanderlei os 383999 #
		if not sup0063_grava_temp_controles(m_controles) then
			call log0030_mensagem('houve erro na grava��o da tabela w_controles.','stop')
			let p_houve_erro = 1
		end if
	end if

	if not p_houve_erro then
		#chamado tpjeo6 verificar o log0087 "perm_ent_nf_item_wms_s_dimens" quando for 's', verificar se a empresa utiliza wms e se o item controla wms, caso sim nao informa dimensional
		let l_informa_dimensional = true
		if m_perm_ent_nf_item_wms_s_dimens = 's' then
			if g_ies_wms_instalado = 's' then
				call wms0004_item_sob_controle_wms(p_cod_empresa, p_aviso_rec.cod_item) returning  l_sucesso,l_item_wms
				if l_item_wms then
					let l_informa_dimensional = false
				end if
			end if
		end if

		if l_informa_dimensional then
			if sup0064_verif_ctr_grade_empresa_orig_dest(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				p_dados_tela.num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.cod_fornecedor,
				p_dados_tela.cod_operacao,
				p_aviso_rec.cod_item) then

				let m_msg = 'controles do item ',p_aviso_rec.num_seq clipped,' est�o diferentes da empresa origem. grades/dim. dever�o ser informados manualmente! confirma?'
				let m_contagem_automatica = false #727947 antonio
				if log0040_confirm(0,0,m_msg) then
					call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao", "sup3760")
					returning m_controles

					let p_aviso_rec.ies_liberacao_cont = "n"

					if m_controles <> " " then
						let m_contagem_automatica = true      #727947 antonio
						let p_aviso_rec.ies_situa_ar       = "c"
					end if

				else
					let p_houve_erro = 1
				end if
			end if
		end if
		###########
	end if
	#---fim----vanderlei os 383999 #

	if log_existe_epl("sup3760y_after_process_analisa_contagem_inspecao") then
		#epl acionado ap�s o processamento da fun��o sup3760_analisa_contagem_inspecao
		#epl onde � verificado os par�metros que indicam se realiza ou n�o contagem
		#epl e inspe��o autom�tico, e tamb�m define o status que ser� inclu�do
		#epl o aviso de recebimento.

		call log_setvar("empresa",p_aviso_rec.cod_empresa)
		#epl c�digo da empresa
		#epl tipo: empresa.cod_empresa

		call log_setvar("num_nf",p_dados_tela.num_nf)
		#epl n�mero da nota fiscal
		#epl tipo: nf_sup.num_nf

		call log_setvar("ser_nf",p_dados_tela.ser_nf)
		#epl s�rie da nota fiscal
		#epl tipo: nf_sup.ser_nf

		call log_setvar("ssr_nf",p_dados_tela.ssr_nf)
		#epl sub s�rie da nota fiscal
		#epl tipo: nf_sup.ssr_nf

		call log_setvar("ies_especie_nf",p_dados_tela.ies_especie_nf)
		#epl esp�cie da nota fiscal
		#epl tipo: nf_sup.ies_especie_nf

		call log_setvar("cod_fornecedor",p_dados_tela.cod_fornecedor)
		#epl fornecedor da nota fiscal
		#epl tipo: nf_sup.cod_fornecedor

		call log_setvar("ies_nf_aguard_nfe",p_dados_tela.ies_nf_aguard_nfe)
		#epl tipo da nota fiscal
		#epl tipo: nf_sup.ies_nf_aguard_nfe

		call log_setvar("num_aviso_rec",p_dados_tela.num_aviso_rec)
		#epl n�mero do aviso de recebimento
		#epl tipo: aviso_rec.num_aviso_rec

		call log_setvar("cod_item",p_aviso_rec.cod_item)
		#epl c�digo do item
		#epl tipo: item.cod_item

		call log_setvar('cod_operacao', p_dados_tela.cod_operacao)
		#epl cfop da nota
		#epl tipo: nf_sup.cod_operacao

		call log_setvar("ies_situa_ar",p_aviso_rec.ies_situa_ar)
		#epl situa��o que o aviso de recebimento dever� ser incluso
		#epl tipo: aviso_rec.ies_situa_ar

		call log_setvar("ies_liberacao_cont",p_aviso_rec.ies_liberacao_cont)
		#epl aviso de recebimento dever� sofrer contagem
		#epl tipo: aviso_rec.ies_liberacao_cont

		call log_setvar("ies_liberacao_insp",p_aviso_rec.ies_liberacao_insp)
		#epl aviso de recebimento dever� sofrer inspe��o
		#epl tipo: aviso_rec.ies_liberacao_insp

		if not sup3760y_after_process_analisa_contagem_inspecao() then
			let p_houve_erro = 1
		end if

		let p_aviso_rec.ies_situa_ar = log_getvar("ies_situa_ar")
		#epl retorna a situa��o que o aviso de recebimento dever� ser incluso
		#epl tipo: aviso_rec.ies_situa_ar
		#epl valores: 'c' - contagem
		#epl          'i' - inspe��o
		#epl          'e' - encerrado

		let p_aviso_rec.ies_liberacao_cont = log_getvar("ies_liberacao_cont")
		#epl retorna se o aviso de recebimento dever� sofrer contagem
		#epl tipo: aviso_rec.ies_liberacao_cont
		#epl valores: 's' - sim
		#epl          'n' - n�o

		let p_aviso_rec.ies_liberacao_insp = log_getvar("ies_liberacao_insp")
		#epl retorna se o aviso de recebimento dever� sofrer inspe��o
		#epl tipo: aviso_rec.ies_liberacao_insp
		#epl valores: 's' - sim
		#epl          'n' - n�o
	end if

end function

#------------------------------------#
function sup376_inicializa_input()
#------------------------------------#
	let p_dados_tela.ser_nf            = sup376_busca_par_sup_pad("ser_nf_376",3)
	let p_dados_tela.ssr_nf            = sup376_busca_par_sup_pad("ssr_nf_376",2)
	let p_dados_tela.ies_especie_nf    = sup376_busca_par_sup_pad("especie_nf_376",3)
	let p_dados_tela.ies_nf_aguard_nfe = sup376_busca_par_sup_pad("tipo_nf_376",3)
	if sqlca.sqlcode <> 0 or p_dados_tela.ies_nf_aguard_nfe is null then
		let p_dados_tela.ies_nf_aguard_nfe = 1
	end if

	let p_dados_tela.cod_operacao      = sup376_busca_par_sup_pad("cod_cfop_376",3)
	let p_dados_tela.cnd_pgto_nf       = sup376_busca_par_sup_pad("cnd_pgto_nf_376",2)
	let p_dados_tela.cod_mod_embar     = sup376_busca_par_sup_pad("cod_mod_embar_376",2)
end function

#------------------------------------------#
function sup376_deleta_inss_auton(p_nr_nf,p_num_seq)
#------------------------------------------#
	define p_nr_nf   like reten_inss.num_ad_nf_orig,
	p_num_seq like aviso_rec.num_seq

	delete from inss_auton
	where inss_auton.cod_empresa    = p_cod_empresa
	and inss_auton.num_ad_nf_orig = p_nr_nf
	and inss_auton.ser_nf         = p_dados_tela.ser_nf
	and inss_auton.ssr_nf         = p_dados_tela.ssr_nf
	and inss_auton.ies_especie_nf = p_dados_tela.ies_especie_nf
	and inss_auton.cod_fornecedor = p_dados_tela.cod_fornecedor

end function

#-----------------------------------------------#
function sup376_alimenta_audit(l_acao,l_tabela,
	l_num_ar, l_seq,
	l_pedido, l_num_oc,
	l_num_prog)
#-----------------------------------------------#
	define l_caminho char(100),
	l_texto   char(080),
	l_acao    char(20),
	l_tabela  char(20),
	l_num_ar  like aviso_rec.num_aviso_rec,
	l_seq     like aviso_rec.num_seq,
	l_pedido  like pedido_sup.num_pedido,
	l_num_oc  like ordem_sup.num_oc,
	l_num_prog like prog_ordem_sup.num_prog_entrega

	let l_caminho = p_user clipped,".sup3760.bg"

	if g_ies_audit = "n"     or
		g_ies_audit is null then
		call log150_procura_caminho("lst") returning l_caminho
		let l_caminho = l_caminho clipped, p_user clipped,".sup3760.bg"
		call startlog(l_caminho)
		let g_ies_audit = "s"
	end if

	let l_texto = "erro ",sqlca.sqlcode using "#####&"," - ",l_acao," ",l_tabela

	call errorlog(l_texto)

	let l_texto = "a.r. nr.: ",l_num_ar using "#####&",
	" - sequencia: ",l_seq using "##&",
	" - ped.: ",l_pedido using "#####&",
	" - o.c.: ",l_num_oc using "#####&",
	" - prog.: ",l_num_prog using "##&"

	call errorlog(l_texto)
	let l_texto = null
	call errorlog(l_texto)
end function

#--------------------------------------------#
function sup376_verifica_relacionamento_nfs()
#--------------------------------------------#
	define l_ies_interf_cre   char(01),
	l_parcretxt        char(500),
	l_dev_mestre       record like dev_mestre.*

	select par_ies
	into l_ies_interf_cre
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "ies_interf_cre"
	if l_ies_interf_cre is null then
		let l_ies_interf_cre = "n"
	end if

	select parametro
	into l_parcretxt
	from par_cre_txt

	if (p_nf_sup.ies_especie_nf = "nfd" or
		p_ies_tip_entrada = "5") and
		l_ies_interf_cre = "s" then

		initialize l_dev_mestre.* to null
		select *
		into l_dev_mestre.*
		from dev_mestre
		where cod_empresa    = p_nf_sup.cod_empresa
		and num_nff        = p_nf_sup.num_aviso_rec
		and num_nff_origem is not null
		and num_nff_origem > 0
		if sqlca.sqlcode = 0 then
			return true
		end if
	end if
return false
end function

#----------------------------------------------#
function sup3760_verifica_devolucao(l_operacao)
#----------------------------------------------#
	define p_cont             smallint,
	p_num_docum        like docum.num_docum,
	p_ies_interf_cre   char(01),
	p_parcretxt        char(500),
	p_docum            record like docum.*,
	p_dev_mestre       record like dev_mestre.*,
	p_num_docum_origem like docum.num_docum_origem,
	p_num_docum_or_aux like docum.num_docum_origem,
	l_cod_cliente      like docum.cod_cliente,
	sql_stmt           char(2000),
	l_contador         smallint,
	l_continua         smallint,
	l_operacao         char(10),
	l_msg              char(200), ### teydvv
	l_status           smallint, ### teoalv
	l_trans_nff        like sup_nf_devol_cli.trans_nota_fiscal_fatura, ### teoalv
	l_num_cgc_cpf      like fornecedor.num_cgc_cpf ### teoalv

	initialize p_ies_interf_cre to null
	select par_ies
	into p_ies_interf_cre
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "ies_interf_cre"
	if p_ies_interf_cre is null then
		let p_ies_interf_cre = "n"
	end if

	initialize p_parcretxt to null
	select parametro
	into p_parcretxt
	from par_cre_txt

	if (p_nf_sup.ies_especie_nf = "nfd" or
		p_ies_tip_entrada = "5") and
		p_ies_interf_cre  = "s" then
		if find4glfunction('supy121_valida_alteracao_dev_clie') then
			if not supy121_valida_alteracao_dev_clie(p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec,
				0,
				l_operacao) then
				return true
			end if
		end if

		initialize l_contador to null
		whenever error continue
		select count(*)
		into l_contador
		from sup_nf_devol_cli
		where empresa           = p_nf_sup.cod_empresa
		and aviso_recebto     = p_nf_sup.num_aviso_rec
		whenever error stop

		if sqlca.sqlcode <> 0 or l_contador is null then
			let l_contador = 0
		end if

		if l_contador = 0 then
			initialize l_trans_nff to null ### teoalv
			initialize p_dev_mestre.* to null
			select *
			into p_dev_mestre.*
			from dev_mestre
			where cod_empresa    = p_nf_sup.cod_empresa
			and num_nff        = p_nf_sup.num_aviso_rec
			and num_nff_origem is not null
			if sqlca.sqlcode <> 0 then
				return false
			end if
			let l_continua = true
		else
			declare cq_num_nf_saida cursor for
			select unique(nota_fiscal_fatura), trans_nota_fiscal_fatura ### teoalv
			from sup_nf_devol_cli
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_nf_sup.num_aviso_rec

			whenever error continue
			open cq_num_nf_saida

			if sqlca.sqlcode <> 0 then
				call log003_err_sql("open","cq_num_nf_saida")
				return true
			end if

			initialize l_trans_nff to null ### teoalv
			fetch cq_num_nf_saida into p_dev_mestre.num_nff_origem, l_trans_nff ### teoalv

			whenever error stop

			if sqlca.sqlcode = 0 then
				let l_continua = true
			else
				return false
			end if
		end if

		while l_continua

			### teoalv - se n�o possui o crer48 no rpo deve efetuar a consulta na docum.
			if not m_existe_crer48 = true then
				let p_retorno_3760 = false
				if p_dev_mestre.num_nff_origem > 0 then
					let p_num_docum_origem = p_dev_mestre.num_nff_origem using "&&&&&&"
					let p_num_docum_or_aux = p_dev_mestre.num_nff_origem

					let sql_stmt = "select docum.* ",
					"from docum ",
					"where docum.cod_empresa         = """,m_cod_empresa_uni,""" ",
					"and docum.ies_tip_docum       = ""dp"" ",
					"and docum.ies_tip_docum_orig  = ""nf"" ",
					"and (docum.num_docum_origem   = """,p_num_docum_origem,""" ",
					"or  docum.num_docum_origem   = """,p_num_docum_or_aux,""") ",
					"union all ",
					"select docum.* ",
					"from docum, docum_anterior, cre_doc_ant_compl ",
					"where docum.cod_empresa                      = """,m_cod_empresa_uni,""" ",
					"and docum.ies_tip_docum_orig               = ""nf"" ",
					"and docum.ies_tip_docum                    = ""dp"" ",
					"and docum.num_docum_origem                 is null ",
					"and docum_anterior.cod_empresa             = docum.cod_empresa ",
					"and docum_anterior.num_docum               = docum.num_docum ",
					"and docum_anterior.ies_tip_docum           = ""dp"" ",
					"and docum_anterior.ies_tip_docum_orig      = ""nf"" ",
					"and docum_anterior.num_docum_orig[1,6]     = """,p_num_docum_or_aux,""" ",
					"and cre_doc_ant_compl.empresa              = """,m_cod_empresa_uni,""" ",
					"and cre_doc_ant_compl.num_docum            = docum_anterior.num_docum ",
					"and cre_doc_ant_compl.tip_docum            = docum_anterior.ies_tip_docum ",
					"and cre_doc_ant_compl.sequencia_docum      = docum_anterior.num_seq_docum ",
					"and cre_doc_ant_compl.parametro            = ""empresa_consol"" ",
					"and cre_doc_ant_compl.texto_parametro[1,2] = """,p_cod_empresa,""" "

					prepare st_docum from sql_stmt
					declare cq_docum cursor for st_docum

					foreach cq_docum into p_docum.*

					if p_docum.ies_pgto_docum <> "a" then
						let p_cont = 0
						let p_num_docum_origem = p_nf_sup.num_nf using "&&&&&&"
						#os 371663 - thiago
						select count(*)
						into p_cont
						from docum_pgto a, docum_abat b
						where a.cod_empresa    = p_docum.cod_empresa
						and a.num_docum      = p_docum.num_docum
						and a.ies_tip_docum  = "dp"
						and a.ies_forma_pgto = "dv"
						and a.num_lote_pgto  = 5100
						and b.cod_empresa    = p_docum.cod_empresa
						and b.num_docum      = p_docum.num_docum
						and b.ies_tip_docum  = "dp"
						and b.num_seq_docum  = a.num_seq_docum
						and b.num_nota_cred  = p_num_docum_origem

						if p_cont > 0 then
							call log0030_mensagem("esta devolucao gerou abatimento em uma duplicata. contatar setor de cobranca.","exclamation")
							let p_retorno_3760 = true
							exit foreach
						end if
					else
						if p_parcretxt[309] = "s" then
							select num_docum
							from docum_posterior
							where cod_empresa        = p_docum.cod_empresa
							and ies_tip_docum      = "nc"
							and num_docum_post     = p_docum.num_docum
							and ies_tip_docum_post = p_docum.ies_tip_docum
							and num_seq_docum      = 1
							if sqlca.sqlcode = 0 then
								error "esta devolucao possui nota de credito c/ vinculacao.contatar setor de cobranca"
								let p_retorno_3760 = true
								exit foreach
							end if
						end if
					end if
				end foreach

				if p_retorno_3760 = true then
					if l_contador > 0 then
						whenever error continue
						close cq_num_nf_saida
						free cq_num_nf_saida
						whenever error stop
					end if
					return true
				end if
			end if
		else
### teoalv chama fun��o crer48_valida_abatimento para verificar se existe abatimento de duplicata
			if p_dev_mestre.num_nff_origem > 0 then
				initialize l_num_cgc_cpf to null
				whenever error continue
				select fornecedor.num_cgc_cpf
				into l_num_cgc_cpf
				from fornecedor
				where fornecedor.cod_fornecedor = p_nf_sup.cod_fornecedor
				whenever error continue
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("leitura","fornecedor (valida nc cre")
					return true
				end if
				call crer48_set_empresa(m_cod_empresa_uni)
				call crer48_set_cnpj(l_num_cgc_cpf)
				call crer48_set_nf_devol(p_nf_sup.num_nf)
				call crer48_set_emp_nf_venda(p_cod_empresa)
				call crer48_set_nf_venda(p_dev_mestre.num_nff_origem)
				call crer48_set_trans_nf_venda(l_trans_nff)
				call crer48_set_tipo_processo('validacao')
				if not crer48_valida_abatimento() then  #### teoalv
					return true
				end if
			end if
		end if

		if l_contador = 0 then
			let l_continua = false
		else
			initialize l_trans_nff to null ### teoalv
			whenever error continue
			fetch cq_num_nf_saida into p_dev_mestre.num_nff_origem, l_trans_nff ### teoalv
			whenever error stop

			if sqlca.sqlcode <> 0 then
				let l_continua = false
			end if
		end if
	end while

	whenever error continue
	close cq_num_nf_saida
	free cq_num_nf_saida
	whenever error stop

	### teoalv - se n�o possui o crer48 no rpo deve efetuar a consulta na docum.
	if m_existe_crer48 = true then
		### teoalv chama fun��o crer48_valida_e_cancela_nc passando como 'validacao'
		initialize l_num_cgc_cpf to null
		whenever error continue
		select fornecedor.num_cgc_cpf
		into l_num_cgc_cpf
		from fornecedor
		where fornecedor.cod_fornecedor = p_nf_sup.cod_fornecedor
		whenever error continue
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("leitura","fornecedor (valida nc cre")
			return true
		end if
		call crer48_set_empresa(m_cod_empresa_uni)
		call crer48_set_cnpj(l_num_cgc_cpf)
		call crer48_set_nf_devol(p_nf_sup.num_nf)
		call crer48_set_emp_nf_venda(p_cod_empresa)
		call crer48_set_tipo_processo('validacao')
		if not crer48_valida_e_cancela_nc() then  ### teoalv
			return true
		end if
		let p_ies_canc_nc = true
	else
		let p_num_docum_origem    = p_nf_sup.num_nf

		initialize l_cod_cliente to null
		declare cq_cliente cursor for
		select clientes.cod_cliente
		from clientes, fornecedor
		where fornecedor.cod_fornecedor = p_nf_sup.cod_fornecedor
		and clientes.num_cgc_cpf = fornecedor.num_cgc_cpf
		and clientes.ies_situacao  in ("s","a")
		foreach cq_cliente into l_cod_cliente
		exit foreach
	end foreach

	let sql_stmt = "select docum.* ",
	"from docum ",
	"where docum.cod_empresa         = """,m_cod_empresa_uni,""" ",
	"and docum.cod_cliente         = """,l_cod_cliente,""" ",
	"and docum.ies_tip_docum       = ""nc"" ",
	"and docum.ies_tip_docum_orig  = ""nf"" ",
	"and docum.num_docum_origem    = """,p_num_docum_origem,""" ",
	"union all ",
	"select docum.* ",
	"from docum, docum_anterior, cre_doc_ant_compl ",
	"where docum.cod_empresa                      = """,m_cod_empresa_uni,""" ",
	"and docum.cod_cliente                      = """,l_cod_cliente,""" ",
	"and docum.ies_tip_docum_orig               = ""nf"" ",
	"and docum.ies_tip_docum                    = ""nc"" ",
	"and docum.num_docum_origem                 is null ",
	"and docum_anterior.cod_empresa             = docum.cod_empresa ",
	"and docum_anterior.num_docum               = docum.num_docum ",
	"and docum_anterior.ies_tip_docum           = ""nc"" ",
	"and docum_anterior.ies_tip_docum_orig      = ""nf"" ",
	"and docum_anterior.num_docum_orig[1,6]     = """,p_num_docum_origem,""" ",
	"and cre_doc_ant_compl.empresa              = """,m_cod_empresa_uni,""" ",
	"and cre_doc_ant_compl.num_docum            = docum_anterior.num_docum ",
	"and cre_doc_ant_compl.tip_docum            = docum_anterior.ies_tip_docum ",
	"and cre_doc_ant_compl.sequencia_docum      = docum_anterior.num_seq_docum ",
	"and cre_doc_ant_compl.parametro            = ""empresa_consol"" ",
	"and cre_doc_ant_compl.texto_parametro[1,2] = """,p_cod_empresa,""" "

	prepare st_nc_vinc from sql_stmt
	declare cq_nc_vinc cursor for st_nc_vinc
	foreach cq_nc_vinc into p_docum.*
	if p_docum.ies_pgto_docum = "a" then
		if p_parcretxt[309] = "s"
			then select * from docum_posterior
			where cod_empresa    = p_docum.cod_empresa
			and num_docum      = p_docum.num_docum
			and ies_tip_docum  = p_docum.ies_tip_docum
			and num_seq_docum  = 1
			if sqlca.sqlcode = 0 then
				error "esta devolucao possui nota de credito c/ vinculacao.contatar setor de cobranca"
				return true
			end if
		end if
	else
		error "nc ja utilizada em outra duplicada.contatar setor de cobranca"
		return true
	end if

###       teydvv - verificar se a nota de cr�dito j� foi contabilizada, neste caso deve solicitar primeiro
###                que seja efetuada a exclus�o na contabilidade para depois cancelar ou excluir a nota,
###                se a nota estiver sendo modificada n�o deve apresentar a mensagem abaixo.
	if p_docum.ies_situa_docum <> 'c' and l_operacao <> "modif" then
		if crem160_cre_lanc_ctbl_doc_existe(p_docum.cod_empresa,
			p_docum.num_docum,
			p_docum.ies_tip_docum,
			0,
			'01',
			true,1) then
			let l_msg = 'nota de cr�dito ', p_docum.num_docum, ' possui lan�amento cont�bil, efetue o cancelamento pelo contas a receber.'
			call log0030_mensagem(l_msg,"info")
			return true
		end if
	end if
end foreach
let p_ies_canc_nc = true
end if
end if

return false

end function

#---------------------------------------#
function sup376_cancela_nota_credito()
#---------------------------------------#
	define  p_docum_obs            record like docum_obs.*,
	p_docum                record like docum.*,
	p_num_doc_origem       char(10),
	p_num_doc_origem_aux   char(10),
	sql_stmt              char(2000),
	l_cod_cliente          like clientes.cod_cliente,
	l_num_cgc_cpf          like fornecedor.num_cgc_cpf ### teoalv

	let  p_num_doc_origem     =  p_dados_tela.num_nf  using "&&&&&&"
	let  p_num_doc_origem_aux =  p_dados_tela.num_nf

### teoalv - verificar se possui o crer48 no rpo para que utilize o mesmo no cancelamento da nota
	if m_existe_crer48 = true then
		initialize l_num_cgc_cpf to null
		whenever error continue
		select num_cgc_cpf
		into l_num_cgc_cpf
		from fornecedor
		where fornecedor.cod_fornecedor = p_nf_sup.cod_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("leitura","fornecedor (cancelamento nc cre")
			return
		end if
		call crer48_set_empresa(m_cod_empresa_uni)
		call crer48_set_cnpj(l_num_cgc_cpf)
		call crer48_set_nf_devol(p_nf_sup.num_nf)
		call crer48_set_emp_nf_venda(p_cod_empresa)
		call crer48_set_tipo_processo('alteracao')
		if not crer48_valida_e_cancela_nc() then
			let p_houve_erro = true ### trybs0 - crer48 alterado para tratar transa��o evitando que apresente mensagem de erro descrito no chamado trybs0
			return
		end if
	else
		initialize l_cod_cliente to null
		whenever error continue
		declare cq_cliente2 cursor for
		select clientes.cod_cliente
		from clientes, fornecedor
		where fornecedor.cod_fornecedor = p_nf_sup.cod_fornecedor
		and clientes.num_cgc_cpf = fornecedor.num_cgc_cpf
		and clientes.ies_situacao  in ("s","a")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare","cq_cliente")
		end if
		whenever error continue
		foreach cq_cliente2 into l_cod_cliente
		whenever error stop
		if sqlca.sqlcode <> 0 then
			exit foreach
		end if
		exit foreach
	end foreach


	let sql_stmt = "select docum.* ",
	"from docum ",
	"where docum.cod_empresa = """,m_cod_empresa_uni,""" ",
	"and docum.cod_cliente = """,l_cod_cliente,""" ",
	"and docum.ies_tip_docum = ""nc"" ",
	"and docum.ies_tip_docum_orig = ""nf"" ",
	"and docum.ies_pgto_docum = 'a' ", #espindola - nao deve cancelar documentos cujo pagamento ja foi feito
	"and docum.ies_situa_docum <> 'c' ", ### teydvv
	"and (docum.num_docum_origem = """,p_num_doc_origem,""" ",
	"or  docum.num_docum_origem = """,p_num_doc_origem_aux,""") ",
	"union all ",
	"select docum.* ",
	"from docum, docum_anterior, cre_doc_ant_compl ",
	"where docum.cod_empresa = """,m_cod_empresa_uni,""" ",
	"and docum.ies_tip_docum_orig = ""nf"" ",
	"and docum.ies_tip_docum = ""nc"" ",
	"and docum.ies_pgto_docum = 'a' ", #espindola - nao deve cancelar documentos cujo pagamento ja foi feito
	"and docum.ies_situa_docum <> 'c' ", ### teydvv
	"and docum.num_docum_origem is null ",
	"and docum_anterior.cod_empresa = docum.cod_empresa ",
	"and docum_anterior.num_docum = docum.num_docum ",
	"and docum_anterior.ies_tip_docum = ""nc"" ",
	"and docum_anterior.ies_tip_docum_orig = ""nf"" ",
	"and docum_anterior.num_docum_orig[1,6] = """,p_num_doc_origem_aux,""" ",
	"and cre_doc_ant_compl.empresa = """,m_cod_empresa_uni,""" ",
	"and cre_doc_ant_compl.num_docum = docum_anterior.num_docum ",
	"and cre_doc_ant_compl.tip_docum = docum_anterior.ies_tip_docum ",
	"and cre_doc_ant_compl.sequencia_docum = docum_anterior.num_seq_docum ",
	"and cre_doc_ant_compl.parametro = ""empresa_consol"" ",
	"and cre_doc_ant_compl.texto_parametro[1,2] = """,p_cod_empresa,""" "

	prepare st_canc_nc from sql_stmt
	declare cq_canc_nc cursor for st_canc_nc

	foreach cq_canc_nc into p_docum.*
	update docum set ies_situa_docum = "c",
	dat_alter_situa = today
	where cod_empresa        = p_docum.cod_empresa
	and num_docum          = p_docum.num_docum
	and ies_tip_docum      = p_docum.ies_tip_docum
	if sqlca.sqlcode = 0 then
		let p_docum_obs.num_seq_docum = 0
		whenever error continue
		select max(num_seq_docum)
		into p_docum_obs.num_seq_docum
		from docum_obs
		where docum_obs.cod_empresa    = p_docum.cod_empresa
		and docum_obs.num_docum      = p_docum.num_docum
		and docum_obs.ies_tip_docum  = p_docum.ies_tip_docum
		whenever error stop
		if p_docum_obs.num_seq_docum is null or
			p_docum_obs.num_seq_docum = 0 then
			let p_docum_obs.num_seq_docum  = 1
		else
			let p_docum_obs.num_seq_docum = p_docum_obs.num_seq_docum + 1
		end if

		let p_docum_obs.cod_empresa    = p_docum.cod_empresa
		let p_docum_obs.num_docum      = p_docum.num_docum
		let p_docum_obs.ies_tip_docum  = p_docum.ies_tip_docum

		let p_docum_obs.dat_obs        = today
		let p_docum_obs.dat_atualiz    = today
		let p_docum_obs.tex_obs_1      = "cancelamento de nc, devido a exclusao da nf de devolucao que a gerou"
		let p_docum_obs.tex_obs_2      = "ocorrido em ", today using "dd/mm/yyyy"," as ",time," hrs. "
		let p_docum_obs.tex_obs_3 = "pelo login ",p_user
		whenever error continue
		insert into docum_obs values(p_docum_obs.*)
		whenever error stop
	end if
end foreach
free cq_canc_nc
end if

end function

#-----------------------------#
function sup376_libera_wis()
#-----------------------------#
	define l_ies_nf_com_erro     like nf_sup.ies_nf_com_erro,
	l_nom_resp_aceite_er  like nf_sup.nom_resp_aceite_er,
	l_sucesso             smallint,
	l_item_wms            smallint,
	l_gravou_wis          smallint

	initialize l_item_wms, l_sucesso to null

	let l_gravou_wis = false

	declare cq_liber_wis cursor for
	select *
	from aviso_rec
	where aviso_rec.cod_empresa    = p_cod_empresa
	and aviso_rec.num_aviso_rec  = p_dados_tela.num_aviso_rec
	foreach cq_liber_wis into p_aviso_rec.*
	if p_aviso_rec.cod_item is not null and
		p_aviso_rec.cod_item <> " " then
		call vdp3188_item_sob_controle_wis(p_cod_empresa,p_aviso_rec.cod_item)
		returning l_sucesso,l_item_wms
		if l_item_wms then
			select ies_nf_com_erro, nom_resp_aceite_er
			into l_ies_nf_com_erro, l_nom_resp_aceite_er
			from nf_sup
			where cod_empresa     = p_dados_tela.cod_empresa
			and num_aviso_rec   = p_dados_tela.num_aviso_rec
			if l_ies_nf_com_erro = "s" then
				if l_nom_resp_aceite_er is not null or
					l_nom_resp_aceite_er <> "" then
					#if sup376_grava_wis() then
					#   let l_gravou_wis = true
					#end if
				else
					call log0030_mensagem(" funcao nao permitida para nota com erros","exclamation")
				end if
			else
				#             if sup376_grava_wis() then
				#                let l_gravou_wis = true
				#             end if
			end if
		else
			call log0030_mensagem("item deve estar cadastrado como item wis ","exclamation")
		end if
	end if
end foreach

# if l_gravou_wis = true then
#    call sup376_grava_wis_mestre()
# end if

end function
{
#---------------------------#
function sup376_grava_wis()
#---------------------------#
	define l_wis_nf_item record like wis_nf_item.*,
	l_sucesso     smallint,
	l_item_wms    smallint,
	l_ies_insp    char(01),
	l_tipo        char(01)

	whenever error continue
	select ies_tem_inspecao
	into l_ies_insp
	from item_fornec
	where cod_empresa = p_cod_empresa
	and cod_item = p_aviso_rec.cod_item
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop

	if l_ies_insp = "n" or l_ies_insp = "2" or l_ies_insp = "4" then
		let l_wis_nf_item.ies_tem_inspecao = "n"
	else
		let l_wis_nf_item.ies_tem_inspecao = "s"
	end if
	let l_wis_nf_item.num_nff = p_dados_tela.num_nf
	let l_wis_nf_item.cod_fornecedor = p_dados_tela.cod_fornecedor
	let l_wis_nf_item.num_agenda = 0
	let l_wis_nf_item.cod_item = p_aviso_rec.cod_item
	let l_wis_nf_item.cod_faixa = 0
	let l_wis_nf_item.qtd_item = p_aviso_rec.qtd_declarad_nf
	let l_wis_nf_item.dat_fabricacao = null
	let l_wis_nf_item.num_aviso_rec = p_aviso_rec.num_aviso_rec
	let l_wis_nf_item.num_seq = p_aviso_rec.num_seq
	let l_wis_nf_item.cod_erro = null
	let l_wis_nf_item.dat_processamento = null

	insert into wis_nf_item values (l_wis_nf_item.*)
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","wis_nf_item")
		return false
	end if
return true
end function
}
#-------------------------------------#
function sup376_verifica_dados_wis()
#-------------------------------------#

	define l_item_wms   like aviso_rec.cod_item

	initialize p_array to null

	whenever error continue

	select *
	from wis_nf_mestre
	where cod_empresa    = p_dados_tela.cod_empresa
	and num_nff        = p_dados_tela.num_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode = 0 then
		call log0030_mensagem(" dados j� processados para interface wis ","exclamation")
		return true
	end if
	if sqlca.sqlcode = 100 then
		return false
	end if
return false

end function

#---------------------------------------------#
function sup376_verifica_item_wis(l_cod_item)
#---------------------------------------------#

	define l_cod_item like aviso_rec.cod_item

	whenever error continue
	select *
	from wis_nf_item
	where cod_fornecedor = p_dados_tela.cod_fornecedor
	and num_nff        = p_dados_tela.num_nf
	and cod_item       = l_cod_item
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true
	else
		return false
	end if

end function

#------ chamada feita pelo sup3762 -----------#
function sup376_verifica_item_wms(l_cod_item)
#---------------------------------------------#
	define l_cod_item     like aviso_rec.cod_item,
	l_sucesso_sql  smallint,
	l_ies_item_wms smallint

	if g_ies_wms_instalado = "s" and sup376_verifica_interf_ent_wms() then

		call wms0004_item_sob_controle_wms(p_cod_empresa, l_cod_item)
		returning l_sucesso_sql, l_ies_item_wms

		if l_sucesso_sql and l_ies_item_wms then
			return true
		end if

	end if

return false

end function

{
#----------------------------------#
function sup376_grava_wis_mestre()
#----------------------------------#
	define l_wis_nf_mestre  record like wis_nf_mestre.*,
	l_cod_tipo       char(01),
	l_contador       smallint

	let l_wis_nf_mestre.cod_fornecedor = p_dados_tela.cod_fornecedor
	let l_wis_nf_mestre.num_nff = p_dados_tela.num_nf
	let l_wis_nf_mestre.num_agenda = 0
	let l_wis_nf_mestre.ser_nff = p_dados_tela.ser_nf
	let l_wis_nf_mestre.dat_emissao = p_dados_tela.dat_emis_nf
	let l_wis_nf_mestre.cod_empresa = p_cod_empresa

	whenever error continue
	select count(*)
	into l_contador
	from wis_nf_item
	where num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop

	if l_contador <> 0 then
		let l_wis_nf_mestre.cod_sit = 15
		let l_wis_nf_mestre.importe_nff = null
		let l_wis_nf_mestre.id_autorizacao = null
		let l_wis_nf_mestre.cod_func_autoriz = null
		let l_wis_nf_mestre.cod_erro = null
		let l_wis_nf_mestre.dat_processamento = null

		insert into wis_nf_mestre values (l_wis_nf_mestre.*)
		if sqlca.sqlcode = 0 then
			call log0030_mensagem(" dados wis enviados com sucesso !","info")
		end if
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","wis_nf_mestre")
		end if

	end if

end function
}

#-------------------------------------------#
function sup3760_cria_temp_exclusao_ar()
#-------------------------------------------#

	whenever error continue
	create table t_ar_para_exclusao
	(cod_empresa              char(02),
	num_aviso_rec            decimal(6,0),
	num_seq                  decimal(3,0)
	);
		whenever error stop
	if log0030_err_sql_tabela_duplicada() then
		whenever error continue
		delete from t_ar_para_exclusao
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_nf_sup.num_aviso_rec
		whenever error stop

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("delete","t_ar_para_exclusao")
		end if
	else
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("create","t_ar_para_exclusao")
		end if
	end if

end function

#--------------------------------#
function sup376_exclusao_nota()
#--------------------------------#
	define p_achou_seq           smallint,
	p_nr_nf               char(7),
	l_cont                smallint,
	l_num_nf              like reten_irrf_pg.num_nf,
	l_num_ar_imp          like aviso_rec_proc_imp.num_aviso_rec,
	l_num_ar_proc         like processo_imp.num_aviso_rec,
	l_ies_situa_import    like nf_sup.ies_situa_import,
	l_ies_efetivou        smallint,
	lr_nf_sup_erro        record like nf_sup_erro.*,
	l_num_oc_oln          like ordem_sup.num_oc,
	l_pre_unit_oc_oln     like ordem_sup.pre_unit_oc,
	l_dat_emis_oln        like ordem_sup.dat_entrega_prev,
	l_qtd_recebida        like ordem_sup.qtd_solic,
	l_qtd_fat_item_fci    like sup_item_fci.qtd_fat_item_fci, ###tfgj52
	l_fat_conver_unid     like ordem_sup.fat_conver_unid,
	l_qtd_item            like ordem_sup.qtd_solic,
	l_val_liquido_item    like aviso_rec.val_liquido_item,
	p_cont                integer,
	p_cont1               integer,
	l_num_seq             like aviso_rec.num_seq,
	l_passou              smallint,
	l_ies_tip_entrada     like cod_fiscal_sup.ies_tip_entrada

	define p_item_dev_terc       record like item_dev_terc.*,
	l_item_ret_terc       record like item_ret_terc.*,
	l_conta               like plano_contas.num_conta,
	l_prog_contagem       like par_sup_pad.par_txt,
	l_ies_volume          like item_ctr_grade.ies_volume,
	lr_ar_x_nf_pend       record like ar_x_nf_pend.*,
	l_nf_remessa          like sup_retn_item_terc.nf_remessa,
	l_seq_nf_remessa      like sup_retn_item_terc.seq_nf_remessa,
	l_seq_tabulacao       like sup_retn_item_terc.seq_tabulacao,
	l_qtd_devolvida       like sup_retn_item_terc.qtd_devolvida,
	l_cod_fornecedor      like nf_sup.cod_fornecedor,
	sql_stmt              char(1000),
	l_parametro           like sup_par_ar.parametro,
	l_nf_deposit          char(1),
	l_dat_entrada_nf      date,
	l_status              smallint,
	l_cliente_55          smallint,
	l_sup_ar_imp_cana     smallint, #809554
	l_count               smallint,
	l_possui_avf          smallint,
	l_count_antes         smallint,
	l_count_depois        smallint,
	l_utilz_novo_proc_ent smallint,
	l_msg                 char(100),
	l_permite             smallint,
	l_ar_fornecedor       like sup_ar_it_forn_dep.ar_fornecedor,
	l_seq_fornecedor      like sup_ar_it_forn_dep.seq_fornecedor,
	l_total               like sup_ar_it_forn_dep.qtd_regularizada

	define lr_transf_pat        record
	empresa_destino     like fat_transf_pat.empresa_destino,
	inventario_destino  like fat_transf_pat.inventario_destino,
	aviso_recebto       like fat_transf_pat.aviso_recebto,
	seq_aviso_recebto   like fat_transf_pat.seq_aviso_recebto,
	dat_entrada         like fat_transf_pat.dat_entrada,
	trans_nota_fiscal   like fat_nf_transf_pat.trans_nota_fiscal,
	num_parcela         like patrparc.num_parcela,
	inventario_origem   like fat_transf_pat.inventario_origem,
	num_parcela_orig    like fat_transf_pat.parc_inv_origem,
	seq_item_nf         like fat_transf_pat.seq_item_nf
end record

call log_setvar("nom_usuario",p_user)

let l_ies_efetivou = false

select *
into p_nf_sup.*
from nf_sup
where nf_sup.cod_empresa   = p_cod_empresa
and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec

call log2250_busca_parametro(p_cod_empresa,"efet_valid_prim_nf_deposit")
returning l_nf_deposit, l_status

if not l_status then
	let l_nf_deposit = 'n'
end if

if sup3762_verifica_item_dev_terc(m_contr_terc_no_dep) then
	#chamada da mensagem retirada pois a funcao do sup3762 ja apresenta mensagem (os522401)
	#call log0030_mensagem("nota tipo a/b relacionada com nota tipo a/b(sup2300), excluir relacionamento","exclamation")
return
end if

if sup376_verifica_classificacao_sucata() = true then
	call log0030_mensagem(" existe classificacao de sucata/materia-prima para este ar. ","exclamation")
return
end if

if find4glfunction('obf50210_verifica_relac_manifesto') then
	if obf50210_verifica_relac_manifesto(p_cod_empresa, p_dados_tela.num_aviso_rec, p_dados_tela.ies_nf_aguard_nfe, "e") then
		return
	end if
end if

let m_nfr_import = false
if sup3760_nfr_consignatario("exclusao") then
	let m_nfr_import = true
end if

if p_dados_tela.cod_operacao[1] = "7" or m_nfr_import then
	if sup3760_possui_rateio_compl() then
		error " nota fiscal possui rateio de despesa complementar de importacao (sup5010) "
		return
	end if

	let m_num_processo = sup3760_busca_numero_processo_importacao()
	if m_num_processo is null then
		let m_num_processo = m_inicio_provisao
	end if

	if (m_ies_utiliz_provisao = "n" or
		(m_ies_utiliz_provisao = "s" and
		m_num_processo < m_inicio_provisao) or
		(m_ies_utiliz_provisao = "s" and m_utiliz_nfm_import = "s" and
		m_num_processo >= m_inicio_provisao)) then
		let l_num_ar_proc = sup3760_leitura_processo_imp(m_num_processo,"ar")
		if l_num_ar_proc is not null then
			initialize l_ies_situa_import to null
			select ies_situa_import
			into l_ies_situa_import
			from nf_sup
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = l_num_ar_proc
			whenever error stop
			if l_ies_situa_import is not null and
				l_ies_situa_import = "e" then
				if not sup3760_verifica_nfp_incl_apos_encerr(p_cod_empresa,
					p_dados_tela.num_aviso_rec) then
					error " processo de importacao ja encerrado "
					return
				end if
			end if
		end if
	end if
end if

declare cq_num_seqs cursor for
select num_seq, num_pedido, num_oc
from aviso_rec
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
and num_pedido    > 0
order by num_oc

let m_count_seq = 1
initialize ma_inf_ar to null
if m_count_seq >= arraylength(ma_inf_ar) then
	call arrayadditem(ma_inf_ar,1)
end if
foreach cq_num_seqs into ma_inf_ar[m_count_seq].num_seq,
ma_inf_ar[m_count_seq].num_pedido,
ma_inf_ar[m_count_seq].num_oc
let m_count_seq = m_count_seq + 1
if m_count_seq >= arraylength(ma_inf_ar) then
	call arrayadditem(ma_inf_ar,1)
end if
end foreach
let m_count_seq = m_count_seq - 1

if p_dados_tela.ies_nf_aguard_nfe = "4" then
	if sup376_nota_faturamento() then
		error " excluir nota de faturamento de consignacao "
		return
	end if
end if

if p_dados_tela.ies_especie_nf = "nfm" then
	whenever error continue
	let l_cont = 0
	select count(*)
	into l_cont
	from ar_x_nf_pend
	where cod_empresa    = p_cod_empresa
	and num_nf         = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop
	if l_cont > 0 then
		error " existe nfp relacionada com esta nfm "
		return
	end if
end if

let l_msg = sup3760_verifica_controle_insp()

if log0040_confirm(21,04, l_msg) then
	let p_houve_erro = false
	if sup3762_verifica_impostos_ja_pagos() then
		let p_houve_erro = true
		return
	end if

	whenever error continue
	call log085_transacao("begin")
	whenever error stop

	let p_houve_erro = false
	if log_existe_epl('sup3760y_before_process_exclusao_nota') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: ordem_sup.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		if not sup3760y_before_process_exclusao_nota() then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
	end if

	# inicio os 532222
	if find4glfunction('supy75_verifica_cliente_859') then
		if supy75_verifica_cliente_859() then
			if find4glfunction('supy75_atualiza_wbt_nota_fiscal') then
				call supy75_atualiza_wbt_nota_fiscal(4,2,"",p_cod_empresa,p_dados_tela.num_aviso_rec)
			end if
		end if
	end if
	# fim os 532222

	if m_cred_st_fat = "s"
		or m_cred_st_fat = "e" then
		if not sup1466_valida_saldo_com_revd_st(p_cod_empresa,p_dados_tela.num_aviso_rec,0,"exclusao") then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
	end if

	if m_ies_relac_nf_benef = "s" then
		if not sup1277_exclusao_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) then
			let p_houve_erro = true
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			return
		end if
	end if

	if find4glfunction('supr_imposto_substituto_transf_saldo') then
		whenever error continue
		declare cq_cnota cursor with hold for
		select num_seq
		from aviso_rec
		where cod_empresa    = p_cod_empresa
		and num_aviso_rec  = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare","aviso_rec")
			return
		end if

		call supr_imposto_substituto_set_exclui_dev(true)
		whenever error continue
		foreach cq_cnota into l_num_seq
		if supr_imposto_substituto_transf_saldo(p_cod_empresa, p_dados_tela.num_aviso_rec, l_num_seq, false) = false then
			call log0030_mensagem("n�o existe nota para transfer�ncia do imposto substituto.","exclamation")
			let p_houve_erro = true
			exit foreach
		end if
	end foreach
	whenever error stop
	call supr_imposto_substituto_set_exclui_dev(false)

	if p_houve_erro = true then
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
end if

#efetiva transacao para n�o bloquear a inspe��o no sup0570
whenever error continue
call log085_transacao("commit")
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("efetivacao", "nf_sup")
	call log085_transacao("rollback")
return
end if

if p_dados_tela.ies_nf_aguard_nfe <> "4" or
	( p_dados_tela.ies_nf_aguard_nfe = "4" and
	sup376_nota_faturamento() = false ) then

	let l_passou = false
	if m_exclusao_sup376_perf = "s" and p_ies_custo_grade = "n" then
		### inicio alteracao performance
		let l_count = 0
		let p_aviso_rec.num_aviso_rec = p_nf_sup.num_aviso_rec
		whenever error continue
		select count(*)
		into l_count
		from sup_frete_x_nf_entrada
		where sup_frete_x_nf_entrada.empresa       = p_cod_empresa
		and sup_frete_x_nf_entrada.aviso_recebto = p_nf_sup.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("select","sup_frete_x_nf_entrada")
		end if

		if p_nf_sup.num_conhec > 0
			or l_count > 0 then
			call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
			#whenever error continue
			#call log085_transacao("rollback")
			#whenever error stop
			return
		else
			if sup3760_valida_frete_cif_nf() = true then
				call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
				#whenever error continue
				#call log085_transacao("rollback")
				#whenever error stop
				return
			end if
		end if

		### os237529 ###
		initialize l_prog_contagem to null
		select par_txt
		into l_prog_contagem
		from par_sup_pad
		where par_sup_pad.cod_empresa   = p_cod_empresa
		and par_sup_pad.cod_parametro = "prog_contagem"
		if sqlca.sqlcode <> 0 or
			l_prog_contagem is null then
			let l_prog_contagem = " "
		end if

		if l_prog_contagem = "sup0799" then
			#whenever error continue
			#call log085_transacao("rollback")
			#whenever error stop
			call log0030_mensagem(" exclua primeiramente resultado de contagem - sup0799 ","exclamation")
			return
		end if

		let l_possui_avf = false
		whenever error continue
		select 1
		from avf_insp_ar
		where avf_insp_ar.empresa           = p_cod_empresa
		and avf_insp_ar.aviso_recebto     = p_nf_sup.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
			let l_possui_avf = true
		end if

		if l_possui_avf = false and p_ies_custo_grade = "n" then
			## os 407088

			let l_passou = true
			call sup3760_cria_temp_exclusao_ar()

			whenever error continue
			insert into t_ar_para_exclusao #-- os tdtzq5
			select aviso_rec.cod_empresa,
			aviso_rec.num_aviso_rec,
			aviso_rec.num_seq
			from aviso_rec
			where aviso_rec.cod_empresa   = p_cod_empresa
			and aviso_rec.num_aviso_rec = p_nf_sup.num_aviso_rec
			and aviso_rec.ies_liberacao_insp = 's'
			and aviso_rec.ies_situa_ar       = 'e'
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","aviso_rec e t_ar_para_exclusao")
			end if

			#let l_count_depois

			let l_count_antes = 0
			whenever error continue
			select 1
			from t_ar_para_exclusao
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_nf_sup.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
				error " aguarde ... excluindo inspecao ... "
				call log_setvar("nom_usuario",p_user)

				let comando3 = p_cod_empresa, " ",
				p_nf_sup.num_aviso_rec,  " ",
				0, " ", #sequencia
				"exclusao"," ",
				"sup3760"
				call log1200_executa_programa("sup0570",comando3)
			end if

			whenever error continue
			select aviso_rec.num_aviso_rec,
			aviso_rec.num_seq
			from aviso_rec
			where aviso_rec.cod_empresa   = p_cod_empresa
			and aviso_rec.num_aviso_rec = p_nf_sup.num_aviso_rec
			and aviso_rec.ies_situa_ar <> 'i'
			whenever error stop
			if sqlca.sqlcode = 0
				or sqlca.sqlcode = -284 then
				#whenever error continue
				#call log085_transacao("rollback")
				#whenever error stop
				call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
				return
			end if

			error " exclusao de inspecao realizada com sucesso. "

			whenever error continue
			delete from t_ar_para_exclusao
			where t_ar_para_exclusao.cod_empresa   = p_cod_empresa
			and t_ar_para_exclusao.num_aviso_rec = p_nf_sup.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("exclusao","t_ar_para_exclusao")
			end if

			whenever error continue
			insert into t_ar_para_exclusao #-- os tdtzq5
			select aviso_rec.cod_empresa,
			aviso_rec.num_aviso_rec,
			aviso_rec.num_seq
			from aviso_rec
			where aviso_rec.cod_empresa   = p_cod_empresa
			and aviso_rec.num_aviso_rec = p_nf_sup.num_aviso_rec
			and aviso_rec.ies_liberacao_cont = 's'
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("inclusao","aviso_rec e t_ar_para_exclusao")
			end if

			error " aguarde ... excluindo contagem ... "

			call sup3760_atualiza_nota(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
			p_dados_tela.num_aviso_rec, p_dados_tela.cnd_pgto_nf)

			let l_count_antes = 0
			whenever error continue
			select 1
			from t_ar_para_exclusao
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_nf_sup.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
				let comando3 = p_cod_empresa,
				" ", p_aviso_rec.num_aviso_rec,
				" ", 0, # p_aviso_rec.num_seq,
				" ", 3760,
				" ", "s",
				" ", "exclusao",
				" ", 0,
				" ", "s",
				" ", "s"
				call log1200_executa_programa("sup0530",comando3)
			end if

			whenever error continue
			delete from t_ar_para_exclusao
			where t_ar_para_exclusao.cod_empresa   = p_cod_empresa
			and t_ar_para_exclusao.num_aviso_rec = p_nf_sup.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("exclusao","t_ar_para_exclusao")
			end if

			whenever error continue
			select aviso_rec.num_aviso_rec,
			aviso_rec.num_seq
			from aviso_rec
			where aviso_rec.cod_empresa   = p_cod_empresa
			and aviso_rec.num_aviso_rec = p_nf_sup.num_aviso_rec
			and aviso_rec.ies_situa_ar <> 'c'
			whenever error stop
			if sqlca.sqlcode = 0 then
				#whenever error continue
				#call log085_transacao("rollback")
				#whenever error stop
				call log0030_mensagem(" problemas na exclusao da contagem. ","exclamation")
				return
			end if
			error " exclusao de contagem realizada com sucesso. "

			if p_dados_tela.ies_nf_aguard_nfe = "4" then
				whenever error continue
				declare cq_excnota cursor with hold for
				select *
				from aviso_rec
				where cod_empresa    = p_cod_empresa
				and num_aviso_rec  = p_nf_sup.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("declare","aviso_rec")
					return
				end if

				whenever error continue
				foreach cq_excnota into p_aviso_rec.*
				whenever error stop
				call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor
				call sup3760_exclui_item_de_terc(l_cod_fornecedor, p_aviso_rec.num_seq )
			end foreach
			close cq_excnota
		end if

	end if
end if

### fim alteracao performance

if not l_passou then
	declare cq_excnot cursor with hold for
	select *
	from aviso_rec
	where cod_empresa    = p_cod_empresa
	and num_aviso_rec  = p_dados_tela.num_aviso_rec

	foreach cq_excnot into p_aviso_rec.*


## o sup6410 chamado pelo sup0530 efetua atualiza��o dos registros na item_de_terc / item_dev_terc

	if sup376_verifica_cond_delecao("ex_nota") = true then
		let l_count = 0
		whenever error continue
		select count(*)
		into l_count
		from sup_frete_x_nf_entrada
		where sup_frete_x_nf_entrada.empresa       = p_cod_empresa
		and sup_frete_x_nf_entrada.aviso_recebto = p_nf_sup.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("select","sup_frete_x_nf_entrada")
		end if

		if p_nf_sup.num_conhec > 0
			or l_count > 0 then
			call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
			#whenever error continue
			#call log085_transacao("rollback")
			#whenever error stop
			return
		else
			if sup3760_valida_frete_cif_nf() = true then
				call log0030_mensagem("existe frete relacionado com a nota. excluir relacionamento.","exclamation")
				#whenever error continue
				#call log085_transacao("rollback")
				#whenever error stop
				return
			end if
			if p_dados_tela.ies_nf_aguard_nfe <> "7" then
				if p_dados_tela.ies_nf_aguard_nfe <> "5" then
					if sup376_possui_avf_insp_ar() = false then
						# este codigo foi transferido para antes do cursor cq_excnot
						if p_aviso_rec.ies_liberacao_insp = "s" and
							p_aviso_rec.ies_situa_ar = "e" then

							### os237529 ###
							initialize l_prog_contagem to null
							select par_txt
							into l_prog_contagem
							from par_sup_pad
							where par_sup_pad.cod_empresa   = p_cod_empresa
							and par_sup_pad.cod_parametro = "prog_contagem"
							if sqlca.sqlcode <> 0 or
								l_prog_contagem is null then
								let l_prog_contagem = " "
							end if

							if l_prog_contagem = "sup0799" then
								#whenever error continue
								#call log085_transacao("rollback")
								#whenever error stop
								call log0030_mensagem(" exclua primeiramente resultado de contagem - sup0799 ","exclamation")
								return
							end if

							error " aguarde ... excluindo inspecao ... "
							call log_setvar("nom_usuario",p_user)

							let comando3 = p_cod_empresa, " ",
							p_aviso_rec.num_aviso_rec,  " ",
							p_aviso_rec.num_seq, " ",
							"exclusao"," ",
							"sup3760"
							call log1200_executa_programa("sup0570",comando3)

							let p_ies_situa_ar = null
							call sup376_busca_aviso_rec(p_cod_empresa, p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq)
							let p_ies_situa_ar = p_aviso_rec.ies_situa_ar

							if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
								p_cod_empresa,
								p_aviso_rec.num_aviso_rec) = false and
								sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
								p_cod_empresa,
								p_aviso_rec.num_aviso_rec) = false then
								if p_aviso_rec.ies_item_estoq = "s" then
									call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
								else
									call sup0063_verifica_controles(11, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles
								end if
							end if

							if p_ies_situa_ar <> "i" then
								if (p_ies_custo_grade = "s" and m_controles <> " "  and p_ies_situa_ar = "c") then
									## quando a empresa utiliza custo por grade, a contagem
									## eh excluida ja quando faz a exclusao da inspecao.
								else
									call log0030_mensagem(" problemas na exclusao da inspecao. ","exclamation")
									return
								end if
							end if
							error " exclusao de inspecao realizada com sucesso. "
						end if
					else
						if p_aviso_rec.ies_item_estoq = "s" then
							if avf1003_exclusao_qualidade(p_aviso_rec.num_aviso_rec,
								p_aviso_rec.num_seq) = false then
								#whenever error continue
								#call log085_transacao("rollback")
								#whenever error stop
								call log0030_mensagem(" problemas na exclusao da inspecao (avf). ","exclamation")
								return
							else
								#efetiva transacao para n�o bloquear
								#exclus�o de inspe��o no sup0570
								#whenever error continue
								#   call log085_transacao("commit")
								#whenever error stop
								#if sqlca.sqlcode <> 0 then
								#   call log003_err_sql("efetivacao","nf_sup")
								#   call log085_transacao("rollback") #os596059
								#   return
								#end if
								#
								#whenever error continue
								#call log085_transacao("begin")
								#whenever error stop
							end if
						else
							#efetiva transacao para n�o bloquear
							#exclus�o de inspe��o no sup0570
							#whenever error continue
							#    call log085_transacao("commit")
							#whenever error stop
							#if sqlca.sqlcode <> 0 then
							#   call log003_err_sql("efetivacao","nf_sup")
							#   call log085_transacao("rollback") #os596059
							#   return
							#end if
							#
							#whenever error continue
							#call log085_transacao("begin")
							#whenever error stop
						end if
					end if
				end if

				if p_aviso_rec.ies_liberacao_cont = "s" then
					error " aguarde ... excluindo contagem ... "

					call sup3760_atualiza_nota(p_cod_empresa, p_dados_tela.num_nf, p_dados_tela.ser_nf,
					p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
					p_dados_tela.num_aviso_rec, p_dados_tela.cnd_pgto_nf)

					let comando3 = p_cod_empresa,
					" ", p_aviso_rec.num_aviso_rec,
					" ", p_aviso_rec.num_seq,
					" ", 3760,
					" ", "s",
					" ", "exclusao",
					" ", 0,
					" ", "s",
					" ", "s"
					call log1200_executa_programa("sup0530",comando3)

					let p_ies_situa_ar = null
					call sup376_busca_aviso_rec(p_cod_empresa, p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq)
					let p_ies_situa_ar = p_aviso_rec.ies_situa_ar
					if p_ies_situa_ar <> "c" then
						#whenever error continue
						#call log085_transacao("rollback")
						#whenever error stop
						call log0030_mensagem(" problemas na exclusao da contagem. ","exclamation")
						return
					end if
					error " exclusao de contagem realizada com sucesso. "
				end if
			end if
		end if
	end if

	## os 407088
	call sup3762_busca_fornecedor_triangulacao(p_aviso_rec.num_aviso_rec, p_aviso_rec.num_seq) returning l_cod_fornecedor

	if p_dados_tela.ies_nf_aguard_nfe = "4" then
		call sup3760_exclui_item_de_terc(l_cod_fornecedor, p_aviso_rec.num_seq)
	end if

	whenever error continue
	let l_cont = 0
	select count(*)
	into l_cont
	from deb_fornec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	and num_seq       = p_aviso_rec.num_seq
	whenever error stop
	if l_cont = 0 then
	else call log0030_mensagem(" existe deb_fornec - excluir registro no sup5960","exclamation")
		sleep 2
		let p_houve_erro = true
		return
	end if

	whenever error continue
	let l_cont = 0
	select count(*)
	into l_cont
	from dev_fornec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	and num_seq       = p_aviso_rec.num_seq
	whenever error stop
	if l_cont = 0 then
	else call log0030_mensagem(" existe devolu��o a fornecedor - excluir registro no sup0460","exclamation")
		sleep 2
		let p_houve_erro = true
		return
	end if
end foreach
end if
end if
#aabrgu
whenever error continue
call log085_transacao('begin')
whenever error stop

#aabrgu
declare cq_excpatr cursor with hold for
select *
from aviso_rec
where cod_empresa    = p_cod_empresa
and num_aviso_rec  = p_aviso_rec.num_aviso_rec

foreach cq_excpatr into p_aviso_rec.*
### os 154880 ###
if sqlca.sqlcode <> 0 then
	call log003_err_sql("leitura","aviso_rec")
	let p_houve_erro = true
	exit foreach
end if

if not sup3762_verifica_devol_nf_consig(p_nf_sup.ies_especie_nf,
	p_nf_sup.ies_nf_aguard_nfe,
	p_nf_sup.cod_empresa,
	p_nf_sup.num_nf,
	p_nf_sup.cod_fornecedor,
	p_aviso_rec.cod_item) then #-- os 495219

return
end if

if p_ies_obt_inf_com = "s" and
	sup0812_verifica_nota_transferencia(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl) then
	if g_ies_tip_controle = "j" then

		initialize sql_stmt to null

		let l_cliente_55 = false
		if find4glfunction("supy62_empresa_55") then
			let l_cliente_55 = supy62_empresa_55()
		end if

		if l_cliente_55 = true  then
			let sql_stmt = "select inventario_destino ",
			"from fat_nf_transf_pat ",
			"where empresa_destino    = """,p_cod_empresa,""" ",
			"and aviso_recebto      = ",p_aviso_rec.num_aviso_rec," ",
			"and seq_item_ar        = ",p_aviso_rec.num_seq

			whenever error continue
			prepare var_fat_transf1 from sql_stmt
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("prepare sql","var_fat_transf1")
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				return
			end if

			whenever error continue
			declare cq_fat_transf cursor for var_fat_transf1
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("declare cursor","cq_fat_transf")
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				return
			end if

			whenever error continue
			open cq_fat_transf
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("open cursor","cq_fat_transf")
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				return
			end if

			whenever error continue
			fetch cq_fat_transf into lr_transf_pat.inventario_destino
			whenever error stop
			if sqlca.sqlcode <> 0 then
				if g_ies_tip_controle = "i" then
					whenever error continue
					close cq_fat_transf
					free cq_fat_transf
					whenever error stop
					exit foreach
				else
					let p_houve_erro = true
					error " nao encontrado relacionadomento nf origem/dest sup1421"
					sleep 2
					whenever error continue
					close cq_fat_transf
					free cq_fat_transf
					whenever error stop
					whenever error continue
					call log085_transacao("rollback")
					whenever error stop
					return
				end if
			end if
			whenever error continue
			close cq_fat_transf
			free cq_fat_transf
			whenever error stop
		end if

		let sql_stmt =
		" select fat_nf_transf_pat.empresa_destino, ",
		" fat_nf_transf_pat.inventario_destino, ",
		" fat_nf_transf_pat.aviso_recebto, ",
		" fat_nf_transf_pat.seq_item_ar, ",
		" fat_nf_transf_pat.dat_ent_ar, ",
		" fat_nf_transf_pat.trans_nota_fiscal, ",
		" fat_nf_transf_pat.inventario_origem, ",
		" fat_nf_transf_pat.parc_inv_origem, ",
		" fat_nf_transf_pat.seq_item_nf ",
		" from fat_nf_mestre, fat_nf_transf_pat ",
		" where fat_nf_mestre.empresa               = """, p_cod_emp_transf, """ ",
		" and fat_nf_mestre.nota_fiscal           = ", m_num_nff_aux, ### tvihmo
		" and fat_nf_mestre.serie_nota_fiscal     = """,p_dados_tela.ser_nf,""" ",
		" and fat_nf_mestre.subserie_nf           = ",p_dados_tela.ssr_nf," ",
		" and fat_nf_mestre.tip_nota_fiscal       = ""fatprdsv"" ",
		" and fat_nf_mestre.sit_nota_fiscal       = ""n"" ",
		" and fat_nf_transf_pat.empresa           = fat_nf_mestre.empresa ",
		" and fat_nf_transf_pat.trans_nota_fiscal = fat_nf_mestre.trans_nota_fiscal ",
		" and fat_nf_transf_pat.empresa_destino   = """, p_cod_empresa, """ ",
		" and fat_nf_transf_pat.aviso_recebto     = ",p_aviso_rec.num_aviso_rec," ",
		" and fat_nf_transf_pat.seq_item_ar       = ", p_aviso_rec.num_seq

		whenever error continue
		prepare var_fat_transf from sql_stmt
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("prepare sql","var_fat_transf")
			let p_houve_erro = true
		end if

		whenever error continue
		declare cl_fat_transf1 cursor for var_fat_transf
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare cursor","cl_fat_transf1")
			let p_houve_erro = true
		end if

		whenever error continue
		foreach cl_fat_transf1 into lr_transf_pat.empresa_destino,
		lr_transf_pat.inventario_destino,
		lr_transf_pat.aviso_recebto,
		lr_transf_pat.seq_aviso_recebto,
		lr_transf_pat.dat_entrada,
		lr_transf_pat.trans_nota_fiscal,
		lr_transf_pat.inventario_origem,
		lr_transf_pat.num_parcela_orig,
		lr_transf_pat.seq_item_nf
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("foreach","cl_fat_transf1")
			let p_houve_erro = true
			exit foreach
		end if

		whenever error continue
		update fat_nf_transf_pat
		set empresa_destino    = null,
		inventario_destino = null,
		aviso_recebto      = null,
		seq_item_ar        = null,
		dat_ent_ar         = null
		where empresa_origem     = p_cod_emp_transf
		and inventario_origem  = lr_transf_pat.inventario_origem
		and trans_nota_fiscal  = lr_transf_pat.trans_nota_fiscal
		and seq_item_nf        = lr_transf_pat.seq_item_nf
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let p_houve_erro = true
			call log003_err_sql("atualizacao","fat_nf_transf_pat")
			exit foreach
		end if

		if not p_houve_erro then
			whenever error continue
			declare cq_parcelas_inv1 cursor for
			select parametro_val
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and trim(parametro[1,15]) = trim(lr_transf_pat.inventario_destino)
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("declare cursor","cq_parcelas_inv1")
				let p_houve_erro = true
				exit foreach
			end if

			let lr_transf_pat.num_parcela = -1

			whenever error continue
			foreach cq_parcelas_inv1 into lr_transf_pat.num_parcela
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("foreach cursor","cq_parcelas_inv1")
				let p_houve_erro = true
				exit foreach
			end if

			whenever error continue
			delete from patrval
			where cod_empresa       = p_cod_empresa
			and cod_empresa_estab = p_cod_empresa
			and num_invent        = lr_transf_pat.inventario_destino
			and num_parcela       = lr_transf_pat.num_parcela
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","patrval")
				exit foreach
			end if
			whenever error continue
			delete from pat_val_compl
			where empresa    = p_cod_empresa
			and emp_estab  = p_cod_empresa
			and inventario = lr_transf_pat.inventario_destino
			and parcela    = lr_transf_pat.num_parcela
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_val_compl")
				exit foreach
			end if
			if log0150_verifica_se_tabela_existe("pat_val_residual") then
				whenever error continue
				delete from pat_val_residual
				where empresa    = p_cod_empresa
				and emp_estab  = p_cod_empresa
				and inventario = lr_transf_pat.inventario_destino
				and parcela    = lr_transf_pat.num_parcela
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let p_houve_erro = true
					call log003_err_sql("exclusao","pat_val_residual")
					exit foreach
				end if
			end if
			whenever error continue
			delete from patrparc
			where cod_empresa       = p_cod_empresa
			and cod_empresa_estab = p_cod_empresa
			and num_invent        = lr_transf_pat.inventario_destino
			and num_parcela       = lr_transf_pat.num_parcela
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","patrparc")
				exit foreach
			end if
			whenever error continue
			delete from patrparc_desc
			where cod_empresa       = p_cod_empresa
			and cod_empresa_estab = p_cod_empresa
			and num_invent        = lr_transf_pat.inventario_destino
			and num_parcela       = lr_transf_pat.num_parcela
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","patrparc")
				exit foreach
			end if

			whenever error continue
			delete from pat_piscofin_inv
			where empresa            = p_cod_empresa
			and empresa_estabel    = p_cod_empresa
			and inventario         = lr_transf_pat.inventario_destino
			and parcela_inventario = lr_transf_pat.num_parcela
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_piscofin_inv")
				exit foreach
			end if
			whenever error continue
			delete from pat_pis_cofins_val
			where empresa            = p_cod_empresa
			and empresa_estabel    = p_cod_empresa
			and inventario         = lr_transf_pat.inventario_destino
			and parcela_inventario = lr_transf_pat.num_parcela
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_pis_cofins_val")
				exit foreach
			end if
			whenever error continue
			delete from pat_cre_pis_cofins
			where empresa            = p_cod_empresa
			and empresa_estabel    = p_cod_empresa
			and inventario         = lr_transf_pat.inventario_destino
			and parcela_inventario = lr_transf_pat.num_parcela
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_cre_pis_cofins")
				exit foreach
			end if

			if log0150_verifica_se_tabela_existe("pat_dad_compl_ent") then
				whenever error continue
				delete from pat_dad_compl_ent
				where empresa            = p_cod_empresa
				and emp_estab          = p_cod_empresa
				and inventario         = lr_transf_pat.inventario_destino
				and parcela_inventario = lr_transf_pat.num_parcela
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("delete","pat_dad_compl_ent")
					let p_houve_erro = true
					exit foreach
				end if
			end if
			if log0150_verifica_se_tabela_existe("hist_alteracao") then
				whenever error continue
				delete from hist_alteracao
				where cod_empresa        = p_cod_emp_transf
				and cod_empresa_estab  = p_cod_emp_transf
				and num_invent         = lr_transf_pat.inventario_destino
				and num_parcela        = lr_transf_pat.num_parcela
				and tipo_registro      = '1'
				and mes_historico      = m_mes_sistema
				and ano_historico      = m_ano_sistema
				and cod_campo          = '4'
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("delete","hist_alteracao")
					let p_houve_erro = true
					exit foreach
				end if

				whenever error continue
				delete from hist_alteracao
				where cod_empresa        = p_cod_emp_transf
				and cod_empresa_estab  = p_cod_emp_transf
				and num_invent         = lr_transf_pat.inventario_origem
				and num_parcela        = lr_transf_pat.num_parcela_orig
				and tipo_registro      = '1'
				and mes_historico      = m_mes_sistema
				and ano_historico      = m_ano_sistema
				and cod_campo          = '4'
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("(3)delete","hist_alteracao")
					let p_houve_erro = true
					exit foreach
				end if

				whenever error continue
				delete from pat_transf_emp
				where cod_emp_orig      = p_cod_emp_transf
				and cod_emp_dest      = p_cod_empresa
				and num_invent        = lr_transf_pat.inventario_destino
				and num_parcela       = lr_transf_pat.num_parcela
				and month(dat_transf) = m_mes_sistema
				and year(dat_transf)  = m_ano_sistema
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let p_houve_erro = true
					call log003_err_sql("exclusao","pat_transf_emp")
					exit foreach
				end if
			end if
		end foreach
		free cq_parcelas_inv1
		whenever error stop

		if p_houve_erro then
			exit foreach
		end if

		if lr_transf_pat.num_parcela = -1 then
			whenever error continue
			delete from patrval
			where cod_empresa       = p_cod_empresa
			and cod_empresa_estab = p_cod_empresa
			and num_invent        = lr_transf_pat.inventario_destino
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","patrval")
				exit foreach
			end if

			whenever error continue
			delete from pat_val_compl
			where empresa    = p_cod_empresa
			and emp_estab  = p_cod_empresa
			and inventario = lr_transf_pat.inventario_destino
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_val_compl")
				exit foreach
			end if

			if log0150_verifica_se_tabela_existe("pat_val_residual") then
				whenever error continue
				delete from pat_val_residual
				where empresa    = p_cod_empresa
				and emp_estab  = p_cod_empresa
				and inventario = lr_transf_pat.inventario_destino
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let p_houve_erro = true
					call log003_err_sql("exclusao","pat_val_residual")
					exit foreach
				end if
			end if

			whenever error continue
			delete from patrparc
			where cod_empresa       = p_cod_empresa
			and cod_empresa_estab = p_cod_empresa
			and num_invent        = lr_transf_pat.inventario_destino
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","patrparc")
				exit foreach
			end if
			#--# tdkzon #--# inicio
			whenever error continue
			delete from pat_piscofin_inv
			where empresa            = p_cod_empresa
			and empresa_estabel    = p_cod_empresa
			and inventario         = lr_transf_pat.inventario_destino
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_piscofin_inv")
				exit foreach
			end if
			whenever error continue
			delete from pat_pis_cofins_val
			where empresa            = p_cod_empresa
			and empresa_estabel    = p_cod_empresa
			and inventario         = lr_transf_pat.inventario_destino
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_pis_cofins_val")
				exit foreach
			end if
			whenever error continue
			delete from pat_cre_pis_cofins
			where empresa            = p_cod_empresa
			and empresa_estabel    = p_cod_empresa
			and inventario         = lr_transf_pat.inventario_destino
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_cre_pis_cofins")
				exit foreach
			end if
			#--# tdkzon #--# fim
			if log0150_verifica_se_tabela_existe("pat_dad_compl_ent") then
				whenever error continue
				delete from pat_dad_compl_ent
				where empresa            = p_cod_empresa
				and emp_estab          = p_cod_empresa
				and inventario         = lr_transf_pat.inventario_destino
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("(2)delete","pat_dad_compl_ent")
					let p_houve_erro = true
					exit foreach
				end if
			end if
			if log0150_verifica_se_tabela_existe("hist_alteracao") then
				whenever error continue
				delete from hist_alteracao
				where cod_empresa        = p_cod_emp_transf
				and cod_empresa_estab  = p_cod_emp_transf
				and num_invent         = lr_transf_pat.inventario_destino
				and tipo_registro      = '1'
				and mes_historico      = m_mes_sistema
				and ano_historico      = m_ano_sistema
				and cod_campo          = '4'
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("(2)delete","hist_alteracao")
					let p_houve_erro = true
					exit foreach
				end if
				whenever error continue
				delete from hist_alteracao
				where cod_empresa        = p_cod_emp_transf
				and cod_empresa_estab  = p_cod_emp_transf
				and num_invent         = lr_transf_pat.inventario_origem
				and tipo_registro      = '1'
				and mes_historico      = m_mes_sistema
				and ano_historico      = m_ano_sistema
				and cod_campo          = '4'
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("(4)delete","hist_alteracao")
					let p_houve_erro = true
					exit foreach
				end if
			end if

			whenever error continue
			delete from pat_transf_emp
			where cod_emp_orig      = p_cod_emp_transf
			and cod_emp_dest      = p_cod_empresa
			and num_invent        = lr_transf_pat.inventario_destino
			and num_parcela       = lr_transf_pat.num_parcela
			and month(dat_transf) = m_mes_sistema
			and year(dat_transf)  = m_ano_sistema
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let p_houve_erro = true
				call log003_err_sql("exclusao","pat_transf_emp")
				exit foreach
			end if
		end if
	end if
	whenever error continue
end foreach
free cl_fat_transf1
whenever error stop
end if

insert into nf_sup_erro ( empresa, num_aviso_rec, num_seq, des_pendencia_item, ies_origem_erro, ies_erro_grave )  values ( p_aviso_rec.cod_empresa,
p_aviso_rec.num_aviso_rec,
p_aviso_rec.num_seq,
" item da nf de origem pendente de recebimento ",
"1",
"s"
)

end if

whenever error continue
### fim os 154880 ###
end foreach

if p_houve_erro then
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao nota")
	end if
end if

delete from nf_sup_erro
where nf_sup_erro.empresa = p_cod_empresa
and nf_sup_erro.num_aviso_rec = p_aviso_rec.num_aviso_rec

# tfctgn
let l_utilz_novo_proc_ent = false

if find4glfunction('sup1473_prepara_exclusao_nota_frete_integr_fiscal') then
	call sup1473_prepara_exclusao_nota_frete_integr_fiscal(p_dados_tela.cod_empresa,
	p_dados_tela.cod_empresa_estab,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.dat_entrada_nf,
	0, '0', 0, '0', 'n', 'n')
returning l_status, l_utilz_novo_proc_ent

	if l_status = false then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
end if
# tfctgn

if l_utilz_novo_proc_ent = false then
	#--# tdfylo exclus�o das informa��es na re_relat (espindola) #--#
	call obf2060_exclui_nota_re_relat(p_dados_tela.cod_empresa,   p_dados_tela.cod_empresa_estab,
	p_dados_tela.num_nf,        p_dados_tela.num_aviso_rec,
	p_dados_tela.dat_entrada_nf)
	#--# tdfylo exclus�o das informa��es na re_relat (espindola) #--#
end if

let p_nr_nf = p_dados_tela.num_nf

call sup376_deleta_inss_auton(p_nr_nf,p_aviso_rec.num_seq)

call sup3760_transfere_h_est_trans_de_terc()

if p_dados_tela.ies_nf_aguard_nfe = "4" then
	whenever error continue
	delete from est_trans_de_terc
	where cod_empresa    = p_cod_empresa
	and num_nf         = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and ies_especie_nf = p_dados_tela.ies_especie_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	and ies_situacao   = "3"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let p_houve_erro = true
		call log003_err_sql("delete","est_trans_de_terc")
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
end if

if ((p_dados_tela.cod_operacao[1] = "7" and
	(p_dados_tela.ies_especie_nf = "nfe" or
	p_dados_tela.ies_especie_nf = "nfp" )) or m_nfr_import) and
	((m_ies_utiliz_provisao = "s" and
	m_utiliz_nfm_import = "n" and
	m_num_processo >= m_inicio_provisao) or
	p_nf_sup.ies_situa_import = "r") then
	let m_num_processo = sup3760_busca_numero_processo_importacao()
	if m_num_processo is null then
		let m_num_processo = -1
	end if
	if m_num_processo <> -1 then
		if m_num_processo >= g_proc_ini_os163407 then
			if not imp0101_desfaz_rateio(m_num_processo,p_dados_tela.num_aviso_rec,-1) then
				error "problema ao desfazer o rateio das despesas de importacao"
				sleep 2
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("rollback transaction","exclusao nota")
				end if
				return
			end if
		else
			if not imp0101_desfaz_rateio_ant(m_num_processo,p_dados_tela.num_aviso_rec,-1) then
				error "problema ao desfazer o rateio das despesas de importacao"
				sleep 2
				let p_houve_erro = true
				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("rollback transaction","exclusao nota")
				end if
				return
			end if
		end if
	end if
end if

#fluxo de caixa
if not fcl1150_integra_ar_fcx(p_cod_empresa,p_dados_tela.num_aviso_rec,"ex") then
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
return
end if

whenever error continue
delete from nfe_sup_compl
where nfe_sup_compl.cod_empresa   = p_cod_empresa
and nfe_sup_compl.num_aviso_rec = p_aviso_rec.num_aviso_rec

delete from dest_aviso_rec
where  dest_aviso_rec.cod_empresa = p_cod_empresa
and  dest_aviso_rec.num_aviso_rec = p_aviso_rec.num_aviso_rec

if p_ies_contab_aen = "4" then
	delete from dest_aviso_rec4
	where  dest_aviso_rec4.cod_empresa = p_cod_empresa
	and  dest_aviso_rec4.num_aviso_rec = p_aviso_rec.num_aviso_rec
end if

delete from ar_ped
where  ar_ped.cod_empresa = p_cod_empresa
and  ar_ped.num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop

whenever error continue
delete from ar_nf_item
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop

#-in�cio ch-tfh675-#
if log0150_verifica_se_tabela_existe("sup_grd_nfe") then
	whenever error continue
	delete from sup_grd_nfe
	where empresa       = p_cod_empresa
	and aviso_recebto = p_aviso_rec.num_aviso_rec
	whenever error stop
end if
#-fim ch-tfh675-#

whenever error continue
delete from ar_diverg
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec

delete from ar_diverg_provid
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec

delete from dev_item
where cod_empresa = p_cod_empresa
and num_nff     = p_aviso_rec.num_aviso_rec
whenever error stop

whenever error continue
delete from sup_nf_devol_cli
where empresa       = p_cod_empresa
and aviso_recebto = p_dados_tela.num_aviso_rec
whenever error stop

### dmanentlgx-5970 (funcao utilizada no cancelamento e exclusao nota fiscal - nao estava considerando chave primaria da tabela)
call sup0686_retorna_tipo_entrada(p_dados_tela.cod_operacao,
0)
returning l_status,
l_ies_tip_entrada
if p_dados_tela.ies_especie_nf = "nfd" or l_ies_tip_entrada = '5' then
	if find4glfunction('supr76_exclui_registro_f150') then
		if not supr76_exclui_registro_f150(p_cod_empresa, p_dados_tela.num_aviso_rec) then
			let p_houve_erro = true
		end if
	else
		if not sup3760_deleta_registro_f150(p_cod_empresa, p_dados_tela.num_aviso_rec) then
			let p_houve_erro = true
		end if
	end if
end if

#809554
if log0150_verifica_se_tabela_existe("sup_ar_imp_cana") then
	let l_sup_ar_imp_cana = true
end if

if l_sup_ar_imp_cana then
	whenever error continue
	delete from sup_ar_imp_cana
	where empresa       = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","sup_ar_imp_cana")
	end if
end if
#809554
if find4glfunction('supy121_excluir_mov_comissoes_dev_clie') then
	if not supy121_excluir_mov_comissoes_dev_clie(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		"exclusao") then
		let p_houve_erro = true
	end if
end if

whenever error continue
delete from sup_trib_benef_nf_devol_cli
where empresa       = p_cod_empresa
and aviso_recebto = p_dados_tela.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("(4)delete","sup_trib_benef_nf_devol_cli")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao item")
	end if
return
end if

whenever error continue #os450170
select sup_par_ar.parametro_val
into m_num_ar_relac
from sup_par_ar
where sup_par_ar.empresa           = p_cod_empresa
and sup_par_ar.aviso_recebto     = p_dados_tela.num_aviso_rec
and sup_par_ar.seq_aviso_recebto = 1
and sup_par_ar.parametro         = "final_cfop"
whenever error stop
if sqlca.sqlcode = 0 then
	whenever error continue
	delete from sup_par_ar
	where empresa           = p_cod_empresa
	and aviso_recebto     = m_num_ar_relac
	and seq_aviso_recebto = 1
	and parametro         = "final_cfop"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","sup_par_ar")
		let p_houve_erro = true
	else
		if sup3760_verifica_num_ar(m_num_ar_relac) then
			call sup3760_verifica_cfop_retr_serv()
		end if
	end if
end if

if not sup3760_limpa_ar_despesa_compl_imp() then
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
return
end if

#--#atualiza monitor de integracao (caso existir documento)
if m_utiliz_totvs_colab = "s" then
	if m_num_nfe is not null and m_num_nfe <> ' ' then
		let m_num_nf = m_num_nfe
	else
		let m_num_nf = p_nf_sup.num_nf
	end if

	if not sup13429_integra_erp_monitor(p_dados_tela.cod_empresa,     m_num_nf,
		p_dados_tela.ser_nf,          p_dados_tela.ssr_nf,
		p_dados_tela.cod_fornecedor,  p_dados_tela.dat_emis_nf,
		"exclusao") then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
end if
whenever error continue
delete from sup_par_ar
where empresa       = p_cod_empresa
and aviso_recebto = p_aviso_rec.num_aviso_rec
whenever error stop

### dmansuplgx-1251
if m_sup_ar_item_fisc = true then
	whenever error continue
	delete from sup_ar_item_fisc
	where empresa       = p_cod_empresa
	and aviso_recebto = p_aviso_rec.num_aviso_rec
	whenever error stop
end if

whenever error continue
delete
from sup_ar_imp_cana
where empresa         = p_cod_empresa
and aviso_recebto   = p_aviso_rec.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("delete","sup_ar_imp_cana")
return
end if

if find4glfunction('supy5_cliente_78') then
	if supy5_cliente_78() = true then
		let l_parametro = "nfdigit_4032_", p_dados_tela.num_nf using "&&&&&&&"
		whenever error continue
		delete from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = 0
		and seq_aviso_recebto = 0
		and parametro         = l_parametro
		whenever error stop

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("delete","sup_par_ar")
		end if
	end if
end if

whenever error continue
delete from sup_compl_nf_sup
where empresa       = p_cod_empresa
and aviso_recebto = p_aviso_rec.num_aviso_rec

#### os 139067
delete from ar_subst_tribut
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop

##excluir o relacionamento dos fretes/con icms st com a nfe,
##para que se possa reprocessar a gera��o autom�tica da nfe (sup1265).
if p_dados_tela.ies_especie_nf = "nfe" then ##os 337055
	whenever error continue
	delete from sup_par_ar
	where empresa       = p_cod_empresa
	and parametro     = "nfe_icms_st"
	and parametro_val = p_dados_tela.num_aviso_rec
	whenever error stop

	whenever error continue
	delete from sup_par_frete
	where empresa       = p_cod_empresa
	and parametro     = "nfe_icms_st"
	and parametro_val = p_dados_tela.num_aviso_rec
	whenever error stop
end if

if m_exporta_nf = "a" then
	call sup3762_exclui_conta_corrente("e")
end if

#dmanentlgx-236
if p_dados_tela.ies_especie_nf = 'nfs' then
	if not avfr6_exclusao_inspecao(p_cod_empresa,
		p_aviso_rec.num_aviso_rec,
		0) then
		call log0030_mensagem(" problemas na exclus�o da inspecao (avf). ","exclamation")
		return
	end if
end if
#dmanentlgx-236

whenever error continue
delete from ar_os_esp
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop

#if p_par_sup_compl.ies_rastreio = "1" then
whenever error continue
delete from avf_insp_ar
where avf_insp_ar.empresa       = p_cod_empresa
and avf_insp_ar.aviso_recebto = p_aviso_rec.num_aviso_rec
whenever error stop

#inicio trov74
if log_existe_epl("sup3760y_after_process_delete_avf_insp_ar_3") then
	call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
	#epl n�mero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('num_seq', p_aviso_rec.num_seq)
	#epl sequ�ncia do ar
	#epl tipo: aviso_rec.num_seq

	call log_setvar('cod_item', p_aviso_rec.cod_item)
	#epl codigo do item do ar
	#epl tipo: aviso_rec.cod_item

	call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
	#epl codigo do fornecedor do ar
	#epl tipo: nf_sup.cod_fornecedor

	if sup3760y_after_process_delete_avf_insp_ar_3() = false then
		let p_houve_erro = true
	end if
end if
#fim trov74

whenever error continue #os560935
delete from avf_pl_insp_ar
where avf_pl_insp_ar.empresa       = p_cod_empresa
and avf_pl_insp_ar.aviso_recebto = p_dados_tela.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql('delete','avf_pl_insp_ar')
end if
#end if

## os 412491
if (p_dados_tela.ies_especie_nf    = "nfr" or
	p_dados_tela.ies_especie_nf    = "nfe") and
	p_dados_tela.ies_nf_aguard_nfe = "x" then
	call sup3760_exclui_nf_consig("nota",p_aviso_rec.num_aviso_rec,0)
	#-- ch tfskoh inicio --#
	if p_houve_erro = true then
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
	#-- ch tfskoh fim --#
else
	if sup376_elimina_item_ret_terc(p_nf_sup.num_aviso_rec,0,"2") = false then
		let p_houve_erro = true
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		return
	end if
end if

whenever error continue
delete from aviso_rec
where cod_empresa = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclusao","aviso_rec")
	let p_houve_erro = true
end if

### os 277425 ###
if sup3766_exclui_sup_ar_grade(p_cod_empresa,
	p_aviso_rec.num_aviso_rec,
	0) = false then
	let p_houve_erro = true
end if
### os 277425 ###
if sup1283_exclui_sup_ar_grade(p_cod_empresa,
	p_aviso_rec.num_aviso_rec,
	0) = false then
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao nota")
	end if
return
end if
### fim os 277425 ###

### os 159597 ###
if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
	whenever error continue
	update sup_ctr_balanca
	set aviso_recebto     = null
	where empresa           = p_cod_empresa
	and num_docum         = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	and seq_nota_fiscal   > 0
	and tip_pesagem       = "1"
	whenever error stop
end if

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
if p_houve_erro = false then
	if m_wms_instal = "s" and l_nf_deposit = 's' then
		if not sup3760_exclui_atualiza_prim_nf_deposit() then
			let p_houve_erro = true
		end if
	end if
	if m_wms_instal = "s" then
		if wms6135_exclui_relacionamento_cesv(p_dados_tela.cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor) = false then

			let p_houve_erro = true
		end if
	end if
end if
#--------------------------#

if p_dados_tela.ies_nf_aguard_nfe = "a" then
	delete from ar_depos
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
end if

if p_dados_tela.ies_nf_aguard_nfe = "b" then
	delete from item_de_terc_dep
	where cod_empresa     = p_cod_empresa
	and num_nf          = p_dados_tela.num_nf
	and ser_nf          = p_dados_tela.ser_nf
	and ies_especie_nf  = p_dados_tela.ies_especie_nf
	and cod_fornecedor  = p_dados_tela.cod_fornecedor

	whenever error continue
	declare cq_ar_depos cursor for
	select ar_fornecedor, seq_fornecedor
	from sup_ar_it_forn_dep
	where empresa        = p_cod_empresa
	and ar_depositante = p_dados_tela.num_aviso_rec
	whenever error stop

	whenever error continue
	foreach cq_ar_depos into l_ar_fornecedor, l_seq_fornecedor
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_ar_depos")
		exit foreach
	end if

	whenever error continue
	delete from ar_fornec_depos
	where cod_empresa   = p_cod_empresa
	and num_ar_fornec = l_ar_fornecedor
	and num_ar_depos  = p_dados_tela.num_aviso_rec
	whenever error stop

	whenever error continue
	delete from sup_ar_it_forn_dep
	where empresa        = p_cod_empresa
	and ar_fornecedor  = l_ar_fornecedor
	and seq_fornecedor = l_seq_fornecedor
	and ar_depositante = p_dados_tela.num_aviso_rec
	whenever error stop

	let l_total = 0
	whenever error continue
	select sum(qtd_regularizada) into l_total
	from sup_ar_it_forn_dep
	where empresa        = p_cod_empresa
	and ar_fornecedor  = l_ar_fornecedor
	and seq_fornecedor = l_seq_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 or l_total is null then
		let l_total = 0
	end if

	whenever error continue
	update sup_ar_item_fornec set qtd_regularizada = l_total
	where empresa           = p_cod_empresa
	and aviso_recebto     = l_ar_fornecedor
	and seq_aviso_recebto = l_seq_fornecedor
	whenever error stop
end foreach
whenever error stop
end if

if not sup1031_grava_audit_ar(p_aviso_rec.num_aviso_rec,
	0, ##exclusao total da nota fiscal
	"sup3760","5") then
	let p_houve_erro = true
end if

if p_dados_tela.cod_empresa_estab is null then
	whenever error continue
	delete from rec_find_ent_ar
	where empresa         = p_cod_empresa
	and empresa_estabel is null
	and aviso_recebto   = p_dados_tela.num_aviso_rec
	whenever error stop
else
	whenever error continue
	delete from rec_find_ent_ar
	where empresa         = p_cod_empresa
	and empresa_estabel = p_dados_tela.cod_empresa_estab
	and aviso_recebto   = p_dados_tela.num_aviso_rec
	whenever error stop
end if

whenever error continue
delete from aviso_rec_compl_sq
where cod_empresa  = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec

delete from aviso_rec_aux
where cod_empresa = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec

whenever error continue
delete from dev_mestre
where cod_empresa = p_cod_empresa
and num_nff     = p_aviso_rec.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
	call log003_err_sql("exclusao","dev_mestre")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao nota")
	end if
return
end if

whenever error continue
delete from audit_sup_cre
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec
if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
	call log003_err_sql("exclusao","audit_sup_cre")
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao nota")
	end if
return
end if

delete from ar_frete_cesta
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_dados_tela.num_aviso_rec

call sup3760_exclui_item_de_terc(l_cod_fornecedor, 0)

delete from item_dev_terc_comp
where item_dev_terc_comp.cod_empresa = p_cod_empresa
and item_dev_terc_comp.num_nf = p_dados_tela.num_nf
and item_dev_terc_comp.ser_nf = p_dados_tela.ser_nf
and item_dev_terc_comp.ssr_nf = p_dados_tela.ssr_nf
and item_dev_terc_comp.num_sequencia = p_num_seq
whenever error stop

whenever error continue
delete from sup_nf_reajus
where sup_nf_reajus.empresa = p_cod_empresa
and sup_nf_reajus.ar_reajus = p_dados_tela.num_aviso_rec

delete from sup_nf_fat_remessa
where sup_nf_fat_remessa.empresa           = p_cod_empresa
and sup_nf_fat_remessa.nota_fiscal       = p_dados_tela.num_nf
and sup_nf_fat_remessa.serie_nota_fiscal = p_dados_tela.ser_nf
and sup_nf_fat_remessa.subserie_nf       = p_dados_tela.ssr_nf
and sup_nf_fat_remessa.espc_nota_fiscal  = p_dados_tela.ies_especie_nf
and sup_nf_fat_remessa.fornecedor        = p_dados_tela.cod_fornecedor
whenever error stop

delete from ar_iss
where cod_empresa = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec

if g_ies_tex_inst = "s" then
	whenever error continue
	delete from ar_ped_tex
	where cod_empresa      = p_cod_empresa
	and num_aviso_rec    = p_dados_tela.num_aviso_rec
	and num_seq          = p_aviso_rec.num_seq
	delete from nf_sup_tex_cap_con
	where cod_empresa      = p_cod_empresa
	and num_aviso_rec    = p_dados_tela.num_aviso_rec
	and num_seq          = p_aviso_rec.num_seq
	whenever error stop
end if

if m_exst_rel_fre_indt then
	whenever error continue
	delete from sup_relc_ftre_indt
	where sup_relc_ftre_indt.empresa   = p_cod_empresa
	and sup_relc_ftre_indt.aviso_recebto = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","sup_relc_ftre_indt")
	end if
	## os 518223 ##
	if find4glfunction('supy61_gera_mvto_comodato') then
		if not supy61_gera_mvto_comodato(p_dados_tela.cod_empresa,
			p_dados_tela.num_aviso_rec,
			"e") then
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback","transacao")
			end if
			return
		end if
	end if
	## os 518223 ##
end if

#-- os 737190 inicio --#
if find4glfunction('supy160_cliente_318') then
	if supy160_nota_nfr_tipo_a_com_qtd(p_cod_empresa, p_aviso_rec.num_aviso_rec, " ") then
		let p_houve_erro = true
		call log0030_mensagem("n�o � permitido excluir nota nfr do tipo a quando existe quantidade liberada.","info")
	end if
end if
#-- os 737190 fim --#
whenever error continue
delete from nf_sup
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop
if sqlca.sqlcode = 0  then
	whenever error continue
	delete from sup_infc_strib_nfe
	where empresa            = p_cod_empresa
	and nf_entrada         = p_dados_tela.num_nf
	and serie_nf_entrada   = p_dados_tela.ser_nf
	and subserie_nfe       = p_dados_tela.ssr_nf
	and especie_nf_entrada = p_dados_tela.ies_especie_nf
	and fornecedor         = p_dados_tela.cod_fornecedor

	let l_permite = false

	if find4glfunction("sup9932_utiliza_espc_nota_fiscal") then
		call sup9932_utiliza_espc_nota_fiscal('vencimento_nff')
		returning l_permite
	end if

	if l_permite = false then
		delete from vencimento_nff
		where cod_empresa = p_cod_empresa
		and num_nf      = p_dados_tela.num_nf
		and ser_nf      = p_dados_tela.ser_nf
		and ssr_nf      = p_dados_tela.ssr_nf
		and cod_fornecedor  = p_dados_tela.cod_fornecedor
	else
		delete from vencimento_nff
		where cod_empresa = p_cod_empresa
		and num_nf      = p_dados_tela.num_nf
		and ser_nf      = p_dados_tela.ser_nf
		and ssr_nf      = p_dados_tela.ssr_nf
		and espc_nota_fiscal = p_dados_tela.ies_especie_nf
		and cod_fornecedor  = p_dados_tela.cod_fornecedor
	end if

	delete from nf_sup_aux
	where cod_empresa = p_cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	whenever error stop

	if p_dados_tela.ies_especie_nf = "nfm" then
		whenever error continue
		delete from nf_pend
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and cod_fornecedor = p_dados_tela.cod_fornecedor
		whenever error stop
	end if

	if p_dados_tela.ies_especie_nf = "nfp" then
		declare cq_ar_x_nf_pend4 cursor for
		select *
		from ar_x_nf_pend
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec

		foreach cq_ar_x_nf_pend4 into lr_ar_x_nf_pend.*
		whenever error continue
		update nf_pend
		set qtd_regularizada = qtd_regularizada -
		lr_ar_x_nf_pend.qtd_regularizada
		where cod_empresa    = lr_ar_x_nf_pend.cod_empresa
		and num_nf         = lr_ar_x_nf_pend.num_nf
		and ser_nf         = lr_ar_x_nf_pend.ser_nf
		and ssr_nf         = lr_ar_x_nf_pend.ssr_nf
		and cod_fornecedor = lr_ar_x_nf_pend.cod_fornecedor
		and cod_item       = lr_ar_x_nf_pend.cod_item
		whenever error stop
	end foreach

	whenever error continue
	delete from ar_x_nf_pend
	where cod_empresa    = p_cod_empresa
	and num_aviso_rec  = p_dados_tela.num_aviso_rec
	whenever error stop
end if

if p_dados_tela.ies_especie_nf = "con" then
	call sup376_exclui_pedagio_frete()
end if

whenever error continue
delete from reten_iss
where cod_empresa    = p_cod_empresa
and num_ad_nf_orig = p_dados_tela.num_nf
and ser_nf         = p_dados_tela.ser_nf
and ssr_nf         = p_dados_tela.ssr_nf
and ies_especie_nf = p_dados_tela.ies_especie_nf
and cod_fornecedor = p_dados_tela.cod_fornecedor

delete from reten_inss
where cod_empresa    = p_cod_empresa
and num_ad_nf_orig = p_dados_tela.num_nf
and ser_nf         = p_dados_tela.ser_nf
and ssr_nf         = p_dados_tela.ssr_nf
and ies_especie_nf = p_dados_tela.ies_especie_nf
and cod_fornecedor = p_dados_tela.cod_fornecedor
whenever error stop

if log0150_verifica_se_tabela_existe("cap_reten_inss_compl") then
	whenever error continue
	delete from cap_reten_inss_compl
	where cap_reten_inss_compl.empresa        = p_cod_empresa
	and cap_reten_inss_compl.num_ad_nf_orig = p_dados_tela.num_nf
	and cap_reten_inss_compl.ser_nf         = p_dados_tela.ser_nf
	and cap_reten_inss_compl.ssr_nf         = p_dados_tela.ssr_nf
	and cap_reten_inss_compl.especie_nf     = p_dados_tela.ies_especie_nf
	and cap_reten_inss_compl.fornecedor     = p_dados_tela.cod_fornecedor
	whenever error stop
end if

### tey585 - imposto cide (contribui��o de interven��o no dom�nio econ�mico)
if m_cap_recolhe_cide = true then
	if find4glfunction('capr40_exclui_recolh_cide') then
		call capr40_exclui_recolh_cide(p_cod_empresa,
		p_dados_tela.num_nf,
		p_dados_tela.ser_nf,
		p_dados_tela.ssr_nf,
		p_dados_tela.ies_especie_nf,
		p_dados_tela.cod_fornecedor,
		true) returning l_status, l_msg
		if l_status = false then
			call log0030_mensagem(l_msg,"exclamation")
			let p_houve_erro = true
		end if
	end if
end if

let l_qtd_fat_item_fci = 0

whenever error continue
select sum(qtd_fat_item_fci)
into l_qtd_fat_item_fci
from sup_item_fci
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
whenever error stop
if l_qtd_fat_item_fci <> 0 then
	let l_msg = 'esta nota possui fci relacionado com nota fiscal de saida, n�o pode ser excluida/cancelada.'
	call log0030_mensagem(l_msg,"exclamation")
	let p_houve_erro = true
else
	whenever error continue
	delete from sup_item_fci
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","sup_item_fci(4)")
		let p_houve_erro = true
	end if
end if

#eduardo o.s.335020
call sup3760_exclusao_nota_2()
#eduardo o.s.335020

if m_utiliza_dds_fortaleza = "s" then
	whenever error continue
	delete from cap_sistema_dds
	where empresa           = p_cod_empresa
	and ad_nota_fiscal    = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	whenever error stop
end if


delete from reten_inss_rur
where cod_empresa    = p_cod_empresa
and num_ad_nf_orig = p_dados_tela.num_nf
and ser_nf         = p_dados_tela.ser_nf
and ssr_nf         = p_dados_tela.ssr_nf
and ies_especie_nf = p_dados_tela.ies_especie_nf
and cod_fornecedor = p_dados_tela.cod_fornecedor

if p_aviso_rec.cod_operac_estoq = p_cod_oper_ent_ind then
	call sup3760_exclui_item_de_terc(l_cod_fornecedor, 0)
end if
if p_aviso_rec.cod_operac_estoq = p_oper_ent_ind_g then
	declare cq_ret cursor for
	select *
	from item_ret_terc
	where item_ret_terc.cod_empresa = p_cod_empresa
	and item_ret_terc.num_nf      = p_dados_tela.num_nf
	and item_ret_terc.ser_nf         = p_dados_tela.ser_nf
	and item_ret_terc.ssr_nf         = p_dados_tela.ssr_nf
	and item_ret_terc.ies_especie_nf = p_dados_tela.ies_especie_nf
	and item_ret_terc.cod_fornecedor = p_dados_tela.cod_fornecedor

	foreach cq_ret into l_item_ret_terc.*
	update item_em_terc
	set item_em_terc.qtd_tot_recebida = item_em_terc.qtd_tot_recebida -
	l_item_ret_terc.qtd_devolvida
	where item_em_terc.cod_empresa = l_item_ret_terc.cod_empresa
	and item_em_terc.num_nf      = l_item_ret_terc.num_nf_remessa
	and item_em_terc.num_sequencia = l_item_ret_terc.num_sequencia_nf
	#inicio sdhnrc
	if l_item_ret_terc.ies_incl_contab <> "n" then
		if sup3760_exclui_contab_terc(l_item_ret_terc.cod_empresa,l_item_ret_terc.num_nf,
			l_item_ret_terc.cod_fornecedor, l_item_ret_terc.num_nf_remessa,
			l_item_ret_terc.ies_especie_nf, l_item_ret_terc.num_sequencia_nf,
			l_item_ret_terc.num_sequencia_ar, "4") then
			whenever error continue
			delete from item_ret_terc
			where item_ret_terc.cod_empresa = l_item_ret_terc.cod_empresa
			and num_nf         = l_item_ret_terc.num_nf
			and ser_nf         = l_item_ret_terc.ser_nf
			and ssr_nf         = l_item_ret_terc.ssr_nf
			and ies_especie_nf = l_item_ret_terc.ies_especie_nf
			and cod_fornecedor = l_item_ret_terc.cod_fornecedor
			and num_sequencia_ar = l_item_ret_terc.num_sequencia_ar
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("exclusao","item_ret_terc")
				return false
			end if
		else
			call log0030_mensagem("n�o � permitido a exclus�o. nota fiscal associada a um retorno benef j� contabilizado e efetivado na contabilidade","exclamation")
			return false
		end if
	else
		whenever error continue
		delete from item_ret_terc
		where item_ret_terc.cod_empresa = l_item_ret_terc.cod_empresa
		and num_nf         = l_item_ret_terc.num_nf
		and ser_nf         = l_item_ret_terc.ser_nf
		and ssr_nf         = l_item_ret_terc.ssr_nf
		and ies_especie_nf = l_item_ret_terc.ies_especie_nf
		and cod_fornecedor = l_item_ret_terc.cod_fornecedor
		and num_sequencia_ar = l_item_ret_terc.num_sequencia_ar
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","item_ret_terc")
			return false
		end if
	end if
	#fim sdhnrc
end foreach
end if

delete from reten_inss_rur
where cod_empresa    = p_cod_empresa
and num_ad_nf_orig = p_dados_tela.num_nf
and ser_nf         = p_dados_tela.ser_nf
and ssr_nf         = p_dados_tela.ssr_nf
and ies_especie_nf = p_dados_tela.ies_especie_nf
and cod_fornecedor = p_dados_tela.cod_fornecedor

let l_num_nf = p_dados_tela.num_nf
delete from reten_irrf_pg
where cod_empresa    = p_cod_empresa
and num_nf         = l_num_nf
and ser_nf         = p_dados_tela.ser_nf
and ssr_nf         = p_dados_tela.ssr_nf
and ies_especie_nf = p_dados_tela.ies_especie_nf
and cod_fornecedor = p_dados_tela.cod_fornecedor

# projeto l_hcm001 - requisito 13510.1 - esocial - jaque - 27/05/2014
if log0150_verifica_se_tabela_existe("cap_pensao_documento") = true then
	delete from cap_pensao_documento
	where empresa              = p_cod_empresa
	and nota_fiscal          = l_num_nf
	and serie_nota_fiscal    = p_dados_tela.ser_nf
	and subserie_nota_fiscal = p_dados_tela.ssr_nf
	and especie_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor           = p_dados_tela.cod_fornecedor
end if

delete from aviso_rec_compl
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec

delete from ar_pis_cofins
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec

#os 359707
whenever error continue
delete from obf_dvcli_piscofin
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
whenever error stop

whenever error continue
delete from obf_p_dvcli_cofins
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
whenever error stop
#os 359707

whenever error continue ##os 361268
delete from sup_par_devol_cli
where empresa           = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
whenever error stop

whenever error continue
delete from sup_ar_piscofim
where empresa       = p_cod_empresa
and aviso_recebto = p_dados_tela.num_aviso_rec
whenever error stop

whenever error continue
delete from sup_fr_pis_cofins
where empresa       = p_cod_empresa
and aviso_recebto = p_dados_tela.num_aviso_rec
whenever error stop

whenever error continue
delete from sup_nf_origem #tdttl5
where empresa       = p_cod_empresa
and aviso_recebto = p_dados_tela.num_aviso_rec
whenever error stop

if not sup3760_desfaz_relac_desp_proc() then
	let p_houve_erro = true
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("rollback transaction","exclusao nota")
	end if
return
end if

##se for integra��o on-line poder� existir lan�amentos cont�beis para o documento,
##j� que o indicador ies_incl_contab s� passar� para "s" quando for efetuado
##a integra��o cont�bil (gera��o do lote ou arquivo texto).
if not supr6_integracao_batch(p_cod_empresa) and
	supr6_data_posterior_data_corte_logix_10(p_cod_empresa,
	p_dados_tela.dat_entrada_nf) then

	if not supr6_validacao_data_inicial_e_final_processamento(p_cod_empresa,
		p_dados_tela.dat_entrada_nf,
		p_dados_tela.dat_entrada_nf,
		"manual",
		false) then
		let p_houve_erro = true
	else
		if m_dat_entrada_ant is null then
			let l_dat_entrada_nf = p_dados_tela.dat_entrada_nf
		else
			let l_dat_entrada_nf = m_dat_entrada_ant
		end if

		if not supr6_exclui_lancamento_contabil_documento("manual",
			p_cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_dados_tela.num_aviso_rec,
			l_dat_entrada_nf,
			0,false) then
			let p_houve_erro = true
		end if
	end if
end if

whenever error continue
delete from aviso_rec_proc_imp
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclus�o","aviso_rec_proc_imp")
end if

if log0150_verifica_se_tabela_existe("cap_rateio_natureza_rendto") and
	find4glfunction('capm212_cap_rateio_natureza_rendto_exclui_todos') then
	call capm212_cap_rateio_natureza_rendto_exclui_todos(p_cod_empresa,p_dados_tela.num_nf,
	p_dados_tela.ser_nf,p_dados_tela.ssr_nf,
	p_dados_tela.ies_especie_nf,p_dados_tela.cod_fornecedor,
	false,false,false)
end if

whenever error continue
delete from ar_iss
where cod_empresa = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("exclus�o","ar_iss")
end if

if sup3760_cursor_excl_sup_retn_item_terc(false) = false then
	let p_houve_erro = true
end if

if not p_houve_erro then
	whenever error continue
	open cq_exclui_grd using p_cod_empresa,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.ies_especie_nf,
	p_dados_tela.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open","sup_retn_item_terc(3)")
		let p_houve_erro = true
	end if

	if not p_houve_erro then
		while true
			whenever error continue
			fetch cq_exclui_grd into l_nf_remessa, l_seq_nf_remessa,
			l_seq_tabulacao, l_qtd_devolvida
			whenever error stop
			if sqlca.sqlcode <> 0 then
				if sqlca.sqlcode <> 100 then
					call log003_err_sql("fetch","sup_retn_item_terc(3)")
					let p_houve_erro = true
				end if

				exit while
			end if

			whenever error continue
			update sup_itterc_grade
			set sup_itterc_grade.qtd_tot_receb = sup_itterc_grade.qtd_tot_receb -
			l_qtd_devolvida
			where sup_itterc_grade.empresa       = p_cod_empresa
			and sup_itterc_grade.nota_fiscal   = l_nf_remessa
			and sup_itterc_grade.seq_item_nf   = l_seq_nf_remessa
			and sup_itterc_grade.fornecedor    = p_dados_tela.cod_fornecedor
			and sup_itterc_grade.seq_tabulacao = l_seq_tabulacao
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("update","sup_itterc_grade(3)")
				let p_houve_erro = true
			end if

			whenever error continue
			if p_houve_erro then
				exit while
			end if
		end while
	end if
end if

whenever error continue
delete from sup_retn_item_terc
where sup_retn_item_terc.empresa           = p_cod_empresa
and sup_retn_item_terc.nota_fiscal       = p_dados_tela.num_nf
and sup_retn_item_terc.serie_nota_fiscal = p_dados_tela.ser_nf
and sup_retn_item_terc.subserie_nf       = p_dados_tela.ssr_nf
and sup_retn_item_terc.espc_nota_fiscal  = p_dados_tela.ies_especie_nf
and sup_retn_item_terc.fornecedor        = p_dados_tela.cod_fornecedor
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("delete","sup_retn_item_terc(3)")
	let p_houve_erro = true
end if

#if p_ies_interf_cre = "s" then
#    if p_dados_tela.ies_especie_nf = "nfd" or
#       p_ies_tip_entrada = "5" then
#        call log0030_mensagem("atencao !!! estes dados ja foram baixados no contas a receber ","info")
#    end if
# end if
if (p_dados_tela.cod_operacao[1] = "7" or m_nfr_import) and
	#p_dados_tela.ies_especie_nf <> "nfm" and
	(p_par_sup_compl.ies_mod_importacao = "l" or
	p_par_sup_compl.ies_mod_importacao = "s") then
	if m_num_processo is not null and m_num_processo <> -1 then
		declare cq_ar_proc_imp cursor for
		select num_aviso_rec
		from aviso_rec_proc_imp
		where cod_empresa  = p_dados_tela.cod_empresa
		and num_processo = m_num_processo

		initialize l_num_ar_imp to null
		open cq_ar_proc_imp
		fetch cq_ar_proc_imp into l_num_ar_imp
		close cq_ar_proc_imp

		if l_num_ar_imp is null then
			whenever error continue
			update processo_imp
			set num_aviso_rec = null,
			ies_situacao  = "4"
			where cod_empresa      = p_dados_tela.cod_empresa
			and num_aviso_rec    is not null
			and num_aviso_rec    = p_dados_tela.num_aviso_rec
			and ies_versao_atual = "s"
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("(1)modificacao","processo_imp")
				let p_houve_erro = true
			else
				call imp0024_mov_even(p_cod_empresa,m_num_processo,
				34," ",today)
			end if
		else
			let l_num_ar_proc = sup3760_leitura_processo_imp(m_num_processo,"ar")
			if l_num_ar_proc = p_dados_tela.num_aviso_rec then
				whenever error continue
				update processo_imp
				set num_aviso_rec    = l_num_ar_imp
				where cod_empresa      = p_dados_tela.cod_empresa
				and num_processo     = m_num_processo
				and ies_versao_atual = "s"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("(2)modificacao","processo_imp")
					let p_houve_erro = true
				end if
			end if
		end if
	else
		#atualiza processo_imp conforme numero do ar
		whenever error continue
		select num_processo
		into m_num_processo
		from processo_imp
		where cod_empresa      = p_dados_tela.cod_empresa
		and num_aviso_rec    is not null
		and num_aviso_rec    = p_dados_tela.num_aviso_rec
		and ies_versao_atual = "s"
		whenever error stop

		if sqlca.sqlcode <> 0 then
			let m_num_processo = 0
		end if

		whenever error continue
		update processo_imp
		set num_aviso_rec = null,
		ies_situacao  = "4"
		where cod_empresa      = p_dados_tela.cod_empresa
		and num_aviso_rec    is not null
		and num_aviso_rec    = p_dados_tela.num_aviso_rec
		and ies_versao_atual = "s"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("(1)modificacao","processo_imp")
			let p_houve_erro = true
		else
			call imp0024_mov_even(p_cod_empresa,m_num_processo,
			34," ",today)
		end if
	end if
else
	if p_dados_tela.cod_operacao[1] = "7" then
		if p_dados_tela.ies_especie_nf = 'nfm' and
			(p_par_sup_compl.ies_mod_importacao = "l" or
			p_par_sup_compl.ies_mod_importacao = "s") then
			let m_num_processo = sup3760_busca_numero_proc_imp()
			whenever error continue
			update processo_imp
			set num_aviso_rec = null,
			ies_situacao  = "4"
			where cod_empresa      = p_dados_tela.cod_empresa
			and num_aviso_rec    is not null
			and num_aviso_rec    = p_dados_tela.num_aviso_rec
			and ies_versao_atual = "s"
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("(1)modificacao","processo_imp")
				let p_houve_erro = true
			else
				call imp0024_mov_even(p_cod_empresa,m_num_processo,
				34," ",today)
			end if
		end if
	end if
end if

if p_houve_erro = false then
	#fluxo de caixa
	call sup3760_atualizar_ordens_fluxo()
end if

if p_houve_erro = false then
	message " nota fiscal excluida com sucesso. " attribute(reverse)
	if p_ies_canc_nc = true
		then call sup376_cancela_nota_credito()
		### trybs0
		if p_houve_erro = true then
			sleep 5
			message "favor confirmar se cancelou nota de cr�dito." attribute(reverse)
		end if
	end if
	initialize p_dados_tela.*, p_cod_ret_imp to null
	initialize p_formonly.* to null
	clear form
end if
else
	call log003_err_sql("exclusao","nf_sup")
	let p_houve_erro = true
end if

if log_existe_epl('sup3760y_before_process_commit_exclusao_nota_fiscal') then
	call log_setvar('cod_empresa', p_aviso_rec.cod_empresa)
	#epl codigo da empresa
	#epl tipo: empresa.cod_empresa

	call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
	#epl numero do ar
	#epl tipo: aviso_rec.num_aviso_rec

	call log_setvar('houve_erro', p_houve_erro)
	#epl indicador se houve erro
	#epl tipo: smallint

	call sup3760y_before_process_commit_exclusao_nota_fiscal()
	let p_houve_erro = log_getvar('houve_erro')
end if

if p_houve_erro = false then
	whenever error continue
	call log085_transacao("commit")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		initialize p_msg to null
		let p_msg = "erro efetivacao dados= ", sqlca.sqlcode clipped
		call log0030_mensagem(p_msg,"stop")
		call log085_transacao("rollback") #os596059
		return
	end if
else
	whenever error continue
	call log085_transacao("rollback")
	whenever error stop
end if
end if

end function

#------------------------------------#
function sup3760_exclusao_nota_2()
#------------------------------------#
	whenever error continue
	delete from cap_sest_senat
	where empresa           = p_cod_empresa
	and ad_nf_origem      = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

	delete from cap_ret_inss_auton
	where empresa           = p_cod_empresa
	and ad_nf_origem      = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

	#requisito l_hcm001\135102
	#alterado para que quando exclui da cap_ret_inss_auton excluir tamb�m a cap_imposto_complementar
	if log0150_verifica_se_tabela_existe("cap_imposto_complementar") then
		whenever error continue
		delete from cap_imposto_complementar
		where empresa              = p_cod_empresa
		and ad_ap_nf_origem      = p_dados_tela.num_nf
		and serie_nota_fiscal    = p_dados_tela.ser_nf
		and subserie_nota_fiscal = p_dados_tela.ssr_nf
		and especie_nota_fiscal  = p_dados_tela.ies_especie_nf
		and fornecedor           = p_dados_tela.cod_fornecedor
		whenever error stop
	end if

	delete from cap_ret_inss_compl
	where empresa           = p_cod_empresa
	and ad_nf_origem      = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

	delete from cap_ret_proalminas
	where empresa           = p_cod_empresa
	and ad_nf_origem      = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

	delete from cap_iss_compl
	where empresa           = p_cod_empresa
	and ad_nota_fiscal    = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor

	delete from cap_iss_eletronico
	where empresa           = p_cod_empresa
	and ad_nota_fiscal    = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	whenever error stop

end function

#-------------------------------------------------------------------------------#
function sup3760_deleta_registro_f150(l_cod_empresa, l_num_aviso_rec)
#-------------------------------------------------------------------------------#
	define l_cod_empresa        like aviso_rec.cod_empresa,
	l_num_aviso_rec      like aviso_rec.num_aviso_rec,
	l_cod_item           like aviso_rec.cod_item,
	l_item_1             smallint,
	l_parametro_it       char(14), ### tfcejr
	l_sql_stmt           char(5000),
	l_houve_erro         smallint

	let l_houve_erro = false
	let l_sql_stmt = " delete from sup_parametro_item ",
	" where empresa = ? ",
	" and item in ( "

	let l_item_1 = false
	declare cq_item_f150 cursor for
	select distinct cod_item
	from aviso_rec
	where cod_empresa = l_cod_empresa
	and num_aviso_rec = l_num_aviso_rec
	foreach cq_item_f150 into l_cod_item
	if l_item_1 = false then
		let l_sql_stmt = l_sql_stmt clipped,"'", l_cod_item clipped,"'"
		let l_item_1 = true
	else
		let l_sql_stmt = l_sql_stmt clipped,",'", l_cod_item clipped,"'" clipped
	end if
end foreach

if l_item_1 = false then
return true
end if

### tfcejr - se tiver registro na sup_parametro_item referente registro f150 para o ar este dever� ser eliminado no
### cancelamento ou exclusao da nota
let l_parametro_it = 'f150_%_', l_num_aviso_rec using '&&&&&&','%' clipped

let l_sql_stmt = l_sql_stmt clipped, ") and parametro like ? " clipped
whenever error continue
prepare var_del_f150 from l_sql_stmt
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("prepare sql","sup_parametro_item(1)")
	let l_houve_erro = true
return false
end if

whenever error continue
execute var_del_f150 using l_cod_empresa,l_parametro_it
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("execute sql","sup_parametro_item(1)")
	let l_houve_erro = true
end if

### fim tfcejr
if l_houve_erro = true then
return false
end if
return true
end function

#------------------------------------------------#
function sup376_verifica_classificacao_sucata()
#------------------------------------------------#
	define l_contador    smallint

	let l_contador = null
	whenever error continue
	select count(*)
	into l_contador
	from tran_class_sucata
	where tran_class_sucata.cod_empresa   = p_cod_empresa
	and tran_class_sucata.num_aviso_rec = p_dados_tela.num_aviso_rec
	and tran_class_sucata.ies_status    = "1"
	whenever error stop

	if sqlca.sqlcode <> 0 or
		l_contador is null then
		let l_contador = 0
	end if

	if l_contador > 0 then
		return true
	else
		return false
	end if

end function

#-------------------------------------------------------------------#
function sup3760_exclui_nf_consig(l_tipo, l_num_aviso_rec, l_num_seq_arg)
#-------------------------------------------------------------------#

	define  l_num_transac   integer ,
	l_qtd_devolvida like item_ret_terc.qtd_devolvida,
	l_qtd_dev_cons  like nf_consig_dev.qtd_devolvida,
	l_tipo          char(20),
	l_qtd_saldo     like item_ret_terc.qtd_devolvida,
	l_num_aviso_rec like aviso_rec.num_aviso_rec,
	l_num_seq_arg   like aviso_rec.num_seq,
	l_num_seq       like aviso_rec.num_seq,
	l_cod_item      like aviso_rec.cod_item,
	l_serie_nff     char(02),
	l_num_pedido    like fat_item_grd_consg.pedido,
	l_ord_montag    like fat_item_grd_consg.ord_montag,
	l_seq_tabulacao like fat_item_grd_consg.seq_tabulacao,
	l_qtd_tot_receb like sup_itterc_grade.qtd_tot_receb,
	l_cod_cliente   like nf_consig.cod_cliente,
	p_cont          integer,
	p_cont1         integer,
	l_ies_incl_contab like item_ret_terc.ies_incl_contab,
	sql_stmt        char(1000),
	l_trans_nota_fiscal_fatura  like nf_consig_dev.trans_nota_fiscal_fatura,
	l_contr_local_terc   like par_sup_pad.par_txt,
	lr_estoque_trans     record like estoque_trans.*,
	lr_estoque_obs       record like estoque_obs.*,
	lr_estoque_trans_end record like estoque_trans_end.*,
	lr_item_em_terc      record like item_em_terc.*,
	lr_sup_itterc_grade  record like sup_itterc_grade.*,
	l_num_sequencia_ar   like item_ret_terc.num_sequencia_ar,
	l_cod_local_remessa  like motivo_remessa.cod_local_remessa

	initialize l_num_pedido, l_ord_montag,
	l_seq_tabulacao to null

	let p_num_nf_dev    = 0
	let p_num_seq_dev   = 0
	let l_qtd_dev_cons  = 0
	let l_num_transac   = 0
	let l_qtd_devolvida = 0
	let l_qtd_tot_receb = 0
	let l_contr_local_terc = sup376_busca_par_sup_pad("contr_local_terc",3)

	whenever error continue
	declare cq_ar_nf cursor with hold for
	select aviso_rec.num_seq,
	aviso_rec.cod_item
	from aviso_rec
	where aviso_rec.cod_empresa   = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_nf_sup.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","aviso_rec1")
		let p_houve_erro = true
		return
	end if


	whenever error continue
	foreach cq_ar_nf into l_num_seq,
	l_cod_item

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","aviso_rec1")
		let p_houve_erro = true
		exit foreach
	end if

	if l_tipo <> "nota" then
		if l_num_seq <> l_num_seq_arg then
			continue foreach
		end if
	end if

	let sql_stmt = " select num_nf, ",
	" num_item, ",
	" qtd_devolvida, ",
	" serie_nota_fiscal, ",
	" trans_nota_fiscal_fatura ",
	" from nf_consig_dev ",
	" where cod_empresa     = """, p_cod_empresa, """ ",
	" and aviso_recebto   = ", l_num_aviso_rec,
	" and num_nf_cliente  = ", p_nf_sup.num_nf,
	" and cod_item        = """, l_cod_item, """ "

	if l_num_seq_arg > 0 then
		let sql_stmt = sql_stmt clipped,
		" and sequencia_aviso_recebto = ", l_num_seq_arg
	end if

	whenever error continue
	prepare var_nf_consigd from sql_stmt
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("prepare","var_nf_consigd")
		let p_houve_erro = true
		exit foreach
	end if

	whenever error continue
	declare cl_nf_consigd cursor with hold for var_nf_consigd
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cl_nf_consigd")
		let p_houve_erro = true
		exit foreach
	end if

	whenever error continue
	foreach cl_nf_consigd into p_num_nf_dev, p_num_seq_dev, l_qtd_dev_cons, l_serie_nff, l_trans_nota_fiscal_fatura
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cl_nf_consigd")
		let p_houve_erro = true
		exit foreach
	end if

	whenever error continue
	update fat_ctr_terc_nf
	set qtd_devolvida = qtd_devolvida - l_qtd_dev_cons
	where empresa           = p_cod_empresa
	and trans_nota_fiscal = l_trans_nota_fiscal_fatura
	and seq_item_nf       = p_num_seq_dev
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("update","fat_ctr_terc_nf")
		let p_houve_erro = true
		exit foreach
	end if
	let l_qtd_saldo = l_qtd_dev_cons

	whenever error continue
	declare cq_ftit_grd_cons cursor for
	select fat_item_grd_consg.pedido,
	fat_item_grd_consg.ord_montag,
	fat_item_grd_consg.seq_tabulacao,
	fat_item_grd_consg.qtd_devolvida
	from fat_item_grd_consg
	where fat_item_grd_consg.empresa           = p_cod_empresa
	and fat_item_grd_consg.nota_fiscal       = p_num_nf_dev
	and fat_item_grd_consg.serie_nota_fiscal = l_serie_nff
	and fat_item_grd_consg.sequencia_item    = p_num_seq_dev
	and fat_item_grd_consg.item              = l_cod_item
	and fat_item_grd_consg.fornecedor        = p_nf_sup.cod_fornecedor
	order by fat_item_grd_consg.seq_tabulacao
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","fat_item_grd_consg")
		let p_houve_erro = true
		exit foreach
	end if

	whenever error continue
	foreach cq_ftit_grd_cons into l_num_pedido, l_ord_montag,
	l_seq_tabulacao, l_qtd_devolvida

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","fat_item_grd_consg")
		let p_houve_erro = true
		exit foreach
	end if

	if l_qtd_devolvida > 0 then
		if l_qtd_devolvida > l_qtd_saldo then
			let l_qtd_devolvida = l_qtd_devolvida - l_qtd_saldo
			let l_qtd_saldo     = 0
		else
			let l_qtd_saldo = l_qtd_saldo - l_qtd_devolvida
			let l_qtd_devolvida = 0
		end if

		whenever error continue
		update fat_item_grd_consg
		set fat_item_grd_consg.qtd_devolvida = l_qtd_devolvida
		where fat_item_grd_consg.empresa           = p_cod_empresa
		and fat_item_grd_consg.nota_fiscal       = p_num_nf_dev
		and fat_item_grd_consg.serie_nota_fiscal = l_serie_nff
		and fat_item_grd_consg.pedido            = l_num_pedido
		and fat_item_grd_consg.sequencia_item    = p_num_seq_dev
		and fat_item_grd_consg.ord_montag        = l_ord_montag
		and fat_item_grd_consg.item              = l_cod_item
		and fat_item_grd_consg.fornecedor        = p_nf_sup.cod_fornecedor
		and fat_item_grd_consg.seq_tabulacao     = l_seq_tabulacao
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","fat_item_grd_consg")
			let p_houve_erro = true
			exit foreach
		end if

		whenever error continue
		if l_qtd_saldo = 0 then
			exit foreach
		end if
	end if
end foreach
whenever error stop

free cq_ftit_grd_cons

if p_houve_erro = true then
	exit foreach
end if

let l_qtd_saldo = l_qtd_dev_cons

whenever error continue
declare cq_itterc_grade cursor for
select sup_itterc_grade.seq_tabulacao,
sup_itterc_grade.qtd_tot_receb
from sup_itterc_grade
where sup_itterc_grade.empresa     = p_cod_empresa
and sup_itterc_grade.nota_fiscal = p_num_nf_dev
and sup_itterc_grade.seq_item_nf = p_num_seq_dev
and sup_itterc_grade.fornecedor  = p_nf_sup.cod_fornecedor
order by sup_itterc_grade.seq_tabulacao
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("declare","sup_itterc_grade")
	let p_houve_erro = true
	exit foreach
end if

whenever error continue
foreach cq_itterc_grade into l_seq_tabulacao, l_qtd_tot_receb
whenever error stop

if sqlca.sqlcode <> 0 then
	call log003_err_sql("foreach","sup_itterc_grade")
	let p_houve_erro = true
	exit foreach
end if

if l_qtd_tot_receb > 0 then
	if l_qtd_tot_receb > l_qtd_saldo then
		let l_qtd_tot_receb = l_qtd_tot_receb - l_qtd_saldo
		let l_qtd_saldo     = 0
	else
		let l_qtd_saldo = l_qtd_saldo - l_qtd_tot_receb
		let l_qtd_tot_receb = 0
	end if

	whenever error continue
	update sup_itterc_grade
	set sup_itterc_grade.qtd_tot_receb = l_qtd_tot_receb
	where sup_itterc_grade.empresa       = p_cod_empresa
	and sup_itterc_grade.nota_fiscal   = p_num_nf_dev
	and sup_itterc_grade.seq_item_nf   = p_num_seq_dev
	and sup_itterc_grade.fornecedor    = p_nf_sup.cod_fornecedor
	and sup_itterc_grade.seq_tabulacao = l_seq_tabulacao
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("update","sup_itterc_grade")
		let p_houve_erro = true
		exit foreach
	end if

	whenever error continue
	if l_qtd_saldo = 0 then
		exit foreach
	end if
end if
end foreach
whenever error stop

free cq_itterc_grade
if p_houve_erro = true then
	continue foreach
end if

whenever error continue
select * into lr_item_em_terc.*
from item_em_terc
where item_em_terc.cod_empresa    = p_cod_empresa
and item_em_terc.num_nf         = p_num_nf_dev
and item_em_terc.num_sequencia  = p_num_seq_dev
and item_em_terc.cod_fornecedor = p_nf_sup.cod_fornecedor
whenever error stop
if sqlca.sqlcode = 0 then
	whenever error continue
	update item_em_terc
	set qtd_tot_recebida = qtd_tot_recebida - l_qtd_dev_cons
	where item_em_terc.cod_empresa    = p_cod_empresa
	and item_em_terc.num_nf         = p_num_nf_dev
	and item_em_terc.num_sequencia  = p_num_seq_dev
	and item_em_terc.cod_fornecedor = p_nf_sup.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode = 0 then
		let l_qtd_devolvida = 0

		if l_contr_local_terc is not null and l_contr_local_terc <> " " then
			whenever error continue
			select cod_local_remessa into l_cod_local_remessa
			from motivo_remessa
			where cod_empresa        = p_cod_empresa
			and cod_motivo_remessa = lr_item_em_terc.cod_motivo_remessa
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("select","motivo_remessa")
				let p_houve_erro = true
				return false
			end if
		end if


		whenever error continue
		declare cq_item_ret_terc20 cursor for
		select num_transac ,qtd_devolvida, ies_incl_contab, num_sequencia_ar
		from item_ret_terc
		where item_ret_terc.cod_empresa      = p_cod_empresa
		and item_ret_terc.num_nf           = p_nf_sup.num_nf
		and item_ret_terc.ser_nf           = p_nf_sup.ser_nf
		and item_ret_terc.ssr_nf           = p_nf_sup.ssr_nf
		and item_ret_terc.ies_especie_nf   = p_nf_sup.ies_especie_nf
		and item_ret_terc.cod_fornecedor   = p_nf_sup.cod_fornecedor
		and item_ret_terc.num_nf_remessa   = p_num_nf_dev
		and item_ret_terc.num_sequencia_nf = p_num_seq_dev
		whenever error stop

		whenever error continue
		foreach cq_item_ret_terc20 into l_num_transac ,l_qtd_devolvida, l_ies_incl_contab, l_num_sequencia_ar
		if l_qtd_devolvida = l_qtd_dev_cons then
			if l_contr_local_terc is not null and l_contr_local_terc <> " " then
				#movimenta estoque
				whenever error continue
				declare cq_sup_itterc_grade cursor for
				select *
				from sup_itterc_grade
				where sup_itterc_grade.empresa     = p_cod_empresa
				and sup_itterc_grade.nota_fiscal = p_num_nf_dev
				and sup_itterc_grade.seq_item_nf = p_num_seq_dev
				and sup_itterc_grade.fornecedor  = p_nf_sup.cod_fornecedor
				and sup_itterc_grade.seq_tabulacao = l_seq_tabulacao
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("select","sup_itterc_grade")
					let p_houve_erro = true
					return false
				end if

				foreach cq_sup_itterc_grade into lr_sup_itterc_grade.*

				initialize lr_estoque_obs.*, lr_estoque_trans.*, lr_estoque_trans_end.* to null
				let lr_estoque_trans.cod_empresa = p_cod_empresa
				let lr_estoque_trans.cod_item    = lr_item_em_terc.cod_item
				let lr_estoque_trans.dat_movto   = today
				let lr_estoque_trans.dat_ref_moeda_fort = today
				let lr_estoque_trans.cod_operacao       = l_contr_local_terc
				let lr_estoque_trans.num_docum          = p_nf_sup.num_aviso_rec
				let lr_estoque_trans.num_seq            = l_num_sequencia_ar
				let lr_estoque_trans.ies_tip_movto      = 'n'
				let lr_estoque_trans.qtd_movto          = l_qtd_dev_cons
				let lr_estoque_trans.cus_unit_movto_p   = 0
				let lr_estoque_trans.cus_tot_movto_p    = 0
				let lr_estoque_trans.cus_unit_movto_f   = 0
				let lr_estoque_trans.cus_tot_movto_f    = 0
				let lr_estoque_trans.num_conta          = lr_item_em_terc.num_conta
				let lr_estoque_trans.num_secao_requis   = null
				let lr_estoque_trans.cod_local_est_orig = lr_sup_itterc_grade.local
				let lr_estoque_trans.cod_local_est_dest = l_cod_local_remessa
				let lr_estoque_trans.num_lote_orig      = lr_sup_itterc_grade.lote
				let lr_estoque_trans.num_lote_dest      = lr_sup_itterc_grade.lote
				let lr_estoque_trans.ies_sit_est_orig   = lr_sup_itterc_grade.sit_qtd
				let lr_estoque_trans.ies_sit_est_dest   = lr_sup_itterc_grade.sit_qtd
				let lr_estoque_trans.cod_turno          = null
				let lr_estoque_trans.nom_usuario        = p_user
				let lr_estoque_trans.dat_proces         = today
				let lr_estoque_trans.hor_operac         = time
				let lr_estoque_trans.num_prog           = "sup3760"

				if find4glfunction('supr91_verifica_nf_armazem') then
					if supr91_verifica_nf_armazem(p_cod_empresa, ' ', p_nf_sup.num_aviso_rec) then
						let lr_estoque_trans.ies_sit_est_dest = 'i'
					end if
				end if

				let lr_estoque_trans_end.cod_empresa       = p_cod_empresa
				let lr_estoque_trans_end.endereco          = lr_sup_itterc_grade.endereco
				let lr_estoque_trans_end.num_volume        = lr_sup_itterc_grade.num_volume
				let lr_estoque_trans_end.qtd_movto         = l_qtd_dev_cons
				let lr_estoque_trans_end.cod_grade_1       = lr_sup_itterc_grade.grade_1
				let lr_estoque_trans_end.cod_grade_2       = lr_sup_itterc_grade.grade_2
				let lr_estoque_trans_end.cod_grade_3       = lr_sup_itterc_grade.grade_3
				let lr_estoque_trans_end.cod_grade_4       = lr_sup_itterc_grade.grade_4
				let lr_estoque_trans_end.cod_grade_5       = lr_sup_itterc_grade.grade_5
				let lr_estoque_trans_end.dat_hor_prod_ini  = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.dat_hor_prod_fim  = extend("1900-01-01 00:00:00", year to second)
				let lr_estoque_trans_end.vlr_temperatura   = 0
				let lr_estoque_trans_end.endereco_origem   = lr_sup_itterc_grade.endereco
				let lr_estoque_trans_end.num_ped_ven       = 0
				let lr_estoque_trans_end.num_seq_ped_ven   = 0
				let lr_estoque_trans_end.dat_hor_producao  = lr_sup_itterc_grade.dat_hor_producao
				let lr_estoque_trans_end.dat_hor_validade  = lr_sup_itterc_grade.dat_hor_valid
				let lr_estoque_trans_end.num_peca          = lr_sup_itterc_grade.peca
				let lr_estoque_trans_end.num_serie         = lr_sup_itterc_grade.serie_peca
				let lr_estoque_trans_end.comprimento       = lr_sup_itterc_grade.comprimento
				let lr_estoque_trans_end.largura           = lr_sup_itterc_grade.largura
				let lr_estoque_trans_end.altura            = lr_sup_itterc_grade.altura
				let lr_estoque_trans_end.diametro          = lr_sup_itterc_grade.diametro
				let lr_estoque_trans_end.dat_hor_reserv_1  = lr_sup_itterc_grade.dat_hor_reserva_1
				let lr_estoque_trans_end.dat_hor_reserv_2  = lr_sup_itterc_grade.dat_hor_reserva_2
				let lr_estoque_trans_end.dat_hor_reserv_3  = lr_sup_itterc_grade.dat_hor_reserva_3
				let lr_estoque_trans_end.qtd_reserv_1      = lr_sup_itterc_grade.qtd_reservada_1
				let lr_estoque_trans_end.qtd_reserv_2      = lr_sup_itterc_grade.qtd_reservada_2
				let lr_estoque_trans_end.qtd_reserv_3      = lr_sup_itterc_grade.qtd_reservada_3
				let lr_estoque_trans_end.num_reserv_1      = lr_sup_itterc_grade.num_reserva_1
				let lr_estoque_trans_end.num_reserv_2      = lr_sup_itterc_grade.num_reserva_2
				let lr_estoque_trans_end.num_reserv_3      = lr_sup_itterc_grade.num_reserva_3
				let lr_estoque_trans_end.tex_reservado     = lr_sup_itterc_grade.texto_reservado
				let lr_estoque_trans_end.cus_unit_movto_p  = 0
				let lr_estoque_trans_end.cus_unit_movto_f  = 0
				let lr_estoque_trans_end.cus_tot_movto_p   = 0
				let lr_estoque_trans_end.cus_tot_movto_f   = 0
				let lr_estoque_trans_end.cod_item          = lr_item_em_terc.cod_item
				let lr_estoque_trans_end.dat_movto         = today
				let lr_estoque_trans_end.cod_operacao      = l_contr_local_terc
				let lr_estoque_trans_end.ies_tip_movto     = 'n'
				let lr_estoque_trans_end.num_prog          = "sup3760"

				if sup097_movto_estoque(lr_estoque_trans.*,
					lr_estoque_obs.*,
					lr_estoque_trans_end.*,
					0) = false then
					let p_houve_erro = true
					return false
				end if
			end foreach
		end if

		#inicio sdhnrc
		if l_ies_incl_contab <> "n" then
			if sup3760_exclui_contab_terc(p_cod_empresa,p_num_nf_dev,
				p_nf_sup.cod_fornecedor, p_nf_sup.num_nf,
				p_nf_sup.ies_especie_nf, p_num_seq_dev,0, "4") then
				whenever error continue
				delete from item_ret_terc
				where item_ret_terc.cod_empresa = p_cod_empresa
				and item_ret_terc.num_transac = l_num_transac
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("exclusao","item_ret_terc")
					let p_houve_erro = true
					exit foreach
				end if
			else
				call log0030_mensagem("n�o � permitido a exclus�o. nota fiscal associada a um retorno benef j� contabilizado e efetivado na contabilidade","exclamation")
				let p_houve_erro = true
				return false
			end if
		else
			whenever error continue
			delete from item_ret_terc
			where item_ret_terc.cod_empresa = p_cod_empresa
			and item_ret_terc.num_transac = l_num_transac
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("exclusao","item_ret_terc")
				let p_houve_erro = true
				exit foreach
			end if
		end if
		#fim sdhnrc
		## 408466 (alterado na os 404133)
		#excluir a sup_retn_item_terc
		whenever error continue
		delete from sup_retn_item_terc
		where empresa           = p_cod_empresa
		and nota_fiscal       = p_nf_sup.num_nf
		and serie_nota_fiscal = p_nf_sup.ser_nf
		and subserie_nf       = p_nf_sup.ssr_nf
		and espc_nota_fiscal  = p_nf_sup.ies_especie_nf
		and fornecedor        = p_nf_sup.cod_fornecedor
		and seq_aviso_recebto = l_num_seq
		and nf_remessa        = p_num_nf_dev
		and seq_nf_remessa    = p_num_seq_dev
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","sup_retn_item_terc(4)")
			let p_houve_erro = true
			exit foreach
		end if
	end if
end foreach
whenever error stop
end if
end if

if p_houve_erro = true then
	exit foreach
end if

end foreach
whenever error stop

if p_houve_erro = true then
	exit foreach
end if

if l_num_seq_arg > 0 then
	whenever error continue
	delete from nf_consig_dev
	where cod_empresa             = p_cod_empresa
	and serie_nota_fiscal       = l_serie_nff
	and num_nf                  = p_num_nf_dev
	and cod_item                = l_cod_item
	and aviso_recebto           = l_num_aviso_rec
	and sequencia_aviso_recebto = l_num_seq_arg
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","nf_consig_dev")
		let p_houve_erro = true
		exit foreach
	end if
else
	whenever error continue
	delete from nf_consig_dev
	where cod_empresa             = p_cod_empresa
	and serie_nota_fiscal       = l_serie_nff
	and num_nf                  = p_num_nf_dev
	and cod_item                = l_cod_item
	and aviso_recebto           = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclusao","nf_consig_dev")
		let p_houve_erro = true
		exit foreach
	end if
end if

end foreach
whenever error stop

end function

#--------------------------------------#
function sup376_exclui_pedagio_frete()
#--------------------------------------#

	whenever error continue
	select pedagio_frete.cod_empresa
	from pedagio_frete
	where cod_empresa    = p_cod_empresa
	and num_nf_conhec  = p_nf_sup.num_nf
	and ser_nf_conhec  = p_nf_sup.ser_nf
	and ssr_nf_conhec  = p_nf_sup.ssr_nf
	and ies_especie_nf = p_nf_sup.ies_especie_nf
	and cod_fornecedor = p_nf_sup.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode = 0 then
		whenever error continue
		delete from pedagio_frete
		where cod_empresa    = p_cod_empresa
		and num_nf_conhec  = p_nf_sup.num_nf
		and ser_nf_conhec  = p_nf_sup.ser_nf
		and ssr_nf_conhec  = p_nf_sup.ssr_nf
		and ies_especie_nf = p_nf_sup.ies_especie_nf
		and cod_fornecedor = p_nf_sup.cod_fornecedor
		whenever error stop
	end if

end function

#-----------------------------------------#
function sup3760_desfaz_relac_desp_proc()
#-----------------------------------------#
	define l_ind              smallint,
	l_qtd_rateio       like imp_desp_proc_item.val_rateio,
	l_saldo            like imp_desp_proc_item.val_rateio,
	l_houve_erro       smallint,
	l_count            smallint

	define lr_desp_proc_item  record like imp_desp_proc_item.*

	let l_houve_erro   = false
	let m_num_processo = sup3760_busca_numero_processo_importacao()

# vari�vel m_existe_despprit - verifica se tabela existe
	if m_existe_despprit then
		initialize l_count to null
		whenever error continue
		select count(*)
		into l_count
		from imp_desp_proc_item
		where empresa  = p_cod_empresa
		and processo = m_num_processo
		whenever error stop
		if l_count is null then
			let l_count = 0
		end if
		if sqlca.sqlcode <> -206 and l_count > 0 then
			for l_ind = 1 to m_count_seq
				declare cq_desf_relac cursor for
				select *
				from imp_desp_proc_item
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_aviso_rec.num_aviso_rec
				and sequencia_recebto = ma_inf_ar[l_ind].num_seq
				and sequencia_rateio  = 0

				foreach cq_desf_relac into lr_desp_proc_item.*
				let m_num_processo = lr_desp_proc_item.processo
				whenever error continue
				initialize l_qtd_rateio to null
				select sum(qtd_rateio)
				into l_qtd_rateio
				from imp_desp_proc_item
				where empresa           = lr_desp_proc_item.empresa
				and processo          = lr_desp_proc_item.processo
				and aviso_recebto     is null
				and sequencia_recebto is null
				and despesa           = lr_desp_proc_item.despesa
				and sequencia_despesa = lr_desp_proc_item.sequencia_despesa
				and pedido            = lr_desp_proc_item.pedido
				and ordem_compra      = lr_desp_proc_item.ordem_compra
				whenever error stop
				if l_qtd_rateio is null then
					let l_qtd_rateio = 0
				end if
				let l_saldo = lr_desp_proc_item.qtd_rateio + l_qtd_rateio
				whenever error continue
				delete from imp_desp_proc_item
				where empresa           = lr_desp_proc_item.empresa
				and processo          = lr_desp_proc_item.processo
				and aviso_recebto     = lr_desp_proc_item.aviso_recebto
				and sequencia_recebto = lr_desp_proc_item.sequencia_recebto
				and despesa           = lr_desp_proc_item.despesa
				and sequencia_despesa = lr_desp_proc_item.sequencia_despesa
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("exclusao","imp_desp_proc_item")
					let l_houve_erro = true
					exit foreach
				end if

				whenever error continue
				delete from imp_desp_proc_item
				where empresa           = lr_desp_proc_item.empresa
				and processo          = lr_desp_proc_item.processo
				and aviso_recebto     is null
				and sequencia_recebto is null
				and despesa           = lr_desp_proc_item.despesa
				and sequencia_despesa = lr_desp_proc_item.sequencia_despesa
				and pedido            = lr_desp_proc_item.pedido
				and ordem_compra      = lr_desp_proc_item.ordem_compra
				whenever error stop
				if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
					call log003_err_sql("exclusao","imp_desp_proc_item")
					let l_houve_erro = true
					exit foreach
				end if

				whenever error continue
				insert into imp_desp_proc_item values(lr_desp_proc_item.empresa,
				lr_desp_proc_item.processo,
				lr_desp_proc_item.despesa,
				lr_desp_proc_item.sequencia_despesa,
				null,
				null,
				lr_desp_proc_item.pedido,
				lr_desp_proc_item.ordem_compra,
				l_saldo,
				0,
				lr_desp_proc_item.sequencia_rateio,
				lr_desp_proc_item.qtd_rateio_imp,
				lr_desp_proc_item.val_rateio_imp)
				whenever error stop

				if sqlca.sqlcode <> 0 then
					call log003_err_sql("inclusao","imp_desp_proc_item")
					let l_houve_erro = true
					exit foreach
				end if
			end foreach
			if l_houve_erro then
				exit for
			end if
		end for
	end if
end if

if l_houve_erro then
return false
end if
return true
end function

#-----------------------------#
function sup376_nfe_emitida()
#-----------------------------#
	define l_ies_nfe_emit      like nfe_sup_compl.ies_nfe_emit,
	l_ies_alt_nfe_emit  char(01)

	let l_ies_nfe_emit = " "

	select ies_nfe_emit
	into l_ies_nfe_emit
	from nfe_sup_compl
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec

	if l_ies_nfe_emit clipped is null then
		let l_ies_nfe_emit = "n"
	end if

	# ---- 598943/610663 ---- #
	if l_ies_nfe_emit = "n" then
		whenever error continue
		select "s"
		into l_ies_nfe_emit
		from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro         = 'num_nf_atualizado'
		whenever error stop

		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			call log003_err_sql("select","sup_par_ar")
		end if
	end if
	# ---- 598943/610663 ---- #

	let l_ies_alt_nfe_emit = " " #sdimco

	whenever error continue
	select par_ies
	into l_ies_alt_nfe_emit #sdimco
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "ies_alt_nfe_emit"
	whenever error stop

	if sqlca.sqlcode <> 0 or l_ies_alt_nfe_emit clipped is null then
		let l_ies_alt_nfe_emit = "n"
	end if

	if l_ies_nfe_emit = "s" and l_ies_alt_nfe_emit = "n" then
		return true
	else
		return false
	end if

end function

#------------------------------------#
function sup376_existe_frete_relac()
#------------------------------------#
	define l_conhec like nf_sup.num_conhec

	initialize l_conhec to null
	select num_conhec
	into l_conhec
	from nf_sup
	where nf_sup.cod_empresa   = p_cod_empresa
	and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
	if l_conhec is null or
		l_conhec = " " then
		let l_conhec = 0
	end if

	if l_conhec <> 0 then
		return true
	end if

return false
end function

#--------------------------#
function sup376_copia_nf()
#--------------------------#
	define l_tela_ativa            smallint

	initialize m_msg_nfm_total to null ## sdizen
	let l_tela_ativa = true
	call log130_procura_caminho("sup37609") returning comando3
	open window w_sup37609 at 5,22 with form comando3
	attribute(border, message line last, prompt line last, comment line last,form line 1)

	let int_flag =0
	initialize p_ordens, p_ordens_p1, p_ordens_p2, p_ordens_p3, p_ordens_p4, p_ordens_p5, p_ordens_p6, p_ordens_p7, p_ordens_p8 to null
	initialize p_pedidos, p_pedidos_p1, p_pedidos_p2, p_pedidos_p3, p_pedidos_p4, p_pedidos_p5, p_pedidos_p6 to null
	initialize p_prog_ordem to null
	initialize p_prog_ordem1 to null
	initialize p_prog_ordem2 to null
	initialize p_prog_ordem3 to null
	initialize p_prog_ordem4 to null

	initialize p_pedidos_p7                                             to null
	initialize p_pedidos_p8                                             to null
	initialize p_pedidos_p9                                             to null
	initialize p_pedidos_p10                                            to null
	initialize p_pedidos_p11                                            to null
	initialize p_pedidos_p12                                            to null
	initialize p_ordens_p9                                              to null
	initialize p_ordens_p10                                             to null
	initialize p_ordens_p11                                             to null
	initialize p_ordens_p12                                             to null
	initialize p_ordens_p13                                             to null
	initialize p_ordens_p14                                             to null
	initialize p_ordens_p15                                             to null
	initialize p_ordens_p16                                             to null
	initialize p_prog_ordem5                                            to null
	initialize p_prog_ordem6                                            to null
	initialize p_prog_ordem7                                            to null
	initialize p_prog_ordem8                                            to null

	initialize p_aviso_rec_compl.* to null
	initialize p_array, p_array_dev_trans to null
	initialize p_array_compl to null
	initialize p_cod_ret_imp to null

	input by name m_dados_copia.* without defaults

	before field num_nf_dest
	call sup3760_save_cur_field_name('num_nf_dest')
	after field num_nf_dest
	if m_dados_copia.num_nf_dest is null or
		m_dados_copia.num_nf_dest = " " then
		error " nota fiscal destino deve ser informada "
	next field num_nf_dest
end if

before field ser_nf_dest
let m_dados_copia.ser_nf_dest = p_dados_tela.ser_nf
display m_dados_copia.ser_nf_dest to ser_nf_dest
call sup3760_save_cur_field_name('ser_nf_dest')

after field ser_nf_dest
if m_serie_branca = "s" then
	if m_dados_copia.ser_nf_dest is null then
		let m_dados_copia.ser_nf_dest = " "
	end if
else
	if m_dados_copia.ser_nf_dest is null or
		m_dados_copia.ser_nf_dest = " " then
		error " serie nota fiscal destino deve ser informada "
	next field ser_nf_dest
end if
end if
if not sup3760_consiste_ser_nf(m_dados_copia.ser_nf_dest) then
	### tvqwx0 - retirada verifica��o variavel m_ser_nfe para que n�o valide apenas s�rie num�rica.
	call log0030_mensagem('s�rie da nota fiscal inv�lida conforme legisla��o de icms nacional.\ns�o v�lidos somente 1 � 9,b,c,d,u,bu,cu,du,(branco) e as s�ries cadastradas no sup1371.','exclamation')
next field ser_nf_dest
end if


before field ssr_nf_dest
let m_dados_copia.ssr_nf_dest = p_dados_tela.ssr_nf
display m_dados_copia.ssr_nf_dest to ssr_nf_dest

call sup3760_save_cur_field_name('ssr_nf_dest')
after field ssr_nf_dest
if m_dados_copia.ssr_nf_dest is null or
	m_dados_copia.ssr_nf_dest = " " then
	error " sub-serie nota fiscal destino deve ser informada "
next field ssr_nf_dest
end if

before field fornec_dest
let m_dados_copia.fornec_dest = p_dados_tela.cod_fornecedor
display m_dados_copia.fornec_dest to fornec_dest
call sup3760_botao_zoom("on",1,23)
call sup3760_save_cur_field_name('fornec_dest')

after field fornec_dest
call sup3760_botao_zoom("off",1,23)
if m_dados_copia.fornec_dest is null or
	m_dados_copia.fornec_dest = " " then
	error " fornecedor nota fiscal destino deve ser informada "
next field fornec_dest
end if

before field ies_nf_aguard_nfe_dest
let m_dados_copia.ies_nf_aguard_nfe_dest = p_dados_tela.ies_nf_aguard_nfe
display m_dados_copia.ies_nf_aguard_nfe_dest to ies_nf_aguard_nfe_dest
call sup3760_save_cur_field_name('ies_nf_aguard_nfe_dest')

after field ies_nf_aguard_nfe_dest
if m_dados_copia.ies_nf_aguard_nfe_dest is null or
	m_dados_copia.ies_nf_aguard_nfe_dest = " " then
	error " tipo nota fiscal destino deve ser informada "
next field ies_nf_aguard_nfe_dest
end if
let p_entrou_pedido = "n"
whenever error continue
select cod_empresa
from nf_sup
where cod_empresa = p_cod_empresa
and num_nf = m_dados_copia.num_nf_dest
and ser_nf = m_dados_copia.ser_nf_dest
and ssr_nf = m_dados_copia.ssr_nf_dest
and cod_fornecedor = m_dados_copia.fornec_dest
if sqlca.sqlcode = 0 then
	error "nota fiscal j� cadastrada."
next field num_nf_dest
end if
whenever error stop

on key (control-z, f4)
case
when infield(fornec_dest)
let m_dados_copia.fornec_dest = sup162_popup_fornecedor()
current window is w_sup37609
if m_dados_copia.fornec_dest is not null  then
	display m_dados_copia.fornec_dest to fornec_dest
end if
end case
end input

if int_flag = 0 then
	if log004_confirm(22,44) then
		close window w_sup37609
		current window is w_sup37601
		let l_tela_ativa = false
		call sup376_processa_copia()
	end if
end if

if l_tela_ativa = true then
	close window w_sup37609
end if

current window is w_sup37601

end function

#---------------------------------------------#
function sup3760_valida_cnd_pgto_nf(l_funcao)
#---------------------------------------------#
	define l_funcao        char(30),
	l_num_pedido    like aviso_rec.num_pedido,
	l_forn_possui_pc smallint

## 500471
	if (p_dados_tela.ies_nf_aguard_nfe = "7" or #os500471
		(m_nf_aguard_nfe_ant is not null and
		m_nf_aguard_nfe_ant = 7)) then
		if p_array_pedidos[1].num_pedido is not null or
			p_array_compl[1].num_pedido is not null then #os500471
			if p_dados_tela.ies_especie_nf <> "nfr" then
				return true
			end if
		end if
	end if

	if p_dados_tela.cnd_pgto_nf is null then
		error " informe a condicao de pagamento."
		return false
	end if
	if sup376_verifica_cnd_pgto() then
		error "condicao de pagamento nao cadastrada"
		return false
	end if


	if p_ies_pagamento = "1" then
		error " tipo da condicao de pagamento nao pode ser pago. "
		return false
	end if

	if p_ies_pagamento = "2" then
		if p_dados_tela.ies_especie_nf = "nfd" or
			p_ies_tip_entrada = "5" then
			if sup376_verifica_cli_especial("2") = false then
				error "condicao de pagamento invalida para codigo de operacao"
				return false
			end if
		end if
##### os 45648 - permite entrada via contas a pagar para que a contabilizacao
#####           , nas devolucoes, seja lancada no respectivo cliente
		if p_dados_tela.ies_especie_nf = "nfr" then
			error "condicao de pagamento invalida para a especie "
			return false
		end if
		if p_dados_tela.ies_especie_nf = "nfc" then
			if l_funcao = "modificacao" then
				whenever error continue
				initialize l_num_pedido to null
				select num_pedido
				into l_num_pedido
				from aviso_rec
				where cod_empresa   = p_cod_empresa
				and num_aviso_rec = p_dados_tela.num_aviso_rec
				and num_seq       = 1
				whenever error stop

				if l_num_pedido is null then
					if p_ies_pagamento = "2" then
						if (p_par_sup_compl.ies_nf_compl_preco = "3" or
							p_par_sup_compl.ies_nf_compl_preco = "4") and
							p_ies_entr_sem_ped = false then
							error "empresa nao permite entrada de nfc sem pedido de compra"
							return false
						end if
					end if
				end if
			else
				if (p_pedidos[1,5] = "xxxxx") or
					(p_pedidos is null)        then
					if p_ies_pagamento = "2" then
						if (p_par_sup_compl.ies_nf_compl_preco = "3" or
							p_par_sup_compl.ies_nf_compl_preco = "4") and
							p_ies_entr_sem_ped = false then
							error "empresa nao permite entrada de nfc sem pedido de compra"
							return false
						end if
					end if
				end if
			end if
		end if
		if p_dados_tela.ies_especie_nf = "nfe" then
			if l_funcao = "modificacao" then
				whenever error continue
				initialize l_num_pedido to null
				select num_pedido
				into l_num_pedido
				from aviso_rec
				where cod_empresa   = p_cod_empresa
				and num_aviso_rec = p_dados_tela.num_aviso_rec
				and num_seq       = 1
				whenever error stop

				if l_num_pedido is null then
					if p_ies_pagamento = "2" then
						if (p_par_sup_compl.ies_nf_compl_preco = "2" or
							p_par_sup_compl.ies_nf_compl_preco = "4") and
							p_ies_entr_sem_ped = false then
							error "empresa nao permite entrada de nfe sem pedido de compra."
							return false
						end if
					end if
				end if
			else
				if (p_pedidos[1,5] = "xxxxx") or
					(p_pedidos is null)        then
					if p_ies_pagamento = "2" then
						if (p_par_sup_compl.ies_nf_compl_preco = "2" or
							p_par_sup_compl.ies_nf_compl_preco = "4") and
							p_ies_entr_sem_ped = false then
							error "empresa nao permite entrada de nfe sem pedido de compra."
							return false
						end if
					end if
				end if
			end if
		end if
		if p_dados_tela.ies_especie_nf <> "nfr" and
			p_dados_tela.ies_especie_nf <> "nfd" and
			p_dados_tela.ies_especie_nf <> "nfc" and
			p_dados_tela.ies_especie_nf <> "con" and
			p_dados_tela.ies_especie_nf <> "nfe" then
			if p_par_sup.ies_entrada_sem_pc = "n" and
				p_ies_informou_ped = "n" and
				p_ies_entr_sem_ped = false then

				let l_forn_possui_pc = true
				if find4glfunction('supy5_fornecedor_possue_pc_oc') then
					let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
				end if

				if l_forn_possui_pc then
					if find4glfunction('supy23_valida_pc') then
						if supy23_valida_pc() = true or
							(supy23_valida_pc() = false and sup0812_verifica_nota_transferencia(p_cod_empresa,
							p_dados_tela.num_aviso_rec,
							p_dados_tela.num_nf,
							p_dados_tela.ser_nf,
							p_dados_tela.ssr_nf,
							p_dados_tela.cod_fornecedor,
							p_dados_tela.cod_operacao,
							p_dados_tela.cod_fiscal_compl) = false) then
							error "funcao nao permitida, empresa nao permite entrada sem pedido de compra"
							return false
						end if
					end if
				end if
			else
				if l_funcao <> "modificacao" then
					if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
						if p_array_pedidos[1].num_pedido is null or
							p_array_pedidos[1].num_pedido = " " then
							call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
							return false
						end if
					end if
				end if
			end if
		end if
	end if

return true
end function

#--------------------------------#
function sup376_processa_copia()
#--------------------------------#
	define p_ind_insert          smallint,
	p_par_forn            char(01),
	l_caminho             char(100),
	l_item_wis            smallint,
	l_sucesso             smallint,
	l_status              smallint,
	l_cfop_destino        like aviso_rec.cod_fiscal_item,
	l_data                datetime year to second,
	l_num_di_compl        decimal(15,0),
	l_cod_transp_nac      like proc_imp_compl.cod_transp_nac,
	l_cod_empresa_orig    char(02)

	let p_ind_insert = 0
	let int_flag = 0
	let p_houve_erro = 0

	let m_num_ar_ant     = p_dados_tela.num_aviso_rec
	let m_num_nf_ant     = p_dados_tela.num_nf

	select *
	into p_nf_sup.*
	from nf_sup
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = m_num_ar_ant

	let p_nf_sup.num_nf             = m_dados_copia.num_nf_dest
	let p_nf_sup.ser_nf             = m_dados_copia.ser_nf_dest
	let p_nf_sup.ssr_nf             = m_dados_copia.ssr_nf_dest
	let p_nf_sup.cod_fornecedor     = m_dados_copia.fornec_dest
	let p_nf_sup.ies_nf_aguard_nfe  = m_dados_copia.ies_nf_aguard_nfe_dest
	let p_nf_sup.ies_incl_cap       = "n"
	let p_nf_sup.ies_incl_contab    = "n"
	let p_nf_sup.dat_emis_nf        = today
	let p_nf_sup.dat_entrada_nf     = today
	let p_houve_erro                = false
	let p_nf_sup.num_conhec         = 0
	let p_nf_sup.ser_conhec         = " "
	let p_nf_sup.ssr_conhec         = 0
	let p_nf_sup.cod_transpor       = 0

	let p_dados_tela.ies_nf_aguard_nfe = p_nf_sup.ies_nf_aguard_nfe
	let p_dados_tela.cod_fornecedor    = p_nf_sup.cod_fornecedor
	let p_dados_tela.num_nf            = p_nf_sup.num_nf
	let p_dados_tela.ser_nf            = p_nf_sup.ser_nf
	let p_dados_tela.ssr_nf            = p_nf_sup.ssr_nf
	let p_dados_tela.ies_especie_nf    = p_nf_sup.ies_especie_nf
	let p_dados_tela.dat_emis_nf       = p_nf_sup.dat_emis_nf
	let p_dados_tela.dat_entrada_nf    = p_nf_sup.dat_entrada_nf
	let p_dados_tela.cod_empresa_estab = p_nf_sup.cod_empresa_estab
	let p_dados_tela.cnd_pgto_nf       = p_nf_sup.cnd_pgto_nf
	let p_dados_tela.cod_mod_embar     = p_nf_sup.cod_mod_embar

	initialize l_status,
	p_ies_tip_entrada,
	m_ies_obj_entrada to null

	let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_nf_sup.cnd_pgto_nf)
	if l_cod_empresa_orig is not null then
		let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
	end if

	let p_ies_pagamento = p_cond_pgto_cap.ies_pagamento

	if sup3760_verifica_copia_sem_pedido() = false then
		return
	end if

	call log085_transacao("begin")
	if sup376_obtem_num_aviso_rec_copia() = false then
		call log0030_mensagem(" parametros n�o encontrados","exclamation")
		call log085_transacao("rollback")
		return
	else
		whenever error continue
		call log085_transacao("commit")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let p_msg = "erro na efetiva��o dos dados. sqlca.sqlcode = ", sqlca.sqlcode clipped
			call log0030_mensagem(p_msg,"stop")
			call log085_transacao("rollback")
			return
		end if
	end if

	let p_nf_sup.num_aviso_rec  = p_dados_tela.num_aviso_rec

	call sup0686_retorna_tip_obj_entrada(p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl)
returning l_status,
	p_ies_tip_entrada,
	m_ies_obj_entrada

	while true
		message " aguarde ... efetuando copia  da nota fiscal ... " attribute(reverse)

		call log085_transacao("begin")

		let p_cont_aut_terc = false
		let p_aguarda_fatura = "n"

		let p_ind = 0
		declare cm_ar_copia cursor for
		select *
		from aviso_rec
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = m_num_ar_ant
		foreach cm_ar_copia into p_aviso_rec.*
		let p_ind = p_ind + 1

		#trogvb
		let m_num_oc_ant     = p_aviso_rec.num_oc
		let m_num_pedido_ant = p_aviso_rec.num_pedido

		let p_array[p_ind].seq              = p_ind
		let p_array[p_ind].cod_item         = p_aviso_rec.cod_item
		let p_array[p_ind].qtd_declarad_nf  = p_aviso_rec.qtd_declarad_nf
		let p_array[p_ind].cod_unid_med_nf  = p_aviso_rec.cod_unid_med_nf
		let p_array[p_ind].pre_unit_nf      = p_aviso_rec.pre_unit_nf
		let p_array[p_ind].val_liquido_item = p_aviso_rec.val_liquido_item
		let p_array[p_ind].den_item         = p_aviso_rec.den_item
		let p_array[p_ind].cod_cla_fisc_nf  = p_aviso_rec.cod_cla_fisc_nf
		let p_array[p_ind].pct_ipi          = p_aviso_rec.pct_ipi_declarad

		call sup376_move_campos_ar_copia()

		let p_aviso_rec.num_aviso_rec       = p_dados_tela.num_aviso_rec
		let p_aviso_rec.num_seq             = p_ind
		let p_aviso_rec.qtd_recebida        = 0
		let p_aviso_rec.qtd_liber           = 0
		let p_aviso_rec.qtd_liber_excep     = 0
		let p_aviso_rec.qtd_rejeit          = 0
		let p_aviso_rec.qtd_devolvid        = 0
		let p_aviso_rec.val_devoluc         = 0
		let p_aviso_rec.ies_liberacao_cont  = "n"

		if p_dados_tela.ies_especie_nf <> "nfd" and
			p_array_compl[p_ind].num_pedido > 0  then
			#ver
			call sup376_inclui_ar_ped()
		end if

		let p_parametros = null

		if p_dados_tela.ies_especie_nf = "nfr" then
			let p_par_forn = null
			call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
			p_aviso_rec.cod_item,
			p_dados_tela.dat_emis_nf,
			p_dados_tela.num_aviso_rec) returning p_par_forn

			if p_par_forn = "3" then
				let p_aguarda_fatura = "s"
			end if

			if p_par_forn = "1" then
				let p_cont_aut_terc = true
			end if

			if p_par_forn = "3" and
				p_dados_tela.ies_nf_aguard_nfe <> "7" then
				if sup376_gera_item_d_terc() = false then
				end if
				let p_aviso_rec.ies_item_estoq = "n"
				let p_aviso_rec.ies_situa_ar   = "c"
				let p_aviso_rec.ies_liberacao_cont = "n"
				let p_array_compl[p_ind].move_estoque = "n"
			else
				call sup376_busca_parametros_item(p_array[p_ind].cod_item)
				let p_parametros = p_item_parametro.parametros[2,2]
				if p_parametros = "1" then
					let p_aviso_rec.ies_item_estoq = "n"
					let p_array_compl[p_ind].move_estoque = "n"
					let p_array_compl[p_ind].ies_item_estoq = "n"
				else
					if p_dados_tela.ies_nf_aguard_nfe <> "4" and
						p_dados_tela.ies_nf_aguard_nfe <> "5" and
						(p_parametros <> "6" or p_parametros is null)then
						##para n�o efetuar esta pergunta para cada item no processamente do c�pia,
						##ser� atribuido o indicador de item estoque da nota fiscal que est� sendo
						##copiada.
						#if log0040_confirm(18,10,"este item deve ser movimentado na conta estoque?") then
						let p_array_compl[p_ind].move_estoque   = p_aviso_rec.ies_item_estoq
						let p_array_compl[p_ind].ies_item_estoq = p_aviso_rec.ies_item_estoq
						#else
						#   let p_array_compl[p_ind].move_estoque   = "n"
						#   let p_array_compl[p_ind].ies_item_estoq = "n"
						#end if
					else
						if p_parametros = "6" then #os 329662
							if p_dados_tela.ies_nf_aguard_nfe = "b" then
								let p_aviso_rec.ies_item_estoq = "n"
								let p_array_compl[p_ind].move_estoque = "n"
								let p_array_compl[p_ind].ies_item_estoq = "n"
							else
								let p_aviso_rec.ies_item_estoq = "s"
								let p_array_compl[p_ind].move_estoque = "s"
								let p_array_compl[p_ind].ies_item_estoq = "s"
							end if
						else
							let p_aviso_rec.ies_item_estoq = "n"
							let p_array_compl[p_ind].move_estoque = "n"
							let p_array_compl[p_ind].ies_item_estoq = "n"
						end if
					end if
				end if
				if p_dados_tela.ies_nf_aguard_nfe = "t" then
					if sup376_gera_item_d_terc() = false then
					end if
				end if
			end if
		else
			if p_dados_tela.ies_nf_aguard_nfe = "t" then
				if sup376_gera_item_d_terc() = false then
				end if
			end if
		end if

		if p_dados_tela.ies_nf_aguard_nfe = "2" or
			p_dados_tela.ies_nf_aguard_nfe = "5" then
			let p_aviso_rec.ies_liberacao_insp = "s"
		end if

		if p_dados_tela.ies_nf_aguard_nfe = "b" then
			let p_aviso_rec.ies_item_estoq = "n"
			let p_array_compl[p_ind].move_estoque = "n"
			let p_array_compl[p_ind].ies_item_estoq = "n"
		end if


		if (p_parametros = "6" and
			((p_dados_tela.ies_nf_aguard_nfe = "a" and
			m_contr_terc_no_dep = 'n') or
			(p_dados_tela.ies_nf_aguard_nfe = "b" and
			m_contr_terc_no_dep = 's'))) then
			if sup376_gera_item_d_terc() = false then
			end if
		end if

		if p_dados_tela.ies_especie_nf = "nfr" and
			m_ies_obj_entrada = "99" then
			let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
		end if

		if p_dados_tela.ies_especie_nf = "nfr" then
			if p_dados_tela.ies_nf_aguard_nfe = "4" then
				if p_aviso_rec.ies_incid_icms_ite <> "e" then
					let p_aviso_rec.gru_ctr_desp_item = p_cod_grp_desp_nfr
				end if
				let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]

				if m_pc_nf_consig = "s" then
					if p_aviso_rec.num_oc is null or p_aviso_rec.num_oc = 0 then
						let p_houve_erro = true
						error "dever� ser informado pedido de compra (nf remessa consignacao)"
						sleep 3
						exit foreach
					end if
					{if not sup3760_oc_consig_remessa(p_aviso_rec.num_oc) then
					let p_houve_erro = true
					error "ordem de compra ",p_aviso_rec.num_oc using "<<<<<<<<&",
					"deve ser de remessa de consignacao"
					sleep 3
					exit foreach
				end if}
			end if
		else
			if m_ies_obj_entrada = "99" and
				p_dados_tela_f.val_tot_icms_nf_d = 0  and
				p_dados_tela_f.val_ipi_nf        = 0   then
				if  m_grupo_despesa_nfr = "s" and p_dados_tela.ies_especie_nf = "nfr"
					and (p_aviso_rec.num_oc = 0 or p_aviso_rec.num_oc is null) then
					if p_ies_pagamento = 3 then
					else
						let p_aviso_rec.gru_ctr_desp_item    = m_ies_obj_entrada
					end if
				else
					let p_aviso_rec.gru_ctr_desp_item    = m_ies_obj_entrada
				end if
			end if
		end if
	end if

	if p_dados_tela.ies_especie_nf = "nfr" and
		p_dados_tela.ies_nf_aguard_nfe = "4" and
		p_dados_tela_f.val_ipi_nf <> 0 and
		(p_ies_obj_entrada_fisc = "3" or p_ies_obj_entrada_fisc = "4") then
	else
		if p_dados_tela.ies_especie_nf = "nfr" and
			p_ies_achou_itsup  = false then
			let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
		else
			if (p_dados_tela.ies_especie_nf = "nfd" or
				p_ies_tip_entrada = "5") and
				((p_array_compl[p_ind].ies_tip_item = "c" or
				p_array_compl[p_ind].ies_tip_item = "b") or
				p_ies_achou_itsup = false) then
				let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
			end if
		end if
	end if
	if p_ies_cfop99 = "s" and
		m_ies_obj_entrada = "99" then
		let p_aviso_rec.cod_fiscal_item[3,5] = p_dados_tela.cod_operacao[3,5]
		let p_aviso_rec_compl_sq.cod_fiscal_compl  = p_dados_tela.cod_fiscal_compl
	end if

	whenever error continue
	select cod_lin_prod, cod_lin_recei, cod_seg_merc, cod_cla_uso
	into p_array_compl[p_ind].cod_lin_prod, p_array_compl[p_ind].cod_lin_recei,
	p_array_compl[p_ind].cod_seg_merc, p_array_compl[p_ind].cod_cla_uso
	from item
	where cod_empresa = p_cod_empresa
	and cod_item    = p_aviso_rec.cod_item
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","item")
	end if

	call sup376_inclui_dest_entrega(p_array[p_ind].val_liquido_item)

	if p_dados_tela.ies_especie_nf = "nfr" or
		p_dados_tela.ies_especie_nf = "nfd" or
		p_dados_tela.ies_especie_nf = "nfc" then

		let p_aviso_rec.ies_liberacao_ar = "2"
		let p_aviso_rec.ies_diverg_listada = "s"
		if p_array_compl[p_ind].move_estoque = "s" then
			let p_aviso_rec.ies_situa_ar = "c"
			let p_aviso_rec.ies_item_estoq   = "s"
			let p_aviso_rec.ies_liberacao_ar = "1"
		end if
	end if

	#--------------------class. fiscal-----------------------#
	if p_aviso_rec.ies_item_estoq = "n" then
		if p_aviso_rec.cod_cla_fisc_nf is not null and
			p_aviso_rec.cod_cla_fisc_nf <> " " then
			let p_aviso_rec.cod_cla_fisc = p_aviso_rec.cod_cla_fisc_nf
		end if
	end if

	if p_aviso_rec.num_oc <> 0 then
		let p_cod_secao_rec = null
		initialize p_ordem_sup.* to null
		call sup3762_busca_ordem_sup(p_aviso_rec.cod_empresa,
		p_aviso_rec.num_oc)
		let p_cod_secao_rec    = p_ordem_sup.cod_secao_receb
		if p_array_compl[p_ind].move_estoque is null or
			p_array_compl[p_ind].move_estoque = " " then
			let p_ies_item_estoq = p_ordem_sup.ies_item_estoq
		else
			let p_ies_item_estoq = p_array_compl[p_ind].move_estoque
		end if

		let p_ies_insp_recebto = p_ordem_sup.ies_insp_recebto
		if p_cod_secao_rec is not null and
			p_cod_secao_rec <> " " then
			let p_aviso_rec.cod_local_estoq = p_cod_secao_rec
		end if
		let p_aviso_rec.ies_item_estoq = p_ies_item_estoq
	end if

	if p_dados_tela.ies_nf_aguard_nfe = "5" then
		let p_aviso_rec.ies_liberacao_cont = "n"
		let p_aviso_rec.ies_liberacao_insp = "s"
		let p_aviso_rec.ies_situa_ar       = "e"
		let p_aviso_rec.qtd_recebida       = p_aviso_rec.qtd_declarad_nf
	else
		call sup376_analisa_contagem_inspecao()
	end if

	if p_aviso_rec.num_oc <> 0 then
		if p_aviso_rec.ies_item_estoq = "n" then
#### os 286425 - nfr consignacao com oc relacionada (obedece inspecao cadastrada para material)
			if p_ies_insp_recebto is not null and
				((p_ies_insp_recebto <> "4") or
				(p_ies_insp_recebto = "4" and
				p_dados_tela.ies_nf_aguard_nfe = "4")) then
				let p_aviso_rec.ies_liberacao_insp = "n"
				let p_aviso_rec.ies_liberacao_cont = "n"
				if p_par_sup_compl.ies_conta_ok_n_est = "2" or
					(p_par_sup_compl.ies_conta_ok_n_est = "3" and
					p_dados_tela.ies_especie_nf = "nfs") then
					let p_aviso_rec.ies_situa_ar = "i"
				else
					let p_aviso_rec.ies_situa_ar = "c"
				end if
			else
				let p_aviso_rec.ies_liberacao_insp = "s"
			end if
		end if
	end if

	if p_dados_tela.ies_especie_nf = "nfm" then
		let p_aviso_rec.ies_situa_ar = "e"
		let p_aviso_rec.ies_item_estoq = "n"
	end if

	if p_dados_tela.ies_nf_aguard_nfe = "4"
		then let p_aviso_rec.ies_item_estoq = "n"
	end if

	if p_aviso_rec.ies_tip_incid_ipi is null then
		let p_aviso_rec.ies_tip_incid_ipi = " "
	end if

	call sup3760_verifica_codigo_fiscal_item(p_dados_tela.cod_operacao,
	p_dados_tela.ies_nf_aguard_nfe)

	if p_dados_tela.ies_nf_aguard_nfe = "5" and
		p_dados_tela.ies_especie_nf = "nfc" then
		call sup3760_busca_grupo_x_tipo_despesa()
	end if

	call sup3760_verifica_cfop_destino(p_dados_tela.cod_operacao)
returning p_status, l_cfop_destino

	if p_status then
		let p_aviso_rec.cod_fiscal_item = l_cfop_destino
	end if

	if p_aviso_rec.val_base_c_ipi_it is null then
		let p_aviso_rec.val_base_c_ipi_it   = 0
	end if

	if p_aviso_rec.val_ipi_calc_item is null then
		let p_aviso_rec.val_ipi_calc_item   = 0
	end if

	if p_aviso_rec.val_base_c_item_c is null then
		let p_aviso_rec.val_base_c_item_c   = 0
	end if

	call sup3760_verifica_insp_nfr()

	whenever error continue
	insert into aviso_rec values (p_aviso_rec.*)
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","aviso_rec")
		let p_houve_erro = true
		exit foreach
	else
		if find4glfunction('supr87_verif_item_x_fornec') then
			if not supr87_verif_item_x_fornec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_aviso_rec.num_seq,
				p_aviso_rec.cod_item, p_dados_tela.cod_fornecedor) then
				let p_houve_erro = true
			end if
		end if

		if m_cred_st_fat = "s"
			or m_cred_st_fat = "e" then
			if not sup2621_verifica_nota_transferencia(p_aviso_rec.*, p_dados_tela.cod_fornecedor) then
			end if
		end if

		if not sup1031_grava_audit_ar(p_aviso_rec.num_aviso_rec,
			p_aviso_rec.num_seq,
			"sup3760","1") then
			let p_houve_erro = true
			exit foreach
		end if

		if find4glfunction('supy23_atualiza_oc_pd_fluxo_caixa') then
			if not supy23_atualiza_oc_pd_fluxo_caixa(p_ordem_sup.cod_empresa,
				p_ordem_sup.cod_item,
				p_ordem_sup.num_oc,
				p_ordem_sup.cod_fornecedor,
				p_ordem_sup.cnd_pgto,
				p_ordem_sup.cod_mod_embar,
				p_ordem_sup.cod_moeda,
				p_aviso_rec.pre_unit_nf) then
				let p_houve_erro = true
				exit foreach
			end if
		end if

		if m_gera_rsv_transf = "s" and
			p_dados_tela.ies_nf_aguard_nfe  = "8" then
			call sup3760_carrega_strib_nfe()
		end if
	end if

	#-in�cio ch-tfrc09-#
	if log_existe_epl('sup3760y_after_process_insert_aviso_rec_copia') then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: aviso_rec.cod_empresa

		call log_setvar('num_aviso_rec', p_aviso_rec.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		call log_setvar('num_seq', p_aviso_rec.num_seq)
		#epl numero da sequencia do ar
		#epl tipo: aviso_rec.num_seq

		call log_setvar('num_oc', p_aviso_rec.num_oc)
		#epl numero da oc
		#epl tipo: aviso_rec.num_oc

		call log_setvar('cod_item', p_aviso_rec.cod_item)
		#epl c�digo do item
		#epl tipo: aviso_rec.cod_item

		call log_setvar('houve_erro', p_houve_erro)
		#epl indicador se houve erro no processamento
		#epl tipo: smallint

		call log_setvar('ies_situa_ar', p_aviso_rec.ies_situa_ar)
		#epl situa��o do ar
		#epl tipo: char(01)

		call sup3760y_after_process_insert_aviso_rec_copia()
		let p_houve_erro = log_getvar('houve_erro')
	end if
	#-fim ch-tfrc09-#

	#trogvb - copia nf
	whenever error continue
	select *
	into p_processo_imp.*
	from processo_imp
	where processo_imp.cod_empresa      = p_aviso_rec.cod_empresa
	and processo_imp.num_aviso_rec    = m_num_ar_ant ### mman-7337
	and processo_imp.ies_versao_atual = "s"
	whenever error stop
	if sqlca.sqlcode = 0 then
		whenever error continue
		select cod_transp_nac
		into l_cod_transp_nac
		from proc_imp_compl
		where cod_empresa  = p_processo_imp.cod_empresa
		and num_processo = p_processo_imp.num_processo
		and num_versao   = p_processo_imp.num_versao
		whenever error stop
		if sqlca.sqlcode = 0 then
			call sup3760_carrega_dados_importacao()
			call sup376_grava_seq_adicao_imp()
		end if
	end if
	#trogvb

	let p_aviso_rec_compl_sq.cod_empresa       = p_aviso_rec.cod_empresa
	let p_aviso_rec_compl_sq.cod_empresa_estab = p_aviso_rec.cod_empresa_estab
	let p_aviso_rec_compl_sq.num_aviso_rec     = p_aviso_rec.num_aviso_rec
	let p_aviso_rec_compl_sq.num_seq           = p_aviso_rec.num_seq
	let p_aviso_rec_compl_sq.val_base_d_ipi_it = 0
	if p_aviso_rec_compl_sq.cod_fiscal_compl is null then
		let p_aviso_rec_compl_sq.cod_fiscal_compl = 0
	end if

	insert into aviso_rec_compl_sq values (p_aviso_rec_compl_sq.*)
	if sqlca.sqlcode <> 0  then
		call log003_err_sql("inclusao","aviso_rec_compl_sq")
		let p_houve_erro = true
	end if

	if p_nfe_import = true then
		if not sup376_rateio_desp_aces() then
			let p_houve_erro = true
			exit foreach
		end if
		call sup376_grava_aviso_rec_proc_imp()

		if p_dados_tela.dat_entrada_nf >= "01/05/2004" then
			call sup3760_grava_ar_piscofim()
			if p_houve_erro = true then
				exit foreach
			end if
		end if
	end if

	if p_nfm_import = true then
		whenever error continue
		insert into sup_par_ar (empresa          ,
		aviso_recebto    ,
		seq_aviso_recebto,
		parametro        ,
		par_ind_especial ,
		parametro_texto  ,
		parametro_val    ,
		parametro_dat    )
		values (p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_ind,
		"valor_ii",
		null,
		null,
		p_array_imp[p_ind].val_ii,
		null)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let p_houve_erro = true
			exit foreach
		end if
	end if

	{awc}
	call sup376_gera_iss()

	if p_nf_sup.ies_especie_nf = "nfm" then
		if p_aviso_rec.cod_item is null or
			p_aviso_rec.cod_item =  " "  then
			exit foreach
		else
			whenever error continue
			insert into nf_pend values(p_cod_empresa, m_dados_copia.num_nf_dest,
			m_dados_copia.ser_nf_dest, m_dados_copia.ssr_nf_dest,
			m_dados_copia.fornec_dest,
			p_aviso_rec.cod_item,
			p_aviso_rec.qtd_declarad_nf, 0, null,
			today)
			whenever error stop
			if sqlca.sqlcode = -239 or
				sqlca.sqlcode = -268 then
				update nf_pend
				set qtd_recebida = qtd_recebida + p_aviso_rec.qtd_declarad_nf
				where cod_empresa    = p_cod_empresa
				and num_nf         = m_dados_copia.num_nf_dest
				and ser_nf         = m_dados_copia.ser_nf_dest
				and ssr_nf         = m_dados_copia.ssr_nf_dest
				and cod_fornecedor = m_dados_copia.fornec_dest
				and cod_item       = p_aviso_rec.cod_item
			end if
		end if
	end if
end foreach
#para cada ar

### gravando/atualizando item_de_terc para transferencia de beneficiamento ###
if (p_dados_tela.cod_emp_benef is not null and
	p_dados_tela.cod_emp_benef <> " ") and m_transf_saida <> "s" then

	let comando3 = p_cod_empresa             ," ",
	p_dados_tela.cod_emp_benef," ",
	p_dados_tela.num_nf
	call log1200_executa_programa("sup2480",comando3)
end if

#-----------------inclusao de ar complementar--------------#
let p_aviso_rec_compl.cod_empresa     = p_cod_empresa
let p_aviso_rec_compl.num_aviso_rec   = p_dados_tela.num_aviso_rec
let p_aviso_rec_compl.den_transpor    = null
let p_aviso_rec_compl.num_placa_veic  = null

if l_cod_transp_nac is not null then
	let p_aviso_rec_compl.cod_transpor = l_cod_transp_nac
else
	let p_aviso_rec_compl.cod_transpor = null
end if

if p_processo_imp.num_di is not null then
	let p_aviso_rec_compl.num_di = p_processo_imp.num_di
else
	let p_aviso_rec_compl.num_di = null
end if

if g_ies_transf_benef = false or
	g_ies_transf_benef is null then
	if p_ies_cod_operac is null or
		p_ies_cod_operac = "n" or
		p_ies_cod_operac = " " then
		let p_dados_tela.cod_operac_estoq = " "
	end if
end if

if p_dados_tela.cod_operacao[1] = "5" then
	let p_cod_fiscal_c = "1.",p_dados_tela.cod_operacao[3,5]
end if

if p_dados_tela.cod_operacao[1] = "6" then
	let p_cod_fiscal_c = "2.",p_dados_tela.cod_operacao[3,5]
end if

if p_dados_tela.cod_operacao[1] = "7" then
	let p_cod_fiscal_c = "3.",p_dados_tela.cod_operacao[3,5]
end if

if p_dados_tela.cod_fiscal_compl is null then
	let p_dados_tela.cod_fiscal_compl = 0
end if

if sup0812_verifica_nota_transferencia(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl) = true and
	p_dados_tela.cod_operacao[1,1] <> "3" then
	if p_dados_tela.cod_operac_estoq is null or
		p_dados_tela.cod_operac_estoq = " " then
		let p_dados_tela.cod_operac_estoq = p_oper_trans_unid
	end if
	if p_ies_obt_inf_com = "s" then
		let p_aviso_rec_compl.cod_empresa_orig = p_cod_emp_transf
	end if
end if
### os 186311
if p_dados_tela.ies_nf_aguard_nfe = "p" then
	if p_dados_tela.cod_operac_estoq is null or
		p_dados_tela.cod_operac_estoq = " " then
		let p_dados_tela.cod_operac_estoq = g_operac_permuta
	end if
end if

let p_aviso_rec_compl.cod_operacao = p_dados_tela.cod_operac_estoq

initialize p_aviso_rec_compl.cod_moeda_forn to null
if p_ies_indexacao = "n" then
	if p_cod_moeda_ped is not null and
		p_par_con.cod_moeda_padrao <> p_cod_moeda_ped and
		p_fornecedor.cod_pais = p_cod_pais_emp then
		let p_aviso_rec_compl.cod_moeda_forn = p_cod_moeda_ped
	end if
else
	let p_aviso_rec_compl.cod_moeda_forn = p_cod_moeda_ped #798794#
end if

if p_aviso_rec_compl.cod_moeda_forn = 0 then
	let p_aviso_rec_compl.cod_moeda_forn = null
end if

let p_aviso_rec_compl.cod_fiscal_compl = p_dados_tela.cod_fiscal_compl
let p_aviso_rec_compl.ies_situacao     = "n"
if p_aviso_rec_compl.cod_fiscal_compl is null then
	let p_aviso_rec_compl.cod_fiscal_compl = 0
end if

let p_aviso_rec_compl.ies_situacao = "n"
if p_nfe_import = true then
	let p_aviso_rec_compl.num_di = p_processo_imp.num_di
end if

let p_aviso_rec_compl.filial = p_dados_tela.filial

call supm44_aviso_rec_compl_set_cod_empresa(p_aviso_rec_compl.cod_empresa)
call supm44_aviso_rec_compl_set_num_aviso_rec(p_aviso_rec_compl.num_aviso_rec)
call supm44_aviso_rec_compl_set_cod_transpor(p_aviso_rec_compl.cod_transpor)
call supm44_aviso_rec_compl_set_den_transpor(p_aviso_rec_compl.den_transpor)
call supm44_aviso_rec_compl_set_num_placa_veic(p_aviso_rec_compl.num_placa_veic)
call supm44_aviso_rec_compl_set_num_di(p_aviso_rec_compl.num_di)
call supm44_aviso_rec_compl_set_ies_incl_import(p_aviso_rec_compl.ies_incl_import)
call supm44_aviso_rec_compl_set_num_lote_pat(p_aviso_rec_compl.num_lote_pat)
if find4glfunction('supr91_verifica_nf_armazem') then
	if supr91_verifica_nf_armazem(p_cod_empresa, p_cod_fiscal_c, ' ') then
		let p_aviso_rec_compl.cod_operacao = supr91_retorna_oper_nf_armazem(p_cod_empresa)
	end if
end if
call supm44_aviso_rec_compl_set_cod_operacao(p_aviso_rec_compl.cod_operacao)
call supm44_aviso_rec_compl_set_cod_empresa_orig(p_aviso_rec_compl.cod_empresa_orig)
call supm44_aviso_rec_compl_set_cod_moeda_forn(p_aviso_rec_compl.cod_moeda_forn)
call supm44_aviso_rec_compl_set_num_embarque(p_aviso_rec_compl.num_embarque)
call supm44_aviso_rec_compl_set_ies_situacao(p_aviso_rec_compl.ies_situacao)
call supm44_aviso_rec_compl_set_nom_usuario(p_aviso_rec_compl.nom_usuario)
call supm44_aviso_rec_compl_set_dat_proces(p_aviso_rec_compl.dat_proces)
call supm44_aviso_rec_compl_set_hor_operac(p_aviso_rec_compl.hor_operac)
call supm44_aviso_rec_compl_set_cod_fiscal_compl(p_aviso_rec_compl.cod_fiscal_compl)
if find4glfunction('supm44_aviso_rec_compl_set_filial') then
	call supm44_aviso_rec_compl_set_filial(p_aviso_rec_compl.filial)
end if

if not supm44_aviso_rec_compl_inclui(true,false) then
	let p_houve_erro = true
end if

if find4glfunction('supr_multimoedas_atualiza_campos_multimoeda_nf') then
	if not supr_multimoedas_atualiza_campos_multimoeda_nf(p_cod_empresa, p_array_compl[1].num_pedido, p_dados_tela.num_aviso_rec) then
		let p_houve_erro = true
	end if
end if

if p_nfe_import = true or p_nfm_import = true then
	if p_processo_imp.num_aviso_rec is null or
		p_processo_imp.num_aviso_rec = " " then
		update processo_imp
		set num_aviso_rec = p_dados_tela.num_aviso_rec,
		ies_situacao = "5"
		where cod_empresa  = p_processo_imp.cod_empresa
		and num_processo = p_processo_imp.num_processo
		and num_versao   = p_processo_imp.num_versao
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("atualizacao","processo_imp")
			let p_houve_erro = true
		end if
	end if
end if

if sup376_inclusao_nf_sup_copia()  then
	let p_dados_tela.* = p_dados_telar.*
	if p_ies_cod_operac = "s" then
	else
		let p_dados_tela.cod_operac_estoq = null
	end if
	if p_ies_cod_operac = "s" then
	else
		let p_dados_tela.cod_operac_estoq = p_dados_telar.cod_operac_estoq
	end if
	let p_ies_cons = false

	call sup376_verifica_inclusao_vencimento_nff()

	#--#796313 - espindola - projeto totvs colaboracao #--#
	#--#atualiza monitor de integracao (caso existir documento)
	if m_utiliz_totvs_colab = "s" then
		if m_num_nfe is not null and m_num_nfe <> ' ' then
			let m_num_nf = m_num_nfe
		else
			let m_num_nf = p_nf_sup.num_nf
		end if

		if not sup13429_integra_erp_monitor(p_nf_sup.cod_empresa,    m_num_nf,
			p_nf_sup.ser_nf,         p_nf_sup.ssr_nf,
			p_nf_sup.cod_fornecedor, p_nf_sup.dat_emis_nf,
			"inclusao") then
			let p_houve_erro = true
		end if
	end if

	#--# aaaun6 - inicio #--#
	let l_data = extend(current, year to second)
	if sup3760_grava_sup_par_ar(p_nf_sup.cod_empresa,
		p_nf_sup.num_aviso_rec,
		0,
		"data_hora_nf_entrada",
		" ",
		l_data,
		" ",
		" ") = false then
		let p_houve_erro = true
	end if
	#--# aaaun6 - final #--#

	whenever error continue
	select empresa
	from nf_sup_erro
	where nf_sup_erro.empresa            = p_cod_empresa
	and nf_sup_erro.num_aviso_rec      = p_nf_sup.num_aviso_rec
	and nf_sup_erro.num_seq            = 0
	and nf_sup_erro.des_pendencia_item = "falta efetuar consistencia"
	and nf_sup_erro.ies_origem_erro    = "1"
	whenever error stop
	if sqlca.sqlcode = notfound then

		whenever error continue
		insert into nf_sup_erro (empresa,
		num_aviso_rec,
		num_seq,
		des_pendencia_item,
		ies_origem_erro,
		ies_erro_grave)
		values (p_cod_empresa,
		p_nf_sup.num_aviso_rec,
		0,
		"falta efetuar consistencia",
		"1",
		"s")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let p_houve_erro = true
		end if
	end if

	#fluxo de caixa
	if not fcl1150_integra_ar_fcx(p_cod_empresa,
		p_nf_sup.num_aviso_rec,"in") then
		let p_houve_erro = true
	end if
	exit while
else
	initialize p_array to null
	initialize p_dados_tela.*, p_cod_ret_imp to null
	initialize p_dados_telar.* to null
	initialize p_formonly.* to null
	initialize p_formonlyr.* to null
	let p_formonly.* = p_formonlyr.*
	if m_pc_nf_consig = "n" then
		message " nota de remessa de consignacao nao pode ter ordem/pedido relacionada " attribute(reverse)
	end if
	clear form
	call log085_transacao("rollback")
return
end if
end while

if not sup0064_controla_grade_dimensional(p_cod_empresa,
	p_aviso_rec.cod_item,
	p_nf_sup.num_aviso_rec,
	p_aviso_rec.num_seq) then
	let p_houve_erro = 1
end if

if p_houve_erro = false then
	whenever error continue
	call log085_transacao("commit")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let p_msg = "erro na efetiva��o dos dados. sqlca.sqlcode = ", sqlca.sqlcode clipped
		call log0030_mensagem(p_msg,"stop")
		call log085_transacao("rollback")
		return
	else
		if p_nfe_import = true then
			call imp0024_mov_even(p_cod_empresa,p_processo_imp.num_processo,
			27," ",today)
		end if
		if sup3760_informa_peso() = true then
			if m_peso_nf is not null and m_peso_nf <> " " then
				display " nr. itens: ", p_tot_itens ," "  at 20,02 attribute(reverse)
				display "peso nf: ", m_peso_nf ," "       at 22,02 attribute(reverse)
			else
				display "                           "  at 22,02
			end if
		else
			initialize m_peso_nf to null
			display "                           "  at 22,02
		end if

		message " inclusao da nota fiscal efetuada com sucesso. "
		attribute(reverse)
		call sup376_funcoes_apos_inclusao()
		call log006_exibe_teclas("01", p_versao)
		display by name p_dados_tela.*
		current window is w_sup37601
		call log0030_mensagem("ap�s realizar a c�pia ser� exibida a nf copiada","info") #tfckkp
	end if
else
	call log0030_exibe_ultima_mensagem()
	error "houveram problemas no processamento "
	display "                                                                               " at 10,01
	message " inclusao cancelada. "
	call log085_transacao("rollback")
end if

end function

#-------------------------------------------#
function sup376_obtem_num_aviso_rec_copia()
#-------------------------------------------#
	define l_prx_num_ar like par_sup_pad.par_val

	initialize m_dat_hor_proces to null

	whenever error continue
	declare cm_par_sup1 cursor for
	select par_val into p_dados_tela.num_aviso_rec
	from par_sup_pad
	where cod_empresa = p_cod_empresa
	and cod_parametro = "num_prx_ar"
	for update
		open cm_par_sup1
		fetch cm_par_sup1
		whenever error stop
		if sqlca.sqlcode = 0 then
			if p_dados_tela.num_aviso_rec > 999998 then
				let l_prx_num_ar = 1
			else
				let l_prx_num_ar = p_dados_tela.num_aviso_rec + 1
			end if
			whenever error continue
			update par_sup_pad
			set par_val = l_prx_num_ar
			where current of cm_par_sup1
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("modificacao","par_sup_pad")
				close cm_par_sup1
				return false
			else
				let m_dat_hor_proces = current
				close cm_par_sup1
				return true
			end if
		else
			call log003_err_sql("leitura","par_sup_pad")
			close cm_par_sup1
			return false
		end if

	end function

### os 374310
#-------------------------------------------#
function sup3760_verifica_copia_sem_pedido()
#-------------------------------------------#
	define l_ies_compl_preco  like par_sup_compl.ies_nf_compl_preco,
	l_ies_entrada_s_pc like par_sup.ies_entrada_sem_pc

	initialize l_ies_compl_preco, l_ies_entrada_s_pc to null

	whenever error continue
	select ies_entrada_sem_pc
	into l_ies_entrada_s_pc
	from par_sup
	where cod_empresa = p_cod_empresa
	whenever error stop

	whenever error continue
	select ies_nf_compl_preco
	into l_ies_compl_preco
	from par_sup_compl
	where cod_empresa = p_cod_empresa
	whenever error stop

	if p_dados_tela.ies_especie_nf = "nfc" then
		if p_ies_pagamento = "2" then
			if (l_ies_compl_preco = "3" or
				l_ies_compl_preco = "4") then
				error "empresa n�o permite entrada de nfc sem pedido de compra."
				return false
			end if
		end if
	end if
	if p_dados_tela.ies_especie_nf = "nfe" then
		if p_ies_pagamento = "2" then
			if (l_ies_compl_preco = "2" or
				l_ies_compl_preco = "4") then
				error "empresa n�o permite entrada de nfe sem pedido de compra."
				return false
			end if
		end if
	end if
	if p_dados_tela.ies_especie_nf <> "nfr" and
		p_dados_tela.ies_especie_nf <> "nfd" and
		p_dados_tela.ies_especie_nf <> "nfc" and
		p_dados_tela.ies_especie_nf <> "con" and
		p_dados_tela.ies_especie_nf <> "nfe" then
		#--# na validacao de copia, considerar se o usuario tem permissao de excessao (espindola) #--#
		if l_ies_entrada_s_pc = "n" and p_ies_entr_sem_ped = false then
			error "empresa n�o permite entrada de nota sem pedido de compra."
			return false
		else
			if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
				if p_array_pedidos[1].num_pedido is null or
					p_array_pedidos[1].num_pedido = " " then
					call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
					return false
				end if
			end if
		end if
	end if

return true
end function

#----------------------------------------------#
function sup376_contagem_custo_diario(l_tipo)
#----------------------------------------------#
	define l_cont smallint,
	l_tipo smallint

	let l_cont = 0

	if m_ies_custo_medio = "d" then
		case l_tipo
		when 1
		select count(*)
		into l_cont
		from aviso_rec
		where aviso_rec.cod_empresa        = p_cod_empresa
		and aviso_rec.num_aviso_rec      = p_dados_tela.num_aviso_rec
		and aviso_rec.ies_liberacao_cont = "s"
		and aviso_rec.ies_item_estoq     = "s"
		#ja fez contagem nao deixa modificar
		if sqlca.sqlcode = 100 or l_cont is null then
			let l_cont = 0
		end if
		if l_cont > 0 then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			return true
		end if
		when 2
		select num_aviso_rec
		from aviso_rec
		where aviso_rec.cod_empresa        = p_cod_empresa
		and aviso_rec.num_aviso_rec      = p_dados_tela.num_aviso_rec
		and aviso_rec.num_seq            = p_array[p_ind].seq
		and aviso_rec.ies_liberacao_cont = "s"
		and aviso_rec.ies_item_estoq     = "s"
		#ja fez contagem nao deixa modificar
		if sqlca.sqlcode = 0 then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			return true
		end if
	end case
end if

return false

end function

#-------------------------------#
function sup376_aprov_tecnica()
#-------------------------------#
	define l_cont smallint

	let l_cont = 0
	whenever error continue
	select count(*)
	into l_cont
	from um_aprov_tecnica
	where cod_empresa = p_cod_empresa
	whenever error stop
	if sqlca.sqlcode <> 0 or
		l_cont is null then
		let l_cont = 0
	end if

	if l_cont = 0 then
		return false
	end if

return true

end function
#-----------------------------------#
function sup376_cond_pgto_com_pag()
#-----------------------------------#
	define l_tipo char(01)

	let l_tipo = " "
	select ies_pagamento
	into l_tipo
	from cond_pgto_cap
	where cnd_pgto = p_dados_tela.cnd_pgto_nf
	if sqlca.sqlcode = 100 then
		error " condicao de pagamento nao cadastrada cap "
	end if

	if l_tipo = "2" then
		return true
	end if

return false

end function

#--------------------------------------#
function sup3760_verifica_nf_transf()
#--------------------------------------#
	define l_cod_fiscal          like cod_fiscal_sup.cod_fiscal,
	l_ies_tip_entrada     like cod_fiscal_sup.ies_tip_entrada,
	l_status              smallint

	let l_cod_fiscal = p_dados_tela.cod_operacao
	if p_dados_tela.cod_operacao[1] = "5" then
		let l_cod_fiscal[1,2] = "1."
	end if
	if p_dados_tela.cod_operacao[1] = "6" then
		let l_cod_fiscal[1,2] = "2."
	end if
	if p_dados_tela.cod_operacao[1] = "7" then
		let l_cod_fiscal[1,2] = "3."
	end if

	initialize l_ies_tip_entrada to null
	call sup0686_retorna_tipo_entrada(l_cod_fiscal,
	p_dados_tela.cod_fiscal_compl)
returning l_status,
	l_ies_tip_entrada
	whenever error stop

	if l_ies_tip_entrada = "2" then
		return true
	end if

return false

end function

#-------------------------------------#
function sup376_exibe_dados_pesagem()
#-------------------------------------#
	define l_ind               smallint,
	l_peso_liquido      like sup_ctr_balanca.qtd_peso_entrada,
	l_peso_entrada      like sup_ctr_balanca.qtd_peso_entrada,
	l_peso_saida        like sup_ctr_balanca.qtd_peso_saida,
	l_seq_pesagem       like sup_ctr_balanca.sequencia_pesagem,
	l_seq_nf            like sup_ctr_balanca.seq_nota_fiscal,
	l_cod_item          like sup_ctr_balanca.item,
	l_pesagem_entr      like sup_ctr_balanca.pesagem_entrada,
	l_pesagem_sai       like sup_ctr_balanca.pesagem_saida,
	la_array        array[999] of record
	seq              like aviso_rec.num_seq,
	cod_item         like aviso_rec.cod_item,
	cod_unid_med_nf  like item.cod_unid_med,
	qtd_declarad_nf  like aviso_rec.qtd_declarad_nf,
	qtd_pesagem      like sup_ctr_balanca.qtd_peso_entrada,
	seq_pesagem      like sup_ctr_balanca.sequencia_pesagem,
	den_item         like item.den_item,
	pesagem_entrada  like sup_ctr_balanca.pesagem_entrada,
	pesagem_saida    like sup_ctr_balanca.pesagem_saida
end record
let l_ind = 1

declare cq_busca_peso cursor for
select qtd_peso_entrada,
qtd_peso_saida,
sequencia_pesagem,
seq_nota_fiscal,
item,
pesagem_entrada,
pesagem_saida
from sup_ctr_balanca
where empresa           = p_cod_empresa
and num_docum         = p_nf_sup.num_nf
and serie_nota_fiscal = p_nf_sup.ser_nf
and subserie_nf       = p_nf_sup.ssr_nf
and fornecedor        = p_nf_sup.cod_fornecedor
and seq_nota_fiscal   > 0
and tip_pesagem       = "1"
and aviso_recebto     is not null
foreach cq_busca_peso into l_peso_entrada,
l_peso_saida,
l_seq_pesagem,
l_seq_nf,
l_cod_item,
l_pesagem_entr,
l_pesagem_sai

select qtd_declarad_nf
into la_array[l_ind].qtd_declarad_nf
from aviso_rec
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_nf_sup.num_aviso_rec
and num_seq       = l_seq_nf

let la_array[l_ind].seq             = l_seq_nf
let la_array[l_ind].cod_item        = l_cod_item

let l_peso_liquido = l_peso_entrada - l_peso_saida
let la_array[l_ind].qtd_pesagem     = l_peso_liquido
let la_array[l_ind].seq_pesagem     = l_seq_pesagem
let la_array[l_ind].pesagem_entrada = l_pesagem_entr
let la_array[l_ind].pesagem_saida   = l_pesagem_sai

select den_item_reduz,
cod_unid_med
into la_array[l_ind].den_item,
la_array[l_ind].cod_unid_med_nf
from item
where cod_empresa = p_cod_empresa
and cod_item    = l_cod_item

let l_ind = l_ind + 1
end foreach

call log006_exibe_teclas("01 02 17 18", p_versao)
call log130_procura_caminho("sup37610") returning comando3
open window w_sup37610 at 06,02 with form comando3
attribute(border, message line last, prompt line last, form line 1)
call set_count(999)
display array la_array to s_sup37610.*

if int_flag  then
	let int_flag = 0
else
	let l_ind = arr_curr()
end if

close window w_sup37610
end function

#--------------------------------------------#
function sup3760_oc_consig_remessa(l_num_oc)
#--------------------------------------------#
	define l_num_oc          like ordem_sup.num_oc,
	l_cod_tip_despesa like ordem_sup.cod_tip_despesa,
	l_gru_ctr_desp    like ordem_sup.gru_ctr_desp

	if  p_tip_desp_cons_fat = 0 and m_cod_tip_desp_cons = 0
		and p_cod_grp_desp_nfr  = 0 and m_cod_grp_desp_fat  = 0 then
		return false
	end if

	whenever error continue
	select cod_tip_despesa, gru_ctr_desp
	into l_cod_tip_despesa, l_gru_ctr_desp
	from ordem_sup
	where cod_empresa      = p_cod_empresa
	and num_oc           = l_num_oc
	and ies_versao_atual = "s"
	whenever error stop

	if l_cod_tip_despesa = m_cod_tip_desp_cons
		or l_gru_ctr_desp    = p_cod_grp_desp_nfr then
		return true
	end if

return false
end function

#------------------------------------#
function sup3760_verifica_inspecao()
#------------------------------------#
	define l_cont         smallint
	let l_cont = 0
	select count(*)
	into l_cont
	from aviso_rec, nf_sup
	where aviso_rec.cod_empresa   = nf_sup.cod_empresa
	and aviso_rec.num_aviso_rec = nf_sup.num_aviso_rec
	and aviso_rec.cod_empresa   = p_cod_empresa
	and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
	and ((aviso_rec.ies_item_estoq     = "s" and
	aviso_rec.ies_liberacao_cont = "s")
	or  nf_sup.ies_incl_contab       in ("s","m"))
	if l_cont > 0 then
		return true
	end if
return false
end function

#------------------------------------------#
function  sup376_verifica_interf_ent_wms()
#------------------------------------------#
	whenever error continue
	select par_ies
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "ies_interf_ent_wms"
	and par_ies       = "s"
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true
	end if

return false

end function

#------------------------------------------#
function sup376_verifica_cod_fiscal_item()
#------------------------------------------#
	define sql_stmt       char(1000)

	initialize sql_stmt, m_cod_parametro to null

	let m_cod_parametro = "sup0699_" clipped,
	p_aviso_rec.cod_fiscal_item clipped,"_" clipped

	let sql_stmt = "select par_txt[6,10] ",
	"  from par_sup_pad ",
	" where cod_empresa = ","'",p_cod_empresa,"'"," ",
	"   and cod_parametro matches '",m_cod_parametro clipped,"*'"

	let sql_stmt = sql_stmt clipped

	prepare var_par_sup_pad_2 from sql_stmt

	declare cq_relac_cfop_2 cursor for var_par_sup_pad_2

	foreach cq_relac_cfop_2 into p_aviso_rec.cod_fiscal_item
	exit foreach
end foreach

update aviso_rec
set cod_fiscal_item = p_aviso_rec.cod_fiscal_item
where aviso_rec.cod_empresa   = p_cod_empresa
and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec
and aviso_rec.num_seq       = p_aviso_rec.num_seq
if sqlca.sqlcode <> 0 then
	call log003_err_sql("modificacao","aviso_rec")
end if

end function

#----------------------------------#
function sup3760_busca_ped_venda()
#----------------------------------#
	define enter              char(100),
	l_tipo             char(01)

	initialize p_cod_emp_transf to null
	select cod_empresa_orig
	into p_cod_emp_transf
	from aviso_rec_compl
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	if sqlca.sqlcode <> 0 or
		p_cod_emp_transf is null then
		if p_dados_tela.cod_emp_benef is null then
			error " empresa origem nao encontrada "
			sleep 2
			return false
		else
			let p_cod_emp_transf = p_dados_tela.cod_emp_benef
		end if
	end if

	initialize m_pedido_venda1 to null
	whenever error continue
	select unique(pedido)
	into m_pedido_venda1
	from fat_nf_mestre, fat_nf_item
	where fat_nf_mestre.empresa            = p_cod_emp_transf
	and fat_nf_mestre.nota_fiscal        = m_num_nff_aux  ### tvihmo
	and fat_nf_mestre.serie_nota_fiscal  = p_dados_tela.ser_nf
	and fat_nf_mestre.subserie_nf        = p_dados_tela.ssr_nf
	and fat_nf_mestre.tip_nota_fiscal    = "fatprdsv"
	and fat_nf_mestre.sit_nota_fiscal    = "n"
	and fat_nf_item.empresa              = fat_nf_mestre.empresa
	and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal
	and fat_nf_item.pedido               = m_pedido_venda
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_pedido_venda1 is null then
		let m_pedido_venda1 = 0
	end if

	if m_pedido_venda1 = 0 then
		whenever error continue
		select unique(pedido)
		into m_pedido_venda1
		from fat_nf_mestre_hist, fat_nf_item_hist
		where fat_nf_mestre_hist.empresa            = p_cod_emp_transf
		and fat_nf_mestre_hist.nota_fiscal        = m_num_nff_aux  ### tvihmo
		and fat_nf_mestre_hist.serie_nota_fiscal  = p_dados_tela.ser_nf
		and fat_nf_mestre_hist.subserie_nf        = p_dados_tela.ssr_nf
		and fat_nf_mestre_hist.tip_nota_fiscal    = "fatprdsv"
		and fat_nf_mestre_hist.sit_nota_fiscal    = "n"
		and fat_nf_item_hist.empresa              = fat_nf_mestre_hist.empresa
		and fat_nf_item_hist.trans_nota_fiscal    = fat_nf_mestre_hist.trans_nota_fiscal
		and fat_nf_item_hist.pedido               = m_pedido_venda
		whenever error stop
		if sqlca.sqlcode <> 0 or
			m_pedido_venda1 is null then
			let m_pedido_venda1 = 0
		end if
	end if


return true

end function

#-----------------------------------------------#
function sup3760_verifica_param_item_rastreab()
#-----------------------------------------------#
	define lr_ctr_gr_orig record like item_ctr_grade.*,
	lr_ctr_gr_dest record like item_ctr_grade.*,
	enter          char(01)

	initialize lr_ctr_gr_orig, lr_ctr_gr_dest to null

	select *
	into lr_ctr_gr_orig.*
	from item_ctr_grade
	where cod_empresa = p_dados_tela.cod_emp_benef
	and cod_item    = p_aviso_rec.cod_item
	if sqlca.sqlcode = 0 then

		select *
		into lr_ctr_gr_dest.*
		from item_ctr_grade
		where cod_empresa = p_cod_empresa
		and cod_item    = p_aviso_rec.cod_item
		if sqlca.sqlcode <> 0 then
			if sup3760_transf_saida_somente_lote(lr_ctr_gr_orig.*) then ## verificar coment�rios dentro da fun��o.
				return true
			else
				prompt " falta cadastro de rastreabilidade do item para empresa destino. ver man9890 " for char enter
				return false
			end if
		else
			if lr_ctr_gr_orig.ies_endereco <> lr_ctr_gr_dest.ies_endereco then
				prompt " controle de endereco difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

			if lr_ctr_gr_orig.ies_volume <> lr_ctr_gr_dest.ies_volume then
				prompt " controle de volume difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

			if lr_ctr_gr_orig.ies_dat_producao <> lr_ctr_gr_dest.ies_dat_producao then
				prompt " controle de data de producao difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

			if lr_ctr_gr_orig.ies_dat_validade <> lr_ctr_gr_dest.ies_dat_validade then
				prompt " controle de data de validade difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

			if lr_ctr_gr_orig.ies_comprimento <> lr_ctr_gr_dest.ies_comprimento then
				prompt " controle de data de validade difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

			if lr_ctr_gr_orig.ies_largura <> lr_ctr_gr_dest.ies_largura then
				prompt " controle de largura difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

			if lr_ctr_gr_orig.ies_altura <> lr_ctr_gr_dest.ies_altura then
				prompt " controle de altura difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

			if lr_ctr_gr_orig.ies_diametro <> lr_ctr_gr_dest.ies_diametro then
				prompt " controle de diametro difere da empresa origem/destino. ver man9890." for char enter
				return false
			end if

		end if

	end if

return true

end function

#--------------------------------------------------#
function sup3760_busca_cnpj_insc(l_cod_empresa,
	l_num_aviso_rec,
	l_cod_fornecedor)
#--------------------------------------------------#
	define l_cod_fornecedor   like fornecedor.cod_fornecedor,
	l_cod_empresa      like empresa.cod_empresa, #801178#
	l_num_aviso_rec    like aviso_rec.num_aviso_rec #801178#

	whenever error continue
	select num_cgc_cpf
	into m_num_cgc_cpf
	from fornecedor
	where cod_fornecedor = l_cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0   and
		sqlca.sqlcode <> 100 then
		initialize m_num_cgc_cpf to null
	end if

	#801178#
	whenever error continue
	select parametro_texto
	into m_ins_estadual
	from sup_par_ar
	where empresa           = l_cod_empresa
	and aviso_recebto     = l_num_aviso_rec
	and seq_aviso_recebto = 0
	and parametro         = "ins_estadual_ar"
	whenever error stop
	#---fim--- 801178#
	if sqlca.sqlcode <> 0 then
		whenever error continue
		select ins_estadual
		into m_ins_estadual
		from fornecedor
		where cod_fornecedor = l_cod_fornecedor
		whenever error stop

		if sqlca.sqlcode <> 0 then
			initialize m_ins_estadual to null
		end if
	end if

end function

#------------------------------------#
function sup3760_carrega_strib_nfe()
#------------------------------------#
	define lr_nf_item    array[999] of record
	num_sequencia  like fat_nf_item.seq_item_pedido,
	cod_item       like fat_nf_item.item,
	qtd_item       like fat_nf_item.qtd_item,
	num_pedido     like fat_nf_item.pedido,
	num_om         like fat_nf_item.ord_montag
end record,
l_val_base_icm      decimal(17,6),
l_val_icm           decimal(17,6),
l_val_base_ret      decimal(17,6),
l_val_icms_ret      decimal(17,6),
l_num_seq           like aviso_rec.num_seq,
l_ser_nff           like fat_nf_mestre.serie_nota_fiscal,
l_num_oc_ar         like aviso_rec.num_oc,
l_ind               smallint,
l_num_seq_ped       like ar_nf_item.num_sequencia,
#--inicio--vanderlei os 329518 #
l_ord_montag        like ar_nf_item.ord_montag,
sql_stmt            char(1000),
#---fim----vanderlei os 329518 #
l_ser_nf_fatura     like fat_nf_mestre.serie_nota_fiscal,
l_trans_nf_fatura   like fat_nf_mestre.trans_nota_fiscal,
l_seq_item_nf       like fat_nf_item.seq_item_nf

initialize lr_nf_item to null
let l_val_base_icm = 0
let l_val_icm      = 0
let l_val_base_ret = 0
let l_val_icms_ret = 0
let l_ind = 1
declare cq_ar cursor for
select num_oc
from aviso_rec
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
and num_seq       = p_aviso_rec.num_seq
whenever error continue
foreach cq_ar into l_num_oc_ar
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("foreach cursor","cq_ar")
end if

whenever error continue
select num_pedido_fornec
into m_num_ped_fornec
from prog_ordem_sup
where cod_empresa      = p_cod_empresa
and num_oc           = l_num_oc_ar
and num_versao       = 001
and num_prog_entrega = 001
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("select","prog_ordem_sup")
end if

let m_pedido_venda = m_num_ped_fornec[1,6]
if sup3760_busca_ped_venda() then
else
return
end if

initialize l_num_seq_ped, l_ord_montag to null
whenever error continue
select num_sequencia,
ord_montag
into l_num_seq_ped,
l_ord_montag
from ar_nf_item
where cod_empresa   = p_cod_empresa
and num_aviso_rec = p_aviso_rec.num_aviso_rec
and num_seq       = p_aviso_rec.num_seq
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("leitura","ar_nf_item")
end if

initialize l_ser_nff to null
let l_ser_nff = p_dados_tela.ser_nf

let sql_stmt = "select fat_nf_item.seq_item_pedido,",
" fat_nf_item.item,",
" fat_nf_item.qtd_item,",
" fat_nf_item.pedido,",
" fat_nf_item.ord_montag, ",
" fat_nf_mestre.trans_nota_fiscal, ",
" fat_nf_item.seq_item_nf ",
" from fat_nf_mestre, fat_nf_item",
" where fat_nf_mestre.empresa            = """, p_cod_emp_transf, """ ",
" and fat_nf_mestre.nota_fiscal        = ", m_num_nff_aux, ### tvihmo
" and fat_nf_mestre.serie_nota_fiscal  = """,p_dados_tela.ser_nf,""" ",
" and fat_nf_mestre.subserie_nf        = ",p_dados_tela.ssr_nf,
" and fat_nf_mestre.tip_nota_fiscal    = ""fatprdsv"" ",
" and fat_nf_mestre.sit_nota_fiscal    = ""n"" ",
" and fat_nf_item.empresa              = fat_nf_mestre.empresa ",
" and fat_nf_item.trans_nota_fiscal    = fat_nf_mestre.trans_nota_fiscal ",
" and fat_nf_item.pedido               = ", m_pedido_venda,
" and fat_nf_item.seq_item_pedido      = ", l_num_seq_ped

if l_ord_montag is not null then
	let sql_stmt = sql_stmt clipped, " and num_om    = ", l_ord_montag
end if

whenever error continue
prepare var_query_2 from sql_stmt
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("prepare","var_query_2")
	let p_houve_erro = true
return
end if

whenever error continue
declare cq_nf_item cursor with hold for var_query_2
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("leitura","cq_nf_item")
	let p_houve_erro = true
return
end if

whenever error continue
foreach cq_nf_item into lr_nf_item[l_ind].*, l_trans_nf_fatura, l_seq_item_nf
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("foreach","cq_nf_item")
	let p_houve_erro = true
	exit foreach
end if

let l_val_base_icm = 0
let l_val_icm      = 0
let l_val_base_ret = 0
let l_val_icms_ret = 0

if vdpm214_fat_nf_item_fisc_leitura(p_dados_tela.cod_emp_benef,
	l_trans_nf_fatura,
	l_seq_item_nf,
	"icms",false,true) then
	let l_val_base_icm = vdpm214_fat_nf_item_fisc_get_bc_tributo_tot()
	let l_val_icm      = vdpm214_fat_nf_item_fisc_get_val_tributo_tot()
end if

if vdpm214_fat_nf_item_fisc_leitura(p_dados_tela.cod_emp_benef,
	l_trans_nf_fatura,
	l_seq_item_nf,
	"icms_st",false,true) then
	let l_val_base_ret = vdpm214_fat_nf_item_fisc_get_bc_tributo_tot()
	let l_val_icms_ret = vdpm214_fat_nf_item_fisc_get_val_tributo_tot()
end if

if l_val_base_icm is not null then

	let l_val_base_icm = l_val_base_icm / lr_nf_item[l_ind].qtd_item
	let l_val_icm      = l_val_icm      / lr_nf_item[l_ind].qtd_item
	let l_val_base_ret = l_val_base_ret / lr_nf_item[l_ind].qtd_item
	let l_val_icms_ret = l_val_icms_ret / lr_nf_item[l_ind].qtd_item

	whenever error continue
	select empresa
	from sup_infc_strib_nfe
	where empresa            = p_cod_empresa
	and nf_entrada         = p_dados_tela.num_nf
	and serie_nf_entrada   = l_ser_nff
	and subserie_nfe       = p_dados_tela.ssr_nf
	and especie_nf_entrada = p_dados_tela.ies_especie_nf
	and fornecedor         = p_dados_tela.cod_fornecedor
	and seq_item_nfe       = p_aviso_rec.num_seq
	if sqlca.sqlcode = 0 then
		delete from sup_infc_strib_nfe
		where empresa            = p_cod_empresa
		and nf_entrada         = p_dados_tela.num_nf
		and serie_nf_entrada   = l_ser_nff
		and subserie_nfe       = p_dados_tela.ssr_nf
		and especie_nf_entrada = p_dados_tela.ies_especie_nf
		and fornecedor         = p_dados_tela.cod_fornecedor
		and seq_item_nfe       = p_aviso_rec.num_seq
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","sup_infc_strib_nfe")
		else
			insert into sup_infc_strib_nfe values(p_cod_empresa,
			p_dados_tela.num_nf,
			l_ser_nff,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_aviso_rec.num_seq,
			p_dados_tela.dat_entrada_nf,
			lr_nf_item[l_ind].cod_item,
			lr_nf_item[l_ind].qtd_item,
			0,
			l_val_base_icm,
			l_val_icm,
			l_val_base_ret,
			l_val_icms_ret)
		end if
	else

		insert into sup_infc_strib_nfe values(p_cod_empresa,
		p_dados_tela.num_nf,
		l_ser_nff,
		p_dados_tela.ssr_nf,
		p_dados_tela.ies_especie_nf,
		p_dados_tela.cod_fornecedor,
		p_aviso_rec.num_seq,
		p_dados_tela.dat_entrada_nf,
		lr_nf_item[l_ind].cod_item,
		lr_nf_item[l_ind].qtd_item,
		0,
		l_val_base_icm,
		l_val_icm,
		l_val_base_ret,
		l_val_icms_ret)
	end if
	whenever error stop
end if

let l_ind = l_ind + 1
end foreach
end foreach

end function

#---------------------------------------#
function sup3760_usa_orcamento_online()
#---------------------------------------#
	define lr_plano_contas  record like plano_contas.*,
	lr_aviso_rec     record like aviso_rec.*,
	l_num_conta      like dest_aviso_rec.num_conta_deb_desp,
	l_dat_entrada_nf like nf_sup.dat_entrada_nf,
	l_conta_valida   smallint

	initialize l_num_conta,
	lr_aviso_rec.* to null

	let l_conta_valida = false

	if m_ies_bloq_cc_os <> "5" then
		return false
	end if

	whenever error continue
	select nf_sup.dat_entrada_nf
	into l_dat_entrada_nf
	from nf_sup
	where nf_sup.cod_empresa   = p_cod_empresa
	and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop

	declare cq_oln_busca_cta_nf cursor for
	select num_conta_deb_desp
	from dest_aviso_rec
	where dest_aviso_rec.cod_empresa   = p_cod_empresa
	and dest_aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec

	foreach cq_oln_busca_cta_nf into l_num_conta
	call con088_verifica_cod_conta(p_cod_empresa,
	l_num_conta,
	"s",
	l_dat_entrada_nf)
returning lr_plano_contas.*, p_status

	if lr_plano_contas.ies_tip_conta = 8
		or lr_plano_contas.ies_tip_conta = 9 then
		let l_conta_valida = true
		exit foreach
	end if
end foreach

if l_conta_valida = false then
return false
end if

declare cq_oln_aviso_rec cursor for
select aviso_rec.*
from aviso_rec
where aviso_rec.cod_empresa   = p_cod_empresa
and aviso_rec.num_aviso_rec = p_dados_tela.num_aviso_rec

foreach cq_oln_aviso_rec into lr_aviso_rec.*
if  lr_aviso_rec.ies_situa_ar = "c"
	and lr_aviso_rec.ies_liberacao_cont = "n" then
return false
end if
end foreach

return true

end function

#-------------------------------------------#
function sup3760_testa_cit_item(l_cod_item)
#-------------------------------------------#
	define l_cod_item like item.cod_item

	whenever error continue
	select cit_item.cod_item
	from cit_item
	where cit_item.cod_item = l_cod_item
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true
	end if

return false

end function

#------------------------------------#
function sup3760_leitura_parametro()
#------------------------------------#
	define l_cod_emp_consol like empresa.cod_empresa,
	l_status         smallint,
	l_utiliz_totvs_colab   char(01),
	l_versao_totvs_colab   integer

	call log_consoledebugmessage("[sup3760] leitura de parametros e criacao de tabelas temporarias inicio "||current)

	call sup0063_cria_temp_controle()
	call sup3766_cria_temp()
	call sup3760_cria_temp_frete()
	### tevcq6
	if find4glfunction('supr12_cria_temporaria_frete_ar') then
		call supr12_cria_temporaria_frete_ar()
	end if

	if not vdpr57_create_temp_tables() then
	end if

	### dmanentlgx-692 - s� entra no campo filial se tabela log_filial existe e se possui registro (cadastro empresa).
	if log0150_verifica_se_tabela_existe("log_filial") then
		whenever error continue
		select 1
		from log_filial
		where empresa_logix = p_cod_empresa
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> -284 then
			let m_log_filial = 'n'
		else
			let m_log_filial = 's'
		end if
	else
		let m_log_filial = 'n'
	end if

	#-- os 548208 inicio --#
	initialize m_cons_val_ret_rem to null
	whenever error continue
	select par_ies
	into m_cons_val_ret_rem
	from par_sup_pad
	where par_sup_pad.cod_empresa    = p_cod_empresa
	and par_sup_pad.cod_parametro  = 'cons_val_ret_rem'
	whenever error stop
	if sqlca.sqlcode <> 0
		or m_cons_val_ret_rem is null
		or m_cons_val_ret_rem = " " then
		let m_cons_val_ret_rem = "n"
	end if
	#-- os 548208 fim --#

	initialize m_informa_controles_sup3760 to null #os544582
	call log2250_busca_parametro(p_cod_empresa,"informa_controles_sup3760")
returning m_informa_controles_sup3760, l_status
	if l_status = false
		or m_informa_controles_sup3760 is null
		or m_informa_controles_sup3760 = " " then
		let m_informa_controles_sup3760 = "n"
	end if

	#-- os 562700 inicio --#
	initialize m_ies_nf_remessa_x_especie to null
	call log2250_busca_parametro(p_cod_empresa,"ies_nf_remessa_x_especie")
returning m_ies_nf_remessa_x_especie, l_status
	if l_status = false
		or m_ies_nf_remessa_x_especie is null
		or m_ies_nf_remessa_x_especie = " " then
		let m_ies_nf_remessa_x_especie = "0"
	end if
	#-- os 562700 fim --#
	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	call log2250_busca_parametro(p_cod_empresa,"wms_instal")                     returning m_wms_instal, l_status
	if  m_wms_instal = "s" then
		call log2250_busca_parametro(p_cod_empresa,'segmto_utilizacao')
		returning m_segmento, l_status
		if  m_segmento <> "i" then
			call log2250_busca_parametro(p_cod_empresa,"utiliza_codf_item_deposit")      returning m_utiliza_codf_deposit, l_status
		else
			let m_utiliza_codf_deposit = "s"
		end if
	end if
	call log2250_busca_parametro(p_cod_empresa,"cfop_nota_fiscal_provis")        returning m_cfop_nota_fiscal_provis, l_status
	call log2250_busca_parametro(p_cod_empresa,"cfop_nota_fiscal_definit")       returning m_cfop_nota_fiscal_definit, l_status
	call log2250_busca_parametro(p_cod_empresa,"cfop_compl_nota_fiscal_provis")  returning m_cfop_compl_nota_fiscal_provis, l_status
	call log2250_busca_parametro(p_cod_empresa,"cfop_compl_nota_fiscal_definit") returning m_cfop_compl_nota_fiscal_definit, l_status
	call log2250_busca_parametro(p_cod_empresa,"segmto_utilizacao")              returning m_segmto_utilizacao, l_status
	#---------------#

	call log2250_busca_parametro(p_cod_empresa,'envia_email_solic_rec_pc')
returning m_env_email_solic_rec_pc, l_status

	if not l_status or
		m_env_email_solic_rec_pc = ' ' or
		m_env_email_solic_rec_pc is null then
		let m_env_email_solic_rec_pc = 'n'
	end if

	call log2250_busca_parametro(p_cod_empresa,"valida_nf_frete_filiais")
returning m_valida_nf_frete_filiais, l_status
	if l_status = false or m_valida_nf_frete_filiais is null or m_valida_nf_frete_filiais = " " then
		let m_valida_nf_frete_filiais = "n" #ch784820
	end if

	#ch805555
	initialize m_alter_den_item_nf to null
	call log2250_busca_parametro(p_cod_empresa,"alter_den_item_nf")
returning m_alter_den_item_nf, l_status
	if l_status = false or m_alter_den_item_nf is null or m_alter_den_item_nf = " " then
		let m_alter_den_item_nf = "s"
	end if

	#ch783559
	initialize m_exigir_duplicata_nfs to null
	call log2250_busca_parametro(p_cod_empresa, "exigir_duplicata_nfs")
returning m_exigir_duplicata_nfs, p_status
	if p_status = false or
		m_exigir_duplicata_nfs is null or
		m_exigir_duplicata_nfs = ' ' then
		let m_exigir_duplicata_nfs = 'n'
	end if
	#ch783559

	let m_existe_tab_oc_nf = log0150_verifica_se_tabela_existe("sup_oc_nota_fiscal")
	let m_exst_rel_fre_indt = log0150_verifica_se_tabela_existe('sup_relc_ftre_indt')
	let m_existe_despprit = log0150_verifica_se_tabela_existe('imp_desp_proc_item')
	let m_exst_forntriter = log0150_verifica_se_tabela_existe("sup_fornec_tri_ter")
	let m_exst_carcoraut = log0150_verifica_se_tabela_existe("sup_cart_corr_aut")
	let m_cap_recolhe_cide = log0150_verifica_se_tabela_existe("cap_recolhe_cide") ### tey585
	let m_sup_ar_item_fisc = log0150_verifica_se_tabela_existe("sup_ar_item_fisc") ### dmansuplgx-1251

	#inicio os 514411#
	initialize m_qtd_dias_final_export to null
	call log2250_busca_parametro(p_cod_empresa,"qtd_dias_final_export")
returning m_qtd_dias_final_export, p_status
	if p_status = false then
		let m_qtd_dias_final_export = ""
	end if
	#fim os 514411#

	whenever error continue
	let m_dat_fim_valid = mdy("12","31","2002")
	select par_data
	into m_dat_fim_valid
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "dat_fim_valid"
	if m_dat_fim_valid is null or
		m_dat_fim_valid = " " then
		let m_dat_fim_valid = mdy("12","31","2002")
	end if

	#-- inicio os.: 521861 --#
	initialize m_inclui_observacao_item_ar to null
	call log2250_busca_parametro(p_cod_empresa, "inclui_observacao_item_ar")
returning m_inclui_observacao_item_ar, l_status
	if l_status = false or
		m_inclui_observacao_item_ar is null or
		m_inclui_observacao_item_ar = " " then
		let m_inclui_observacao_item_ar = 'n'
	end if
	#-- fim os.: 521861 --#
	###os 205024###
	initialize m_ies_bloq_cc_os to null
	select par_ies
	into m_ies_bloq_cc_os
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "ies_bloq_cc_os"
	if sqlca.sqlcode <> 0 or
		m_ies_bloq_cc_os is null or
		m_ies_bloq_cc_os = " " then
		let m_ies_bloq_cc_os = "n"
	end if

	initialize m_controla_gao to null
	whenever error continue
	select par_ind_especial
	into m_controla_gao
	from gao_par_padrao
	where empresa = p_cod_empresa
	and parametro = "controla_gao"
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_controla_gao is null or
		m_controla_gao = " " then
		let m_controla_gao = "n"
	end if

	#-in�cio ch-tfhmk6-#
	initialize m_controla_sup to null
	whenever error continue
	select par_ind_especial
	into m_controla_sup
	from gao_par_padrao
	where empresa = p_cod_empresa
	and parametro = "controla_sup"
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_controla_sup is null or
		m_controla_sup = " " then
		let m_controla_sup = "n"
	end if
	#-fim ch-tfhmk6-#

	initialize m_orcamento_periodo to null
	whenever error continue
	select par_ind_especial
	into m_orcamento_periodo
	from gao_par_padrao
	where empresa = p_cod_empresa
	and parametro = "orcamento_periodo"
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_orcamento_periodo is null or
		m_orcamento_periodo = " " then
		let m_orcamento_periodo = "n"
	end if

	initialize m_usa_cond_pagto to null
	whenever error continue
	select par_ind_especial
	into m_usa_cond_pagto
	from gao_par_padrao
	where empresa = p_cod_empresa
	and parametro = "usa_cond_pagto"
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_usa_cond_pagto is null or
		m_usa_cond_pagto = " " then
		let m_usa_cond_pagto = "n"
	end if

	initialize m_tem_valid_fim to null
	if sup0686_cod_fiscal_tem_dat_fim_valid() then
		let m_tem_valid_fim = true
	else
		let m_tem_valid_fim = false
	end if

	#-- tqghfr inicio --#
	if m_tem_obf_par_totvs_colab is null then
		let m_tem_obf_par_totvs_colab = 'n'
		if log0150_verifica_se_tabela_existe("obf_par_totvs_colab") then
			let m_tem_obf_par_totvs_colab = 's'
		end if
	end if

	{a tabela obf_par_totvs_colab foi criada para alimentar os novos par�metros necess�rios para identificar se usa o totvs colabora��o sem o tss}
	let m_utiliz_totvs_colab = "n"
	if m_tem_obf_par_totvs_colab = 's' then
		#se a tabela obf_par_totvs_colab existir pode estar utilizando o tc sem tss, caso contr�rio sempre usa o tss
		whenever error continue
		select utiliz_totvs_colab, versao_totvs_colab
		into l_utiliz_totvs_colab, l_versao_totvs_colab
		from obf_par_totvs_colab
		where empresa = p_cod_empresa
		whenever error stop

		if sqlca.sqlcode = 0 then  # se n�o encontrar registro na tabela � porque usa o tc com tss ou n�o usa o tc
			{se utiliza o tc e a vers�o � maior ou igual a 2 (2.00) ent�o usa o tc sem tss}
			if l_utiliz_totvs_colab = 's' then
				if l_versao_totvs_colab >= 2 then
					let m_utiliz_totvs_colab = "s"
				end if
			end if
		end if
	end if
	#-- tqghfr fim --#

	if m_utiliz_totvs_colab = "n" then
		let m_utiliz_totvs_colab = sup376_busca_par_sup_pad("utiliz_totvs_colab",1) #796313 - espindola - projeto totvs colaboracao
		if m_utiliz_totvs_colab is null
			or m_utiliz_totvs_colab = " " then
			let m_utiliz_totvs_colab = "n"
		end if
	end if
	initialize p_ies_custo_grade to null
	let p_ies_custo_grade = sup376_busca_par_sup_pad("ies_informa_custo_gr",1)
	if sqlca.sqlcode <> 0 or p_ies_custo_grade = " " or p_ies_custo_grade is null then
		let p_ies_custo_grade = "n"
	end if

	whenever error continue
	select par_sup_pad.par_ies
	into m_exclusao_sup376_perf
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = "exclusao_sup376_perf"
	whenever error stop
	if sqlca.sqlcode = 100 then
		let m_exclusao_sup376_perf = "n"
		whenever error continue
		insert into par_sup_pad (cod_empresa,
		cod_parametro,
		den_parametro,
		par_ies,
		par_txt,
		par_val,
		par_num,
		par_data)
		values (p_cod_empresa,
		"exclusao_sup376_perf",
		"ativa performance na exclus�o do sup3760 (op��o 6).",
		"n",
		"",
		0,
		0,
		today) # apenas ser� mudado para 's' via banco de dados.
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log0030_mensagem('inclus�o - par_sup_pad',"exclamation")
		end if
	else  #--# achou registro - trabalha com performance exclusao #--#
		#--# neste caso volta o parametro, pois a exclusao nao esta preparada para custos com grade #--#
		if p_ies_custo_grade = "s" and m_exclusao_sup376_perf = "s" then
			whenever error continue
			update par_sup_pad set par_ies = "n"
			where par_sup_pad.cod_empresa   = p_cod_empresa
			and par_sup_pad.cod_parametro = "exclusao_sup376_perf"
			whenever error stop
		end if
	end if
	if m_exclusao_sup376_perf is null
		or m_exclusao_sup376_perf = " " then
		let m_exclusao_sup376_perf = "n"
	end if

	initialize p_ies_cfop99 to null
	let p_ies_cfop99 = sup376_busca_par_sup_pad("ies_cfop99",1)
	if sqlca.sqlcode <> 0 or p_ies_cfop99 is null or p_ies_cfop99 = " " then
		let p_ies_cfop99 = "n"
	end if

	initialize m_ies_cit_item to null
	let m_ies_cit_item = sup376_busca_par_sup_pad("ies_cit_item",1)
	if sqlca.sqlcode <> 0 or m_ies_cit_item is null or m_ies_cit_item = " " then
		let m_ies_cit_item = "n"
	end if

	initialize g_ies_wis_instalado to null
	let g_ies_wis_instalado  = sup376_busca_par_sup_pad("ies_wis_instalado",1)
	if sqlca.sqlcode <> 0 or g_ies_wis_instalado is null or g_ies_wis_instalado = " " then
		let g_ies_wis_instalado = "n"
	end if

	if wms0004_wms_instalado(p_cod_empresa) then
		let g_ies_wms_instalado = "s"
	else
		let g_ies_wms_instalado = "n"
	end if

	initialize g_ies_tex_inst to null
	let g_ies_tex_inst  = sup376_busca_par_sup_pad("ies_tex_inst",1)
	if sqlca.sqlcode <> 0 or
		g_ies_tex_inst is null or
		g_ies_tex_inst = " "   then
		let g_ies_tex_inst = "n"
	end if

	initialize m_perm_copia_nf to null
	let m_perm_copia_nf = sup376_busca_par_sup_pad("perm_copia_nf",1)
	if sqlca.sqlcode <> 0 or
		m_perm_copia_nf is null or
		m_perm_copia_nf = " " then
		let  m_perm_copia_nf = "n"
	end if

	initialize m_perm_alt_cnd_emb to null
	let m_perm_alt_cnd_emb = sup376_busca_par_sup_pad("perm_alt_cnd_emb",1)
	if sqlca.sqlcode <> 0 or
		m_perm_alt_cnd_emb is null or
		m_perm_alt_cnd_emb = " " then
		let m_perm_alt_cnd_emb = "1"
		#continua permitindo alterar condicao de pagamento e modo de embarque normalmente.
	end if

	initialize m_mod_emb_nf_transf to null
	let m_mod_emb_nf_transf = sup376_busca_par_sup_pad("mod_emb_nf_transf",1)
	if sqlca.sqlcode <> 0 or
		m_mod_emb_nf_transf is null or
		m_mod_emb_nf_transf = " " then
		let m_mod_emb_nf_transf = "n"
		#continua obdecendo o parametro perm_alt_cnd_emb inclusive para nota de transferencia.
	end if

	initialize p_ies_rec_item_cancel to null
	let p_ies_rec_item_cancel = sup376_busca_par_sup_pad("ies_rec_item_cancel",1)
	if sqlca.sqlcode <> 0 or
		p_ies_rec_item_cancel is null or
		p_ies_rec_item_cancel = " "   then
		let p_ies_rec_item_cancel = "s"
	end if

	initialize p_ies_cont_insp_aut to null
	let p_ies_cont_insp_aut = sup376_busca_par_sup_pad("ies_cont_insp_aut",1)
	if sqlca.sqlcode <> 0 or
		p_ies_cont_insp_aut is null or
		p_ies_cont_insp_aut = " "   then
		let p_ies_cont_insp_aut = "3"
	end if

	initialize p_ies_obt_inf_com to null
	let p_ies_obt_inf_com = sup376_busca_par_sup_pad("ies_obt_inf_tr_unid",1)
	if sqlca.sqlcode <> 0 or
		p_ies_obt_inf_com is null or
		p_ies_obt_inf_com = " "   then
		let p_ies_obt_inf_com = "n"
	end if

	initialize m_exporta_nf to null
	let m_exporta_nf = sup376_busca_par_sup_pad("exporta_nf",1)
	if m_exporta_nf is null or m_exporta_nf = " " then
		let m_exporta_nf = "d"
	end if

	let m_qtd_dias_nf_venc = sup376_busca_par_sup_pad("qtd_dias_nf_venc",2)

	initialize m_bloq_entr_data to null
	let m_bloq_entr_data = sup376_busca_par_sup_pad("bloq_entr_data",1)
	if m_bloq_entr_data is null or m_bloq_entr_data = " " then
		let m_bloq_entr_data = "n"
	end if

	initialize m_bloq_entr_preco to null
	let m_bloq_entr_preco = sup376_busca_par_sup_pad("bloq_entr_preco",1)
	if m_bloq_entr_preco is null or m_bloq_entr_preco = " " then
		let m_bloq_entr_preco = "n"
	end if

	initialize m_ies_diverg_preco_c to null
	whenever error continue
	select ies_diverg_preco_c
	into m_ies_diverg_preco_c
	from par_sup
	where cod_empresa = p_cod_empresa
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_ies_diverg_preco_c is null or
		m_ies_diverg_preco_c = " " then
		let m_ies_diverg_preco_c = "n"
	end if

	let g_nat_oper_permuta = sup376_busca_par_sup_pad("nat_oper_permuta",2)

	let g_operac_permuta = sup376_busca_par_sup_pad("operac_permuta",3)

	initialize p_ies_busca_loclib to null
	let p_ies_busca_loclib = sup376_busca_par_sup_pad("ies_busca_loclib",1)
	if sqlca.sqlcode <> 0 or
		p_ies_busca_loclib is null or
		p_ies_busca_loclib = " "   then
		let p_ies_busca_loclib = "n"
	end if

	initialize p_oper_trans_unid to null
	let p_oper_trans_unid = sup376_busca_par_sup_pad("cod_oper_trans_unid",3)
	if sqlca.sqlcode <> 0 or p_oper_trans_unid is null then
		let p_oper_trans_unid = " "
	end if

	initialize m_prog_conhec_frete to null
	call log2250_busca_parametro(p_cod_empresa,"programa_conhecimento_frete")
returning m_prog_conhec_frete, p_status

	if m_prog_conhec_frete = " " or
		m_prog_conhec_frete is null then
		let m_prog_conhec_frete = "sup0580"
	end if

	initialize p_ies_indexacao to null
	let p_ies_indexacao = sup376_busca_par_sup_pad("ies_indexacao",1)
	if sqlca.sqlcode <> 0 or
		p_ies_indexacao is null then
		let p_ies_indexacao = "s"
	end if

	### dmanentlgx-1984 - verifica se trabalha com conceito de multimoeda
	if find4glfunction('supr_multimoedas_busca_parametro_cap_utiliz_var_camb_calc_reali') then
		let m_cap_utiliz_var_camb_calc_reali = supr_multimoedas_busca_parametro_cap_utiliz_var_camb_calc_reali(p_cod_empresa)
		if m_cap_utiliz_var_camb_calc_reali is null or
			m_cap_utiliz_var_camb_calc_reali = ' ' then
			let m_cap_utiliz_var_camb_calc_reali = 'n'
		end if
	else
		let m_cap_utiliz_var_camb_calc_reali = 'n'
	end if

	initialize m_empr_utiliz_mp66 to null
	let m_empr_utiliz_mp66 = sup376_busca_par_sup_pad("ies_cred_pis",1)
	if sqlca.sqlcode <> 0 or m_empr_utiliz_mp66 is null or
		m_empr_utiliz_mp66 = " " then
		let m_empr_utiliz_mp66 = "n"
	end if

	initialize p_oper_ent_ind_g to null
	select par_txt
	into p_oper_ent_ind_g
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = "oper_ent_ind_g"

	initialize m_ies_control_consig to null
	select par_ies
	into m_ies_control_consig
	from par_sup_pad
	where par_sup_pad.cod_empresa = p_cod_empresa
	and par_sup_pad.cod_parametro = "ies_control_consig"
	if m_ies_control_consig is null or
		m_ies_control_consig = " " then
		let m_ies_control_consig = "n"
	end if

	initialize p_cod_oper_ent_ind to null
	select par_txt
	into p_cod_oper_ent_ind
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = "cod_oper_ent_ind"

	let p_ies_entr_sem_ped = false
	whenever error continue
	select usuario
	from sup_lim_sped_com
	where sup_lim_sped_com.empresa = p_cod_empresa
	and sup_lim_sped_com.usuario = p_user
	whenever error stop
	if sqlca.sqlcode = 0 then
		let p_ies_entr_sem_ped = true
	else
		whenever error continue
		select nom_usuario
		from usu_entr_sem_ped
		where usu_entr_sem_ped.cod_empresa = p_cod_empresa
		and usu_entr_sem_ped.nom_usuario = p_user
		whenever error stop
		if sqlca.sqlcode = 0 then
			let p_ies_entr_sem_ped = true
		else
			let p_ies_entr_sem_ped = false
		end if
	end if

	initialize m_cnpj_nf_com_pc to null
	let m_cnpj_nf_com_pc = sup376_busca_par_sup_pad("cnpj_nf_com_pc",1)
	if sqlca.sqlcode <> 0 or m_cnpj_nf_com_pc is null or
		m_cnpj_nf_com_pc = " " then
		let m_cnpj_nf_com_pc = "n"
	end if

	initialize m_cfop_nfr to null
	let m_cfop_nfr = sup376_busca_par_sup_pad("cfop_nfr",1)
	if sqlca.sqlcode <> 0 or m_cfop_nfr is null or
		m_cfop_nfr = " " then
		let m_cfop_nfr = "n"
	end if

	initialize m_cfop_nfs to null
	let m_cfop_nfs = sup376_busca_par_sup_pad("cfop_nfs",1)
	if sqlca.sqlcode <> 0 or m_cfop_nfs is null or
		m_cfop_nfs = " " then
		let m_cfop_nfs = "n"
	end if

	initialize m_serie_nfs to null
	let m_serie_nfs = sup376_busca_par_sup_pad("serie_nfs",1)

	initialize m_cont_insp_especial to null
	let m_cont_insp_especial = sup376_busca_par_sup_pad("cont_insp_especial",1)
	if sqlca.sqlcode <> 0 or m_cont_insp_especial is null or
		m_cont_insp_especial = " " then
		let m_cont_insp_especial = "n"
	end if

	initialize g_icms_total_nf to null
	let g_icms_total_nf = sup376_busca_par_sup_pad("icms_total_nf",1)
	if sqlca.sqlcode <> 0 or g_icms_total_nf is null or
		g_icms_total_nf = " " then
		let g_icms_total_nf = "n"
	end if

	initialize g_dat_icms_tot_nf to null
	let g_dat_icms_tot_nf = sup376_busca_par_sup_pad("icms_total_nf",5)

	initialize m_ies_utiliz_provisao to null
	select par_ies
	into m_ies_utiliz_provisao
	from par_imp
	where par_imp.cod_empresa   = p_cod_empresa
	and par_imp.cod_parametro = "ies_utiliz_provisao"

	if sqlca.sqlcode <> 0 or m_ies_utiliz_provisao is null or
		m_ies_utiliz_provisao = " " then
		let m_ies_utiliz_provisao = "n"
	end if

	if m_ies_utiliz_provisao = "s" then
		initialize m_inicio_provisao to null
		select par_val
		into m_inicio_provisao
		from par_imp
		where cod_empresa   = p_cod_empresa
		and cod_parametro = "inicio_provisao"
		if sqlca.sqlcode <> 0 or m_inicio_provisao is null or
			m_inicio_provisao = " " then
			call log0030_mensagem("falta cadastrar apartir de que processo sera utiliz. provisao","exclamation")
			let m_inicio_provisao = -1
		end if

		##criacao das tabelas temporarias do imp0101 no sup3760 devido ao
		##problema do oracle/sql server de efetivar a transacao ao efetuar
		##a criacao de temporarias.
		if not imp0101_cria_temp() then
			return false
		end if
		if not imp0101_cria_temp2() then
			return false
		end if
	end if

	initialize g_proc_ini_os163407 to null
	select par_num
	into g_proc_ini_os163407
	from par_imp
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "proc_ini_os163407"

	initialize m_utiliz_nfm_import to null
	select par_ies
	into m_utiliz_nfm_import
	from par_imp
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "utiliz_nfm_import"

	if sqlca.sqlcode <> 0 or m_utiliz_nfm_import is null or
		m_utiliz_nfm_import = " " then
		let m_utiliz_nfm_import = "n"
	end if

	initialize m_recalcula_impostos_nf_imp to null
	call log2250_busca_parametro(p_cod_empresa,"recalcula_impostos_nf_imp")
returning m_recalcula_impostos_nf_imp, p_status
	if m_recalcula_impostos_nf_imp is null
		or m_recalcula_impostos_nf_imp = " " then
		let m_recalcula_impostos_nf_imp = "n"
	end if

	initialize m_grupo_despesa_nfr to null
	let m_grupo_despesa_nfr = sup376_busca_par_sup_pad("grupo_despesa_nfr",1)
	if m_grupo_despesa_nfr is null then
		let m_grupo_despesa_nfr = "s"
	end if

	initialize p_ies_interf_cre to null
	let p_ies_interf_cre = sup376_busca_par_sup_pad("ies_interf_cre",1)
	if sqlca.sqlcode <> 0 or
		p_ies_interf_cre is null or
		p_ies_interf_cre = " " then
		let p_ies_interf_cre = "n"
	end if

	initialize m_ies_anexa_dupl to null
	select par_vdp.par_vdp_txt[45,45]
	into m_ies_anexa_dupl
	from par_vdp
	where par_vdp.cod_empresa = p_cod_empresa
	if m_ies_anexa_dupl is null or
		m_ies_anexa_dupl = " " then
		let m_ies_anexa_dupl = "n"
	end if

	initialize m_cod_empresa_uni to null
	if m_ies_anexa_dupl = "s" then
		### os 143111
		select par_vdp_txt[158,159]
		into m_cod_empresa_uni
		from par_vdp
		where par_vdp.cod_empresa = p_cod_empresa
	end if
	if m_cod_empresa_uni is null or
		m_cod_empresa_uni = " " then
		let m_cod_empresa_uni = p_cod_empresa
	end if

	initialize l_cod_emp_consol to null
	whenever error continue
	select cod_empresa
	into l_cod_emp_consol
	from empresa_consol
	where cod_programa    = "vdp0225"
	and cod_empr_consol = p_cod_empresa
	whenever error stop

	if l_cod_emp_consol is not null and
		l_cod_emp_consol <> " " then
		let m_cod_empresa_uni = l_cod_emp_consol
	end if

### teoalv - verifica se crer48 consta no rpo do cliente, a chamada desta fun��o foi incluida
###          no sup3760 e supr59 no pacote 02-2013, incluido comando find4glfuncion para evitar
###          cancelamento destes programas caso ainda n�o exista esta fun��o no rpo dos clientes.
	let m_existe_crer48 = false
	if find4glfunction('crer48_valida_e_cancela_nc') then
		let m_existe_crer48 = true
	end if

	initialize p_mot_remes_terc to null
	let p_mot_remes_terc = sup376_busca_par_sup_pad("cod_mot_rem_terc",3)
	if sqlca.sqlcode <> 0 or
		p_mot_remes_terc is null then
		let p_mot_remes_terc = "  "
	end if

	let p_qtd_dias_emis_doc = sup376_busca_par_sup_pad("qtd_dias_emis_doc",2)
	if sqlca.sqlcode = 0 then
		let p_cons_data = true
	end if

	initialize p_tip_desp_cons_fat to null
	let p_tip_desp_cons_fat = sup376_busca_par_sup_pad("tip_desp_cons_fat",2)

	initialize p_cod_grp_desp_nfr to null
	let p_cod_grp_desp_nfr = sup376_busca_par_sup_pad("cod_grp_desp_nfr",2)
	if p_cod_grp_desp_nfr is null then
		let p_cod_grp_desp_nfr = " "
	end if

	initialize m_ies_armaz_itau to null
	let m_ies_armaz_itau = sup376_busca_par_sup_pad("ies_armaz_itau",1)
	if m_ies_armaz_itau is null or
		m_ies_armaz_itau = " " then
		let m_ies_armaz_itau = "n"
	end if

	initialize p_ies_entrada_maior to null
	let p_ies_entrada_maior = sup376_busca_par_sup_pad("ies_entrada_maior",1)
	if p_ies_entrada_maior is null or
		p_ies_entrada_maior = " "   or
		sqlca.sqlcode <> 0          then
		let p_ies_entrada_maior = "n"
	end if

	initialize p_ies_item_nfd_nfr to null
	let p_ies_item_nfd_nfr = sup376_busca_par_sup_pad("ies_item_nfd_nfr",1)
	if p_ies_item_nfd_nfr is null or
		p_ies_item_nfd_nfr = " "   or
		sqlca.sqlcode <> 0         then
		let p_ies_item_nfd_nfr = "n"
	end if

	let p_orig_uf_frt_nf_i = sup376_busca_par_sup_pad("orig_uf_frt_nf_imp",1)
	if (p_orig_uf_frt_nf_i <> "1" and
		p_orig_uf_frt_nf_i <> "2") or
		sqlca.sqlcode <> 0         then
		initialize p_orig_uf_frt_nf_i to null
	end if

	let g_uf_trans_nfdr = sup376_busca_par_sup_pad("uf_trans_nfdr",1)
	if (g_uf_trans_nfdr <> "1" and
		g_uf_trans_nfdr <> "2") or
		sqlca.sqlcode <> 0 then
		initialize g_uf_trans_nfdr to null
	end if

	initialize p_ies_mod_contrato to null
	let p_ies_mod_contrato = sup376_busca_par_sup_pad("ies_modulo_contrato",1)
	if sqlca.sqlcode <> 0 or
		p_ies_mod_contrato is null or
		p_ies_mod_contrato = " " then
		let p_ies_mod_contrato = "n"
	end if

	initialize p_ies_grava_erro_4 to null
	let p_ies_grava_erro_4 = sup376_busca_par_sup_pad("ies_grava_erro_4",1)
	if sqlca.sqlcode <> 0 or
		p_ies_grava_erro_4 is null then
		let p_ies_grava_erro_4 = "s"
	end if

	initialize p_ies_pc_ant_fornec to null
	let p_ies_pc_ant_fornec = sup376_busca_par_sup_pad("ies_pc_ant_fornec",1)
	if sqlca.sqlcode <> 0 or
		p_ies_pc_ant_fornec is null then
		let p_ies_pc_ant_fornec = "n"
	end if

	initialize p_ies_transf_unid to null
	let p_ies_transf_unid = sup376_busca_par_sup_pad("ies_obt_inf_tr_unid",1)
	if sqlca.sqlcode <> 0 or
		p_ies_transf_unid is null then
		let p_ies_transf_unid = "n"
	end if

	initialize p_cod_oper_ent_comp to null
	let p_cod_oper_ent_comp = sup376_busca_par_sup_pad("cod_oper_ent_compon",3)
	if sqlca.sqlcode <> 0 or
		p_cod_oper_ent_comp is null then
		let p_cod_oper_ent_comp = " "
	end if

	initialize m_incid_icms_nfs to null
	let m_incid_icms_nfs = sup376_busca_par_sup_pad("incid_icms_nfs",1)
	if sqlca.sqlcode <> 0 or
		m_incid_icms_nfs is null then
		let m_incid_icms_nfs = " "
	end if

	initialize m_pc_nf_consig to null
	let m_pc_nf_consig = sup376_busca_par_sup_pad("pc_nf_consig",1)
	if sqlca.sqlcode <> 0 or m_pc_nf_consig is null or m_pc_nf_consig = " " then
		let m_pc_nf_consig = "n"
	end if

	initialize m_cod_tip_desp_cons to null
	select cod_tip_desp_cons into m_cod_tip_desp_cons
	from par_sup_compl_1
	where cod_empresa = p_cod_empresa
	if sqlca.sqlcode <> 0 then
		let m_cod_tip_desp_cons = 0
	end if

	initialize m_cod_grp_desp_fat to null
	select par_val into m_cod_grp_desp_fat
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "cod_grp_desp_fat"
	if sqlca.sqlcode <> 0 then
		let m_cod_grp_desp_fat = 0
	end if

	select * into p_par_estoque.*
	from par_estoque
	where par_estoque.cod_empresa = p_cod_empresa

	select * into p_par_sup.*
	from par_sup
	where par_sup.cod_empresa = p_cod_empresa

	select mes_sistema, ano_sistema
	into m_mes_sistema, m_ano_sistema
	from par_pat
	where par_pat.cod_empresa = p_cod_empresa

	let m_mes_fecha_01 = "n"
	whenever error continue
	select par_ies
	into m_mes_fecha_01
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "mes_fecha_01"
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_mes_fecha_01 is null or
		m_mes_fecha_01 = " " then
		let m_mes_fecha_01 = "n"
	end if

	select ies_cod_cgc, ies_cod_fornec into p_ies_cod_cgc, p_ies_cod_fornec
	from par_fornecedor

	select * into p_par_sup_compl.*
	from par_sup_compl
	where par_sup_compl.cod_empresa = p_cod_empresa

	select * into p_par_sup_compl_1.*
	from par_sup_compl_1
	where par_sup_compl_1.cod_empresa = p_cod_empresa

	if sqlca.sqlcode <> 0  then
		call log003_err_sql("leitura","par_sup_compl_1")
		return false
	end if

	initialize p_qtd_dig_cfop to null
	select par_ies into p_qtd_dig_cfop
	from par_sup_pad
	where cod_empresa = p_cod_empresa
	and cod_parametro = "qtd_dig_cfop"

	initialize p_ar_os_esp.* to null
	initialize p_aviso_rec_compl.* to null

	select par_con.*, par_con.ies_contab_aen
	into p_par_con.*, p_ies_contab_aen
	from par_con
	where par_con.cod_empresa = p_cod_empresa

	if sqlca.sqlcode <> 0  then
		call log003_err_sql("leitura","par_con")
		return false
	end if

	#--# tdjwek (espindola) #--#
	if p_ies_contab_aen is null
		or p_ies_contab_aen = " " then
		let p_ies_contab_aen = "n"
	end if
	#--# tdjwek (espindola) #--#

	select *
	into p_par_cap.*
	from par_cap
	where cod_empresa = p_cod_empresa
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","par_cap")
		return false
	end if

	let m_ies_custo_medio = " "
	select ies_custo_medio
	into m_ies_custo_medio
	from par_estoque
	where cod_empresa = p_cod_empresa
	if sqlca.sqlcode <> 0 then
		error "verificar parametrizacao de custo medio para essa empresa"
		sleep 3
	end if

	###os159597###
	initialize m_contr_pes_rec to null
	select par_ies
	into m_contr_pes_rec
	from par_sup_pad
	where par_sup_pad.cod_empresa    = p_cod_empresa
	and par_sup_pad.cod_parametro  = "contr_pes_rec"
	if sqlca.sqlcode <> 0 or
		m_contr_pes_rec is null or
		m_contr_pes_rec = " " then
		let m_contr_pes_rec = "n"
	end if

	initialize m_transf_estoq to null
	select par_ies
	into m_transf_estoq
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "transf_estoq"
	if sqlca.sqlcode <> 0 or
		m_transf_estoq is null or
		m_transf_estoq = " " then
		let m_transf_estoq = "n"
	end if

	let m_gera_rsv_transf = null
	select par_sup_pad.par_ies
	into m_gera_rsv_transf
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = "gera_rsv_transf"
	if sqlca.sqlcode <> 0 or
		m_gera_rsv_transf is null then
		let m_gera_rsv_transf = "n"
	end if

	initialize m_ies_cnpj_insc to null
	let m_ies_cnpj_insc = sup376_busca_par_sup_pad("ies_cnpj_insc",1)
	if sqlca.sqlcode <> 0 or m_ies_cnpj_insc is null then
		let m_ies_cnpj_insc = "n"
	end if

	### os219022 ###
	let m_serie_branca = sup376_busca_par_sup_pad("serie_branca",1)
	if sqlca.sqlcode <> 0 or
		m_serie_branca is null then
		let m_serie_branca = "n"
	end if

	whenever error stop

	initialize m_ies_inf_aut_barra to null
	whenever error continue
	select par_ies into m_ies_inf_aut_barra
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "ies_inf_aut_barra"
	whenever error stop
	if sqlca.sqlcode <> 0 or m_ies_inf_aut_barra is null or m_ies_inf_aut_barra = " " then
		let m_ies_inf_aut_barra = "n"
	end if

	initialize m_transf_saida to null
	whenever error continue
	select par_ies into m_transf_saida
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro = "transf_saida"
	whenever error stop
	if sqlca.sqlcode <> 0 or m_transf_saida is null or m_transf_saida = " " then
		let m_transf_saida = "n"
	end if

	initialize m_proc_imp_rec_nfr_consig to null
	call log2250_busca_parametro(p_cod_empresa,"proc_imp_rec_nfr_consignatario")
returning m_proc_imp_rec_nfr_consig, p_status
	if p_status = false or
		m_proc_imp_rec_nfr_consig is null or
		m_proc_imp_rec_nfr_consig = " " then
		let m_proc_imp_rec_nfr_consig = "n"
	end if

	#os. 457661
	initialize m_permite_alterar_nfs_transito to null
	call log2250_busca_parametro(p_cod_empresa,"permite_alterar_nfs_transito")
returning m_permite_alterar_nfs_transito, p_status
	if p_status = false or
		m_permite_alterar_nfs_transito is null or
		m_permite_alterar_nfs_transito = " " then
		let m_permite_alterar_nfs_transito = "n"
	end if


	#os 359707
	initialize m_consiste_nf_integr to null
	call log2250_busca_parametro(p_cod_empresa,"consiste_nf_ja_integr_cap_con")
returning m_consiste_nf_integr, p_status
	if   (m_consiste_nf_integr <> "s"
		and   m_consiste_nf_integr <> "n")
		or    m_consiste_nf_integr is null
		then let m_consiste_nf_integr = "n"
	end if
	#os 359707

	# begin os.534634
	initialize g_gerar_cred_impostos_nfm_import to null
	call log2250_busca_parametro(p_cod_empresa,"gerar_cred_impostos_nfm_import")
returning g_gerar_cred_impostos_nfm_import, p_status
	if p_status = false or
		g_gerar_cred_impostos_nfm_import is null or g_gerar_cred_impostos_nfm_import = " " then
		let g_gerar_cred_impostos_nfm_import = '0'
	end if

	initialize m_grupo_desp_nfp_com_cred_nfm to null
	call log2250_busca_parametro(p_cod_empresa,"grupo_desp_nfp_com_cred_nfm")
returning m_grupo_desp_nfp_com_cred_nfm, p_status
	if p_status = false or
		m_grupo_desp_nfp_com_cred_nfm is null or m_grupo_desp_nfp_com_cred_nfm = " " then
		let m_grupo_desp_nfp_com_cred_nfm = '0'
	end if
	# end os.534634

	initialize m_consulta_ord_descres to null
	call log2250_busca_parametro(p_cod_empresa,"consulta_registro_ordem_decres")
returning m_consulta_ord_descres, p_status

	if m_consulta_ord_descres is null or m_consulta_ord_descres = " " then
		let m_consulta_ord_descres = "n"
	end if

	initialize m_ent_manual_transf to null #os372636
	call log2250_busca_parametro(p_cod_empresa,"permite_ent_manual_transf_unid")
returning m_ent_manual_transf, p_status
	if m_ent_manual_transf is null or m_ent_manual_transf = " " then
		let m_ent_manual_transf = "n"
	end if

	initialize m_trata_nf_em_transito to null ##os 369029
	call log2250_busca_parametro(p_cod_empresa,"efet_tratamento_nf_em_transito")
returning m_trata_nf_em_transito, p_status

	if m_trata_nf_em_transito is null or m_trata_nf_em_transito = " " then
		let m_trata_nf_em_transito = "n"
	end if

	initialize m_contr_terc_no_dep to null
	call log2250_busca_parametro(p_cod_empresa, "contr_terceiro_no_depositante")
returning m_contr_terc_no_dep, p_status

	if m_contr_terc_no_dep is null or m_contr_terc_no_dep = " " then
		let m_contr_terc_no_dep = "n"
	end if

	initialize m_gerar_os_recb_mat_terc to null
	call log2250_busca_parametro(p_cod_empresa, "gerar_os_recb_mat_terc")
returning m_gerar_os_recb_mat_terc, p_status

	if (m_gerar_os_recb_mat_terc is null) or (m_gerar_os_recb_mat_terc = " ") then
		let m_gerar_os_recb_mat_terc = "n"
	end if

	call log2250_busca_parametro(p_cod_empresa,"data_emissao_ped_compra_gao")
returning m_cons_dat_emis_ped, p_status

	if p_status = false or m_cons_dat_emis_ped is null or m_cons_dat_emis_ped = " " then
		let m_cons_dat_emis_ped = "n"
	end if

	call log2250_busca_parametro(p_cod_empresa,"utiliza_dds_fortaleza")
returning m_utiliza_dds_fortaleza, p_status
	if not p_status or m_utiliza_dds_fortaleza is null  then
		let m_utiliza_dds_fortaleza = "n"
	end if

	call log2250_busca_parametro(p_cod_empresa,"confirmacao_nf_compex_mat_prim")
returning m_confirm_compex_mp, p_status

	if not p_status or m_confirm_compex_mp is null or m_confirm_compex_mp = " " then
		let m_confirm_compex_mp = "n"
	end if

	call log2250_busca_parametro(p_cod_empresa,"confirmacao_nf_compex_imobiliz")
returning m_confirm_compex_ciap, p_status

	if not p_status or m_confirm_compex_ciap is null or m_confirm_compex_ciap = " " then
		let m_confirm_compex_ciap = "n"
	end if

	initialize m_cnd_pgto_sem_intr_cap to null ##os 437323
	call log2250_busca_parametro(p_cod_empresa,"cond_pgto_padrao_sem_intr_cap")
returning m_cnd_pgto_sem_intr_cap, p_status

	initialize m_pct_toler_nf to null
	call log2250_busca_parametro(p_cod_empresa, "pct_toler_pre_unit_oc_x_nf")
returning m_pct_toler_nf, p_status
	if p_status = false or
		m_pct_toler_nf is null then
		let m_pct_toler_nf = 0
	end if

	initialize m_pct_toler_custo to null
	call log2250_busca_parametro(p_cod_empresa, "pct_toler_pre_unit_oc_x_custo")
returning m_pct_toler_custo, p_status
	if p_status = false or
		m_pct_toler_custo is null then
		let m_pct_toler_custo = 0
	end if

	initialize m_diver_nf to null
	call log2250_busca_parametro(p_cod_empresa, "diver_pre_unit_oc_x_nf")
returning m_diver_nf, p_status
	if p_status = false or
		m_diver_nf is null then
		let m_diver_nf = " "
	end if

	initialize m_diver_custo to null
	call log2250_busca_parametro(p_cod_empresa, "diver_pre_unit_oc_x_custo")
returning m_diver_custo, p_status
	if p_status = false or
		m_diver_custo is null then
		let m_diver_custo = " "
	end if

	### buscando par�metro "cr�dito de st no faturamento de item comprado para revenda"
	### processo de entradas(2)/recebimento de materias(51)/impostos(60)
	call log2250_busca_parametro(p_cod_empresa, "cred_st_faturam_it_compra_revd")
returning m_cred_st_fat, l_status

	if not l_status or
		m_cred_st_fat is null or
		m_cred_st_fat = " " then
		let m_cred_st_fat = "n"
	end if

	initialize m_mov_qtd_ser to null

	call log2250_busca_parametro(p_cod_empresa, "mov_quantidade_unica_por_serie")
returning m_mov_qtd_ser, p_status

	if p_status = false or m_mov_qtd_ser is null or m_mov_qtd_ser = " " then
		let m_mov_qtd_ser = "n"
	end if

	# os 409509 niara
	call log2250_busca_parametro(p_cod_empresa,'uti_cfop_compl_dic_sergipe')
returning m_cfop_compl_dic_se, l_status
	if m_cfop_compl_dic_se is null or m_cfop_compl_dic_se = ' ' then
		let m_cfop_compl_dic_se = 'n'
	end if
	#

	#inicio o.s. 472270
	call log2250_busca_parametro(p_cod_empresa, "ies_msg_controlar_terceiros")
returning m_ies_msg_contr_terc, p_status
	if p_status = false or
		m_ies_msg_contr_terc = " " or
		m_ies_msg_contr_terc is null then
		let m_ies_msg_contr_terc = 'n'
	end if
	#fim o.s. 472270

# os 479248
	initialize m_ies_local_insp to null
	whenever error continue
	select par_ies
	into m_ies_local_insp
	from par_sup_pad
	where par_sup_pad.cod_empresa = p_cod_empresa
	and par_sup_pad.cod_parametro = "ies_local_insp"
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_ies_local_insp is null then
		let m_ies_local_insp = "n"
	end if

	initialize m_visualizar_notas_em_transito to null
	call log2250_busca_parametro(p_cod_empresa, "visualizar_notas_em_transito")
returning m_visualizar_notas_em_transito, p_status
	if p_status = false
		or m_visualizar_notas_em_transito is null
		or m_visualizar_notas_em_transito = " " then
		let m_visualizar_notas_em_transito = "n"
	end if

	call log2250_busca_parametro(p_cod_empresa,"consiste_nf_apos_modificacao")
returning m_cons_modific, p_status
	if p_status = false or
		m_cons_modific is null or
		m_cons_modific = " " then
		let m_cons_modific = "s"
	end if

	if m_consistir_oc_estrutura = " " or
		m_consistir_oc_estrutura is null then
		call log2250_busca_parametro(p_cod_empresa,"consistir_oc_estrutura")
		returning m_consistir_oc_estrutura, p_status
		if p_status = false or
			m_consistir_oc_estrutura  is null or
			m_consistir_oc_estrutura  = " " then
			let m_consistir_oc_estrutura  = "n"
		end if
	end if

	initialize m_permite_transf_duplicada_emp to null
	call log2250_busca_parametro(p_cod_empresa,"permite_transf_duplicada_emp")
returning m_permite_transf_duplicada_emp, p_status
	if p_status = false or
		m_permite_transf_duplicada_emp is null or
		m_permite_transf_duplicada_emp = " " then
		let m_permite_transf_duplicada_emp = "n"
	end if

	initialize p_status to null  ###os 512218
	call log2250_busca_parametro(p_cod_empresa,"devol_consig_venda_parcial")
returning m_devol_consig_venda_parcial, p_status
	if p_status = false or
		m_devol_consig_venda_parcial is null or
		m_devol_consig_venda_parcial = " " then
		let m_devol_consig_venda_parcial = "n"
	end if

	initialize p_status to null  ###os 509930
	call log2250_busca_parametro(p_cod_empresa,"devol_cliente_parcial")
returning m_devol_cliente_parcial, p_status
	if p_status = false or
		m_devol_cliente_parcial is null or
		m_devol_cliente_parcial = " " then
		let m_devol_cliente_parcial= "n"
	end if

	#o.s. 529316
	initialize m_abre_aut_tela_erros to null
	call log2250_busca_parametro(p_cod_empresa, "abre_aut_tela_erros")
returning m_abre_aut_tela_erros, p_status
	if p_status = false or m_abre_aut_tela_erros is null then
		let m_abre_aut_tela_erros = "n"
	end if
	#o.s. 529316

	#550500#
	initialize m_atualiza_nf_trans to null
	call log2250_busca_parametro(p_cod_empresa, "atualiza_ser_ssr_esp_nf_trans")
returning m_atualiza_nf_trans, p_status

	if p_status = false or m_atualiza_nf_trans is null or m_atualiza_nf_trans = ' ' then
		let m_atualiza_nf_trans = 'n'
	end if

	#--inicio--os 555962 #
	call log2250_busca_parametro(p_cod_empresa, "altera_cndpgto_mod_nf_transito")
returning m_altera_cndpgto_mod_nf_transito, p_status

	if p_status = false or
		m_altera_cndpgto_mod_nf_transito is null or
		m_altera_cndpgto_mod_nf_transito = ' ' then
		let m_altera_cndpgto_mod_nf_transito = 'n'
	end if
	#---fim----os 555962 #

	#os564136
	# o par�metro abaixo permite que seja incluida mesma nota/serie/subs�rie/fornecedor para empresas
	# diferentes quando for nfe e n�o possuir cap centralizado
	call log2250_busca_parametro(p_cod_empresa,"permite_ent_mesma_nfe_emp_dif")
returning m_permite_ent_mesma_nfe_emp_dif, p_status
	if p_status = false or
		m_permite_ent_mesma_nfe_emp_dif is null or
		m_permite_ent_mesma_nfe_emp_dif = " " then
		let m_permite_ent_mesma_nfe_emp_dif = "n"
	end if
	#fim os564136

	#--inicio--os 534866 #
	initialize m_utiliza_nf_eletronica to null
	call log2250_busca_parametro(p_cod_empresa, "utiliza_nf_eletr")
returning m_utiliza_nf_eletronica, p_status

	if p_status = false or m_utiliza_nf_eletronica is null or m_utiliza_nf_eletronica = ' ' then
		let m_utiliza_nf_eletronica = 'n'
	end if
	#---fim----os 534866 #

	#--inicio--os 502143 #
	let m_is_clie_319 = false ### tqaft6
	if find4glfunction('supy101_cliente_319') then
		let m_is_clie_319 = true
		if supy101_cliente_319() = true  then
			call log2250_busca_parametro(p_cod_empresa, "cod_item_cred_transf_icms")
			returning m_cod_item_cred_transf_icms, p_status

			if p_status = false or
				m_cod_item_cred_transf_icms is null then
				let m_cod_item_cred_transf_icms = ' '
			end if
		end if
	end if
	#---fim----os 502143 #


	#os 561.763
	initialize m_exigir_dupl_nff_vencto_pc to null
	call log2250_busca_parametro(p_cod_empresa, "exigir_dupl_nff_vencto_pc")
returning m_exigir_dupl_nff_vencto_pc, p_status
	if p_status = false or
		m_exigir_dupl_nff_vencto_pc is null or
		m_exigir_dupl_nff_vencto_pc = ' ' then
		let m_exigir_dupl_nff_vencto_pc = 'n'
	end if
	#os 561.763

	# ch 739942 - rafael f. b. - 11/01/2010 #
	call log2250_busca_parametro(p_cod_empresa, "permite_alt_inf_compl_nf_cap")
returning m_permite_alt_inf_compl_nf_cap, l_status
	if l_status = false or
		m_permite_alt_inf_compl_nf_cap is null or
		m_permite_alt_inf_compl_nf_cap = " " then
		let m_permite_alt_inf_compl_nf_cap = "n"
	end if


	#769302#
	whenever error continue
	select par_ies
	into m_transf_incid_its
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = 'transf_incid_its'
	whenever error stop
	if sqlca.sqlcode <> 0 or
		m_transf_incid_its is null or
		m_transf_incid_its = ' ' then
		let m_transf_incid_its = 'n'
	end if
	#---fi--- 769302#

	# ch 762211
	call log2250_busca_parametro(p_cod_empresa, "utiliza_numeracao_nf_digitos")
returning m_utiliza_num_nfe, l_status
	if l_status = false or
		m_utiliza_num_nfe is null or
		m_utiliza_num_nfe = " " then
		let m_utiliza_num_nfe = "n"
	end if
	initialize m_altera_nfm_7_para_6_aut to null
	call log2250_busca_parametro(p_cod_empresa, "altera_nfm_7_para_6_automatico")
returning m_altera_nfm_7_para_6_aut, l_status
	if l_status = false or
		m_altera_nfm_7_para_6_aut is null or
		m_altera_nfm_7_para_6_aut = " " then
		let m_altera_nfm_7_para_6_aut = "n"
	end if

	call log2250_busca_parametro(p_cod_empresa,'ies_informa_relac_nf_benef')
returning m_ies_relac_nf_benef, l_status
	if m_ies_relac_nf_benef is null or m_ies_relac_nf_benef = ' ' then
		let m_ies_relac_nf_benef = 'n'
	end if


	initialize m_mod_embarque_nfm_importacao to null
	call log2250_busca_parametro(p_cod_empresa, "mod_embarque_nfm_importacao")
returning m_mod_embarque_nfm_importacao, l_status
	if l_status = false then
		let m_mod_embarque_nfm_importacao = ' '
	end if


	initialize m_selec_itens_nfp_importacao to null
	call log2250_busca_parametro(p_cod_empresa, "selec_itens_nfp_importacao")
returning m_selec_itens_nfp_importacao, l_status
	if l_status = false then
		let m_selec_itens_nfp_importacao = 'n'
	end if

	#--# tdfzbf (espindola) #--#
	whenever error continue
	select gao_par_padrao.par_ind_especial
	into m_desc_nf_rec
	from gao_par_padrao
	where gao_par_padrao.empresa   = p_cod_empresa
	and gao_par_padrao.parametro = "desconsidera_nf_rec"
	whenever error stop
	if sqlca.sqlcode <> 0 or m_desc_nf_rec is null or m_desc_nf_rec = " " then
		let m_desc_nf_rec = "n"
	end if
	#--# tdfzbf (espindola) #--#


	initialize m_utiliza_engenharia_grade to null
	call log2250_busca_parametro(p_cod_empresa, 'utiliza_engenharia_grade')
returning m_utiliza_engenharia_grade, l_status
	if l_status = false then
		let m_utiliza_engenharia_grade = 'n'
	end if

	initialize m_valida_data_oc_ar to null
	call log2250_busca_parametro(p_cod_empresa,"ies_valida_data_oc_maior_ar")
returning m_valida_data_oc_ar, l_status
	if l_status = false or
		m_valida_data_oc_ar is null or
		m_valida_data_oc_ar = " " then
		let m_valida_data_oc_ar = "n"
	end if

	if log0150_verifica_se_coluna_existe("vencimento_nff","espc_nota_fiscal") then
		if find4glfunction("sup9932_valida_conversor_espc_nota_fiscal") then
			if sup9932_valida_conversor_espc_nota_fiscal() then
				call log0030_mensagem("favor executar conversor sup00001 atrav�s do fin00000.", "info")
				return false
			end if
		else
			call log0030_mensagem("favor atualizar fun��o sup9932.", "info")
			return false
		end if
	end if

	### variavel m_existe_uf_urf inicia com false, se existe campo na tabela assume 1 (true), se n�o existe assume -1 (para que n�o efetue novamente a pesquisa do campo na tabela)
	if m_existe_uf_urf is null or m_existe_uf_urf = ' ' then
		if log0150_verifica_se_coluna_existe("urf","uni_feder") then
			let m_existe_uf_urf = 's'
		else
			let m_existe_uf_urf = 'n'
		end if
	end if

	### mman-4490
	call log2250_busca_parametro(p_cod_empresa,"gerar_por_nf_cap_e_livro_fisc")
returning m_nf_cap_fiscal, l_status

	if l_status = false or m_nf_cap_fiscal is null or m_nf_cap_fiscal = " " then
		let m_nf_cap_fiscal = "1"
	end if

	whenever error continue
	select cod_empresa,
	den_empresa,
	den_reduz,
end_empresa,
den_bairro,
den_munic,
uni_feder,
ins_estadual,
num_cgc,
num_caixa_postal,
cod_cep,
num_telefone,
num_telex,
num_fax,
end_telegraf,
num_reg_junta,
dat_inclu_junta,
ies_filial,
dat_fundacao,
cod_cliente
into p_empresa.cod_empresa,
p_empresa.den_empresa,
p_empresa.den_reduz,
p_empresa.end_empresa,
p_empresa.den_bairro,
p_empresa.den_munic,
p_empresa.uni_feder,
p_empresa.ins_estadual,
p_empresa.num_cgc,
p_empresa.num_caixa_postal,
p_empresa.cod_cep,
p_empresa.num_telefone,
p_empresa.num_telex,
p_empresa.num_fax,
p_empresa.end_telegraf,
p_empresa.num_reg_junta,
p_empresa.dat_inclu_junta,
p_empresa.ies_filial,
p_empresa.dat_fundacao,
p_empresa.cod_cliente
from empresa
where empresa.cod_empresa  = p_cod_empresa
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("leitura","empresa")
end if
call sup376_busca_uni_feder(p_empresa.uni_feder)
let p_cod_pais_emp = gr_uni_feder.cod_pais

let p_ies_cod_operac = sup376_busca_par_sup_pad("ies_cod_operac_estoq",1)
if p_ies_cod_operac is null or
	p_ies_cod_operac = " " or
	p_ies_cod_operac = "n" then
	display "                " at 7,63
end if
display "    " at 8,70

initialize m_operacao_gtc to null #terbd0
initialize m_nf_anulacao to null #terbd0

call log2250_busca_parametro(p_cod_empresa,"operacao_gtc") returning m_operacao_gtc, l_status #terbd0
if l_status = false or m_operacao_gtc is null or m_operacao_gtc = ' ' then
	let m_anul_frete = false
end if

if m_operacao_gtc = '1' then
	let m_anul_frete = false
else
	let m_anul_frete = true
end if

initialize m_informa_peso_entrada_nf to null
call log2250_busca_parametro(p_cod_empresa,"informa_peso_entrada_nf") returning m_informa_peso_entrada_nf, l_status
if l_status = false or
	m_informa_peso_entrada_nf      is null or
	m_informa_peso_entrada_nf     = " "   then
	let m_informa_peso_entrada_nf = "n"
end if

call log2250_busca_parametro(p_cod_empresa, "ies_informa_cliente_triang_con")
returning m_informa_cliente_triang_con, p_status
if m_informa_cliente_triang_con is null then
	let m_informa_cliente_triang_con = "n"
end if

#542889
call log2250_busca_parametro(p_cod_empresa,"icms_ret_base_calc_pis_cofins")
returning m_icms_ret_base_calc_pis_cofins, l_status
if l_status = false or
	m_icms_ret_base_calc_pis_cofins is null or
	m_icms_ret_base_calc_pis_cofins = " " then
	let m_icms_ret_base_calc_pis_cofins = "s"
end if

#--inicio ch732879--# antonio
initialize m_dat_alteracao_local_rem_ret to null
call log2250_busca_parametro(p_cod_empresa,"dat_alteracao_local_rem_ret")
returning m_dat_alteracao_local_rem_ret, p_status
if m_dat_alteracao_local_rem_ret = ' ' or
	m_dat_alteracao_local_rem_ret is null then
	let m_dat_alteracao_local_rem_ret = today
end if
#--fim ch732879-----#

#--tpjeo6--#
initialize m_perm_ent_nf_item_wms_s_dimens to null
call log2250_busca_parametro(p_cod_empresa,"perm_ent_nf_item_wms_s_dimens")
returning m_perm_ent_nf_item_wms_s_dimens, p_status
if m_perm_ent_nf_item_wms_s_dimens = ' ' or  m_perm_ent_nf_item_wms_s_dimens is null then
	let m_perm_ent_nf_item_wms_s_dimens = 'n'
end if
#--fim tpjeo6-----#

initialize m_dat_alteracao_local_rem_ret to null
call log2250_busca_parametro(p_cod_empresa,"dat_alteracao_local_rem_ret")
returning m_dat_alteracao_local_rem_ret, p_status
if m_dat_alteracao_local_rem_ret = ' ' or
	m_dat_alteracao_local_rem_ret is null then
	let m_dat_alteracao_local_rem_ret = today
end if

initialize m_reg_entr_doc_rec to null
call log2250_busca_parametro(p_cod_empresa,"registro_entrada_rec_doc_852")
returning m_reg_entr_doc_rec, p_status
if m_reg_entr_doc_rec = ' ' or
	m_reg_entr_doc_rec is null then
	let m_reg_entr_doc_rec = 0
end if

### tsrei1
call log2250_busca_parametro(p_cod_empresa,"emissao_nf_material_transito")
returning m_emissao_nf_tipo_7, p_status

if m_emissao_nf_tipo_7 is null or m_emissao_nf_tipo_7 = " " or p_status = false then
	let m_emissao_nf_tipo_7 = "n"
end if

if find4glfunction('vdpr239_prepara_envio_mensagem_eai') = true then
	call vdpr239_carrega_parametros()
end if

call log2250_busca_parametro(p_cod_empresa, 'integ_cli_forn_transp_datasul')
returning m_integ_cli_forn_transp_datasul, l_status

if l_status = false
	or m_integ_cli_forn_transp_datasul is null
	or m_integ_cli_forn_transp_datasul = ' ' then
	let m_integ_cli_forn_transp_datasul = 'n'
end if

call log2250_busca_parametro(p_cod_empresa, 'integ_codif_cli_forn_transp')
returning m_integ_codif_cli_forn_transp, l_status

if l_status = false
	or m_integ_codif_cli_forn_transp is null
	or m_integ_codif_cli_forn_transp = ' ' then
	let m_integ_codif_cli_forn_transp = '3'
end if

call log2250_busca_parametro(p_cod_empresa, 'consiste_dia_ce_reinf')
returning m_consiste_dia_ce_reinf, l_status

if l_status = false
	or m_consiste_dia_ce_reinf is null
	or m_consiste_dia_ce_reinf = ' ' then
	let m_consiste_dia_ce_reinf = 0
end if

call log_consoledebugmessage("[sup3760] leitura de parametros e criacao de tabelas temporarias fim "||current)

return true

end function

#---------------------------------------#
function sup3760_possui_rateio_compl()
#---------------------------------------#
	define l_count  smallint

	initialize l_count to null
	whenever error continue
	select count(*)
	into l_count
	from relac_nf_import_it
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop

	if l_count > 0 then
		return true
	end if
return false

end function

#-----------------------------------------#
function sup3760_atualizar_ordens_fluxo()
#-----------------------------------------#
	define l_ind smallint

	#fluxo de caixa
	for l_ind = 1 to arraylength(ma_inf_ar)
		if ma_inf_ar[l_ind].num_pedido is null then
			exit for
		end if

		if l_ind > 1 then
			#n�o processar a mesma ordem mais de uma vez
			if ma_inf_ar[l_ind].num_oc = ma_inf_ar[l_ind - 1].num_oc then
				continue for
			end if
		end if

		#atualizar saldo da ordem de compra no
		#fluxo de caixa ap�s exclus�o de inf. fiscais do ar
		if not fcl1150_integra_oc_fcx(p_dados_tela.cod_empresa,ma_inf_ar[l_ind].num_oc,"in") then
			let p_houve_erro = true
			exit for
		end if
	end for
end function

#------------------------------------------------#
function sup3760_transfere_h_est_trans_de_terc()
#------------------------------------------------#
	define lr_h_est_trans_terc record like h_est_trans_terc.*

	initialize lr_h_est_trans_terc to null
	declare cq_busca_h_terc cursor with hold for
	select *
	from h_est_trans_terc
	where cod_empresa    = p_cod_empresa
	and num_nf         = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and ies_especie_nf = p_dados_tela.ies_especie_nf
	and cod_fornecedor = p_dados_tela.cod_fornecedor
	and ies_situacao   = "3"
	foreach cq_busca_h_terc into lr_h_est_trans_terc.*
	let lr_h_est_trans_terc.num_transac = 0

	whenever error continue
	insert into est_trans_de_terc ( cod_empresa, dat_movto, num_nf, ser_nf, ssr_nf, ies_especie_nf, cod_fornecedor, num_sequencia, cod_item, cod_local, num_lote, qtd_consumo, ies_situacao, num_pedido, num_oc, nom_usuario_fat, dat_autoriz_fat, hor_autoriz_fat, nom_usuario_valid, dat_validacao_fat, hor_validacao_fat, tex_observ, num_aviso_rec, num_seq, num_transac_origem, num_transac_dest, num_versao_cot )
	values ( lr_h_est_trans_terc.cod_empresa, lr_h_est_trans_terc.dat_movto, lr_h_est_trans_terc.num_nf, lr_h_est_trans_terc.ser_nf, lr_h_est_trans_terc.ssr_nf, lr_h_est_trans_terc.ies_especie_nf, lr_h_est_trans_terc.cod_fornecedor, lr_h_est_trans_terc.num_sequencia, lr_h_est_trans_terc.cod_item, lr_h_est_trans_terc.cod_local, lr_h_est_trans_terc.num_lote, lr_h_est_trans_terc.qtd_consumo, lr_h_est_trans_terc.ies_situacao, lr_h_est_trans_terc.num_pedido, lr_h_est_trans_terc.num_oc, lr_h_est_trans_terc.nom_usuario_fat, lr_h_est_trans_terc.dat_autoriz_fat, lr_h_est_trans_terc.hor_autoriz_fat, lr_h_est_trans_terc.nom_usuario_valid, lr_h_est_trans_terc.dat_validacao_fat, lr_h_est_trans_terc.hor_validacao_fat, lr_h_est_trans_terc.tex_observ, lr_h_est_trans_terc.num_aviso_rec, lr_h_est_trans_terc.num_seq, lr_h_est_trans_terc.num_transac_origem, lr_h_est_trans_terc.num_transac_dest, lr_h_est_trans_terc.num_versao_cot)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","est_trans_de_terc")
	else
		whenever error continue
		delete from h_est_trans_terc
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornecedor = p_dados_tela.cod_fornecedor
		and ies_situacao   = "3"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","h_est_trans_terc")
		end if
	end if
end foreach

end function

#------------------------------------------------------#
function sup3760_busca_pct_bc_pis()
#------------------------------------------------------#

	define lr_nf_sup_erro   record like nf_sup_erro.*,
	l_utiliza_perc_mes_atual char(01)

	#o percentual de redu��o de pis/cofins s�o iguais, porisso esta sendo verificado somente
	#a exist�ncia do percentual do pis
	initialize m_pct_bc_pis to null
	whenever error continue
	select pct_bas_calc
	into m_pct_bc_pis
	from sup_pct_bc_imposto
	where imposto = "1"
	and empresa = p_cod_empresa
	and mes     = month(p_dados_tela.dat_entrada_nf)
	and ano     = year(p_dados_tela.dat_entrada_nf)
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("leitura","sup_pct_bc_imposto")
		return false
	end if

	if m_pct_bc_pis is null then
		initialize l_utiliza_perc_mes_atual to null
		call log2250_busca_parametro(p_cod_empresa,"utiliza_perc_mes_atual")
		returning l_utiliza_perc_mes_atual, p_status

		if l_utiliza_perc_mes_atual is null
			or l_utiliza_perc_mes_atual = " " then
			let l_utiliza_perc_mes_atual = "0"
		end if

		error "n�o possui percentual de redu��o de base pis/cofins para o per�odo (sup0988)"
		return false
	end if

return true

end function

#-------------------------------------#
function sup3760_consiste_pedido_nf()
#-------------------------------------#
	define l_nota_fiscal       like sup_oc_nota_fiscal.nota_fiscal,
	l_serie_nota_fiscal like sup_oc_nota_fiscal.serie_nota_fiscal,
	l_subserie_nf       like sup_oc_nota_fiscal.subserie_nf

	#os 220554
	if m_existe_tab_oc_nf and p_array_pedidos[1].num_pedido > 0 then
		call sup6516_busca_nf_pedido(p_cod_empresa,p_array_pedidos[1].num_pedido)
		returning l_nota_fiscal, l_serie_nota_fiscal, l_subserie_nf
		if l_nota_fiscal > 0 then
			if  p_dados_tela.num_nf = l_nota_fiscal
				and p_dados_tela.ser_nf = l_serie_nota_fiscal
				and p_dados_tela.ssr_nf = l_subserie_nf then
			else
				error "n�mero da nota fiscal n�o confere com pedido (nf ",
				l_nota_fiscal using "<<<<<&","/",
				l_serie_nota_fiscal,"/",
				l_subserie_nf using "<&",")"
				return false
			end if
		end if
	end if

return true
end function

#-------------------------------------------------------------------------#
function sup3760_conversao_item_codigo_barra(l_cod_item,l_cod_fornecedor)
#-------------------------------------------------------------------------#
	define l_cod_item        like item.cod_item,
	l_cod_fornecedor  like fornecedor.cod_fornecedor,
	l_cod_item_barra  like item.cod_item,
	l_ind             smallint,
	l_codigo_numerico smallint

	if m_ies_inf_aut_barra = "n" then
		return l_cod_item
	end if

	if l_cod_item is not null and l_cod_item <> " " then
		whenever error continue
		select den_item
		from item
		where cod_empresa = p_cod_empresa
		and cod_item    = l_cod_item
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let l_codigo_numerico = true
			for l_ind = 1 to length(l_cod_item)
				if l_cod_item[l_ind] < "0" or l_cod_item[l_ind] > "9" then
					let l_codigo_numerico = false
					exit for
				end if
			end for

			if l_codigo_numerico then
				initialize l_cod_item_barra to null

				whenever error continue
				select cod_item into l_cod_item_barra
				from item_barra_fornec
				where cod_empresa       = p_cod_empresa
				and cod_item_bar_forn = l_cod_item
				and cod_fornecedor    = l_cod_fornecedor
				whenever error stop
				if sqlca.sqlcode = 0 then
					return l_cod_item_barra
				end if

				whenever error continue
				select cod_item into l_cod_item_barra
				from item_barra
				where cod_empresa        = p_cod_empresa
				and cod_item_barra_dig = l_cod_item
				whenever error stop
				if sqlca.sqlcode = 0 then
					return l_cod_item_barra
				end if
			end if
		end if
	end if

return l_cod_item
end function

#-----------------------------------------------------------#
function sup3760_pedido_ordem_valido(l_num_pedido,l_num_oc)
#-----------------------------------------------------------#
	define l_num_pedido   like pedido_sup.num_pedido,
	l_num_oc       like ordem_sup.num_oc,
	l_ies_situacao like pedido_sup.ies_situa_ped,
	l_valida       smallint

	call sup3760_estoque_operac() returning l_valida

	if p_dados_tela.ies_especie_nf = "nfm" or l_valida then
		return true
	end if

	if l_num_pedido is not null and l_num_pedido <> 0 then
		initialize l_ies_situacao to null
		whenever error continue
		select ies_situa_ped
		into l_ies_situacao
		from pedido_sup
		where cod_empresa      = p_cod_empresa
		and num_pedido       = l_num_pedido
		and ies_versao_atual = "s"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			error " pedido de compra ",l_num_pedido using "<<<<<&",
			" n�o cadastrado "
			return false
		end if
		if l_ies_situacao <> "r" then
			error " pedido de compra ",l_num_pedido using "<<<<<&",
			" n�o liberado para recebimento. "
			return false
		end if
	end if

	if l_num_oc is not null and l_num_oc <> 0 then
		initialize l_ies_situacao to null
		whenever error continue
		select ies_situa_oc
		into l_ies_situacao
		from ordem_sup
		where cod_empresa      = p_cod_empresa
		and num_oc           = l_num_oc
		and ies_versao_atual = "s"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			error " ordem de compra ",l_num_oc using "<<<<<<<<&",
			" n�o cadastrada "
			return false
		end if
		if l_ies_situacao <> "r" then
			error " ordem de compra ",l_num_oc using "<<<<<<<<&",
			" n�o liberada para recebimento. "
			return false
		end if
	end if

return true

end function

#----------------------#
function sup3760_zoom() #rafael - os312341
#----------------------#

	define l_num_ad         like ad_mestre.num_ad,
	l_cod_emp_ad     like ad_mestre.cod_empresa,
	comando          char(500)

	menu "opcao"

	before menu
	if m_ies_bloq_cc_os <> "5" and
		m_controla_gao = "n" then
		hide option "orcamento_contas" #778654#
	end if

	# os 527755
	if find4glfunction('supy5_cliente_78') then
		if supy5_cliente_78() = false  then
			hide option "oc_estoque"
			hide option "oc_dd"
			hide option "receb_esperados"
			hide option "receb_realizados"
		end if
	else
		hide option "oc_estoque"
		hide option "oc_dd"
		hide option "receb_esperados"
		hide option "receb_realizados"
	end if

	if not sup1473_exibe_livro_fiscal(p_cod_empresa) then
		hide option "livro_fiscal"
	end if
	call sup3760_save_cur_field_name('sup3760_menu_5')

	command "itens"    "consulta os itens da n.f."
	message ""
	display "                             " at 20,50
	display "                        " at 20,02
	display "                                                                               " at 10,01
	if p_dados_tela.num_nf is null then
		call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
	else
		call sup376_zoom_itens()
	end if
	current window is w_sup37601
	call sup3760_display_totitens_conhecimento()
	call sup376_consulta_dados()

	command "pedidos"   "consulta pedido/o.c. relacionadas ao item"
	message ""
	display "                             " at 20,50
	display "                        " at 20,02
	display "                                                                               " at 10,01
	if p_dados_tela.num_nf    is null then
		call log0030_mensagem(" consulte previamente para executar esta funcao","exclamation")
	else
		call sup405_consulta_ped_oc_item(p_cod_empresa, p_dados_tela.num_aviso_rec)

	end if
	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup3760_display_totitens_conhecimento()
	call sup376_consulta_dados()

	command key ("t") "orcamento_contas" "consulta orcamento das contas" #778654#
	message ""
	if m_controla_gao = "s" and m_controla_sup = "s" then
		call log1200_executa_programa("gao0008","")
	else
		call log1200_executa_programa("oln0300","")
	end if

	command key ("d") "ad_ap" "consulta apropria��es de despesas cap"
	if log005_seguranca(p_user,"cap","cap0220","co")  then  #807088
		call  sup3760_verifica_ad_nf() returning l_num_ad, l_cod_emp_ad
		let comando = ""
		if l_num_ad is not null or
			l_num_ad <> " "      and
			l_cod_emp_ad is not null or
			l_cod_emp_ad = " "     then
			let comando = l_num_ad, " ", l_cod_emp_ad
		end if
		call log1200_executa_programa("cap0220",comando)
	else
		call log0030_mensagem("usu�rio n�o autorizado a utilizar o sistema","info")
	end if

	command "livro_fiscal" "visualiza layout impress�o livro de registro de entrada."
	if log005_seguranca(p_user,"suprimen","sup3760","co")  then
		if p_dados_tela.num_nf is null then
			call log0030_mensagem(" consulte previamente para executar esta fun��o","exclamation")
		else
			call sup1473_visualiza_livro_fiscal(p_nf_sup.cod_empresa_estab,
			p_nf_sup.cod_regist_entrada,
			p_nf_sup.num_aviso_rec,
			p_nf_sup.dat_entrada_nf,
			"","","","","","","",
			p_nf_sup.cod_empresa)

			call log006_exibe_teclas("01", p_versao)
			current window is w_sup37601
		end if
	else
		call log0030_mensagem("usu�rio n�o autorizado a utilizar o sistema","info")
	end if

	# os 527755
	command key ("o") "oc_estoque" "ordem de compra - item de estoque"
	message ""
	call log1200_executa_programa("sup0290","")

	command key ("c") "oc_dd" "ordem compra d�bito direto "
	message ""
	call log1200_executa_programa("sup0300","")

	command key ("e") "receb_esperados" "recebimentos esperados "
	message ""
	call log1200_executa_programa("sup0500","")

	command key ("r") "receb_realizados" "recebimentos realizados"
	message ""
	call log1200_executa_programa("sup0540","")

	command key ("f11") "sobre" "informa��es sobre a aplica��o (f11)."
	call log_info_sobre(sourcename(),p_versao)

	command "fim" "retorna ao menu anterior"
	exit menu

end menu

end function

#--------------------------------#
function sup3760_verifica_ad_nf()
#--------------------------------#

	define l_num_ad         like ad_mestre.num_ad,
	l_cod_emp_ad     like ad_mestre.cod_empresa,
	l_num_nf         like ad_mestre.num_nf,
	l_status         smallint,
	l_sserie_ad      like ad_mestre.ssr_nf

	initialize l_num_ad,
	l_cod_emp_ad,
	l_num_nf      to null

	let l_num_nf = p_dados_tela.num_nf

	if p_dados_tela.num_nf is null then
		let l_num_ad = " "
		let l_cod_emp_ad = " "
	else
		if find4glfunction('fin80151_verifica_se_tabela_existe') then
			if fin80151_verifica_se_tabela_existe() then
				call fin80151_busca_nf_cap_ad_mestre_compl(p_dados_tela.cod_empresa,
				p_dados_tela.cod_fornecedor,
				l_num_nf,
				p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf,
				p_dados_tela.ies_especie_nf)
				returning l_status

				let l_sserie_ad = fin80151_get_cap_ad_mestre_compl_subser_nf_apropriacao_desp()
				if l_sserie_ad is not null and l_status = true then
					whenever error continue
					select a.cod_empresa, a.num_ad
					into l_cod_emp_ad, l_num_ad
					from ad_mestre a
					where a.cod_empresa_orig = p_dados_tela.cod_empresa
					and a.num_nf           = l_num_nf
					and a.ser_nf           = p_dados_tela.ser_nf
					and a.ssr_nf           = l_sserie_ad
					and a.cod_fornecedor   = p_dados_tela.cod_fornecedor
					whenever error continue
				end if
			else
				whenever error continue
				select a.cod_empresa, a.num_ad
				into l_cod_emp_ad, l_num_ad
				from ad_mestre a
				where a.cod_empresa_orig = p_dados_tela.cod_empresa
				and a.num_nf           = l_num_nf
				and a.ser_nf           = p_dados_tela.ser_nf
				and a.ssr_nf           = p_dados_tela.ssr_nf
				and a.cod_fornecedor   = p_dados_tela.cod_fornecedor
				whenever error continue
			end if
		else
			whenever error continue
			select a.cod_empresa, a.num_ad
			into l_cod_emp_ad, l_num_ad
			from ad_mestre a
			where a.cod_empresa_orig = p_dados_tela.cod_empresa
			and a.num_nf           = l_num_nf
			and a.ser_nf           = p_dados_tela.ser_nf
			and a.ssr_nf           = p_dados_tela.ssr_nf
			and a.cod_fornecedor   = p_dados_tela.cod_fornecedor
			whenever error continue
		end if

		if sqlca.sqlcode <> 0 then
			let l_num_ad = " "
			let l_cod_emp_ad = " "
		end if
	end if

return l_num_ad, l_cod_emp_ad

end function

#---------------------------------------------------------#
function sup3760_fornecedor_triangulacao(l_triang_em_terc, l_final_transac)
#---------------------------------------------------------#
	define lr_dados record
	cod_fornecedor like nf_sup.cod_fornecedor,
	raz_social     like fornecedor.raz_social
end record,
#--inicio--vanderlei os 402676 #
l_triang_em_terc         smallint,
l_erro                   smallint,
#---fim----vanderlei os 402676 #
l_final_transac          smallint,
l_msg                    char(100),
l_fornec_anterior        like nf_sup.cod_fornecedor

initialize lr_dados to null

whenever error continue
select parametro_texto
into lr_dados.cod_fornecedor
from sup_par_ar
where empresa = p_cod_empresa
and aviso_recebto     = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = 0
and parametro     = "fornec_triangulacao"
whenever error stop
if sqlca.sqlcode = 0 then
	call sup3760_raz_social_fornecedor(lr_dados.cod_fornecedor) returning lr_dados.raz_social
end if

let l_fornec_anterior = lr_dados.cod_fornecedor

call log130_procura_caminho("sup3760g") returning comando3
open window w_sup3760g at 06,02 with form comando3
attribute(border, message line last, prompt line last, form line 1)
display by name lr_dados.*


call log006_exibe_teclas("01 02 03 07", p_versao)

current window is w_sup3760g

let int_flag = 0

input by name lr_dados.* without defaults

before field cod_fornecedor
call sup3760_botao_zoom("on",2,11)

call sup3760_save_cur_field_name('cod_fornecedor')
after field cod_fornecedor
if lr_dados.cod_fornecedor is not null then
	#   error 'informe o c�digo do fornecedor.'
	#   next field cod_fornecedor
	#else

	call sup3760_raz_social_fornecedor(lr_dados.cod_fornecedor) returning lr_dados.raz_social

	#--inicio--vanderlei os 402676 #
	if lr_dados.raz_social is null or lr_dados.raz_social = " " then
		call log0030_mensagem('fornecedor n�o cadastrado.','exclamation')
	next field cod_fornecedor
end if

# -- efetua consist�ncia para fornecedor triangula��o somente se o grupo de -- #
# -- despesa do item for do tipo 'r', ou seja, tri�ngula��o "item_em_terc"  -- #
if l_triang_em_terc then
	if not sup3760_fornec_triang_cadastrado_sup0220(p_cod_empresa,
		p_dados_tela.cod_fornecedor,
		lr_dados.cod_fornecedor) then
		call log0030_mensagem('fornecedor informado n�o cadastrado como triangula��o no vdp0815(op��o: inf.compl) para o fornecedor da nota fiscal.','exclamation')
	next field cod_fornecedor
end if
end if
#---fim----vanderlei os 402676 #
display by name lr_dados.raz_social
end if
call sup3760_botao_zoom("off",2,11)

on key (control-z, f4)
let lr_dados.cod_fornecedor = sup162_popup_fornecedor()
if lr_dados.cod_fornecedor is not null  then
	current window is w_sup3760g
	display by name lr_dados.cod_fornecedor
end if
current window is w_sup3760g

after input
if int_flag = 0 then
	#--inicio--vanderlei os 409196 #
	if m_dados_copia.ser_nf_dest is null then
		let m_dados_copia.ser_nf_dest = ' '
	end if
	#---fim----vanderlei os 409196 #
	if lr_dados.cod_fornecedor is not null then
		#   error 'informe o c�digo do fornecedor.'
		#   sleep 1
		#   next field cod_fornecedor
		#else

		call sup3760_raz_social_fornecedor(lr_dados.cod_fornecedor) returning lr_dados.raz_social
		display by name lr_dados.raz_social

		#-- os 777422 fim --#
		whenever error continue
		select cod_fornecedor
		from item_de_terc
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornecedor = lr_dados.cod_fornecedor
		and num_sequencia in (select num_seq
		from aviso_rec
		where cod_empresa = p_cod_empresa
		and num_aviso_rec  = p_dados_tela.num_aviso_rec
		and gru_ctr_desp_item in (select grp_ctr_despesa
		from obf_par_grp_desp
		where empresa = p_cod_empresa
		and unid_federal    = ' '
		and parametro       = 'relac_terceirizacao'
		and parametro_ind   = 't'))
		whenever error stop
		if sqlca.sqlcode = 0
			or sqlca.sqlcode = -284 then
			let l_msg = "controle de terceiro j� informado para nf ",p_dados_tela.num_nf clipped," s�r ",p_dados_tela.ser_nf clipped," sub ",p_dados_tela.ssr_nf clipped," fornecedor ",lr_dados.cod_fornecedor clipped," esp�cie ",p_dados_tela.ies_especie_nf
			call log0030_mensagem(l_msg,"info")
		next field cod_fornecedor
	end if


	#-- os 777422 fim --#
	whenever error continue
	select cod_fornecedor
	from item_de_terc
	where cod_empresa    = p_cod_empresa
	and num_nf         = p_dados_tela.num_nf
	and ser_nf         = p_dados_tela.ser_nf
	and ssr_nf         = p_dados_tela.ssr_nf
	and ies_especie_nf = p_dados_tela.ies_especie_nf
	and (cod_fornecedor = p_dados_tela.cod_fornecedor or cod_fornecedor = l_fornec_anterior)
	and num_sequencia in (select num_seq
	from aviso_rec
	where cod_empresa = p_cod_empresa
	and num_aviso_rec  = p_dados_tela.num_aviso_rec
	and gru_ctr_desp_item in (select grp_ctr_despesa
	from obf_par_grp_desp
	where empresa = p_cod_empresa
	and unid_federal    = ' '
	and parametro       = 'relac_terceirizacao'
	and parametro_ind   = 't'))

	whenever error stop

	if sqlca.sqlcode = 0 or
		sqlca.sqlcode = -284 then

		whenever error continue
		update item_de_terc
		set cod_fornecedor = lr_dados.cod_fornecedor
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and (cod_fornecedor = p_dados_tela.cod_fornecedor or cod_fornecedor = l_fornec_anterior)
		and num_sequencia in (select num_seq
		from aviso_rec
		where cod_empresa = p_cod_empresa
		and num_aviso_rec  = p_dados_tela.num_aviso_rec
		and gru_ctr_desp_item in (select grp_ctr_despesa
		from obf_par_grp_desp
		where empresa = p_cod_empresa
		and unid_federal    = ' '
		and parametro       = 'relac_terceirizacao'
		and parametro_ind   = 't'))

		whenever error stop

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("atualizacao","item_de_terc")
			let int_flag = true
		end if
		if p_ies_contab_aen = "4" then
			whenever error continue
			update item_de_terc_area
			set cod_fornecedor = lr_dados.cod_fornecedor
			where cod_empresa    = p_cod_empresa
			and num_nf         = p_dados_tela.num_nf
			and ser_nf         = p_dados_tela.ser_nf
			and ssr_nf         = p_dados_tela.ssr_nf
			and ies_especie_nf = p_dados_tela.ies_especie_nf
			and (cod_fornecedor = p_dados_tela.cod_fornecedor or cod_fornecedor = l_fornec_anterior)
			and num_sequencia in (select num_seq
			from aviso_rec
			where cod_empresa = p_cod_empresa
			and num_aviso_rec  = p_dados_tela.num_aviso_rec
			and gru_ctr_desp_item in (select grp_ctr_despesa
			from obf_par_grp_desp
			where empresa = p_cod_empresa
			and unid_federal    = ' '
			and parametro       = 'relac_terceirizacao'
			and parametro_ind   = 't'))

			whenever error stop
		end if


		whenever error continue
		update item_de_terc_compl
		set cod_cliente = lr_dados.cod_fornecedor,
		cod_fornec_nf = lr_dados.cod_fornecedor
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and (cod_fornec_nf = p_dados_tela.cod_fornecedor or cod_fornec_nf = l_fornec_anterior)
		and num_seq in    (select num_seq
		from aviso_rec
		where cod_empresa = p_cod_empresa
		and num_aviso_rec  = p_dados_tela.num_aviso_rec
		and gru_ctr_desp_item in (select grp_ctr_despesa
		from obf_par_grp_desp
		where empresa = p_cod_empresa
		and unid_federal    = ' '
		and parametro       = 'relac_terceirizacao'
		and parametro_ind   = 't'))


		whenever error stop

		whenever error continue
		update sup_item_terc_end set fornecedor = lr_dados.cod_fornecedor
		where empresa           = p_cod_empresa
		and nota_fiscal       = p_dados_tela.num_nf
		and serie_nota_fiscal = p_dados_tela.ser_nf
		and subserie_nf       = p_dados_tela.ssr_nf
		and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
		and (fornecedor = p_dados_tela.cod_fornecedor or fornecedor = l_fornec_anterior)
		and seq_aviso_recebto in (select num_seq
		from aviso_rec
		where cod_empresa = p_cod_empresa
		and num_aviso_rec  = p_dados_tela.num_aviso_rec
		and gru_ctr_desp_item in (select grp_ctr_despesa
		from obf_par_grp_desp
		where empresa = p_cod_empresa
		and unid_federal    = ' '
		and parametro       = 'relac_terceirizacao'
		and parametro_ind   = 't'))

		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","sup_item_terc_end")
			let int_flag = true
		end if

	end if

	if log0150_verifica_se_coluna_existe("nf_sup_erro","aviso_recebto") = false then
		whenever error continue
		delete from nf_sup_erro
		where empresa            = p_cod_empresa
		and num_aviso_rec      = p_aviso_rec.num_aviso_rec
		and des_pendencia_item = "falta relacionar fornecedor triangula��o. "
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","nf_sup_erro")
		end if
	else
		whenever error continue
		delete from nf_sup_erro
		where empresa            = p_cod_empresa
		and aviso_recebto      = p_aviso_rec.num_aviso_rec
		and des_pendencia_item = "falta relacionar fornecedor triangula��o. "
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","nf_sup_erro")
		end if
	end if
end if
end if

end input

call sup3760_botao_zoom("off",2,11)

if int_flag then
	let int_flag = false
	error 'relacionamento cancelado.'
else
	let l_erro = 0                         #vanderlei - os 402676 #
	if not l_final_transac then
		call log085_transacao("begin")
	end if
	whenever error continue
	select parametro_texto
	from sup_par_ar
	where empresa = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = 0
	and parametro     = "fornec_triangulacao"
	whenever error continue
	if sqlca.sqlcode <> 0 then
		whenever error continue
		insert into sup_par_ar values (p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		0,
		"fornec_triangulacao",
		null,
		lr_dados.cod_fornecedor,
		null,
		null)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("inclusao","sup_par_ar3")
			let l_erro = 1                               #vanderlei - os 402676 #
			#call log085_transacao("rollback")
			#error 'relacionamento cancelado.'
		else
			let l_erro = 0                               #vanderlei - os 402676 #
			#call log085_transacao("commit")
			#error 'relacionamento efetuado com sucesso.'
			#sleep 2
		end if
	else
		#--inicio--vanderlei os 402676 #
		if lr_dados.cod_fornecedor is null or lr_dados.cod_fornecedor = " " then
			whenever error continue
			delete from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "fornec_triangulacao"
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("exclus�o","sup_par_ar")
				let l_erro = 1
			end if
		else
			whenever error continue
			update sup_par_ar
			set parametro_texto = lr_dados.cod_fornecedor
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "fornec_triangulacao"
			whenever error continue
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("atualizacao","sup_par_ar4")
				let l_erro = 1
			end if
		end if
	end if
	if not l_final_transac then
		if l_erro then
			call log085_transacao("rollback")
			error 'relacionamento cancelado.'
		else
			whenever error continue
			call log085_transacao("commit")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("commit","fornecedor_triangulacao")
				call log085_transacao("rollback") #os596059
			else
				error 'relacionamento efetuado com sucesso.'
			end if
		end if
	end if
	#---fim----vanderlei os 402676 #
end if
close window w_sup3760g

end function

#----------------------------------------------#
function sup3760_verifica_nota_integrada_wms()
#----------------------------------------------#
	define l_item_wms           smallint,
	l_ind_envio_interf   smallint,
	l_sucesso            smallint

	if g_ies_wms_instalado = "s" then
		let l_ind_envio_interf = 0
		whenever error continue
		select count(*)
		into l_ind_envio_interf
		from wms_e_nf_item a, wms_e_entrada_veic b
		where a.fornecedor         = p_dados_tela.cod_fornecedor
		and a.num_nota_fiscal    = p_dados_tela.num_nf
		and a.serie_nota_fiscal  = p_dados_tela.ser_nf
		and a.subserie_nf        = p_dados_tela.ssr_nf
		and b.entrada_veiculo    = a.entrada_veiculo
		and b.cod_empresa        = p_cod_empresa
		and b.ind_envio_interf   = "s"
		whenever error stop
		if l_ind_envio_interf > 0 then
			return true
		end if
	end if

return false
end function

### os 358438
#---------------------------------------------#
function sup376_registra_impressao_nfd_tipo_9()
#---------------------------------------------#
	whenever error continue
	insert into sup_par_ar values (p_dados_tela.cod_empresa,
	p_dados_tela.num_aviso_rec,
	0,
	"imprime_nfd_tipo9",
	"s",
	null,
	null,
	null)
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","sup_par_ar3")
		let p_retorno_3760 = true
	end if

end function

#-----------------------------------#
function sup376_imprime_nfd_tipo_9()
#-----------------------------------#
	define l_par_ind_esp        like sup_par_ar.par_ind_especial

	if p_dados_tela.ies_especie_nf = "nfd" and
		p_nf_sup.ies_nf_aguard_nfe = "9" then
	else return false
	end if

	initialize l_par_ind_esp to null
	whenever error continue
	select par_ind_especial
	into l_par_ind_esp
	from sup_par_ar
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_nf_sup.num_aviso_rec
	and seq_aviso_recebto = 0
	and parametro         = "imprime_nfd_tipo9"
	whenever error stop
	if l_par_ind_esp = "s" then
		return true
	end if
return false
end function

#--------------------------------------------#
function sup3760_busca_grupo_x_tipo_despesa()
#--------------------------------------------#

	define l_gru_ctr_desp_compl  like aviso_rec.gru_ctr_desp_item,
	l_tip_desp_compl_cons like aviso_rec.cod_tip_despesa

	initialize l_gru_ctr_desp_compl,
	l_tip_desp_compl_cons to null

	whenever error continue
	select par_val
	into l_gru_ctr_desp_compl
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = "gru_ctr_desp_compl"
	whenever error stop
	if sqlca.sqlcode = 0 and
		l_gru_ctr_desp_compl is not null and
		l_gru_ctr_desp_compl <> " " then
		let p_aviso_rec.gru_ctr_desp_item = l_gru_ctr_desp_compl
	end if

	whenever error continue
	select par_val
	into l_tip_desp_compl_cons
	from par_sup_pad
	where par_sup_pad.cod_empresa   = p_cod_empresa
	and par_sup_pad.cod_parametro = "tip_desp_compl_cons"
	whenever error stop
	if sqlca.sqlcode = 0 and
		l_tip_desp_compl_cons is not null and
		l_tip_desp_compl_cons <> " " then
		let p_aviso_rec.cod_tip_despesa = l_tip_desp_compl_cons
	end if

end function

#--------------------------------------------------------------------------------#
function sup3760_verifica_codigo_fiscal_item(l_cod_operacao, l_ies_nf_aguard_nfe)
#--------------------------------------------------------------------------------#

	define l_cod_fisc          like obf_cfop_cod_fisc.cod_fiscal,
	l_cod_fiscal        char(05),
	l_cod_operacao      char(05),
	l_ies_nf_aguard_nfe like nf_sup.ies_nf_aguard_nfe,
	l_cod_fisc_it       char(05)

	initialize l_cod_fisc, l_cod_fiscal, l_cod_fisc_it to null
	whenever error continue
	select cod_fiscal
	into l_cod_fisc
	from obf_cfop_cod_fisc
	where obf_cfop_cod_fisc.ind_nf_agda_nfe = l_ies_nf_aguard_nfe
	and obf_cfop_cod_fisc.cfop            = l_cod_operacao
	whenever error stop
	if sqlca.sqlcode = 0 and
		l_cod_fisc is not null and
		l_cod_fisc <> " " then
		#tpiwuj
		case
		when length(l_cod_fisc) = 4
		let l_cod_fisc_it = l_cod_fisc[2,4]
		when length(l_cod_fisc) = 3
		let l_cod_fisc_it = l_cod_fisc
	end case

	if l_cod_operacao[1] = "5" then
		let l_cod_fiscal  = "1.",l_cod_fisc_it
	end if
	if l_cod_operacao[1] = "6" then
		let l_cod_fiscal  = "2.",l_cod_fisc_it
	end if
	if l_cod_operacao[1] = "7" then
		let l_cod_fiscal  = "3.",l_cod_fisc_it
	end if
	let p_aviso_rec.cod_fiscal_item = l_cod_fiscal
end if

end function

#-----------------------------------------------------#
function sup3760_passa_parametro(l_funcao,
	l_cod_empresa,
	l_num_aviso_rec,
	l_cod_operacao,
	l_cod_fiscal_compl,
	l_dat_emis_nf,
	l_dat_entrada_nf,
	l_cnd_pgto_nf,
	l_cod_mod_embar,
	l_ies_nf_aguard_nfe,
	l_ies_impostos,
	l_cod_emp_benef,
	l_cod_operac_estoq,
	l_cod_fornecedor,
	l_ser_nf,
	l_ssr_nf,
	l_ies_especie_nf)
#------------------------------------------------------#
	define l_primeira_vez        smallint,
	l_data_atual          date,
	l_hora_atual          datetime hour to second,
	l_erro                smallint,
	l_funcao              char(30),
	l_inclusao            smallint,
	l_cod_empresa         like aviso_rec.cod_empresa,
	l_num_aviso_rec       like aviso_rec.num_aviso_rec,
	l_cod_operacao        char(05),
	l_cod_fiscal_compl    integer,
	l_dat_emis_nf         like nf_sup.dat_emis_nf,
	l_dat_entrada_nf      like nf_sup.dat_entrada_nf,
	l_cnd_pgto_nf         like nf_sup.cnd_pgto_nf,
	l_cod_mod_embar       like nf_sup.cod_mod_embar,
	l_ies_nf_aguard_nfe   like nf_sup.ies_nf_aguard_nfe,
	l_ies_impostos        char(01),
	l_cod_emp_benef       like empresa.cod_empresa,
	l_cod_operac_estoq    like estoque_operac.cod_operacao,
	l_cod_fornecedor      like fornecedor.cod_fornecedor,
	l_ser_nf              like nf_sup.ser_nf,
	l_ssr_nf              like nf_sup.ssr_nf,
	l_ies_especie_nf      like nf_sup.ies_especie_nf


	let l_primeira_vez = true
	let l_data_atual = today
	let l_hora_atual = time

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                -- numero do programa
	p_user,                   -- nome do login do usuario
	l_data_atual,             -- data do processamento
	l_hora_atual,             -- hora de processamento
	1,                        -- numero do argumento
	1,                        -- numero do indice do argumento
	"",                       -- argumento de indicador especial
	l_cod_empresa,            -- argumento texto
	"",                       -- argumento valor
	"",                       -- argumento numero
	"")                       -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	let l_primeira_vez = false

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                  -- numero do programa
	p_user,                     -- nome do login do usuario
	l_data_atual,               -- data do processamento
	l_hora_atual,               -- hora de processamento
	2,                          -- numero do argumento
	1,                          -- numero do indice do argumento
	"",                         -- argumento de indicador especial
	"",                         -- argumento texto
	"",                         -- argumento valor
	l_num_aviso_rec,             -- argumento numero
	"")                         -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                 -- numero do programa
	p_user,                    -- nome do login do usuario
	l_data_atual,              -- data do processamento
	l_hora_atual,              -- hora de processamento
	3,                         -- numero do argumento
	1,                         -- numero do indice do argumento
	"",                        -- argumento de indicador especial
	l_cod_operacao,            -- argumento texto
	"",                        -- argumento valor
	"",                        -- argumento numero
	"")                        -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                     -- numero do programa
	p_user,                        -- nome do login do usuario
	l_data_atual,                  -- data do processamento
	l_hora_atual,                  -- hora de processamento
	4,                             -- numero do argumento
	1,                             -- numero do indice do argumento
	"",                            -- argumento de indicador especial
	"",                            -- argumento texto
	"",                            -- argumento valor
	l_cod_fiscal_compl,            -- argumento numero
	"")                            -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                 -- numero do programa
	p_user,                    -- nome do login do usuario
	l_data_atual,              -- data do processamento
	l_hora_atual,              -- hora de processamento
	5,                         -- numero do argumento
	1,                         -- numero do indice do argumento
	"",                        -- argumento de indicador especial
	"",                        -- argumento texto
	"",                        -- argumento valor
	"",                        -- argumento numero
	l_dat_emis_nf)             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                    -- numero do programa
	p_user,                       -- nome do login do usuario
	l_data_atual,                 -- data do processamento
	l_hora_atual,                 -- hora de processamento
	6,                            -- numero do argumento
	1,                            -- numero do indice do argumento
	"",                           -- argumento de indicador especial
	"",                           -- argumento texto
	"",                           -- argumento valor
	"",                           -- argumento numero
	l_dat_entrada_nf)             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                -- numero do programa
	p_user,                   -- nome do login do usuario
	l_data_atual,             -- data do processamento
	l_hora_atual,             -- hora de processamento
	7,                        -- numero do argumento
	1,                        -- numero do indice do argumento
	"",                       -- argumento de indicador especial
	"",                       -- argumento texto
	"",                       -- argumento valor
	l_cnd_pgto_nf,            -- argumento numero
	"")                       -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                  -- numero do programa
	p_user,                     -- nome do login do usuario
	l_data_atual,               -- data do processamento
	l_hora_atual,               -- hora de processamento
	8,                          -- numero do argumento
	1,                          -- numero do indice do argumento
	"",                         -- argumento de indicador especial
	"",                         -- argumento texto
	"",                         -- argumento valor
	l_cod_mod_embar,            -- argumento numero
	"")                         -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	9,                              -- numero do argumento
	1,                              -- numero do indice do argumento
	"",                             -- argumento de indicador especial
	l_ies_nf_aguard_nfe,            -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	10,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	l_ies_impostos,                 -- argumento de indicador especial
	"",                             -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	11,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	"",                             -- argumento de indicador especial
	l_cod_emp_benef,                -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	12,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	"",                             -- argumento de indicador especial
	l_cod_operac_estoq,             -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	13,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	"",                             -- argumento de indicador especial
	l_cod_fornecedor,               -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	#inicio os 550500
	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	14,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	"",                             -- argumento de indicador especial
	l_ser_nf,                       -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	15,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	"",                             -- argumento de indicador especial
	"",                             -- argumento texto
	"",                             -- argumento valor
	l_ssr_nf,                       -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	16,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	"",                             -- argumento de indicador especial
	l_ies_especie_nf,               -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	if l_funcao = 'inclusao' then
		let l_inclusao = true
	else
		let l_inclusao = false
	end if
	call sup3760_trans_arg(l_primeira_vez,     ------ indica a primeira vez
	"sup3771",                      -- numero do programa
	p_user,                         -- nome do login do usuario
	l_data_atual,                   -- data do processamento
	l_hora_atual,                   -- hora de processamento
	17,                             -- numero do argumento
	1,                              -- numero do indice do argumento
	l_inclusao,                     -- argumento de indicador especial
	"",                             -- argumento texto
	"",                             -- argumento valor
	"",                             -- argumento numero
	"")                             -- argumento data
returning l_erro

	if l_erro then
		return false
	end if

	#fim os 550500
return true

end function

#--------------------------------------------------------------------------#
function sup3760_trans_arg(l_primeira_vez,
	l_num_programa,
	l_login_usuario,
	l_data_proc,
	l_hora_proc,
	l_num_arg,
	l_indice_arg,
	l_arg_ies,
	l_arg_txt,
	l_arg_val,
	l_arg_num,
	l_arg_data)
#--------------------------------------------------------------------------#
	define l_num_programa       like tran_arg.num_programa,
	l_login_usuario      like tran_arg.login_usuario,
	l_data_proc          like tran_arg.data_proc,
	l_hora_proc          like tran_arg.hora_proc,
	l_num_arg            like tran_arg.num_arg,
	l_indice_arg         like tran_arg.indice_arg,
	l_arg_ies            like tran_arg.arg_ies,
	l_arg_txt            like tran_arg.arg_txt,
	l_arg_val            like tran_arg.arg_val,
	l_arg_num            like tran_arg.arg_num,
	l_arg_data           like tran_arg.arg_data,
	l_primeira_vez       smallint

	define l_data               like tran_arg.data_proc,
	l_hora               like tran_arg.hora_proc


	whenever error continue
	select unique data_proc, hora_proc
	into l_data, l_hora
	from tran_arg
	where tran_arg.cod_empresa   = p_cod_empresa
	and tran_arg.num_programa  = l_num_programa
	and tran_arg.login_usuario = l_login_usuario
	and tran_arg.num_arg       = 1
	whenever error stop

	if sqlca.sqlcode = 0 then
		if l_primeira_vez then
			if l_data = l_data_proc then
				if (l_hora_proc - l_hora) < interval(2) minute to minute then
					sleep(120)
				end if
			else
				if (l_data + 1 units day) = l_data_proc then
					if l_hora > "23:57:30" then
						sleep(120)
					end if
				end if
			end if
			whenever error continue
			delete from tran_arg
			where cod_empresa = p_cod_empresa
			and num_programa = l_num_programa
			and login_usuario = l_login_usuario
			whenever error stop
			if sqlca.sqlcode = 0 then
			else
				call log003_err_sql("inclusao", "tran_arg")
				return true
			end  if
		end if
	end if

	whenever error continue
	select *
	from tran_arg
	where tran_arg.cod_empresa   = p_cod_empresa
	and tran_arg.num_programa  = l_num_programa
	and tran_arg.login_usuario = l_login_usuario
	and tran_arg.num_arg       = l_num_arg
	and tran_arg.indice_arg    = l_indice_arg
	whenever error stop

	if sqlca.sqlcode = 0 then
		whenever error continue
		delete from tran_arg
		where cod_empresa         = p_cod_empresa
		and num_programa        = l_num_programa
		and login_usuario       = l_login_usuario
		and tran_arg.num_arg    = l_num_arg
		and tran_arg.indice_arg = l_indice_arg
		whenever error stop

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclusao","tran_arg1")
		end if
	end if

	whenever error continue
	insert into tran_arg values (p_cod_empresa,
	l_num_programa,
	l_login_usuario,
	l_data_proc,
	l_hora_proc,
	l_num_arg,
	l_indice_arg,
	l_arg_ies,
	l_arg_txt,
	l_arg_val,
	l_arg_num,
	l_arg_data )
	whenever error stop

	if sqlca.sqlcode = 0 then
	else
		call log003_err_sql("inclusao", "tran_arg")
		return true
	end if

return false

end function

#--------------------------------------------------#
function sup3760_verifica_desconto_acrescimo_nf()
#--------------------------------------------------#
	whenever error continue
	select nf_sup.num_aviso_rec
	from nf_sup
	where nf_sup.cod_empresa   = p_cod_empresa
	and nf_sup.num_aviso_rec = p_dados_tela.num_aviso_rec
	and ((nf_sup.val_tot_desc  <> 0) or
	(nf_sup.val_tot_acresc <> 0))
	whenever error stop

	if sqlca.sqlcode = 0 then return true
	else return false
	end if
end function

#----------------------------------------#
function sup3760_verifica_despesa_itens()
#----------------------------------------#

	define l_cod_tip_despesa smallint

	whenever error continue
	declare cq_despesa_item cursor for
	select cod_tip_despesa
	from aviso_rec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_nf_sup.num_aviso_rec
	whenever error stop

	foreach cq_despesa_item into l_cod_tip_despesa

	whenever error continue
	select ies_mes_compet
	from tipo_despesa
	where cod_empresa     = p_cod_empresa
	and cod_tip_despesa = l_cod_tip_despesa
	and ies_mes_compet <> '0'
	whenever error stop

	if sqlca.sqlcode = 0 then
		return true
	end if

	whenever error continue
	select ies_categoria
	from tipo_despesa_compl
	where cod_empresa     = p_cod_empresa
	and cod_tip_despesa = l_cod_tip_despesa
	and ies_categoria  <> '0'
	whenever error stop

	if sqlca.sqlcode = 0 then
		return true
	end if

	whenever error continue
	select parametro_booleano
	from cap_par_tip_desp
	where empresa            = p_cod_empresa
	and tip_despesa        = l_cod_tip_despesa
	and parametro_booleano <> '0'
	and parametro          = 'usa_ctrl_trava_iss'
	whenever error stop

	if sqlca.sqlcode = 0 then
		return true
	end if

end foreach

return false

end function

#---------------------------------------------------------#
function sup3760_verifica_cfop_avf_insp_ar(l_cod_operacao)
#---------------------------------------------------------#
	define l_cod_operacao like cod_fiscal_sup.cod_fiscal,
	l_cfop         like cod_fiscal_sup.cod_fiscal

	declare cq_cfop3 scroll cursor with hold for
	select par_sup_pad.par_txt
	from par_sup_pad
	where par_sup_pad.cod_empresa    = p_cod_empresa
	and par_sup_pad.cod_parametro  like "cfp_sem_insp_avf_%"

	foreach cq_cfop3 into l_cfop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","par_sup_pad")
		exit foreach
	end if

	if l_cod_operacao[3,5] = l_cfop then
		return true
	end if

end foreach

return false

end function

#--inicio--vanderlei os 393178 #
#-----------------------------------------------------#
function sup3760_item_bonificado(l_empresa,
	l_aviso_recebto,
	l_seq_aviso_recebto,
	l_parametro)
#-----------------------------------------------------#
	define l_empresa               like sup_par_ar.empresa,
	l_aviso_recebto         like sup_par_ar.aviso_recebto,
	l_seq_aviso_recebto     like sup_par_ar.seq_aviso_recebto,
	l_parametro             like sup_par_ar.parametro,
	l_par_ind_especial      like sup_par_ar.par_ind_especial

	initialize l_par_ind_especial to null
	whenever error continue
	select par_ind_especial
	into l_par_ind_especial
	from sup_par_ar
	where empresa           = l_empresa
	and aviso_recebto     = l_aviso_recebto
	and seq_aviso_recebto = l_seq_aviso_recebto
	and parametro         = l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("leitura","sup_par_ar")
	end if

return l_par_ind_especial
end function
#---fim----vanderlei os 393178 #
#--inicio--vanderlei os 400614 #
#--------------------------------------------------#
function sup3760_ies_item_ctr_estoq(l_cod_empresa,
	l_cod_item)
#--------------------------------------------------#
	define l_cod_empresa                     like aviso_rec.cod_empresa,
	l_cod_item                        like item.cod_item,
	l_ies_ctr_estoque                 like item.ies_ctr_estoque

	initialize l_ies_ctr_estoque to null
	whenever error continue
	select ies_ctr_estoque
	into l_ies_ctr_estoque
	from item
	where cod_empresa = l_cod_empresa
	and cod_item    = l_cod_item
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","item")
	end if

	if l_ies_ctr_estoque = 's' then
		return true
	end if

return false
end function
#---fim----vanderlei os 400614 #

## os 407766 ##
#-------------------------------------------------------#
function sup3760_determina_indicador_da(l_cod_empresa,
	l_num_processo)
#-------------------------------------------------------#
	define l_cod_empresa     like processo_imp.cod_empresa,
	l_num_processo    like processo_imp.num_processo,
	l_val_desp_icms   like imp_desp_proc_item.val_rateio
	#l_val_desp_icms2  like imp_desp_proc_item.val_rateio

	##despesas que fazem parte somente na base de c�lculo do icms e do pis/cofins
	initialize l_val_desp_icms to null
	whenever error continue
	select sum(imp_desp_proc_item.val_rateio_imp)
	into l_val_desp_icms
	from imp_desp_proc_item, despesa_imp, imp_par_despesa
	where imp_desp_proc_item.empresa          = l_cod_empresa
	and imp_desp_proc_item.processo         = l_num_processo
	and imp_desp_proc_item.sequencia_rateio = 0
	and despesa_imp.cod_despesa             = imp_desp_proc_item.despesa
	and despesa_imp.ies_base_calc_ii        = "n"
	and despesa_imp.ies_base_calc_ipi       = "n"
	and despesa_imp.ies_base_calc_icms      = "s"
	and imp_par_despesa.despesa_import      = despesa_imp.cod_despesa
	and imp_par_despesa.parametro           = "calcula_pis_cofins"
	and imp_par_despesa.parametro_ind       = "s"
	whenever error stop

	if l_val_desp_icms is null then
		let l_val_desp_icms = 0
	end if

	{
	##despesas que fazem parte somente na base de c�lculo do icms
	initialize l_val_desp_icms2 to null
	whenever error continue
	select sum(imp_desp_proc_item.val_rateio_imp)
	into l_val_desp_icms2
	from imp_desp_proc_item, despesa_imp, imp_par_despesa
	where imp_desp_proc_item.empresa          = l_cod_empresa
	and imp_desp_proc_item.processo         = l_num_processo
	and imp_desp_proc_item.sequencia_rateio = 0
	and despesa_imp.cod_despesa             = imp_desp_proc_item.despesa
	and despesa_imp.ies_base_calc_ii        = "n"
	and despesa_imp.ies_base_calc_ipi       = "n"
	and despesa_imp.ies_base_calc_icms      = "s"
	and imp_par_despesa.despesa_import      = despesa_imp.cod_despesa
	and imp_par_despesa.parametro           = "calcula_pis_cofins"
	and imp_par_despesa.parametro_ind       = "n"
	whenever error stop

	if l_val_desp_icms2 is null then
		let l_val_desp_icms2 = 0
	end if
  }

	if l_val_desp_icms > 0 then
		return "p" ##indica que a despesa acess�ria dever� fazer parte da base de c�lculo do
		##pis/cofins importa��o

	else
		##os 423011 - caso n�o tenha despesa acess�ria que entre na bc do pis/cofins importa��o,
		##ent�o dever� colocar o indicador sempre como n, isto porque a legisla��o
		##atual (mp 572) fala que as da�s n�o devem fazer parte da bc do pis/cofins importa��o.
		#if l_val_desp_icms2 > 0 then
		return "n" ##indica que a despesa acess�ria n�o dever� fazer parte da base de
		##c�lculo do pis/cofins importa��o
		#else
		#   return "p"
		#end if
	end if

end function
##fim os 407766 ##

#---------------------------------------------------------------#
function sup3760_busca_dat_ref_cotacao_moeda(l_cod_moeda,
	l_cod_fornecedor,
	l_dat_ref)
#---------------------------------------------------------------#
	define l_cod_moeda          like moeda.cod_moeda,
	l_cod_fornecedor     like fornecedor.cod_fornecedor,
	l_qt_dias_retroceder like sup_par_fornecedor.parametro_val,
	l_ies_dia_util_mes   like sup_par_fornecedor.parametro_booleano,
	l_parametro          like sup_par_fornecedor.parametro,
	l_dat_ref            date

	let l_parametro = "busca_dat_cotacao", l_cod_moeda using "<<<"

	initialize l_qt_dias_retroceder,
	l_ies_dia_util_mes to null

	whenever error continue
	select sup_par_fornecedor.parametro_val,
	sup_par_fornecedor.parametro_booleano
	into l_qt_dias_retroceder,
	l_ies_dia_util_mes
	from sup_par_fornecedor
	where sup_par_fornecedor.empresa    = p_cod_empresa
	and sup_par_fornecedor.fornecedor = l_cod_fornecedor
	and sup_par_fornecedor.parametro  = l_parametro
	whenever error stop
	if sqlca.sqlcode = 100 then
		whenever error continue
		select sup_par_fornecedor.parametro_val,
		sup_par_fornecedor.parametro_booleano
		into l_qt_dias_retroceder,
		l_ies_dia_util_mes
		from sup_par_fornecedor
		where sup_par_fornecedor.empresa    = p_cod_empresa
		and sup_par_fornecedor.fornecedor = "0"
		and sup_par_fornecedor.parametro  = l_parametro
		whenever error stop
		if sqlca.sqlcode <> 0 and
			sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","sup_par_fornecedor")
		end if
	else
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("leitura","sup_par_fornecedor")
		end if
	end if

	if l_qt_dias_retroceder is not null and
		l_qt_dias_retroceder > 0 then
		let l_dat_ref = l_dat_ref - l_qt_dias_retroceder units day
	else
		if l_ies_dia_util_mes is not null and
			l_ies_dia_util_mes = 1 then # primeiro dia util
			call sup2771_busca_primeiro_dia_util_mes(p_cod_empresa,
			l_dat_ref) returning l_dat_ref
		else
			if l_ies_dia_util_mes is not null and
				l_ies_dia_util_mes = 2 then # ultimo dia util
				call sup2771_busca_ultimo_dia_util_mes_ant(p_cod_empresa,
				l_dat_ref) returning l_dat_ref
			end if
		end if
	end if

return l_dat_ref

end function
#--inicio--vanderlei os 393937 #
#-------------------------------------------------------#
function sup3760_nf_dev_relac_nf_saida(l_empresa,
	l_aviso_recebto,
	l_funcao)
#-------------------------------------------------------#
	define l_empresa                           like sup_nf_devol_cli.empresa,
	l_aviso_recebto                     like sup_nf_devol_cli.aviso_recebto,
	l_existe_relac                      smallint,
	l_permite_mod                       char(01),
	l_funcao                            char(11)

	initialize l_permite_mod to null
	if l_funcao = "modificacao" then
		call log2250_busca_parametro(l_empresa, "permite_mod_nfd_com_nf_saida")
		returning l_permite_mod, p_status
	end if

	if l_permite_mod is null or l_permite_mod = " " then
		let l_permite_mod = 'n'
	end if

	let l_existe_relac = 0

	if p_dados_tela.ies_especie_nf = 'nfd' or
		p_ies_tip_entrada = '5'             then
		if l_permite_mod = 'n' then
			call sup3760_existe_relac_sup_nf_devol_cli(l_empresa,
			l_aviso_recebto)
			returning l_existe_relac

			if not l_existe_relac then #altera��o alem�o
				call sup3760_existe_dev_mestre(l_empresa,
				l_aviso_recebto)
				returning l_existe_relac
			end if
		end if
	end if

return l_existe_relac
end function

#---------------------------------------------------------------#
function sup3760_existe_relac_sup_nf_devol_cli(l_empresa,
	l_aviso_recebto)
#---------------------------------------------------------------#
	define l_empresa                           like sup_nf_devol_cli.empresa,
	l_aviso_recebto                     like sup_nf_devol_cli.aviso_recebto

	whenever error continue
	select aviso_recebto
	from sup_nf_devol_cli
	where empresa            = l_empresa
	and aviso_recebto      = l_aviso_recebto
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> -284 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","sup_nf_devol_cli")
		end if
		return false
	end if

return true
end function

#-------------------------------------------------#
function sup3760_existe_dev_mestre(l_cod_empresa,
	l_num_nff)
#-------------------------------------------------#
	define l_cod_empresa               like dev_mestre.cod_empresa,
	l_num_nff                   like dev_mestre.num_nff

	whenever error continue
	select num_nff
	from dev_mestre
	where cod_empresa = l_cod_empresa
	and num_nff     = l_num_nff
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","dev_mestre")
		end if
		return false
	end if

return true
end function
#---fim----vanderlei os 393937 #

#---------------------------------------#
function sup3760_permite_alteracao_gao()
#---------------------------------------#

	define l_count              integer,
	l_num_conta          like dest_aviso_rec.num_conta_deb_desp,
	lr_plano_contas      record like plano_contas.*,
	l_permite_alt        smallint

	let l_count = 0
	whenever error continue
	select count(*)
	into l_count
	from gao_cad_controle
	where gao_cad_controle.empresa = p_aviso_rec.cod_empresa
	whenever error stop
	if sqlca.sqlcode <> 0 or l_count is null then
		let l_count = 0
	end if

	let l_permite_alt = true

	#incluido rotina para que caso controle gao e tenha registro na tabela gao_conta_contab
	#para a conta relacionada ao item no sup3220 e j� tenha sido efetuada contagem/inspe��o,
	#somente permita modificar o pre�o unit�rio/data entrada caso a inspe��o/contagem seja excluida. ap�s
	#modifica��o a contagem/inspe��o deve ser realizada novamente, por�m pelo processo manual.
	#isto para que seja realiazado o empenho de valores correto no gao.
	initialize l_num_conta, lr_plano_contas to null

	whenever error continue
	declare cq_contas cursor for
	select dest_aviso_rec.num_conta_deb_desp
	from dest_aviso_rec
	where dest_aviso_rec.cod_empresa   = p_aviso_rec.cod_empresa
	and dest_aviso_rec.num_aviso_rec = p_aviso_rec.num_aviso_rec
	and dest_aviso_rec.num_seq       = p_aviso_rec.num_seq
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_contas")
	end if

	whenever error continue
	foreach cq_contas into l_num_conta

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_contas")
		exit foreach
	end if

	call con088_verifica_cod_conta(p_aviso_rec.cod_empresa,
	l_num_conta,
	"s",
	p_nf_sup.dat_entrada_nf)
returning lr_plano_contas.*, p_status

	if l_count > 0 then
		whenever error continue
		select gao_cad_controle.conta_contab
		from gao_cad_controle
		where gao_cad_controle.empresa            = p_aviso_rec.cod_empresa
		and (gao_cad_controle.conta_contab       = lr_plano_contas.num_conta or
		gao_cad_controle.conta_contab       = lr_plano_contas.num_conta_reduz)
		and gao_cad_controle.controla_orcamento = "s"
		whenever error stop
		if sqlca.sqlcode = 0 then
			if p_aviso_rec.ies_liberacao_cont = "s" then
				let l_permite_alt = false
			end if
		end if
	else
		whenever error continue
		select gao_conta_contab.*
		from gao_conta_contab
		where gao_conta_contab.empresa      = p_aviso_rec.cod_empresa
		and (gao_conta_contab.conta_contab       = lr_plano_contas.num_conta or
		gao_conta_contab.conta_contab       = lr_plano_contas.num_conta_reduz)
		whenever error stop
		if sqlca.sqlcode = 0 then
			if p_aviso_rec.ies_liberacao_cont = "s" then
				let l_permite_alt = false
			end if
		end if
	end if

	whenever error continue
	if not l_permite_alt then
		exit foreach
	end if
end foreach
whenever error stop

return l_permite_alt

end function
#----------------------------------------------------#
function sup3760_verifica_controle_dds_fortaleza()
#----------------------------------------------------#

	define l_resp        char(01),
	l_resp_modelo char(01),
	l_natureza    char(01),
	l_modelo_dds  char(01),
	l_serie_dds   char(02)

	define lr_cap_sistema_dds       record like cap_sistema_dds.*

	let l_resp = 'n'

	while true
		open window w_dds_fortaleza at 08,13 with 11 rows, 42 columns
		attribute(border, prompt line last, message line last)
		display "                   aten��o                  " at  1,1
		display "                   =======                  " at  2,1
		display "                                            " at  3,1
		display "      o par�metro de utiliza��o do iss      " at  4,1
		display "  eletr�nico esta ativo para esta empresa.  " at  5,1
		display "  deseja incluir esta nf/ad nos documentos  " at  6,1
		display "   para gera��o do arquivo texto do d.d.s   " at  7,1
		display "              fortaleza? (s/n)              " at  8,1
		display "                                            " at  9,1
		prompt  "deseja incluir ad/nf na dds (s/n)?" for char l_resp
		close window w_dds_fortaleza

		if upshift(l_resp) = "s" then
			call log130_procura_caminho("sup3760h") returning comando3
			open window w_sup3760h at 6,10  with form comando3
			attribute(border, message line last, prompt line last)

			call log006_exibe_teclas("01 02 03 07", p_versao)
			current window is w_sup3760h

			let int_flag = false

			input m_natureza,
			l_serie_dds,
			l_modelo_dds
			from natureza,
			serie_dds,
			modelo_dds

			before field natureza
			call sup3760_save_cur_field_name('natureza')
			after field natureza
			if m_natureza not matches "[a-i]" then
				call log0030_mensagem("natureza inv�lida.","info")
			next field natureza
		end if

		if m_natureza is null then
			call log0030_mensagem("natureza n�o informada.","info")
		next field natureza
	end if

	before field modelo_dds
	if l_modelo_dds is null then
		if p_nf_sup.ssr_nf matches "[1-9]" then
			let l_modelo_dds = p_nf_sup.ssr_nf
		else
			let l_modelo_dds = " "
		end if
	end if

	call sup3760_save_cur_field_name('modelo_dds')
	after field modelo_dds
	if l_modelo_dds <> " " and l_modelo_dds <> p_nf_sup.ssr_nf then
		prompt "modelo inv�lido para essa subs�rie. deseja continuar s/n ?" attribute (reverse) for l_resp_modelo
		if l_resp_modelo = "n" or l_resp_modelo = "n" then
		next field modelo_dds
	end if
else
	if l_modelo_dds is null then
		let l_modelo_dds = " "
	end if
end if
before field serie_dds
call sup3760_save_cur_field_name('serie_dds')

after field serie_dds
if l_serie_dds is null then
	call log0030_mensagem("s�rie n�o informada.","info")
next field serie_dds
end if

after input
if m_natureza is null then
	call log0030_mensagem("natureza n�o informada.","info")
next field natureza
end if

if l_serie_dds is null then
	call log0030_mensagem("s�rie n�o informada.","info")
next field serie_dds
end if

if l_modelo_dds is null then
	let l_modelo_dds = " "
end if

on key (control-z, f4)
call sup376_popups("inclusao")

end input

if int_flag = 0 then
	let lr_cap_sistema_dds.empresa            = p_nf_sup.cod_empresa
	let lr_cap_sistema_dds.ad_nota_fiscal     = p_nf_sup.num_nf
	let lr_cap_sistema_dds.serie_nota_fiscal  = p_nf_sup.ser_nf
	let lr_cap_sistema_dds.subserie_nf        = p_nf_sup.ssr_nf
	let lr_cap_sistema_dds.espc_nota_fiscal   = p_nf_sup.ies_especie_nf
	let lr_cap_sistema_dds.fornecedor         = p_nf_sup.cod_fornecedor
	let lr_cap_sistema_dds.natureza_operacao  = m_natureza
	#let lr_cap_sistema_dds.modelo_dds         = l_modelo_dds
	#let lr_cap_sistema_dds.serie_dds          = l_serie_dds

	whenever error continue
	insert into cap_sistema_dds (empresa,
	ad_nota_fiscal,
	serie_nota_fiscal,
	subserie_nf,
	espc_nota_fiscal,
	fornecedor,
	natureza_operacao,
	modelo_dds,
	serie_dds)
	values (lr_cap_sistema_dds.empresa,
	lr_cap_sistema_dds.ad_nota_fiscal,
	lr_cap_sistema_dds.serie_nota_fiscal,
	lr_cap_sistema_dds.subserie_nf,
	lr_cap_sistema_dds.espc_nota_fiscal,
	lr_cap_sistema_dds.fornecedor,
	lr_cap_sistema_dds.natureza_operacao,
	l_modelo_dds,
	l_serie_dds)
	whenever error stop
	if sqlca.sqlcode <> 0 and not log0030_err_sql_registro_duplicado() then
		call log003_err_sql("insert", "cap_sistema_dds")
		call log0030_mensagem("inclus�o cancelada.","info")
		close window w_sup3760h
		exit while
	end if
	call log0030_mensagem("inclus�o efetuada com sucesso.","info")
else
	call log0030_mensagem("inclus�o cancelada.","info")
	close window w_sup3760h
	exit while
end if
close window w_sup3760h
exit while
else
	if upshift(l_resp) = "n"   then
		exit while
	end if
end if
end while

end function

#----------------------------------------------------------#
function sup3760_transf_saida_somente_lote(lr_item_ctr_grade)
#----------------------------------------------------------#
	define lr_item_ctr_grade record like item_ctr_grade.*,
	l_ies_controles   smallint

	let l_ies_controles = false

	## situa��o espec�fica do cliente riclan (o.s.420516)
	## caso par�metro 'verifica transf nat sa�da (2,3,4)' do sup6600 estiver ativo
	## e tipo da nota for 't' , e item tiver controle somente de lote,
	## n�o necessita item_ctr_grade na empresa destino.

	if p_dados_tela.ies_nf_aguard_nfe <> 't' then
		return false
	end if

	if m_transf_saida <> "s" then
		return false
	end if

	if (lr_item_ctr_grade.num_grade_1 is not null and
		lr_item_ctr_grade.num_grade_1 <> 0)
		or (lr_item_ctr_grade.num_grade_2 is not null and
		lr_item_ctr_grade.num_grade_2 <> 0)
		or (lr_item_ctr_grade.num_grade_3 is not null and
		lr_item_ctr_grade.num_grade_3 <> 0)
		or (lr_item_ctr_grade.num_grade_4 is not null and
		lr_item_ctr_grade.num_grade_4 <> 0)
		or (lr_item_ctr_grade.num_grade_5 is not null and
		lr_item_ctr_grade.num_grade_5 <> 0) then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_endereco = "s" then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_volume = "s" then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_dat_producao = "s" then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_dat_validade = "s" then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_comprimento = "s" then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_largura = "s" then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_altura = "s" then
		let l_ies_controles = true
	end if

	if lr_item_ctr_grade.ies_diametro = "s" then
		let l_ies_controles = true
	end if

	if l_ies_controles then
		return false
	else
		return true
	end if

end function

#--inicio--vanderlei os 402676 #
#----------------------------------------------------------------------#
function sup3760_fornec_triang_cadastrado_sup0220(l_empresa,
	l_fornecedor,
	l_fornecedor_triang)
#----------------------------------------------------------------------#
	define l_empresa                            like sup_par_fornecedor.empresa,
	l_fornecedor                         like fornecedor.cod_fornecedor,
	l_fornecedor_triang                  like sup_par_fornecedor.fornecedor,
	l_parametro                          like sup_par_fornecedor.parametro

	let l_parametro[ 1,15] = l_fornecedor_triang
	let l_parametro[16,17] = 'ft'

	whenever error continue
	select sup_par_fornecedor.parametro
	from sup_par_fornecedor
	where sup_par_fornecedor.empresa         = l_empresa
	and sup_par_fornecedor.fornecedor      = l_fornecedor
	and sup_par_fornecedor.parametro[1,17] = l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","sup_par_fornecedor")
		end if
		return false
	end if

return true
end function

#-------------------------------------------------------------#
function sup3760_fornecedor_relac_triangulacao(l_cod_empresa,
	l_num_aviso_rec,
	l_gru_ctr_desp_item)
#---------------------------------------------------------------#
	define l_cod_empresa                  like aviso_rec.cod_empresa,
	l_num_aviso_rec                like aviso_rec.num_aviso_rec,
	l_gru_ctr_desp_item            like aviso_rec.gru_ctr_desp_item,
	l_relac_terceirizacao          like obf_par_grp_desp.parametro_ind,
	l_item_triang                  smallint,
	l_triang_em_terc               smallint

	initialize l_relac_terceirizacao to null
	let l_item_triang = 0

	if l_gru_ctr_desp_item = ' ' or l_gru_ctr_desp_item is null then
		whenever error continue
		declare cq_fornec_triang cursor for
		select gru_ctr_desp_item
		from aviso_rec
		where cod_empresa   = l_cod_empresa
		and num_aviso_rec = l_num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("declare","cq_fornec_triang")
			return false
		end if


		whenever error continue
		foreach cq_fornec_triang into l_gru_ctr_desp_item

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("foreach","cq_fornec_triang")
			exit foreach
		end if

		let l_triang_em_terc = 0

		whenever error continue
		select parametro_ind
		into l_relac_terceirizacao
		from obf_par_grp_desp
		where empresa         = l_cod_empresa
		and grp_ctr_despesa = l_gru_ctr_desp_item
		and unid_federal    = " "    #a u.f ser� sempre em branco para este parametro neste caso
		and parametro       = "relac_terceirizacao"
		whenever error stop
		if sqlca.sqlcode = 0 then
			#-- "t" - fornecedor triangula��o(itens de terceiros)  "r" - fornecedor triangula��o(itens em terceiros) --#
			if l_relac_terceirizacao = "t" or l_relac_terceirizacao = "r" then
				let l_item_triang = 1

				if l_relac_terceirizacao = "r" then
					let l_triang_em_terc = 1
				end if
			end if
		end if

		whenever error continue
	end foreach
	whenever error stop

	whenever error continue
	free cq_fornec_triang
	whenever error stop
else
	let l_triang_em_terc = 0

	whenever error continue
	select parametro_ind
	into l_relac_terceirizacao
	from obf_par_grp_desp
	where empresa         = l_cod_empresa
	and grp_ctr_despesa = l_gru_ctr_desp_item
	and unid_federal    = " "    #a u.f ser� sempre em branco para este parametro neste caso
	and parametro       = "relac_terceirizacao"
	whenever error stop
	if sqlca.sqlcode = 0 then
		#-- "t" - fornecedor triangula��o(itens de terceiros)  "r" - fornecedor triangula��o(itens em terceiros) --#
		if l_relac_terceirizacao = "t" or l_relac_terceirizacao = "r" then
			let l_item_triang = 1

			if l_relac_terceirizacao = "r" then
				let l_triang_em_terc = 1
			end if
		end if
	end if
end if

return l_item_triang, l_triang_em_terc

end function

#---------------------------------------------------------------------#
function sup3760_relac_fornec_triang_cadastr_sup0220(l_cod_empresa,
	l_num_aviso_rec,
	l_fornecedor)
#---------------------------------------------------------------------#
	define l_cod_empresa                  like aviso_rec.cod_empresa,
	l_num_aviso_rec                like aviso_rec.num_aviso_rec,
	l_fornecedor                   like fornecedor.cod_fornecedor,
	l_raz_social                   like fornecedor.raz_social,
	l_fornecedor_triang            like sup_par_fornecedor.fornecedor,
	l_parametro                    like sup_par_ar.parametro,
	l_item_triang                  smallint,
	l_triang_em_terc               smallint,
	l_ind                          smallint,
	l_sem_erro                     smallint,
	l_caminho                      char(150),
	la_fornec_triang               array[100] of record  ### tqai54
	cod_fornecedor  like fornecedor.cod_fornecedor,
	raz_social      like fornecedor.raz_social
end record

let l_sem_erro = 1

call sup3760_fornecedor_relac_triangulacao(l_cod_empresa, l_num_aviso_rec, ' ')
returning l_item_triang, l_triang_em_terc

if l_triang_em_terc then
	whenever error continue
	declare cq_lista_fornec_triang cursor with hold for
	select parametro
	from sup_par_fornecedor
	where empresa         = l_cod_empresa
	and fornecedor      = l_fornecedor
	and parametro[16,17] = 'ft'
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","sup_par_fornecedor")
		return false
	end if

	let l_ind = 1
	whenever error continue
	foreach cq_lista_fornec_triang into l_parametro
	if sqlca.sqlcode <> 0 then
		call log003_err_sql('foreach','cq_lista_fornec_triang')
		return false
	end if

	let la_fornec_triang[l_ind].cod_fornecedor = l_parametro[1,15]
	let la_fornec_triang[l_ind].raz_social     = sup3760_raz_social_fornecedor(la_fornec_triang[l_ind].cod_fornecedor)

	let l_ind = l_ind + 1
end foreach
free cq_lista_fornec_triang
whenever error stop

## corrigido na o.s.426421, estava subtraindo 1 de 1 quando n�o
## entrava no cursor cq_lista_fornec_triang gerando l_ind = 0
## e programa estava abortando no
## let l_fornecedor_triang = la_fornec_triang[l_ind].cod_fornecedor
## pois n�o existe posi��o de cursor = 0
if l_ind > 1 then
	let l_ind = l_ind - 1
end if

let int_flag = 0
if l_ind > 1 then
	call log006_exibe_teclas("01 02",p_versao)
	call log130_procura_caminho("sup02202" ) returning l_caminho
	open window w_sup0220 at 4,5 with form l_caminho
	attribute(border, message line last, prompt line last, form line 1)

	let l_raz_social = sup3760_raz_social_fornecedor(l_fornecedor)
	display l_cod_empresa to cod_empresa
	display l_fornecedor  to cod_fornec_principal
	display l_raz_social  to raz_social_principal

	call set_count(l_ind)
	display array la_fornec_triang to sr_fornec_triang.*
	let l_ind = arr_curr()

	close window w_sup0220
end if

if not int_flag then
	let l_fornecedor_triang = la_fornec_triang[l_ind].cod_fornecedor

	call sup3760_atualiza_sup_par_ar(l_cod_empresa,l_num_aviso_rec,0,"fornec_triangulacao",'', l_fornecedor_triang,'','')
returning l_sem_erro
end if
end if

return l_sem_erro
end function

#---------------------------------------------------------#
function sup3760_atualiza_sup_par_ar(l_empresa,
	l_aviso_recebto,
	l_seq_aviso_recebto,
	l_parametro,
	l_par_ind_especial,
	l_parametro_texto,
	l_parametro_val,
	l_parametro_dat)
#---------------------------------------------------------#
	define l_empresa                      like sup_par_ar.empresa,
	l_aviso_recebto                like sup_par_ar.aviso_recebto,
	l_seq_aviso_recebto            like sup_par_ar.seq_aviso_recebto,
	l_parametro                    like sup_par_ar.parametro,
	l_par_ind_especial             like sup_par_ar.par_ind_especial,
	l_parametro_texto              like sup_par_ar.parametro_texto,
	l_parametro_val                like sup_par_ar.parametro_val,
	l_parametro_dat                like sup_par_ar.parametro_dat

	whenever error continue
	delete from sup_par_ar
	where empresa           = l_empresa
	and aviso_recebto     = l_aviso_recebto
	and seq_aviso_recebto = l_seq_aviso_recebto
	and parametro         = l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("exclus�o","sup_par_ar")
		return false
	end if

	whenever error continue
	insert into sup_par_ar
	(empresa,
	aviso_recebto,
	seq_aviso_recebto,
	parametro,
	par_ind_especial,
	parametro_texto,
	parametro_val,
	parametro_dat)
	values
	(l_empresa,
	l_aviso_recebto,
	l_seq_aviso_recebto,
	l_parametro,
	l_par_ind_especial,
	l_parametro_texto,
	l_parametro_val,
	l_parametro_dat)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclus�o","sup_par_ar")
		return false
	end if

return true
end function

#--------------------------------------------------------#
function sup3760_raz_social_fornecedor(l_cod_fornecedor)
#--------------------------------------------------------#
	define l_cod_fornecedor        like fornecedor.cod_fornecedor,
	l_raz_social            like fornecedor.raz_social

	initialize l_raz_social to null
	whenever error continue
	select raz_social
	into l_raz_social
	from fornecedor
	where cod_fornecedor = l_cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","fornecedor")
		end if
	end if

return l_raz_social

end function
#----fim---vanderlei os 402676 #

#--inicio--vanderlei os 402649 #
#------------------------------------------------------------------------#
function sup3760_solicita_confirm_recal_imposto_declar(l_cod_empresa,
	l_ies_especie_nf,
	l_num_aviso_rec)
#------------------------------------------------------------------------#
	define l_cod_empresa                     like empresa.cod_empresa,
	l_ies_solic_recal_imposto         char(01),
	l_ies_especie_nf                  like nf_sup.ies_especie_nf,
	l_num_aviso_rec                   like aviso_rec.num_aviso_rec

	if log_existe_epl("sup3760y_before_process_solicita_confirm_recal_imposto_declar") then
		call log_setvar('cod_empresa', p_cod_empresa)
		#epl codigo da empresa
		#epl tipo: aviso_rec.cod_empresa

		call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
		#epl numero do ar
		#epl tipo: aviso_rec.num_aviso_rec

		if not sup3760y_before_process_solicita_confirm_recal_imposto_declar() then
			return false
		end if
	end if

	if l_ies_especie_nf = 'nfc' and sup3760_soma_valor_unit_item(l_cod_empresa, l_num_aviso_rec) then
		initialize l_ies_solic_recal_imposto to null
		call log2250_busca_parametro(l_cod_empresa, "mensagem_recalcula_imposto_nfc")
		returning l_ies_solic_recal_imposto, p_status

		if l_ies_solic_recal_imposto is null or l_ies_solic_recal_imposto = " " then
			let l_ies_solic_recal_imposto = "s"
		end if

		if l_ies_solic_recal_imposto <> "s" then
			return false
		end if
	end if

	if sup3760_nota_integrada_gecex(l_cod_empresa, l_num_aviso_rec) then   #os. 419996 - kordsa
		return false
	end if

	### dmanentlgx-4338 - verifica se nota foi enviada para sefaz, caso afirmativo n�o deve ser efetuada consist�ncia nota fiscal
	###                   (neste caso nem ser� efetuada pergunta em tela, n�o ser� efetuado recalculo impostos)
	if sup376_nfe_emitida() then
		return false
	else
		let p_ies_nfe_emit = "n"

		whenever error continue
		select ies_nfe_emit
		into p_ies_nfe_emit
		from nfe_sup_compl
		where cod_empresa   = p_nf_sup.cod_empresa
		and num_aviso_rec = p_nf_sup.num_aviso_rec
		whenever error stop

		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			call log0030_processa_mensagem('select','nfe_sup_compl',false)
			return
		end if

		if p_ies_nfe_emit = "s" then
			if m_utiliza_nf_eletronica = 's' then
				call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa, p_nf_sup.num_aviso_rec, "excluir")
				returning p_status, m_msg
				if p_status then
					return false
				end if
			end if
		else
			if m_utiliza_nf_eletronica = 's' then
				call obf3760_verifica_sup_nf_eletronica(p_nf_sup.cod_empresa, p_nf_sup.num_aviso_rec, "excluir")
				returning p_status, m_msg
				if p_status then
					return false
				end if
			end if
		end if
	end if
return true
end function

#------------------------------------------------------#
function sup3760_soma_valor_unit_item(l_cod_empresa,
	l_num_aviso_rec)
#------------------------------------------------------#
	define l_cod_empresa                     like empresa.cod_empresa,
	l_num_aviso_rec                   like aviso_rec.num_aviso_rec,
	l_val_liquido_item                like aviso_rec.val_liquido_item

	whenever error continue
	select sum(aviso_rec.val_liquido_item)
	into l_val_liquido_item
	from aviso_rec
	where aviso_rec.cod_empresa   = l_cod_empresa
	and aviso_rec.num_aviso_rec = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","aviso_rec")
	end if

	if l_val_liquido_item = 0 then
		return true
	else
		return false
	end if

end function
#----fim---vanderlei os 402649 #

#--------------------------------------------------------------#
function sup3760_exclusao_inclusao_item_compex(l_cod_empresa,
	l_num_aviso_rec)
#--------------------------------------------------------------#

	define l_cod_empresa   like aviso_rec.cod_empresa,
	l_num_aviso_rec like aviso_rec.num_aviso_rec,
	l_num_seq       like aviso_rec.num_seq,
	l_cod_item      like item.cod_item

	#apenas para fun��o incl.itens, pois na exclui itens j� efetua exclus�o da sup_par_ar.
	call sup3760_exclui_sup_par_ar_compex(l_cod_empresa, l_num_aviso_rec)

	whenever error continue
	declare cq_compex cursor for
	select aviso_rec.cod_empresa,
	aviso_rec.num_aviso_rec,
	aviso_rec.num_seq,
	aviso_rec.cod_item
	from aviso_rec
	where aviso_rec.cod_empresa   = l_cod_empresa
	and aviso_rec.num_aviso_rec = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","aviso_rec")
	end if

	whenever error continue
	foreach cq_compex into l_cod_empresa, l_num_aviso_rec,
	l_num_seq, l_cod_item

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","aviso_rec")
	end if

	call sup3760_verifica_regime_compex(l_cod_empresa, l_num_aviso_rec,
	l_num_seq, l_cod_item)

	whenever error continue
end foreach
whenever error stop

whenever error continue
free cq_compex
whenever error stop

end function

#------------------------------------------------------------------------#
function sup3760_exclui_sup_par_ar_compex(l_cod_empresa, l_num_aviso_rec)
#------------------------------------------------------------------------#

	define l_cod_empresa   like aviso_rec.cod_empresa,
	l_num_aviso_rec like aviso_rec.num_aviso_rec

	whenever error continue
	delete from sup_par_ar
	where sup_par_ar.empresa         = l_cod_empresa
	and sup_par_ar.aviso_recebto   = l_num_aviso_rec
	and sup_par_ar.parametro[1,14] = 'regime_compex_'
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","sup_par_ar")
	end if

end function

#----------------------------------------------------------------------#
function sup3760_verifica_regime_compex(l_cod_empresa, l_num_aviso_rec,
	l_num_seq, l_cod_item)
#----------------------------------------------------------------------#

	define l_ies_obj_entrada like grupo_ctr_desp.ies_obj_entrada,
	l_cod_empresa     like aviso_rec.cod_empresa,
	l_num_aviso_rec   like aviso_rec.num_aviso_rec,
	l_num_seq         like aviso_rec.num_seq,
	l_cod_item        like aviso_rec.cod_item,
	l_parametro_val   like sup_par_ar.parametro_val

	whenever error continue
	select a.ies_obj_entrada
	into l_ies_obj_entrada
	from grupo_ctr_desp a, item_sup b
	where a.cod_empresa  = l_cod_empresa
	and a.gru_ctr_desp = b.gru_ctr_desp
	and b.cod_empresa  = l_cod_empresa
	and b.cod_item     = l_cod_item
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","grupo_ctr_desp")
	end if

	if l_ies_obj_entrada = "1" then
		let l_parametro_val = 1
		if m_confirm_compex_mp = "s" then
			if not m_solicitou_mp then
				let m_solicitou_mp = true
				let m_confirmou_mp = log0040_confirm(12,15,"nota fiscal possui informa��o regime compex para mat�ria prima?")
			end if

			if not m_confirmou_mp then
				let l_parametro_val = 2
			end if
		end if

		call sup3760_inclui_sup_par_ar_compex("regime_compex_mp", l_cod_empresa,
		l_num_aviso_rec, l_num_seq, l_parametro_val)
	end if

	if l_ies_obj_entrada = "6" then
		let l_parametro_val = 1
		if m_confirm_compex_ciap = "s" then
			if not m_solicitou_ciap then
				let m_solicitou_ciap = true
				let m_confirmou_ciap = log0040_confirm(12,15,"nota fiscal possui informa��o regime compex para ativo imobilizado(ciap)?")
			end if

			if not m_confirmou_ciap then
				let l_parametro_val = 2
			end if
		end if

		call sup3760_inclui_sup_par_ar_compex("regime_compex_ciap", l_cod_empresa,
		l_num_aviso_rec, l_num_seq, l_parametro_val)
	end if

end function

#--------------------------------------------------------------------#
function sup3760_inclui_sup_par_ar_compex(l_parametro, l_cod_empresa,
	l_num_aviso_rec, l_num_seq,
	l_parametro_val)
#--------------------------------------------------------------------#

	define l_parametro     like sup_par_ar.parametro,
	l_cod_empresa   like aviso_rec.cod_empresa,
	l_num_aviso_rec like aviso_rec.num_aviso_rec,
	l_parametro_val like sup_par_ar.parametro_val,
	l_num_seq       like aviso_rec.num_seq

	whenever error continue
	select sup_par_ar.empresa
	from sup_par_ar
	where sup_par_ar.empresa           = l_cod_empresa
	and sup_par_ar.aviso_recebto     = l_num_aviso_rec
	and sup_par_ar.seq_aviso_recebto = l_num_seq
	and sup_par_ar.parametro         = l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		whenever error continue
		insert into sup_par_ar values(l_cod_empresa,
		l_num_aviso_rec,
		l_num_seq,
		l_parametro,
		"n",null,
		l_parametro_val,today)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("insert","sup_par_ar")
		end if
	else
		whenever error continue
		update sup_par_ar
		set sup_par_ar.par_ind_especial = "n",
		sup_par_ar.parametro_val    = l_parametro_val
		where sup_par_ar.empresa           = l_cod_empresa
		and sup_par_ar.aviso_recebto     = l_num_aviso_rec
		and sup_par_ar.seq_aviso_recebto = l_num_seq
		and sup_par_ar.parametro         = l_parametro
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","sup_par_ar")
		end if
	end if

end function

#-----------------------------------------------------------------#
function sup3760_verifica_fornec_incl_regime_compex(l_cod_empresa,
	l_dat_emis_nf,
	l_fornecedor)
#-----------------------------------------------------------------#

	define l_cod_empresa     like sup_par_fornecedor.empresa,
	l_dat_emis_nf     like nf_sup.dat_entrada_nf,
	l_fornecedor      like nf_sup.cod_fornecedor,
	l_parametro_texto like sup_par_fornecedor.parametro_texto,
	l_dat_ini_mp      like nf_sup.dat_entrada_nf,
	l_dat_fim_mp      like nf_sup.dat_entrada_nf,
	l_dat_ini_ciap    like nf_sup.dat_entrada_nf,
	l_dat_fim_ciap    like nf_sup.dat_entrada_nf

	initialize l_parametro_texto to null

	whenever error continue
	select sup_par_fornecedor.parametro_texto
	into l_parametro_texto
	from sup_par_fornecedor
	where sup_par_fornecedor.empresa    = l_cod_empresa
	and sup_par_fornecedor.fornecedor = l_fornecedor
	and sup_par_fornecedor.parametro  = "regime_espec_compex"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		return false
	end if

	let l_dat_ini_mp   = l_parametro_texto[1,10]
	let l_dat_fim_mp   = l_parametro_texto[12,21]
	let l_dat_ini_ciap = l_parametro_texto[23,32]
	let l_dat_fim_ciap = l_parametro_texto[34,43]

	if ((l_dat_ini_mp <= l_dat_emis_nf     and
		l_dat_fim_mp >= l_dat_emis_nf)    or
		(l_dat_ini_ciap <= l_dat_emis_nf   and
		l_dat_fim_ciap >= l_dat_emis_nf)) then
		return true
	end if

return false

end function

#--inicio--vanderlei os 409196 #
#------------------------------------------#
function sup3760_consiste_ser_nf(l_ser_nf)
#------------------------------------------#
	define l_ser_nf            like nf_sup.ser_nf

	if p_dados_tela.ies_especie_nf = "con" then
		if sup3760_valida_ser_nf(l_ser_nf, 'frete') then
			return true
		end if

		if l_ser_nf matches "[bcu]" or l_ser_nf = "bu" or l_ser_nf = "cu" or l_ser_nf = " " then
			return true
		end if

	else
		if sup3760_valida_ser_nf(l_ser_nf, 'notaf') then
			return true
		end if

		if l_ser_nf matches "[1-9b-du]" or l_ser_nf = "bu" or l_ser_nf = "cu" or l_ser_nf = "du" or l_ser_nf = " " then
			return true
		end if

	end if

return false

end function

#------------------------------------------------#
function sup3760_valida_ser_nf(l_ser_nf, l_tipo)
#------------------------------------------------#
	define l_ser_nf            like nf_sup.ser_nf,
	l_tipo              char(05),
	l_tipo_ser          char(01),
	l_ser_nf_s_num      like nf_sup.ser_nf

	# ch 731810
	if sup3760_ies_utiliza_nfe(p_dados_tela.cod_fornecedor) = "s"
		and p_dados_tela.ies_especie_nf <> "nfs"  then #tekbvz
		call log0800_filter_number(l_ser_nf) returning l_ser_nf_s_num
		#trvge8
		if l_ser_nf <> l_ser_nf_s_num and
			l_ser_nf_s_num is not null and
			l_ser_nf_s_num <> " " then
			return false
		end if

		return true
	end if

	# -- l_tipo[1,1] - est� vari�vel pode assumir o valor "notaf" tipo "n", ou "frete" tipo "f" -- #
	let l_tipo_ser = l_tipo[1,1]

	whenever error continue
	select cod_parametro
	from par_sup_pad
	where cod_empresa   = p_cod_empresa
	and cod_parametro like 'serie_excecao%'
	and par_txt       = l_ser_nf
	and par_ies       in('a', l_tipo_ser)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","par_sup_pad")
		end if
		return false
	end if

return true
end function
#---fim----vanderlei os 409196 #

#--------------------------------------------#
function sup3760_busca_cond_pgto_sem_pgto()
#--------------------------------------------#
	##os 437323
	if m_cnd_pgto_sem_intr_cap is not null and
		m_cnd_pgto_sem_intr_cap <> " " then
		let p_dados_tela.cnd_pgto_nf = m_cnd_pgto_sem_intr_cap
		return true
	end if

return false

end function

#-------------------------------------------------------------------------#
function sup3760_atualiza_item_de_terc(l_val_remessa, l_cod_cla_fisc,
	l_den_item, l_cod_unid_med,
	l_dat_emis_nf, l_dat_entrada_nf,
	l_num_nf, l_ser_nf, l_ssr_nf,
	l_cod_fornecedor, l_ies_especie_nf,
	l_num_sequencia, l_ind)
#-------------------------------------------------------------------------#

	define l_ind                 smallint,
	l_num_nf              like item_de_terc.num_nf,
	l_ser_nf              like item_de_terc.ser_nf,
	l_ssr_nf              like item_de_terc.ssr_nf,
	l_den_item            like item_de_terc.den_item,
	l_sql_stmt            char(5000),
	l_dat_emis_nf         like item_de_terc.dat_emis_nf,
	l_val_remessa         like item_de_terc.val_remessa,
	l_cod_cla_fisc        like item_de_terc.cod_cla_fisc,
	l_cod_unid_med        like item_de_terc.cod_unid_med,
	l_num_sequencia       like item_de_terc.num_sequencia,
	l_dat_entrada_nf      like item_de_terc.dat_entrada_nf,
	l_cod_fornecedor      like item_de_terc.cod_fornecedor,
	l_ies_especie_nf      like item_de_terc.ies_especie_nf,
	l_val_remessa_char    char(30)

	let l_val_remessa_char = l_val_remessa     using '--------------&.&&'

	whenever error continue
	select item_de_terc.num_nf
	from item_de_terc
	where item_de_terc.cod_empresa    = p_cod_empresa
	and item_de_terc.num_nf         = l_num_nf
	and item_de_terc.ser_nf         = l_ser_nf
	and item_de_terc.ssr_nf         = l_ssr_nf
	and item_de_terc.cod_fornecedor = l_cod_fornecedor
	and item_de_terc.ies_especie_nf = l_ies_especie_nf
	and item_de_terc.num_sequencia  = l_num_sequencia
	whenever error stop
	if sqlca.sqlcode = 0 then
		let l_sql_stmt = " update item_de_terc "

		if l_ind = 1 then
			let l_sql_stmt = l_sql_stmt clipped,
			" set item_de_terc.val_remessa = ",log2260_troca_virgula_por_ponto (l_val_remessa_char),", ",
			" item_de_terc.cod_cla_fisc   = """,l_cod_cla_fisc,""", ",
			" item_de_terc.den_item       = ? "
			#dmanentlgx-4241  " item_de_terc.cod_unid_med   = """,l_cod_unid_med,""" " unidade de medida deve ser do estoque
		else
			let l_sql_stmt = l_sql_stmt clipped,
			" set item_de_terc.dat_emis_nf    = """,l_dat_emis_nf,""", ",
			" item_de_terc.dat_entrada_nf = """,l_dat_entrada_nf,""" "
		end if

		let l_sql_stmt = l_sql_stmt clipped,
		" where item_de_terc.cod_empresa    = """,p_cod_empresa,""" ",
		" and item_de_terc.num_nf         = ",l_num_nf," ",
		" and item_de_terc.ser_nf         = """,l_ser_nf,""" ",
		" and item_de_terc.ssr_nf         = ",l_ssr_nf," ",
		" and item_de_terc.cod_fornecedor = """,l_cod_fornecedor,""" ",
		" and item_de_terc.ies_especie_nf = """,l_ies_especie_nf,""" ",
		" and item_de_terc.num_sequencia  = ",l_num_sequencia," "

		whenever error continue
		prepare var_update from l_sql_stmt
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("prepare","item_de_terc")
			return false
		end if

		whenever error continue
		if l_ind = 1 then
			execute var_update using l_den_item
		else
			execute var_update
		end if
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","item_de_terc")
			return false
		end if

		### dmanentlgx-4447 - atualiza item_de_terc_area
		if p_ies_contab_aen = "4" then
			let l_sql_stmt = " update item_de_terc_area "

			if l_ind = 1 then
				let l_sql_stmt = l_sql_stmt clipped,
				" set item_de_terc_area.val_remessa = ",log2260_troca_virgula_por_ponto (l_val_remessa_char),", ",
				" item_de_terc_area.cod_cla_fisc   = """,l_cod_cla_fisc,""", ",
				" item_de_terc_area.den_item = ? "
				#dmanentlgx-4241  " item_de_terc_area.cod_unid_med = """,l_cod_unid_med,""" " unidade de medida deve ser do estoque
			else
				let l_sql_stmt = l_sql_stmt clipped,
				" set item_de_terc_area.dat_emis_nf = """,l_dat_emis_nf,""", ",
				" item_de_terc_area.dat_entrada_nf = """,l_dat_entrada_nf,""" "
			end if

			let l_sql_stmt = l_sql_stmt clipped,
			" where item_de_terc_area.cod_empresa = """,p_cod_empresa,""" ",
			" and item_de_terc_area.num_nf = ",l_num_nf," ",
			" and item_de_terc_area.ser_nf = """,l_ser_nf,""" ",
			" and item_de_terc_area.ssr_nf = ",l_ssr_nf," ",
			" and item_de_terc_area.cod_fornecedor = """,l_cod_fornecedor,""" ",
			" and item_de_terc_area.ies_especie_nf = """,l_ies_especie_nf,""" ",
			" and item_de_terc_area.num_sequencia = ",l_num_sequencia," "

			whenever error continue
			prepare var_update1 from l_sql_stmt
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("prepare","item_de_terc_area")
				return false
			end if

			whenever error continue
			if l_ind = 1 then
				execute var_update1 using l_den_item
			else
				execute var_update1
			end if
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("update","item_de_terc_area")
				return false
			end if
		end if
	end if

return true

end function

#-------------------------------------------------#
function sup3760_via_transporte(l_cod_empresa,
	l_cod_fornecedor)
#-------------------------------------------------#
	define l_cod_empresa    like empresa.cod_empresa,
	l_cod_fornecedor like fornecedor.cod_fornecedor,
	l_parametro_val  like via_transporte.cod_via_transporte,
	l_count          integer,
	l_status         smallint

	let l_count = 0

	whenever error continue
	declare cq_sup_par_forn cursor with hold for
	select parametro_val
	from sup_par_fornecedor
	where empresa            = l_cod_empresa
	and fornecedor         = l_cod_fornecedor
	and parametro[1,15]   = "meio_transporte"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql ("leitura","sup_par_fornecedor")
	end if

	whenever error continue
	foreach cq_sup_par_forn into l_parametro_val
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","sup_par_fornecedor")
		exit foreach
	end if
	let l_count = l_count + 1
	if l_count = 1 then
		let m_via_transporte_nota = l_parametro_val
	end if
end foreach

if l_count > 0 then
	if l_count > 1 then
		call sup3760_popup_via_transpor(l_cod_empresa,
		l_cod_fornecedor) returning m_via_transporte_nota
	end if
else
	initialize m_via_transporte_nota to null
	call log2250_busca_parametro(l_cod_empresa,"via_transporte_padrao")
returning m_via_transporte_nota, l_status
	if not l_status then
		let m_via_transporte_nota = null
	end if
end if

end function

#-----------------------------------------------------#
function sup3760_popup_via_transpor(l_cod_empresa,
	l_cod_fornecedor)
#-----------------------------------------------------#
	define l_cod_empresa    like empresa.cod_empresa,
	l_cod_fornecedor like fornecedor.cod_fornecedor,
	l_condicao       char(500),
	l_via_transp     like via_transporte.cod_via_transporte

	let l_condicao = " cod_via_transporte in ( select parametro_val ",
	" from sup_par_fornecedor ",
	" where empresa = """,l_cod_empresa,""" ",
	" and fornecedor = """,l_cod_fornecedor,""" ",
	" and parametro[1,15] = ""meio_transporte"" ) "

	while true
		let l_via_transp =
		log009_popup(8,10, ------------------------- linha/coluna da janela
		"meios de transporte",                    -- cabecalho da janela
		"via_transporte",                         -- nome da tabela no sistema
		"cod_via_transporte",                     -- nome da primeira coluna
		"den_via_transporte",                     -- nome da segunda  coluna
		"vdp2520",                                -- nome do prog.manutencao
		"n",                                      -- testa cod_empresa (s/n) ?
		l_condicao) -------------------------------- where clause do select

		if l_via_transp is null
			or l_via_transp = ' ' then
			error 'escolha uma das vias de transporte do fornecedor.'
		else
			error ' '
			exit while
		end if

	end while

return l_via_transp

end function

#--inicio--vanderlei os 434072 #
#---------------------------------------------------#
function sup3760_exclui_sup_par_ar(l_empresa,
	l_aviso_recebto,
	l_parametro)
#---------------------------------------------------#
	define l_empresa                like sup_par_ar.empresa,
	l_aviso_recebto          like sup_par_ar.aviso_recebto,
	l_parametro              like sup_par_ar.parametro

	whenever error continue
	delete from sup_par_ar
	where empresa       = l_empresa
	and aviso_recebto = l_aviso_recebto
	and parametro     = l_parametro
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql('exclus�o','sup_par_ar')
	end if

end function
#---fim----vanderlei os 434072

#------------------------------------------#
function sup3760_recupera_operacao_estoq()
#------------------------------------------#
	define l_cod_operacao_x    char(04),
	l_cod_fiscal_compl  like aviso_rec_compl.cod_fiscal_compl,
	l_cod_operacao      char(04)

	initialize l_cod_operacao_x to null

	let l_cod_operacao = p_par_sup.cod_operac_estoq_c

	let l_cod_fiscal_compl = 0

	whenever error continue
	select cod_fiscal_compl
	into l_cod_fiscal_compl
	from aviso_rec_compl
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_cod_fiscal_compl = 0
	end if

	if p_ies_cod_operac = "s" or
		p_nf_sup.ies_nf_aguard_nfe = "5" or
		p_nf_sup.ies_nf_aguard_nfe = "p" or
		sup0812_verifica_nota_transferencia(p_cod_empresa,
		p_aviso_rec.num_aviso_rec,
		p_nf_sup.num_nf,
		p_nf_sup.ser_nf,
		p_nf_sup.ssr_nf,
		p_nf_sup.cod_fornecedor,
		p_nf_sup.cod_operacao,
		l_cod_fiscal_compl) or
		sup3762_verifica_operacao_srig() then

		whenever error continue
		select cod_operacao
		into l_cod_operacao_x
		from aviso_rec_compl
		where aviso_rec_compl.cod_empresa   = p_cod_empresa
		and aviso_rec_compl.num_aviso_rec = p_aviso_rec.num_aviso_rec
		whenever error stop
		if l_cod_operacao_x is not null and l_cod_operacao_x <> " " then
			let l_cod_operacao = l_cod_operacao_x
		end if
	else
		whenever error continue
		select cod_operacao
		into l_cod_operacao_x
		from tipo_desp_oper_ct
		where tipo_desp_oper_ct.cod_empresa     = p_cod_empresa
		and tipo_desp_oper_ct.cod_tip_despesa = p_aviso_rec.cod_tip_despesa
		whenever error stop
		if sqlca.sqlcode = 0 then
			if l_cod_operacao_x is not null and l_cod_operacao_x <> " " then
				let l_cod_operacao = l_cod_operacao_x
			end if
		end if
	end if

	if p_nf_sup.ies_nf_aguard_nfe = "4" then

		if m_ies_armaz_itau = 's' then

			let l_cod_operacao_x = null

			whenever error continue
			select par_sup_pad.par_txt
			into l_cod_operacao_x
			from par_sup_pad
			where par_sup_pad.cod_empresa = p_cod_empresa
			and par_sup_pad.cod_parametro = "cod_oper_ajust_ent"
			whenever error stop
			if sqlca.sqlcode <> 0 or l_cod_operacao_x is null then
				let l_cod_operacao_x = " "
			end if
			if l_cod_operacao_x <> " " then
				let l_cod_operacao = l_cod_operacao_x
			end if
		end if
	end if

return l_cod_operacao

end function

#--inicio--os 414316 #
#--------------------------------------------------#
function sup3760_existe_h_nf_sup(l_cod_empresa,
	l_num_nf,
	l_ser_nf,
	l_ssr_nf,
	l_ies_especie_nf,
	l_cod_fornecedor,
	l_dat_emis_nf)  #809554
#--------------------------------------------------#
	define l_cod_empresa                        like nf_sup.cod_empresa,
	l_num_nf                             like nf_sup.num_nf,
	l_ser_nf                             like nf_sup.ser_nf,
	l_ssr_nf                             like nf_sup.ssr_nf,
	l_ies_especie_nf                     like nf_sup.ies_especie_nf,
	l_cod_fornecedor                     like nf_sup.cod_fornecedor,
	l_dat_emis_nf                        like nf_sup.dat_emis_nf  #809554

	whenever error continue
	select cod_empresa
	from h_nf_sup
	where cod_empresa    = l_cod_empresa
	and num_nf         = l_num_nf
	and ser_nf         = l_ser_nf
	and ssr_nf         = l_ssr_nf
	#and ies_especie_nf = l_ies_especie_nf #a56550
	and cod_fornecedor = l_cod_fornecedor
	and dat_emis_nf    = l_dat_emis_nf    #809554
	whenever error stop
	if sqlca.sqlcode <> 0 and
		sqlca.sqlcode <> -284 then #a56550
		if sqlca.sqlcode <> 100 then
			call log003_err_sql('leitura','nf_sup')
		end if
		return false
	end if

return true
end function

#------------------------------------------------------------#
function sup3760_existe_cap_h_ad_mestre(l_empresa,
	l_nota_fiscal,
	l_fornecedor,
	l_serie_nota_fiscal,
	l_subserie_nf)
#------------------------------------------------------------#
	define l_empresa                           like cap_h_ad_mestre.empresa,
	l_nota_fiscal                       like cap_h_ad_mestre.nota_fiscal,
	l_fornecedor                        like cap_h_ad_mestre.fornecedor,
	l_serie_nota_fiscal                 like cap_h_ad_mestre.serie_nota_fiscal,
	l_subserie_nf                       like cap_h_ad_mestre.subserie_nf,
	l_sserie_ad                         like cap_h_ad_mestre.subserie_nf,
	l_status                            smallint

	if find4glfunction('fin80151_verifica_se_tabela_existe') then #roberta
		if fin80151_verifica_se_tabela_existe() then
			call fin80151_busca_nf_cap_h_ad_mestre_compl(l_empresa,
			l_fornecedor,
			l_nota_fiscal,
			l_serie_nota_fiscal,
			l_serie_nota_fiscal,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.dat_emis_nf)
			returning l_status

			let l_sserie_ad = fin80151_get_cap_h_ad_mestre_compl_subser_nf_apropriacao_desp()
			if l_sserie_ad is not null and l_status = true then
				whenever error continue
				select empresa
				from cap_h_ad_mestre
				where empresa            = l_empresa
				and nota_fiscal        = l_nota_fiscal
				and fornecedor         = l_fornecedor
				and serie_nota_fiscal  = l_serie_nota_fiscal
				and subserie_nf        = l_sserie_ad
				whenever error stop
			end if
		else
			whenever error continue
			select empresa
			from cap_h_ad_mestre
			where empresa            = l_empresa
			and nota_fiscal        = l_nota_fiscal
			and fornecedor         = l_fornecedor
			and serie_nota_fiscal  = l_serie_nota_fiscal
			and subserie_nf        = l_subserie_nf
			whenever error stop
		end if
	else
		whenever error continue
		select empresa
		from cap_h_ad_mestre
		where empresa            = l_empresa
		and nota_fiscal        = l_nota_fiscal
		and fornecedor         = l_fornecedor
		and serie_nota_fiscal  = l_serie_nota_fiscal
		and subserie_nf        = l_subserie_nf
		whenever error stop
	end if

	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql('leitura','cap_h_ad_mestre')
		end if
		return false
	end if

return true
end function

#---------------------------------------------------#
function sup3760_existe_h_frete_sup(l_cod_empresa,
	l_cod_transpor,
	l_num_conhec,
	l_ser_conhec,
	l_ssr_conhec)
#---------------------------------------------------#
	define l_cod_empresa                 like h_frete_sup.cod_empresa,
	l_cod_transpor                like h_frete_sup.cod_transpor,
	l_num_conhec                  like h_frete_sup.num_conhec,
	l_ser_conhec                  like h_frete_sup.ser_conhec,
	l_ssr_conhec                  like h_frete_sup.ssr_conhec

	whenever error continue
	select cod_empresa
	from h_frete_sup
	where cod_empresa  = l_cod_empresa
	and cod_transpor = l_cod_transpor
	and num_conhec   = l_num_conhec
	and ser_conhec   = l_ser_conhec
	and ssr_conhec   = l_ssr_conhec
	whenever error stop
	#a95984
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql('leitura','h_frete_sup')
		end if
		return ''
	else
		if sqlca.sqlcode = 0 and p_dados_tela.ies_especie_nf = 'con' then
			return ' em hist�rico.'
		end if
	end if

end function
#---fim----os 414316 #

#--------------------------------------#
function sup3760_insere_nfe_sup_compl()
#--------------------------------------#

	define lr_nfe_sup_compl record like nfe_sup_compl.*

	initialize lr_nfe_sup_compl.* to null

	let lr_nfe_sup_compl.cod_empresa      = p_cod_empresa
	let lr_nfe_sup_compl.num_aviso_rec    = p_dados_tela.num_aviso_rec
	let lr_nfe_sup_compl.den_embal        = " "
	let lr_nfe_sup_compl.qtd_volumes      = 0
	let lr_nfe_sup_compl.peso_bruto       = 0
	let lr_nfe_sup_compl.peso_liquido     = 0
	let lr_nfe_sup_compl.ies_proc_nfs     = "2"
	let lr_nfe_sup_compl.num_proc_imp_nfs = null
	let lr_nfe_sup_compl.texto_obs1       = 0
	let lr_nfe_sup_compl.texto_obs2       = 0
	let lr_nfe_sup_compl.texto_compl1     = " "
	let lr_nfe_sup_compl.texto_compl2     = " "
	let lr_nfe_sup_compl.ies_nfe_emit     = "n"

	whenever error continue
	select cod_empresa
	from nfe_sup_compl
	where cod_empresa   = lr_nfe_sup_compl.cod_empresa
	and num_aviso_rec = lr_nfe_sup_compl.num_aviso_rec
	whenever error stop

	if sqlca.sqlcode = 0 then
		return true
	end if

	whenever error continue
	select cod_empresa
	from nfe_sup_compl
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode = 0 then
		whenever error continue
		update nfe_sup_compl set ies_proc_nfs = '2'
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","nfe_sup_compl")
		end if
	else
		whenever error continue
		insert into nfe_sup_compl (cod_empresa,  num_aviso_rec,    den_embal,
		qtd_volumes,  peso_bruto,       peso_liquido,
		ies_proc_nfs, num_proc_imp_nfs, texto_obs1,
		texto_obs2,   texto_compl1,     texto_compl2,
		ies_nfe_emit)
		values (lr_nfe_sup_compl.cod_empresa,  lr_nfe_sup_compl.num_aviso_rec,    lr_nfe_sup_compl.den_embal,
		lr_nfe_sup_compl.qtd_volumes,  lr_nfe_sup_compl.peso_bruto,       lr_nfe_sup_compl.peso_liquido,
		lr_nfe_sup_compl.ies_proc_nfs, lr_nfe_sup_compl.num_proc_imp_nfs, lr_nfe_sup_compl.texto_obs1,
		lr_nfe_sup_compl.texto_obs2,   lr_nfe_sup_compl.texto_compl1,     lr_nfe_sup_compl.texto_compl2,
		lr_nfe_sup_compl.ies_nfe_emit)
		whenever error stop

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("insert","nfe_sup_compl")
			return false
		end if
	end if

return true
end function

#--------------------------------------------#
function sup3760_busca_proc_imp_nfe_nfp_nfm()
#--------------------------------------------#

	whenever error continue
	select processo_imp.*
	into p_processo_imp.*
	from processo_imp
	where processo_imp.cod_empresa      = p_cod_empresa
	and processo_imp.num_processo     = p_dados_tela.num_nf
	and processo_imp.cod_exportador   = p_dados_tela.cod_fornecedor
	and processo_imp.ies_versao_atual = "s"
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true
	else
		if sqlca.sqlcode <> notfound then
			call log003_err_sql("leitura","processo_imp")
		end if
		return false
	end if

end function

#------------------------------------#
function sup3760_busca_proc_imp_nfr()
#------------------------------------#

	whenever error continue
	select processo_imp.*
	into p_processo_imp.*
	from processo_imp
	where processo_imp.cod_empresa       = p_cod_empresa
	and processo_imp.num_processo      = p_dados_tela.num_nf
	and processo_imp.cod_consignatario = p_dados_tela.cod_fornecedor
	and processo_imp.ies_versao_atual  = "s"
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true
	else
		if sqlca.sqlcode <> notfound then
			call log003_err_sql("leitura","processo_imp")
		end if
		return false
	end if

end function

#-----------------------------------------------------#
function sup3760_processo_importacao(l_ies_especie_nf)
#-----------------------------------------------------#
	define l_ies_especie_nf     char(10),
	l_busca_situacao     smallint,
	l_existe_proc        smallint,
	l_msg                char(80)

	define l_ies_situa_import like nf_sup.ies_situa_import

	let m_finalidade = 'n' ### tewxk6

	if p_entrou_pedido = "n" then

		if l_ies_especie_nf = "nfe/nfp" or
			l_ies_especie_nf = "nfm" then
			call sup3760_busca_proc_imp_nfe_nfp_nfm() returning l_existe_proc

		else
			if l_ies_especie_nf = "nfr" then
				call sup3760_busca_proc_imp_nfr() returning l_existe_proc
			end if
		end if

		if l_existe_proc then

			let l_busca_situacao = false

			if l_ies_especie_nf = "nfm" then
				if m_ies_utiliz_provisao = "n" or
					(m_ies_utiliz_provisao = "s" and
					p_processo_imp.num_processo < m_inicio_provisao) then
					let l_busca_situacao = true
				end if
			else
				if (m_ies_utiliz_provisao = "n" or
					(m_ies_utiliz_provisao = "s" and
					p_processo_imp.num_processo < m_inicio_provisao) or
					(m_ies_utiliz_provisao = "s" and m_utiliz_nfm_import = "s" and
					p_processo_imp.num_processo >= m_inicio_provisao)) then
					let l_busca_situacao = true
				end if
			end if

			if l_busca_situacao then
				if p_processo_imp.num_aviso_rec is not null then
					whenever error continue
					initialize l_ies_situa_import to null
					select nf_sup.ies_situa_import
					into l_ies_situa_import
					from nf_sup
					where nf_sup.cod_empresa   = p_cod_empresa
					and nf_sup.num_aviso_rec = p_processo_imp.num_aviso_rec
					whenever error stop
					if sqlca.sqlcode <> 0 and
						sqlca.sqlcode <> notfound then
						call log003_err_sql("leitura","nf_sup")
					end if

					if l_ies_situa_import is not null and
						l_ies_situa_import = "e" then
						if p_dados_tela.ies_especie_nf = "nfp" then
							let l_msg = "processo de importa��o j� encerrado.\n",
							"continuar a inclus�o desta nota fiscal,\n",
							"sendo que na mesma n�o constar� despesas complementares\n",
							"(despesas rateadas pelo imp0029)?"
							if log0040_confirm(5,5,l_msg) then
								let m_nfp_incl_apos_encerr = true
							else
								return false
							end if
						else
							error " processo de importacao ja encerrado "
							return false
						end if
					end if
				end if
			end if

			let l_msg = "existe processo de importacao para esta ", l_ies_especie_nf clipped, ". considerar dados?"
			if log0040_confirm(21,23,l_msg) then
				if p_processo_imp.ies_pgto_impostos is null or
					p_processo_imp.ies_pgto_impostos = " " or
					p_processo_imp.ies_pgto_impostos = "n" then
					call log0030_mensagem("nao possui numero da di ou pagamento impostos para o processo de importacao","exclamation")
				else
					if p_processo_imp.num_aviso_rec is not null and
						p_processo_imp.num_aviso_rec <> 0 then
						let l_msg = "este processo de importacao ja tem ar: ", p_processo_imp.num_aviso_rec, " confirma recebimento? "
						if log0040_confirm(21,23, l_msg) then
							case l_ies_especie_nf
							when "nfe/nfp" let p_nfe_import = true
							when "nfm"     let p_nfm_import = true
							when "nfr"     let m_nfr_import = true
							let p_nfe_import = true
						end case
					end if
				else
					case l_ies_especie_nf
					when "nfe/nfp" let p_nfe_import = true
					when "nfm"     let p_nfm_import = true
					when "nfr"     let m_nfr_import = true
					let p_nfe_import = true
				end case
			end if
			### tewxk6 - busca finalidade do processo de importa��o (se for courier o ipi ser� zerado,
			###          mesmo se o item ou ordem de compra possuir incidencia).
			if (p_nfe_import = true or
				p_nfm_import = true or
				m_nfr_import = true) then
				let m_finalidade = 'n'
				declare cq_finalidade cursor for
				select obs_evento[22], num_sequencia
				from mov_even
				where cod_empresa  = p_processo_imp.cod_empresa
				and num_processo = p_processo_imp.num_processo
				and cod_evento = 40
				order by num_sequencia desc

				whenever error continue
				open cq_finalidade
				fetch cq_finalidade into m_finalidade
				if m_finalidade is null then
					let m_finalidade = 'n'
				end if
				close cq_finalidade
				whenever error stop
			else
				let m_finalidade = 'n'
			end if
			### fim tewxk6
		end if
	end if
end if
end if

### tewxk6 - guarda, na sup_par_ar a finalidade e o numero do processo de importa��o
whenever error continue
select aviso_recebto
from sup_par_ar
where empresa = p_cod_empresa
and aviso_recebto = p_dados_tela.num_aviso_rec
and seq_aviso_recebto = 0
and parametro = "finalidade_import"
whenever error stop
if sqlca.sqlcode = 0 then
	whenever error continue
	update sup_par_ar set par_ind_especial = m_finalidade,
	parametro_val = m_num_processo
	where empresa = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = 0
	whenever error stop
else
	if sqlca.sqlcode = notfound then
		if sup3760_grava_sup_par_ar(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"finalidade_import",
			m_finalidade,
			" ",
			m_num_processo,
			" ") = false then
			return false
		end if
	else
		call log003_err_sql("leitura","sup_par_ar")
		return false
	end if
end if
### fim tewxk6

if p_nfm_import = true then
	call sup3760_busca_mod_embar_sem_frete()
returning p_dados_tela.cod_mod_embar, p_formonly.tex_tip_frete
	display by name p_dados_tela.cod_mod_embar, p_formonly.tex_tip_frete
end if

return true

end function

#--------------------------------------------------------------------#
function sup3760_nota_integrada_gecex(l_cod_empresa, l_num_aviso_rec)
#--------------------------------------------------------------------#
	define l_cod_empresa   like empresa.cod_empresa,
	l_num_aviso_rec like aviso_rec.num_aviso_rec

	whenever error continue
	select empresa
	from sup_par_ar
	where empresa           = l_cod_empresa
	and aviso_recebto     = l_num_aviso_rec
	and seq_aviso_recebto = 0
	and parametro         = 'nfe_integrada_gecex'
	and par_ind_especial  = 's'
	whenever error stop

	if sqlca.sqlcode = 0
		or sqlca.sqlcode = -284 then
		return true
	end if

return false
end function

#-------------------------------------------------------------#
function sup3760_fornecedor_processo_imp(l_cod_fornecedor_nf)
#-------------------------------------------------------------#
	define l_num_processo         like aviso_rec_proc_imp.num_processo,
	l_cod_fornecedor_proc  like nf_sup.cod_fornecedor,
	l_cod_fornecedor_nf    like nf_sup.cod_fornecedor

	let l_num_processo = sup3760_busca_numero_processo_importacao()

	let l_cod_fornecedor_proc = sup3760_leitura_processo_imp(l_num_processo,"forn")
	if l_cod_fornecedor_proc is null or l_cod_fornecedor_proc = " " then
		let l_cod_fornecedor_proc = l_cod_fornecedor_nf
	end if

return l_cod_fornecedor_proc

end function

#---------------------------------------------------#
function sup3760_busca_numero_processo_importacao()
#---------------------------------------------------#
	define  l_num_processo    like aviso_rec_proc_imp.num_processo

	whenever error continue
	initialize l_num_processo to null
	select unique(num_processo)
	into l_num_processo
	from aviso_rec_proc_imp
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("leitura","aviso_rec_proc_imp")
	end if

return l_num_processo
end function

#-----------------------------------------------------#
function sup3760_leitura_processo_imp(l_num_processo,
	l_tipo_reg)
#-----------------------------------------------------#
	define l_num_processo      like processo_imp.num_processo,
	l_tipo_reg          char(04),
	l_cod_fornecedor    like processo_imp.cod_exportador,
	l_num_aviso_rec     like processo_imp.num_aviso_rec

	initialize l_cod_fornecedor, l_num_aviso_rec to null

	if l_num_processo is not null and l_num_processo <> -1 then
		whenever error continue
		select cod_exportador, num_aviso_rec
		into l_cod_fornecedor, l_num_aviso_rec
		from processo_imp
		where cod_empresa      = p_cod_empresa
		and num_processo     = l_num_processo
		and ies_versao_atual = "s"
		whenever error stop
	end if

	if l_tipo_reg = "forn" then
		return l_cod_fornecedor
	end if

return l_num_aviso_rec

end function

#--------------------------------------------#
function sup3760_nfr_consignatario(l_funcao)
#--------------------------------------------#
	define l_funcao                     char(11),
	l_num_processo               like processo_imp.num_processo

	if p_dados_tela.ies_especie_nf = "nfr" and
		m_proc_imp_rec_nfr_consig = "s" then
		if l_funcao = "inclusao" then
			return true
		else
			let l_num_processo = sup3760_busca_numero_processo_importacao()
			if l_num_processo > 0 then
				return true
			end if
		end if
	end if

return false
end function

#---------------------------------------#
function sup3760_consiste_nf_transito()
#---------------------------------------#
	define l_nfs_eletronica    smallint

	let l_nfs_eletronica = false
	whenever error continue
	select sup_par_ar.parametro_val
	from sup_par_ar
	where sup_par_ar.empresa           = p_cod_empresa
	and sup_par_ar.aviso_recebto     = p_nf_sup.num_aviso_rec
	and sup_par_ar.seq_aviso_recebto = 0
	and sup_par_ar.parametro         = "num_nf_eletronica"
	whenever error stop
	if sqlca.sqlcode = 0 then
		let l_nfs_eletronica = true
	end if

	if m_trata_nf_em_transito = "s" or l_nfs_eletronica then
		return true
	end if
return false
end function

#-------------------------------#
function sup3760_altera_oc_pc()
#-------------------------------#

	define l_ind         smallint,
	l_cod_item    like ordem_sup.cod_item,
	l_den_item    like aviso_rec.den_item, #ch-tfosly
	l_cod_uni_med like ordem_sup.cod_unid_med

	whenever error continue
	delete from ar_ped
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("delete","ar_ped")
		return false
	end if

	call sup376_busca_infor_pedidos()

	for l_ind = 1 to arraylength(p_array_pedidos)

		if p_array_pedidos[l_ind].num_pedido is not null and
			p_array_pedidos[l_ind].num_pedido <> " "      and
			p_array_pedidos[l_ind].num_pedido <> 0 then

			let p_ind = l_ind

			if p_array_pedidos[l_ind].num_oc is null or
				p_array_pedidos[l_ind].num_oc = " "   or
				p_array_pedidos[l_ind].num_oc = 0 then
				let p_array_pedidos[l_ind].num_oc = p_array_compl[l_ind].num_oc
			end if

			initialize l_cod_item, l_den_item, l_cod_uni_med to null

			whenever error continue
			select item.cod_item, item.den_item, item.cod_unid_med
			into l_cod_item,    l_den_item,    l_cod_uni_med
			from item, ordem_sup
			where item.cod_empresa           = p_cod_empresa
			and ordem_sup.cod_empresa      = p_cod_empresa
			and ordem_sup.num_oc           = p_array_pedidos[l_ind].num_oc
			and ordem_sup.cod_item         = item.cod_item
			and ordem_sup.ies_versao_atual = 's'
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("select","ordem_sup")
				return false
			end if

			whenever error continue
			update aviso_rec set num_pedido      = p_array_pedidos[l_ind].num_pedido,
			num_oc          = p_array_pedidos[l_ind].num_oc,
			cod_item        = l_cod_item,
			den_item        = l_den_item,
			cod_unid_med_nf = l_cod_uni_med
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			and num_seq       = l_ind
			whenever error stop
			if sqlca.sqlcode <> 0 then
				return false
			end if

			whenever error continue
			select * into p_aviso_rec.*
			from aviso_rec
			where cod_empresa = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			and num_seq       = l_ind
			whenever error stop
			if sqlca.sqlcode = 0 then
				if sup376_possui_avf_insp_ar() then
					whenever error continue
					delete from avf_insp_ar
					where avf_insp_ar.empresa       = p_cod_empresa
					and avf_insp_ar.aviso_recebto = p_dados_tela.num_aviso_rec
					and avf_insp_ar.seq_aviso_recebto = l_ind
					whenever error stop
					if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
						call log003_err_sql('delete','avf_pl_insp_ar')
					end if

					whenever error continue
					delete from avf_pl_insp_ar
					where avf_pl_insp_ar.empresa       = p_cod_empresa
					and avf_pl_insp_ar.aviso_recebto = p_dados_tela.num_aviso_rec
					and avf_pl_insp_ar.seq_aviso_recebto = l_ind
					whenever error stop
					if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
						call log003_err_sql('delete','avf_pl_insp_ar')
					end if
				end if
				call sup376_verifica_avf_insp_ar()

				call sup386_popup_ordens_reservada(p_cod_empresa,
				p_array[l_ind].cod_item,
				p_array_compl[l_ind].num_pedido,
				p_array_compl[l_ind].num_oc,
				p_array_compl[l_ind].num_prog_entrega,
				p_aviso_rec.qtd_declarad_nf ,
				"n" ,
				'inclusao',
				p_dados_tela.num_aviso_rec,
				p_array[l_ind].seq,
				l_ind)
				returning p_soma_reserva2, p_ies_reservou, p_ord_forn

				call sup376_inclui_ar_ped()
			end if
		else
			exit for
		end if

	end for

return true
end function

#--------------------------------#
function sup3760_modifica_oc_pc()
#--------------------------------#
	define l_funcao     char(15)

	let p_pedidos_p1  = p_pedidos[1,500]
	let p_pedidos_p2  = p_pedidos[501,1000]
	let p_pedidos_p3  = p_pedidos[1001,1200]

	#--# tdjy25 #--#
	let p_pedidos_p4 = p_pedidos[1201,1700]
	let p_pedidos_p5 = p_pedidos[1701,2200]
	let p_pedidos_p6 = p_pedidos[2201,2400]

	let p_pedidos_p7  = p_pedidos[2401,2900]
	let p_pedidos_p8  = p_pedidos[2901,3400]
	let p_pedidos_p9  = p_pedidos[3401,3600]
	let p_pedidos_p10 = p_pedidos[3601,4100]
	let p_pedidos_p11 = p_pedidos[4101,4600]
	let p_pedidos_p12 = p_pedidos[4601,4800]
	#--# tdjy25 #--#

	let p_ordens_p1   = p_ordens[1,500]
	let p_ordens_p2   = p_ordens[501,1000]
	let p_ordens_p3   = p_ordens[1001,1500]
	let p_ordens_p4   = p_ordens[1501,1800]

	#--# tdjy25 #--#
	let p_ordens_p5 = p_ordens[1801,2300]
	let p_ordens_p6 = p_ordens[2301,2800]
	let p_ordens_p7 = p_ordens[2801,3300]
	let p_ordens_p8 = p_ordens[3301,3600]

	let p_ordens_p9  = p_ordens[3601,4100]
	let p_ordens_p10 = p_ordens[4101,4600]
	let p_ordens_p11 = p_ordens[4601,5100]
	let p_ordens_p12 = p_ordens[5101,5400]
	let p_ordens_p13 = p_ordens[5401,5900]
	let p_ordens_p14 = p_ordens[5901,6400]
	let p_ordens_p15 = p_ordens[6401,6900]
	let p_ordens_p16 = p_ordens[6901,7200]
	#--# tdjy25 #--#

	let p_prog_ordem1 = p_prog_ordem[1,300]
	let p_prog_ordem2 = p_prog_ordem[301,600]

	#--# tdjy25 #--#
	let p_prog_ordem3 = p_prog_ordem[601,900]
	let p_prog_ordem4 = p_prog_ordem[901,1200]

	let p_prog_ordem5 = p_prog_ordem[1201,1500]
	let p_prog_ordem6 = p_prog_ordem[1501,1800]
	let p_prog_ordem7 = p_prog_ordem[1801,2100]
	let p_prog_ordem8 = p_prog_ordem[2101,2400]
	#--# tdjy25 #--#

	initialize p_array_volta, p_array_ped_aux to null

	call sup3760_grava_parametro_alteracao()

	let l_funcao = ""

	call sup385_entrada_pedidos(p_cod_empresa, p_dados_tela.cod_fornecedor, p_pedidos_p1,
	p_pedidos_p2,  p_pedidos_p3, p_ordens_p1,   p_ordens_p2,
	p_ordens_p3,   p_ordens_p4,  p_prog_ordem1, p_prog_ordem2,
	p_retorno_3760, p_fornec_incl_item, p_dados_tela.num_aviso_rec, l_funcao)
returning p_pedidos_p1,  p_pedidos_p2,  p_pedidos_p3,  p_ordens_p1,
	p_ordens_p2,   p_ordens_p3,   p_ordens_p4,   p_prog_ordem1,
	p_prog_ordem2, p_retorno_3760, p_qtd_entreg1, p_qtd_entreg2,
	p_qtd_entreg3, p_qtd_entreg4, p_qtd_entreg5, p_qtd_entreg6

	#--# tdjy25 #--#
	let p_pedidos_p4   = log_getvar("pedidos_p4")
	let p_pedidos_p5   = log_getvar("pedidos_p5")
	let p_pedidos_p6   = log_getvar("pedidos_p6")

	let p_pedidos_p7   = log_getvar("pedidos_p7")
	let p_pedidos_p8   = log_getvar("pedidos_p8")
	let p_pedidos_p9   = log_getvar("pedidos_p9")
	let p_pedidos_p10  = log_getvar("pedidos_p10")
	let p_pedidos_p11  = log_getvar("pedidos_p11")
	let p_pedidos_p12  = log_getvar("pedidos_p12")

	let p_ordens_p5    = log_getvar("ordens_p5")
	let p_ordens_p6    = log_getvar("ordens_p6")
	let p_ordens_p7    = log_getvar("ordens_p7")
	let p_ordens_p8    = log_getvar("ordens_p8")

	let p_ordens_p9     = log_getvar("ordens_p9")
	let p_ordens_p10    = log_getvar("ordens_p10")
	let p_ordens_p11    = log_getvar("ordens_p11")
	let p_ordens_p12    = log_getvar("ordens_p12")
	let p_ordens_p13    = log_getvar("ordens_p13")
	let p_ordens_p14    = log_getvar("ordens_p14")
	let p_ordens_p15    = log_getvar("ordens_p15")
	let p_ordens_p16    = log_getvar("ordens_p16")

	let p_prog_ordem3  = log_getvar("prog_ordem3")
	let p_prog_ordem4  = log_getvar("prog_ordem4")

	let p_prog_ordem5  = log_getvar("prog_ordem5")
	let p_prog_ordem6  = log_getvar("prog_ordem6")
	let p_prog_ordem7  = log_getvar("prog_ordem7")
	let p_prog_ordem8  = log_getvar("prog_ordem8")

	let p_qtd_entreg7  = log_getvar("qtd_entreg7")
	let p_qtd_entreg8  = log_getvar("qtd_entreg8")
	let p_qtd_entreg9  = log_getvar("qtd_entreg9")
	let p_qtd_entreg10 = log_getvar("qtd_entreg10")
	let p_qtd_entreg11 = log_getvar("qtd_entreg11")
	let p_qtd_entreg12 = log_getvar("qtd_entreg12")

	let p_qtd_entreg13 = log_getvar("qtd_entreg13")
	let p_qtd_entreg14 = log_getvar("qtd_entreg14")
	let p_qtd_entreg15 = log_getvar("qtd_entreg15")
	let p_qtd_entreg16 = log_getvar("qtd_entreg16")
	let p_qtd_entreg17 = log_getvar("qtd_entreg17")
	let p_qtd_entreg18 = log_getvar("qtd_entreg18")
	let p_qtd_entreg19 = log_getvar("qtd_entreg19")
	let p_qtd_entreg20 = log_getvar("qtd_entreg20")
	let p_qtd_entreg21 = log_getvar("qtd_entreg21")
	let p_qtd_entreg22 = log_getvar("qtd_entreg22")
	let p_qtd_entreg23 = log_getvar("qtd_entreg23")
	let p_qtd_entreg24 = log_getvar("qtd_entreg24")
	#--# tdjy25 #--#

	if p_retorno_3760 <> false then

		whenever error continue
		call log085_transacao("begin")
		whenever error stop

		if sqlca.sqlcode <> 0 then
		end if

		if sup3760_altera_oc_pc() then
			whenever error continue
			call log085_transacao("commit")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log085_transacao("rollback") #os596059
			else
				message "modifica��o efetuada com sucesso." attribute(reverse)
			end if
		else
			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			if sqlca.sqlcode <> 0 then
			end if

			error "modifica��o cancelada."
		end if
	else
		call log0030_mensagem("altera��o de oc/pc cancelada.","exclamation")
	end if

end function

#-------------------------------------------#
function sup3760_grava_parametro_alteracao()
#-------------------------------------------#

	whenever error continue
	select empresa
	from sup_par_ar
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = 0
	and parametro         = 'consiste_num_oc_pc'
	whenever error stop

	if sqlca.sqlcode = 100 then

		whenever error continue
		insert into sup_par_ar (empresa,            aviso_recebto,
		seq_aviso_recebto,  parametro,
		par_ind_especial,   parametro_texto,
		parametro_val,      parametro_dat)
		values (p_cod_empresa,      p_dados_tela.num_aviso_rec,
		0,                  'consiste_num_oc_pc',
		'',                 '',
		null,               null)
		whenever error stop

		if sqlca.sqlcode <> 0 then
			call log003_err_sql("insert","sup_par_ar")
		end if

	end if

end function

#--------------------------------------------------#
function sup3760_busca_especie_nf(l_cod_empresa,
	l_num_aviso_rec)
#--------------------------------------------------#
	define l_cod_empresa    like nf_sup.cod_empresa,
	l_num_aviso_rec  like nf_sup.num_aviso_rec,
	l_ies_especie_nf like nf_sup.ies_especie_nf,
	l_status         smallint,
	l_msg_erro       char(100)

	initialize l_ies_especie_nf to null

	call supm20_nf_sup_leitura_ar(l_cod_empresa,
	l_num_aviso_rec,
	false,
	true)
returning l_status, l_msg_erro

	if l_status then
		let l_ies_especie_nf = supm20_nf_sup_get_ies_especie_nf()
	end if

return l_ies_especie_nf

end function

#-------------------------------------------------------#
function sup3760_verifica_cfop_destino(l_cfop_origem)
#-------------------------------------------------------#
	define l_cfop_destino      like aviso_rec.cod_fiscal_item,
	l_cfop_origem       like aviso_rec.cod_fiscal_item,
	l_cfop              like aviso_rec.cod_fiscal_item

	if log0150_verifica_se_tabela_existe("sup_dpara_cfop") then
		whenever error continue
		select cfop_destino
		into l_cfop
		from sup_dpara_cfop
		where empresa     = p_cod_empresa
		and cfop_origem = l_cfop_origem
		whenever error stop

		if sqlca.sqlcode = 0 then
			case l_cfop_origem[1,1]
			when "5" let l_cfop_destino = "1",l_cfop[2,5]
			when "6" let l_cfop_destino = "2",l_cfop[2,5]
			when "7" let l_cfop_destino = "3",l_cfop[2,5]
		end case

		return true, l_cfop_destino
	end if
end if

return false, l_cfop_destino

end function

#------------------------------------------------------#
function sup3760_inclui_modifica_classif_nfc(l_funcao)
#------------------------------------------------------#
	define l_funcao         char(20),
	l_achou_tip      smallint, ### tevp32
	l_achou_uf       smallint,
	l_msg_erro       char(100),
	l_ies_tip_fornec like fornecedor.ies_tip_fornec, ### tevp32
	l_status         smallint, ### tevp32
	l_den_uni_feder  like uni_feder.den_uni_feder ### tevp32

	initialize l_achou_tip, l_achou_uf to null
	initialize l_den_uni_feder to null
	let l_ies_tip_fornec = '1'
	whenever error continue
	select ies_tip_fornec
	into l_ies_tip_fornec
	from fornecedor
	where cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_ies_tip_fornec = '1'
	end if

	initialize m_classif_nfc, m_uf_origem to null
	call log130_procura_caminho("sup3760c") returning comando3

	open window w_sup3760c at 10,10 with form comando3
	attribute(border, message line last, prompt line last, form line 1)

	initialize m_classif_nfc, m_uf_origem to null
	call supm72_sup_par_ar_set_null()
	call supm72_sup_par_ar_leitura(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	0,
	"classif_nfc",
	true,
	true) returning l_achou_tip

	if l_achou_tip then
		let m_classif_nfc = supm72_sup_par_ar_get_par_ind_especial()

		case m_classif_nfc
		when "1" display "complemento imposto" to den_classif_nfc
		when "2" display "complemento valor" to den_classif_nfc
		when "3" display "complemento pre�o" to den_classif_nfc  #tdueo2 op��o 3 complemento de pre�o
	end case

	display m_classif_nfc to classif_nfc
end if

call supm72_sup_par_ar_set_null()
call supm72_sup_par_ar_leitura(p_cod_empresa,
p_dados_tela.num_aviso_rec,
0,
"uf_origem",
true,
true) returning l_achou_uf

if l_achou_uf then
	let m_uf_origem = supm72_sup_par_ar_get_parametro_texto()
	call sup3760_verifica_uf(m_uf_origem) returning l_status, l_den_uni_feder
end if
display l_den_uni_feder to den_uni_feder

let int_flag = 0
input m_classif_nfc, m_uf_origem without defaults from classif_nfc, uf_origem  # os 540842->"without defaults" - tevp32(campo uf_origem)

before field classif_nfc
call sup3760_save_cur_field_name('classif_nfc')
after field classif_nfc
if m_classif_nfc is null or ### tevp32
	m_classif_nfc = " " then
	call log0030_mensagem("classifica��o da nota fiscal complementar n�o informada.","exclamation")
next field classif_nfc
end if

if m_classif_nfc is not null and
	m_classif_nfc <> "1" and
	m_classif_nfc <> "2" and
	m_classif_nfc <> "3" then #tdueo2
	call log0030_mensagem("classifica��o da nota fiscal complementar inv�lida.","exclamation")
next field classif_nfc
end if
case m_classif_nfc
when "1" display "complemento imposto" to den_classif_nfc
when "2" display "complemento valor" to den_classif_nfc
when "3" display "complemento pre�o" to den_classif_nfc #tdueo2
end case
call supm72_sup_par_ar_set_null()
call supm72_sup_par_ar_leitura(p_cod_empresa,
p_dados_tela.num_aviso_rec,
0,
"classif_nfc",
true,
true) returning l_achou_tip
if l_achou_tip then
	call supm72_sup_par_ar_set_par_ind_especial(m_classif_nfc)
	call supm72_sup_par_ar_set_parametro_dat(today)

	if not supt72_sup_par_ar_modifica(true,true) then
		return false
	end if

else
	call supm72_sup_par_ar_set_null()
	call supm72_sup_par_ar_set_empresa(p_cod_empresa)
	call supm72_sup_par_ar_set_aviso_recebto(p_dados_tela.num_aviso_rec)
	call supm72_sup_par_ar_set_seq_aviso_recebto(0)
	call supm72_sup_par_ar_set_parametro("classif_nfc")
	call supm72_sup_par_ar_set_par_ind_especial(m_classif_nfc)
	call supm72_sup_par_ar_set_parametro_dat(today)

	if not supt72_sup_par_ar_inclui(true,true) then
		return false
	end if
end if
### tevp32
### dmanentlgx-749 -
if m_classif_nfc = '3' then
	exit input
else
	if l_ies_tip_fornec <> '2' and l_ies_tip_fornec <> '5' then
		exit input
	end if
end if
before field uf_origem
call sup3760_save_cur_field_name('uf_origem')

after field uf_origem
if m_uf_origem is null or m_uf_origem = ' ' then
	call log0030_mensagem("unidade de federa��o origem transporte n�o informado.","exclamation")
next field uf_origem
end if

call supm72_sup_par_ar_set_null()
call supm72_sup_par_ar_leitura(p_cod_empresa,
p_dados_tela.num_aviso_rec,
0,
"uf_origem",
true,
true) returning l_achou_uf

initialize l_den_uni_feder to null
call sup3760_verifica_uf(m_uf_origem) returning l_status, l_den_uni_feder
if l_status = false then
	display l_den_uni_feder to den_uni_feder
	call log0030_mensagem("digite um uf v�lido. ","info")
next field uf_origem
else
	display l_den_uni_feder to den_uni_feder
end if

after input
if not int_flag then
	if m_classif_nfc is null or
		m_classif_nfc = " " then
		call log0030_mensagem("classifica��o da nota fiscal complementar n�o informada.","exclamation")
	next field classif_nfc
end if
call supm72_sup_par_ar_set_null()
call supm72_sup_par_ar_leitura(p_cod_empresa,
p_dados_tela.num_aviso_rec,
0,
"classif_nfc",
true,
true) returning l_achou_tip
if l_achou_tip then
	call supm72_sup_par_ar_set_par_ind_especial(m_classif_nfc)
	call supm72_sup_par_ar_set_parametro_dat(today)

	if not supt72_sup_par_ar_modifica(true,true) then
		return false
	end if

else
	call supm72_sup_par_ar_set_null()
	call supm72_sup_par_ar_set_empresa(p_cod_empresa)
	call supm72_sup_par_ar_set_aviso_recebto(p_dados_tela.num_aviso_rec)
	call supm72_sup_par_ar_set_seq_aviso_recebto(0)
	call supm72_sup_par_ar_set_parametro("classif_nfc")
	call supm72_sup_par_ar_set_par_ind_especial(m_classif_nfc)
	call supm72_sup_par_ar_set_parametro_dat(today)

	if not supt72_sup_par_ar_inclui(true,true) then
		return false
	end if
end if

if m_classif_nfc = '1' then
	if l_ies_tip_fornec = '2' or l_ies_tip_fornec = '5' then
		if m_uf_origem is null or
			m_uf_origem = " " then
			call log0030_mensagem("unidade de federa��o origem transporte n�o informado.","exclamation")
		next field uf_origem
	end if
end if
end if
end if

on key (control-z, f4)
call sup376_popup2(l_funcao)

end input

close window w_sup3760c
current window is w_sup37601

if int_flag then
	let int_flag = 0
return false
end if

### tevp32 - se for nfc de complemento de imposto e fornecedor for transportador, deve informar uf origem

call supm72_sup_par_ar_set_null()
call supm72_sup_par_ar_leitura(p_cod_empresa,
p_dados_tela.num_aviso_rec,
0,
"uf_origem",
true,
true) returning l_achou_uf

if (l_ies_tip_fornec = '2' or
	l_ies_tip_fornec = '5') then
	if m_classif_nfc = "1" or ### dmanentlgx-749
		m_classif_nfc = "2" then
		if l_achou_uf then
			call supm72_sup_par_ar_set_parametro_texto(m_uf_origem)
			call supm72_sup_par_ar_set_parametro_dat(today)
			if not supt72_sup_par_ar_modifica(true,true) then
				return false
			end if
		else
			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_set_empresa(p_cod_empresa)
			call supm72_sup_par_ar_set_aviso_recebto(p_dados_tela.num_aviso_rec)
			call supm72_sup_par_ar_set_seq_aviso_recebto(0)
			call supm72_sup_par_ar_set_parametro("uf_origem")
			call supm72_sup_par_ar_set_parametro_texto(m_uf_origem)
			call supm72_sup_par_ar_set_parametro_dat(today)
			if not supt72_sup_par_ar_inclui(true,true) then
				return false
			end if
		end if
	else
		if not supt72_sup_par_ar_exclui(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"uf_origem",
			true,
			false,
			true) then
			return false
		end if
	end if
else
	if l_achou_uf then
		if not supt72_sup_par_ar_exclui(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"uf_origem",
			true,
			false,
			true) then
			return false
		end if
	end if
end if

return true

end function

### tevp32
#--------------------------------------#
function sup3760_verifica_uf(l_estado)
#--------------------------------------#
	define l_estado        like fornecedor.cod_uni_feder,
	l_den_uni_feder like uni_feder.den_uni_feder

	initialize l_den_uni_feder to null

	whenever error continue
	select den_uni_feder
	into l_den_uni_feder
	from uni_feder
	where cod_uni_feder = l_estado
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true, l_den_uni_feder
	else
		return false, l_den_uni_feder
	end if

end function
### fim tevp32

#-----------------------------------------------------------------------------------------#
function sup3760_verifica_item_de_terc(l_num_nf, l_ser_nf, l_ssr_nf, l_cod_fornecedor,
	l_ies_especie_nf, l_num_sequencia)
#-----------------------------------------------------------------------------------------#
	define l_num_nf            like item_de_terc.num_nf,
	l_ser_nf            like item_de_terc.ser_nf,
	l_ssr_nf            like item_de_terc.ssr_nf,
	l_cod_fornecedor    like item_de_terc.cod_fornecedor,
	l_ies_especie_nf    like item_de_terc.ies_especie_nf,
	l_num_sequencia     like item_de_terc.num_sequencia

	whenever error continue
	select item_de_terc.num_nf
	from item_de_terc
	where item_de_terc.cod_empresa    = p_cod_empresa
	and item_de_terc.num_nf         = l_num_nf
	and item_de_terc.ser_nf         = l_ser_nf
	and item_de_terc.ssr_nf         = l_ssr_nf
	and item_de_terc.cod_fornecedor = l_cod_fornecedor
	and item_de_terc.ies_especie_nf = l_ies_especie_nf
	and item_de_terc.num_sequencia  = l_num_sequencia
	whenever error stop

	if sqlca.sqlcode = 0 then
		return true
	end if

return false

end function

#-------------------------------------------#
function sup3760_recalcula_impostos_nf_imp()
#-------------------------------------------#

	define l_val_ipi_d    like aviso_rec.val_ipi_decl_item,
	l_val_ipi_c    like aviso_rec.val_ipi_decl_item,
	l_val_icm_d    like aviso_rec.val_icms_item_d,
	l_val_icm_c    like aviso_rec.val_icms_item_d,
	l_val_desp     like aviso_rec.val_icms_desp_aces,
	l_val_contab   like aviso_rec.val_contabil_item,
	l_val_ipi_tot  like aviso_rec.val_icms_item_d,
	l_val_icm_tot  like aviso_rec.val_icms_item_d,
	l_val_nf_tot   like aviso_rec.val_icms_item_d,
	l_achou        char(01)

	whenever error continue
	declare cq_recalcula_imp cursor with hold for
	select val_ipi_decl_item, val_ipi_calc_item, val_contabil_item,
	val_icms_item_d, val_icms_item_c, val_icms_desp_aces
	from aviso_rec
	where cod_empresa   = p_aviso_rec.cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_recalcula_imp")
		return
	end if

	let l_val_ipi_tot = 0
	let l_val_icm_tot = 0
	let l_val_nf_tot  = 0

	let l_achou = "n"
	whenever error continue
	foreach cq_recalcula_imp into l_val_ipi_d, l_val_ipi_c, l_val_contab,
	l_val_icm_d, l_val_icm_c, l_val_desp
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_recalcula_imp")
		return
	end if
	let l_achou = "s"

	if l_val_ipi_d > 0 then
		let l_val_ipi_tot = l_val_ipi_tot + l_val_ipi_d
	else
		let l_val_ipi_tot = l_val_ipi_tot + l_val_ipi_c
	end if

	if l_val_icm_d > 0 then
		let l_val_icm_tot = l_val_icm_tot + l_val_desp + l_val_icm_d
	else
		let l_val_icm_tot = l_val_icm_tot + l_val_desp + l_val_icm_c
	end if

	let l_val_nf_tot = l_val_nf_tot + l_val_contab

end foreach
free cq_recalcula_imp

if l_achou = "s" then

	display l_val_ipi_tot, l_val_icm_tot,     l_val_nf_tot
	to val_ipi_nf,    val_tot_icms_nf_d, val_tot_nf_d

	whenever error continue
	update nf_sup
	set val_tot_nf_d      = l_val_nf_tot,
	val_tot_icms_nf_d = l_val_icm_tot,
	val_ipi_nf        = l_val_ipi_tot
	where cod_empresa   = p_aviso_rec.cod_empresa
	and num_aviso_rec = p_aviso_rec.num_aviso_rec
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("update","nf_sup")
		return
	end if

end if

end function

#-----------------------------------#
function sup3760_verifica_tip_frete()
#-----------------------------------#
	define l_ies_tip_frete like modo_embarque.ies_tip_frete

	initialize l_ies_tip_frete to null
	whenever error continue
	select modo_embarque.ies_tip_frete
	into l_ies_tip_frete
	from modo_embarque
	where modo_embarque.cod_mod_embar = p_dados_tela.cod_mod_embar
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","modo_embarque")
		return false
	end if

	if p_dados_tela.ies_especie_nf = "nfs" and
		(l_ies_tip_frete = "2" or l_ies_tip_frete = "4" or l_ies_tip_frete = "a") then
		call log0030_mensagem("nota fiscal de servi�o n�o possui frete.","exclamation")
		return false
	end if

return true

end function

#-----------------------------------#
function sup3760_assume_erros_nf()
#-----------------------------------#
	define l_num_proc_imp_nfs like nfe_sup_compl.num_proc_imp_nfs,
	l_num_nf           like nf_sup.num_nf,
	l_count            smallint

	define l_usr_aut_libr_erro smallint

	call sup376_busca_nf_sup(p_nf_sup.num_aviso_rec)

	initialize l_count to null
	whenever error continue
	select count(*)
	into l_count
	from nf_sup_erro
	where nf_sup_erro.empresa       = p_nf_sup.cod_empresa
	and nf_sup_erro.num_aviso_rec = p_nf_sup.num_aviso_rec
	and nf_sup_erro.ies_origem_erro <> "4"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","nf_sup_erro")
	end if

	if l_count is null then
		let l_count = 0
	end if

	if l_count = 0 then
		call log0030_mensagem(" n�o foram detectados erros na consist�ncia da nota fiscal. ","exclamation")
	else

		let l_usr_aut_libr_erro = false

		whenever error continue
		initialize l_count to null
		select count(*)
		into l_count
		from sup_resp_libr_erro
		where sup_resp_libr_erro.empresa = p_nf_sup.cod_empresa
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("leitura","sup_resp_libr_erro")
		end if

		if l_count is null or l_count = " " or l_count = 0 then
			let l_count = 0
			let l_usr_aut_libr_erro = true
		end if

		if l_count > 0 then
			whenever error continue
			select sup_resp_libr_erro.usuario
			from sup_resp_libr_erro
			where sup_resp_libr_erro.empresa = p_nf_sup.cod_empresa
			and sup_resp_libr_erro.usuario = p_user
			whenever error stop
			if sqlca.sqlcode = 0 then
				let l_usr_aut_libr_erro = true
			end if
		end if

		if l_usr_aut_libr_erro = true then

			call sup431_assumir_erros(p_nf_sup.cod_empresa, p_nf_sup.num_aviso_rec)

			call sup376_consulta_dados()

			if find4glfunction('obf3760_inclusao_obf_nf_eletr') then
				call obf3760_inclusao_obf_nf_eletr(p_nf_sup.cod_empresa,
				p_nf_sup.num_aviso_rec,
				p_nf_sup.ies_especie_nf,
				p_nf_sup.ies_nf_aguard_nfe,
				p_nf_sup.cod_operacao)
			end if

			if p_nf_sup.ies_nf_com_erro = "n" or
				p_nf_sup.nom_resp_aceite_er is not null then

				if p_nf_sup.ies_especie_nf = "nfd" and
					(p_nf_sup.ies_nf_aguard_nfe <> "6" and
					p_nf_sup.ies_nf_aguard_nfe <> "9") and
					g_ies_tex_inst = "s" then

					let p_val_imposto = p_nf_sup.val_ipi_nf +
					p_nf_sup.val_tot_icms_nf_d

					if sup6983_gera_arquivo(p_nf_sup.num_aviso_rec,
						p_nf_sup.num_nf,
						0,
						p_nf_sup.num_nf,
						p_nf_sup.dat_entrada_nf,
						p_val_imposto,
						p_nf_sup.val_tot_nf_d,
						"sup3760") then
					end if

				else

					whenever error continue
					select sup_par_ar.empresa
					from sup_par_ar
					where empresa           = p_nf_sup.cod_empresa
					and aviso_recebto     = p_nf_sup.num_aviso_rec
					and seq_aviso_recebto = "1"
					and parametro         = "interface_nf_sup6981"
					whenever error stop
					if sqlca.sqlcode = 0 then

						whenever error continue
						select num_proc_imp_nfs
						into l_num_proc_imp_nfs
						from nfe_sup_compl
						where cod_empresa   = p_nf_sup.cod_empresa
						and num_aviso_rec = p_nf_sup.num_aviso_rec
						whenever error stop
						if sqlca.sqlcode <> 0 then
							let l_num_nf = p_nf_sup.num_nf
						else
							if l_num_proc_imp_nfs <> " " and
								l_num_proc_imp_nfs is not null then
								let l_num_nf = l_num_proc_imp_nfs
							else
								let l_num_nf = p_nf_sup.num_nf
							end if
						end if

						if p_nf_sup.ies_especie_nf = "nfd"  and
							p_nf_sup.ies_nf_aguard_nfe = "6" and
							g_ies_tex_inst = "s" then

							let p_val_imposto = p_nf_sup.val_ipi_nf +
							p_nf_sup.val_tot_icms_nf_d

							if sup6983_gera_arquivo(p_nf_sup.num_aviso_rec,
								l_num_nf,0,l_num_nf,
								p_nf_sup.dat_entrada_nf,
								p_val_imposto,
								p_nf_sup.val_tot_nf_d,
								"sup3760") then
							end if

						end if

					end if

				end if

				call sup376_verifica_frete()
				call sup376_gera_movimento_estoque("normal","assumir")

			end if

			if l_usr_aut_libr_erro = true then
				if log_existe_epl('sup3760y_after_processa_assume_erros_nf') then
					call log_setvar('cod_empresa', p_cod_empresa)
					#epl codigo da empresa
					#epl tipo: aviso_rec.cod_empresa

					call log_setvar('num_aviso_rec', p_nf_sup.num_aviso_rec)
					#epl numero do ar
					#epl tipo: aviso_rec.num_aviso_rec

					call sup3760y_after_processa_assume_erros_nf()
				end if

				call sup1473_integra_nf_cap_livro_fiscal(p_nf_sup.num_nf,
				p_nf_sup.ser_nf,
				p_nf_sup.ssr_nf,
				"nota","", "", "",
				p_nf_sup.cod_empresa, "",
				p_nf_sup.cod_fornecedor,
				p_nf_sup.ies_especie_nf)

				if p_nf_sup.num_conhec <> 0 then
					call sup1473_integra_nf_cap_livro_fiscal("",
					"",
					"",
					"frete",p_nf_sup.num_conhec,p_nf_sup.ser_conhec,p_nf_sup.ssr_conhec,
					p_nf_sup.cod_empresa,p_nf_sup.cod_transpor,
					"",
					"")
				end if

				call sup376_anulacao_tms() #terbd0

				if not supr6_contabilizacao_por_documento(p_nf_sup.cod_empresa,
					p_nf_sup.num_nf,
					p_nf_sup.ser_nf,
					p_nf_sup.ssr_nf,
					p_nf_sup.ies_especie_nf,
					p_nf_sup.cod_fornecedor,
					p_nf_sup.dat_entrada_nf,
					p_nf_sup.num_aviso_rec,false) then
					call log0030_mensagem("ocorreram erros na contabiliza��o do documento.","exclamation")
				end if

				if m_num_prog_arg <> "sup0480x" and
					m_tipo_processo_arg <> 'assume_erros' then
					initialize p_msg to null
					let p_msg = " erros assumidos por:  ", p_nf_sup.nom_resp_aceite_er clipped
					call log0030_mensagem(p_msg,"info")
				end if

			end if

			if m_wms_instal = 's' and
				m_tipo_documento = 'n' and
				(p_nf_sup.ies_nf_com_erro = "n" or
				p_nf_sup.nom_resp_aceite_er is not null ) then
				if find4glfunction('wmsr173_gerencia_wms_remessa_fiscal') then
					call wmsr173_gerencia_wms_remessa_fiscal(p_nf_sup.cod_empresa,
					p_nf_sup.num_aviso_rec,
					'i','f',0)
				end if
			end if

		else
			call log0030_mensagem(" usu�rio n�o autorizado a assumir erros da nota fiscal. ","exclamation")
		end if

	end if

end function

#-------------------------------------#
function sup3760_botao_zoom(l_status,
	l_linha,
	l_coluna)
#-------------------------------------#
	define l_status     char(03),
	l_linha      smallint,
	l_coluna     smallint

	if l_status = 'on' then
		if g_ies_grafico then
			--# call fgl_dialog_setkeylabel('control-z','zoom')
		else
			display "( zoom )" at l_linha,l_coluna
		end if
	else
		if g_ies_grafico then
			--# call fgl_dialog_setkeylabel('control-z','')
		else
			display "--------" at l_linha,l_coluna
		end if
	end if

end function

#-----------------------------------------------------#
function sup3760_mostra_nf_transito(l_cod_fornecedor)
#-----------------------------------------------------#
	define l_cod_fornecedor  like fornecedor.cod_fornecedor,
	l_ind             smallint,
	l_arr_curr        smallint,
	l_continua        smallint

	define la_nf_transito    array[] of record
	dat_emis_nf like nf_sup.dat_emis_nf,
	num_nf      like nf_sup.num_nf,
	ser_nf      like nf_sup.ser_nf,
	ssr_nf      like nf_sup.ssr_nf
end record

define la_ies_especie_nf array[500] of like nf_sup.ies_especie_nf

initialize la_nf_transito, la_ies_especie_nf, l_ind to null

if  g_cod_forn_sup3850 is not null
	and g_cod_forn_sup3850 <> " " then
	let p_dados_tela.cod_fornecedor = l_cod_fornecedor
end if

if log_existe_epl("sup3760y_before_process_mostra_nf_transito1") then
	call log_setvar("fornecedor",l_cod_fornecedor)
	call sup3760y_before_process_mostra_nf_transito1()
	current window is w_sup37601
end if

let int_flag = false

whenever error continue
declare cq_nf_transito cursor for
select dat_emis_nf, num_nf, ser_nf, ssr_nf, ies_especie_nf
from nf_sup
where cod_empresa       = p_cod_empresa
and cod_fornecedor    = l_cod_fornecedor
and ies_nf_aguard_nfe = "7"
order by dat_emis_nf
whenever error stop
if sqlca.sqlcode <> 0 then
	if sqlca.sqlcode <> 100 then
		call log003_err_sql("declare","nf_sup")
	end if

return false
end if
let l_ind = 1

whenever error continue
foreach cq_nf_transito into la_nf_transito[l_ind].*, la_ies_especie_nf[l_ind]
if sqlca.sqlcode <> 0 then
	if sqlca.sqlcode <> 100 then
		call log003_err_sql("foreach cursor","cq_pocessar")
	end if

return false
end if

let l_continua = true
if log_existe_epl('sup3760y_after_process_cq_nf_transito') then
	call log_setvar('cod_empresa', p_cod_empresa)
	call log_setvar('cod_fornecedor', l_cod_fornecedor)
	call log_setvar('dat_emis_nf', la_nf_transito[l_ind].dat_emis_nf)
	call log_setvar('num_nf', la_nf_transito[l_ind].num_nf)
	call log_setvar('ser_nf', la_nf_transito[l_ind].ser_nf)
	call log_setvar('ssr_nf', la_nf_transito[l_ind].ssr_nf)
	call log_setvar('ies_especie_nf', la_ies_especie_nf[l_ind])
	call log_setvar('continua_processamento', l_continua)
	call log_setvar('l_ind', l_ind)

	call sup3760y_after_process_cq_nf_transito()

	let la_nf_transito[l_ind].dat_emis_nf = log_getvar('dat_emis_nf')
	let la_nf_transito[l_ind].num_nf      = log_getvar('num_nf')
	let la_nf_transito[l_ind].ser_nf      = log_getvar('ser_nf')
	let la_nf_transito[l_ind].ssr_nf      = log_getvar('ssr_nf')
	let la_ies_especie_nf[l_ind]          = log_getvar('ies_especie_nf')

	let l_continua = log_getvar('continua_processamento')
	let l_ind      = log_getvar('l_ind')
end if

if not l_continua then
	exit foreach
end if

let l_ind = l_ind + 1
if l_ind > 500 then
	exit foreach
end if
end foreach
free cq_nf_transito
whenever error stop

let l_ind = l_ind - 1
if l_ind > 0 then
	call log130_procura_caminho("sup3760i") returning comando3
	open window w_sup3760i at 7,20 with form comando3
	attribute(border, message line last, prompt line last, comment line last)

	call set_count(l_ind)
	display array la_nf_transito to sr_nf_transito.*

	let l_arr_curr = arr_curr()

	close window w_sup3760i
	current window is w_sup37601

	if int_flag = 0 then
		if sup3760_carrega_dados_nf_transito(la_nf_transito[l_arr_curr].*,la_ies_especie_nf[l_arr_curr],l_cod_fornecedor) then
			return true
		end if
	end if
end if

return false
end function

#------------------------------------------------------------#
function sup3760_carrega_dados_nf_transito(lr_nf_transito,
	l_ies_especie_nf,
	l_cod_fornecedor)
#------------------------------------------------------------#

	define lr_nf_transito   record
	dat_emis_nf like nf_sup.dat_emis_nf,
	num_nf      like nf_sup.num_nf,
	ser_nf      like nf_sup.ser_nf,
	ssr_nf      like nf_sup.ssr_nf
end record

define l_ies_especie_nf like nf_sup.ies_especie_nf,
l_cod_fornecedor like nf_sup.cod_fornecedor,
l_retorno        smallint

whenever error continue
select unique nf_sup.num_aviso_rec,
nf_sup.num_nf,
nf_sup.ser_nf,
nf_sup.ssr_nf,
nf_sup.ies_especie_nf,
nf_sup.ies_nf_aguard_nfe,
nf_sup.cod_operacao,
nf_sup.dat_emis_nf,
nf_sup.dat_entrada_nf,
nf_sup.cnd_pgto_nf,
nf_sup.cod_mod_embar,
aviso_rec_compl.cod_fiscal_compl
into p_dados_tela.num_aviso_rec,
p_dados_tela.num_nf,
p_dados_tela.ser_nf,
p_dados_tela.ssr_nf,
p_dados_tela.ies_especie_nf,
p_dados_tela.ies_nf_aguard_nfe,
p_dados_tela.cod_operacao,
p_dados_tela.dat_emis_nf,
p_dados_tela.dat_entrada_nf,
p_dados_tela.cnd_pgto_nf,
p_dados_tela.cod_mod_embar,
p_dados_tela.cod_fiscal_compl
from nf_sup, aviso_rec, aviso_rec_compl
where nf_sup.cod_empresa            = p_cod_empresa
and nf_sup.num_nf                 = lr_nf_transito.num_nf
and nf_sup.ser_nf                 = lr_nf_transito.ser_nf
and nf_sup.ssr_nf                 = lr_nf_transito.ssr_nf
and nf_sup.ies_especie_nf         = l_ies_especie_nf
and nf_sup.cod_fornecedor         = l_cod_fornecedor
and nf_sup.cod_empresa            = aviso_rec.cod_empresa
and nf_sup.num_aviso_rec          = aviso_rec.num_aviso_rec
and aviso_rec_compl.cod_empresa   = aviso_rec.cod_empresa
and aviso_rec_compl.num_aviso_rec = aviso_rec.num_aviso_rec
whenever error stop
if sqlca.sqlcode <> 0 then
	call log003_err_sql("select","nf_sup")
return false
end if

let m_nf_aguard_nfe_ant = p_dados_tela.ies_nf_aguard_nfe

let l_retorno = true
if log_existe_epl('sup3760y_before_process_exibe_dados_nf_transito') then
	call log_setvar('cod_empresa', p_cod_empresa)
	call log_setvar('cod_fornecedor', l_cod_fornecedor)
	call log_setvar('num_aviso_rec',p_dados_tela.num_aviso_rec)
	call log_setvar('cnd_pgto_nf', p_dados_tela.cnd_pgto_nf)
	call log_setvar('cod_mod_embar', p_dados_tela.cod_mod_embar)
	call log_setvar('retorno', l_retorno)

	call sup3760y_before_process_exibe_dados_nf_transito()

	let p_dados_tela.cnd_pgto_nf   = log_getvar("cnd_pgto_nf")
	let p_dados_tela.cod_mod_embar = log_getvar("cod_mod_embar")
	let l_retorno                  = log_getvar("retorno")
end if

if not l_retorno then
return false
end if

call sup3760_exibe_dados_nf_transito()

let g_modifica_nf_transito = true

if int_flag then
	clear form
return false
else
return true
end if

end function

#------------------------------------------#
function sup3760_exibe_dados_nf_transito()
#------------------------------------------#

	let p_dados_tela.cod_empresa = p_cod_empresa

	call sup376_verifica_impostos_informados()
returning p_dados_tela.ies_impostos

	if p_ies_cod_operac = "s" then
		initialize p_dados_tela.cod_operac_estoq to null

		whenever error continue
		select cod_operacao
		into p_dados_tela.cod_operac_estoq
		from aviso_rec_compl
		where aviso_rec_compl.cod_empresa   = p_cod_empresa
		and aviso_rec_compl.num_aviso_rec = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("select","aviso_rec_compl")
		end if
	end if

	display by name p_dados_tela.num_aviso_rec
	display by name p_dados_tela.num_nf
	display by name p_dados_tela.ser_nf
	display by name p_dados_tela.ssr_nf
	display by name p_dados_tela.ies_especie_nf
	display by name p_dados_tela.ies_nf_aguard_nfe
	display by name p_dados_tela.cod_operac_estoq
	display by name p_dados_tela.cod_operacao
	display by name p_dados_tela.dat_emis_nf
	display by name p_dados_tela.dat_entrada_nf
	display by name p_dados_tela.cnd_pgto_nf
	display by name p_dados_tela.cod_mod_embar
	display by name p_dados_tela.cod_fiscal_compl
	display by name p_dados_tela.ies_impostos

	call sup376_exibe_array()
end function

#-------------------------------------------#
function sup3760_busca_den_item(l_cod_item)
#-------------------------------------------#

	define l_cod_item like item.cod_item

	whenever error continue
	select den_item
	into m_den_item
	from item
	where cod_empresa = p_cod_empresa
	and cod_item    = l_cod_item
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","item")
		return false
	else
		return true
	end if

end function

#------------------------------------------------#
function sup3760_grava_ind_nfp_incl_apos_encerr()
#------------------------------------------------#

	whenever error continue
	insert into sup_par_ar (empresa,
	aviso_recebto,
	seq_aviso_recebto,
	parametro,
	par_ind_especial,
	parametro_texto,
	parametro_val,
	parametro_dat)
	values
	(p_dados_tela.cod_empresa,
	p_dados_tela.num_aviso_rec,
	0,
	"nfp_incl_apos_encerr",
	"s",
	null,
	null,
	today)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclus�o","sup_par_ar")
		return false
	else
		return true
	end if

end function

#--------------------------------------------------------------#
function sup3760_verifica_nfp_incl_apos_encerr(l_cod_empresa,
	l_num_aviso_rec)
#--------------------------------------------------------------#
	define l_cod_empresa    like sup_par_ar.empresa,
	l_num_aviso_rec  like sup_par_ar.aviso_recebto

	whenever error continue
	select sup_par_ar.empresa
	from sup_par_ar
	where sup_par_ar.empresa           = l_cod_empresa
	and sup_par_ar.aviso_recebto     = l_num_aviso_rec
	and sup_par_ar.seq_aviso_recebto = 0
	and sup_par_ar.parametro         = "nfp_incl_apos_encerr"
	whenever error stop
	if sqlca.sqlcode = 0 then
		return true
	else
		if sqlca.sqlcode <> notfound then
			call log003_err_sql("leitura","sup_par_ar")
		end if
		return false
	end if

end function

#--------------------------------------#
function sup3760_ver_nota_duplicada()
#--------------------------------------#
	define l_cod_empresa_aux                like nf_sup.cod_empresa,
	l_msg                            char(60),
	l_num_cgc                        like fornecedor.num_cgc_cpf,
	l_status                         smallint,
	l_permite                        smallint,
	l_permite_ent_mesma_nfe_emp_dif  char(01)

	let l_permite = false

	if find4glfunction('fin80153_processa_parametro_financeiro_11') then #roberta
		call fin80153_inicializa_variaveis()
		call fin80153_processa_parametro_financeiro_11()
		let l_permite = fin80153_permite_nf_c_msm_num_ser_ssr()
	end if

	let l_permite_ent_mesma_nfe_emp_dif = m_permite_ent_mesma_nfe_emp_dif
	if p_dados_tela.ies_especie_nf <> 'nfe' then # os 554725 se n�o for nfe n�o permite incluir nota fiscal duplicada em empresas diferentes, mesmo que o par�metro esteja setado com 's'.
		let l_permite_ent_mesma_nfe_emp_dif = 'n'
	end if

	call sup0812_verifica_nota_transferencia(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	p_dados_tela.num_nf,
	p_dados_tela.ser_nf,
	p_dados_tela.ssr_nf,
	p_dados_tela.cod_fornecedor,
	p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl) returning l_status

	if l_status then #se � nota de transferencia
		if m_permite_transf_duplicada_emp = "n" then
			if l_permite = false then #roberta
				whenever error continue
				declare cq_empresa cursor for
				select unique nf_sup.cod_empresa
				from nf_sup
				where nf_sup.cod_empresa     <> p_cod_empresa
				and nf_sup.num_nf          = p_dados_tela.num_nf
				and nf_sup.ser_nf          = p_dados_tela.ser_nf
				and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
				and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
				whenever error stop
			else
				whenever error continue
				declare cq_empresa cursor for
				select unique nf_sup.cod_empresa
				from nf_sup
				where nf_sup.cod_empresa     <> p_cod_empresa
				and nf_sup.num_nf          = p_dados_tela.num_nf
				and nf_sup.ies_especie_nf  = p_dados_tela.ies_especie_nf
				and nf_sup.ser_nf          = p_dados_tela.ser_nf
				and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
				and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
				whenever error stop
			end if
			if sqlca.sqlcode  = 0 then
				whenever error continue
				foreach cq_empresa into l_cod_empresa_aux
				whenever error stop
				if sqlca.sqlcode = 0 then
					let l_msg = "nota fiscal j� cadastrada na empresa ",l_cod_empresa_aux
					call log0030_mensagem(l_msg, "info")
					return true
				end if
			end foreach
		end if

		free cq_empresa
	end if
else
	if p_dados_tela.ies_especie_nf = 'nfe' then
		if l_permite_ent_mesma_nfe_emp_dif = "n" then #600670
			if l_permite = false then #roberta
				whenever error continue
				declare cq_empresa1 cursor for
				select unique nf_sup.cod_empresa
				from nf_sup
				where nf_sup.cod_empresa     <> p_cod_empresa
				and nf_sup.num_nf          = p_dados_tela.num_nf
				and nf_sup.ser_nf          = p_dados_tela.ser_nf
				and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
				and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
				whenever error stop
			else
				whenever error continue
				declare cq_empresa1 cursor for
				select unique nf_sup.cod_empresa
				from nf_sup
				where nf_sup.cod_empresa     <> p_cod_empresa
				and nf_sup.num_nf          = p_dados_tela.num_nf
				and nf_sup.ies_especie_nf  = p_dados_tela.ies_especie_nf
				and nf_sup.ser_nf          = p_dados_tela.ser_nf
				and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
				and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
				whenever error stop
			end if

			if sqlca.sqlcode  = 0 then
				whenever error continue
				foreach cq_empresa1 into l_cod_empresa_aux
				whenever error stop
				if sqlca.sqlcode = 0 then
					let l_msg = "nota fical j� cadastrada na empresa ",l_cod_empresa_aux
					call log0030_mensagem(l_msg, "info")
					return true
				end if
			end foreach
		end if
		free cq_empresa1
	end if

else
	if l_permite = false then #roberta
		whenever error continue
		declare cq_empresa2 cursor for
		select unique nf_sup.cod_empresa
		from nf_sup
		where nf_sup.cod_empresa     <> p_cod_empresa
		and nf_sup.num_nf          = p_dados_tela.num_nf
		and nf_sup.ser_nf          = p_dados_tela.ser_nf
		and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
		and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
		whenever error stop
	else
		whenever error continue
		declare cq_empresa2 cursor for
		select unique nf_sup.cod_empresa
		from nf_sup
		where nf_sup.cod_empresa     <> p_cod_empresa
		and nf_sup.num_nf          = p_dados_tela.num_nf
		and nf_sup.ies_especie_nf  = p_dados_tela.ies_especie_nf
		and nf_sup.ser_nf          = p_dados_tela.ser_nf
		and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
		and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
		whenever error stop
	end if

	if sqlca.sqlcode  = 0 then
		whenever error continue
		foreach cq_empresa2 into l_cod_empresa_aux
		whenever error stop
		if sqlca.sqlcode = 0 then
			let l_msg = "nota fiscal j� cadastrada na empresa ",l_cod_empresa_aux
			call log0030_mensagem(l_msg, "info")
			return true
		end if
	end foreach

	free cq_empresa2
end if
end if
end if

return false

end function

#----------------------------------------------------------------------------------------------#
function sup3760_atualiza_nota(l_cod_empresa, l_num_nf, l_ser_nf, l_ssr_nf, l_cod_fornecedor,
	l_num_aviso_rec, l_cnd_pgto_nf)
#----------------------------------------------------------------------------------------------#
	# os 485.525
	define l_cod_empresa       like empresa.cod_empresa,
	l_empresa           like empresa.cod_empresa,
	l_num_nf            like nf_sup.num_nf,
	l_ser_nf            like nf_sup.ser_nf,
	l_ssr_nf            like nf_sup.ssr_nf,
	l_cod_fornecedor    like nf_sup.cod_fornecedor,
	l_num_aviso_rec     like nf_sup.num_aviso_rec,
	l_cnd_pgto_nf       like nf_sup.cnd_pgto_nf,
	l_ies_pagamento     like cond_pgto_cap.ies_pagamento,
	l_ies_incl_cap      like nf_sup.ies_incl_cap,
	l_sserie_ad         like ad_mestre.ssr_nf,
	l_status            smallint

	whenever error continue
	select ies_pagamento
	into l_ies_pagamento
	from cond_pgto_cap
	where cnd_pgto = l_cnd_pgto_nf
	whenever error stop

	if sqlca.sqlcode = 0 and l_ies_pagamento = "3" then
		whenever error continue
		select cod_empresa_destin
		into l_empresa
		from emp_orig_destino
		where cod_empresa_orig = l_cod_empresa
		whenever error stop

		if sqlca.sqlcode = 100 then
			let l_empresa = l_cod_empresa
		end if

		{utilizar o conceito de empresa origem / destino - cap1010}
		if find4glfunction('fin80151_verifica_se_tabela_existe') then
			if fin80151_verifica_se_tabela_existe() then
				call fin80151_busca_nf_cap_ad_mestre_compl(l_empresa,
				l_cod_fornecedor,
				l_num_nf,
				l_ser_nf,
				l_ssr_nf,
				p_dados_tela.ies_especie_nf)
				returning l_status


				let l_sserie_ad = fin80151_get_cap_ad_mestre_compl_subser_nf_apropriacao_desp()
				if l_sserie_ad is not null and l_status = true then
					{utilizar o conceito de empresa origem / destino - cap1010}
					whenever error continue
					select num_ad
					from ad_mestre
					where cod_empresa    = l_empresa
					and num_nf         = l_num_nf
					and cod_fornecedor = l_cod_fornecedor
					and ser_nf         = l_ser_nf
					and ssr_nf         = l_sserie_ad
					whenever error stop
				end if
			else
				{utilizar o conceito de empresa origem / destino - cap1010}
				whenever error continue
				select num_ad
				from ad_mestre
				where cod_empresa    = l_empresa
				and num_nf         = l_num_nf
				and cod_fornecedor = l_cod_fornecedor
				and ser_nf         = l_ser_nf
				and ssr_nf         = l_ssr_nf
				whenever error stop
			end if
		else
			{utilizar o conceito de empresa origem / destino - cap1010}
			whenever error continue
			select num_ad
			from ad_mestre
			where cod_empresa    = l_empresa
			and num_nf         = l_num_nf
			and cod_fornecedor = l_cod_fornecedor
			and ser_nf         = l_ser_nf
			and ssr_nf         = l_ssr_nf
			whenever error stop
		end if


		#if sqlca.sqlcode = 100 then
		#   let l_ies_incl_cap = "n"
		#else
		#   let l_ies_incl_cap = "s"
		#end if
		if sqlca.sqlcode = 0 then
			let l_ies_incl_cap = "s"
		else
			let l_ies_incl_cap = "n"
		end if

		whenever error continue
		update nf_sup
		set ies_incl_cap  = l_ies_incl_cap
		where cod_empresa   = l_cod_empresa
		and num_aviso_rec = l_num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","nf_sup")
		end if
	end if

end function

#--------------------------------------------#
function sup3760_mostra_conhec_sup_frete_x()
#--------------------------------------------#
	define l_conhec like sup_frete_x_nf_entrada.conhec,
	l_coluna smallint,
	l_linha  char(37),
	l_inicio char(03),
	l_ser_conhec         like sup_frete_x_nf_entrada.serie_conhec,
	l_ssr_conhec         like sup_frete_x_nf_entrada.subserie_conhec,
	l_cod_transpor       like sup_frete_x_nf_entrada.transportador,
	l_num_conhec_cte     decimal(9,0)  ### trxyyh

	### trxyyh
	let l_num_conhec_cte = p_nf_sup.num_conhec

	whenever error continue
	select parametro_val
	into l_num_conhec_cte
	from sup_par_frete
	where empresa           = p_nf_sup.cod_empresa
	and num_conhec        = p_nf_sup.num_conhec
	and serie_conhec      = p_nf_sup.ser_conhec
	and subserie_conhec   = p_nf_sup.ssr_conhec
	and transportadora    = p_nf_sup.cod_transpor
	and parametro         = "num_ft_eletronica"
	whenever error stop
	if sqlca.sqlcode < 0 then
		call log003_err_sql('leitura','sup_par_frete')
	end if

	display " conhecimento: ",l_num_conhec_cte," " at 20,20 attribute(reverse)

	whenever error continue
	declare cq_argum_sup_frete_x cursor for
	select unique conhec, serie_conhec, subserie_conhec, transportador
	from sup_frete_x_nf_entrada
	where sup_frete_x_nf_entrada.empresa       = p_cod_empresa
	and sup_frete_x_nf_entrada.aviso_recebto = p_dados_tela.num_aviso_rec #roberta p_nf_sup.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","sup_frete_x_nf_entrada")
	end if
	initialize l_conhec, l_ser_conhec, l_ssr_conhec, l_cod_transpor to null

	let l_coluna = 44 ### trxyyh
	initialize l_linha to null

	whenever error continue
	foreach cq_argum_sup_frete_x into l_conhec, l_ser_conhec, l_ssr_conhec, l_cod_transpor
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_argum_sup_frete_x")
	end if

	if l_conhec is not null then
		### trxyyh
		let l_num_conhec_cte = l_conhec

		whenever error continue
		select parametro_val
		into l_num_conhec_cte
		from sup_par_frete
		where empresa           = p_cod_empresa
		and num_conhec        = l_conhec
		and serie_conhec      = l_ser_conhec
		and subserie_conhec   = l_ssr_conhec
		and transportadora    = l_cod_transpor
		and parametro         = "num_ft_eletronica"
		whenever error stop
		if sqlca.sqlcode < 0 then
			call log003_err_sql('leitura','sup_par_frete')
		end if

		#display " ",l_num_conhec_cte," " at 20,l_coluna attribute(reverse)
		if l_linha is null then
			let l_linha = l_num_conhec_cte clipped
		else
			let l_linha = l_linha clipped, l_num_conhec_cte clipped
		end if
	end if

	#let l_coluna = l_coluna + 8
end foreach

let l_inicio = "   "
display l_inicio  at 20,44 attribute(reverse) ### trxyyh
display l_linha at 20,47 attribute(reverse)   ### trxyyh

free cq_argum_sup_frete_x

end function

#---------------------------------------#
function sup3760_informa_peso()
#---------------------------------------#

	if m_informa_peso_entrada_nf = "s" then
		if m_funcao = "inclusao"  then
			initialize m_peso_nf to null
		end if

		call log130_procura_caminho("sup3760j") returning comando3
		open window w_sup3760j at 07,13 with form comando3
		attribute(border, message line last, prompt line last)

		call log006_exibe_teclas("01,02,07", p_versao)
		current window is w_sup3760j

		let int_flag = 0

		display by name m_peso_nf

		input by name m_peso_nf without defaults

		before field m_peso_nf
		call sup3760_save_cur_field_name('m_peso_nf')
		after field m_peso_nf
		if m_peso_nf is null or
			m_peso_nf = " " then
			if log0040_confirm(10,25,"peso da nota fiscal n�o informado. deseja continuar?") = true then
				call sup3760_insere_peso_nf()
				exit input
				return false
			else
			next field m_peso_nf
		end if
	else
		call sup3760_insere_peso_nf()
	end if

end input

close window w_sup3760j
else
return false
end if

return true

end function

#---------------------------------------#
function sup3760_insere_peso_nf()
#---------------------------------------#
	define l_commit smallint

	let l_commit = true

	whenever error continue
	call log085_transacao("begin")
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("begin","sup_par_ar")
		return
	end if

	if m_funcao = ("inclusao") then
		whenever error continue
		insert into sup_par_ar(empresa,
		aviso_recebto,
		seq_aviso_recebto,
		parametro,
		par_ind_especial,
		parametro_texto,
		parametro_val,
		parametro_dat)
		values (p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		"1",
		"peso_entrada_nf",
		null,
		p_user,
		m_peso_nf,
		today)
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let l_commit = false
			call log003_err_sql("insert","sup_par_ar")
		end if
	else
		if m_funcao = ("modificacao") then
			whenever error continue
			select empresa
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = "1"
			and parametro         = "peso_entrada_nf"
			whenever error stop
			if sqlca.sqlcode = 100 then
				whenever error continue
				insert into sup_par_ar(empresa,
				aviso_recebto,
				seq_aviso_recebto,
				parametro,
				par_ind_especial,
				parametro_texto,
				parametro_val,
				parametro_dat)
				values (p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				"1",
				"peso_entrada_nf",
				null,
				p_user,
				m_peso_nf,
				today)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let l_commit = false
					call log003_err_sql("insert","sup_par_ar")
				end if
			else
				if sqlca.sqlcode = 0 then
					whenever error continue
					update sup_par_ar
					set parametro_texto = p_user,
					parametro_val   = m_peso_nf,
					parametro_dat   = today
					where empresa           = p_cod_empresa
					and aviso_recebto     = p_dados_tela.num_aviso_rec
					and seq_aviso_recebto = "1"
					and parametro         = "peso_entrada_nf"
					whenever error stop
					if sqlca.sqlcode <> 0 then
						let l_commit = false
						call log003_err_sql("update","sup_par_ar")
					end if
				end if
			end if
		end if
	end if

	if l_commit = true then
		whenever error continue
		call log085_transacao("commit")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("commit","sup_par_ar")
			call log085_transacao("rollback") #os596059
		end if
	else
		whenever error continue
		call log085_transacao("rollback")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("rollback","sup_par_ar")
		end if

	end if

end function

#---------------------------------------#
function sup3760_busca_peso_nf()
#---------------------------------------#
	if m_informa_peso_entrada_nf = "s" then
		whenever error continue
		select parametro_val
		into m_peso_nf
		from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = "1"
		and parametro         = "peso_entrada_nf"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			initialize m_peso_nf to null
			display "                           "  at 22,02
		else
			if m_peso_nf is not null and
				m_peso_nf <> " " then

				display "peso nf: ", m_peso_nf ," "  at 22,02 attribute(reverse)
			else
				initialize m_peso_nf to null

				display "                          "  at 22,02
			end if

		end if

	end if

end function

#-----------------------------------#
function sup3760_verifica_insp_nfr()
#-----------------------------------#

	if  (p_dados_tela.ies_especie_nf      = "nfr" or
		p_dados_tela.ies_especie_nf      = "nfe")    #toda nfr tipo x (devolucao de consignacao)
		and p_dados_tela.ies_nf_aguard_nfe = "x"      #deve ter a inspecao informada (chamada atraves do sup0530/sup0331
		and p_aviso_rec.ies_item_estoq     = "n" then #ou informada manualmente
		let p_aviso_rec.ies_liberacao_insp = "n"
		if p_aviso_rec.ies_situa_ar = 'e' then
			let p_aviso_rec.ies_liberacao_cont = "s"
			let p_aviso_rec.ies_situa_ar       = "i"
			let p_aviso_rec.qtd_liber          = 0
			let p_aviso_rec.qtd_liber_excep    = 0
			let p_aviso_rec.qtd_rejeit         = 0
		end if

		if p_aviso_rec.ies_liberacao_cont = "s" then
			if p_aviso_rec.qtd_recebida = 0 then
				let p_aviso_rec.qtd_recebida = p_aviso_rec.qtd_declarad_nf
			end if
		end if

		let m_controles   = " "

		call sup0063_verifica_controles(1, p_aviso_rec.cod_item, "inclusao","sup3760") returning m_controles

		if m_controles <> " " then                  #todo item com controle de dimensional deve ter a
			let p_aviso_rec.ies_liberacao_cont = "n" #contagem efetuada manualmente sup8740
			let p_aviso_rec.ies_situa_ar       = "c"
			let p_aviso_rec.qtd_recebida       = 0
		end if

	end if

	#-- os 737190 inicio --#
	if find4glfunction('supy160_cliente_318')then
		if supy160_nota_nfr_tipo_a(p_cod_empresa, p_aviso_rec.num_aviso_rec) then
			let p_aviso_rec.ies_situa_ar       = "i"
			let p_aviso_rec.ies_liberacao_insp = "n"
		end if
	end if
	#-- os 737190 fim --#
end function

#--------------------------#
function sup3760_fretes()
#--------------------------#
	menu "opcao"
	before menu
	### tfnlwb
	if m_anul_frete = true then
	else
		hide option "5-anulacao frete"
	end if
	call sup3760_save_cur_field_name('sup3760_menu_6')

	command key ("t")"frete" "manutencao dos dados do frete "
	message ""
	display "                                                                               " at 20,01
	display "                                                                               " at 10,01
	let comando3 = ""
	if p_nf_sup.num_conhec <> 0 then
		if p_nf_sup.ser_conhec is null or p_nf_sup.ser_conhec = " " then
			let p_nf_sup.ser_conhec = "@"
		end if
		let comando3 = p_cod_empresa, " ",
		p_nf_sup.num_conhec, " ",
		p_nf_sup.ser_conhec, " ",
		p_nf_sup.ssr_conhec, " ",
		p_nf_sup.cod_transpor, " ",
		"sup3760"," ", 0, 0, " ",0, " ",0
		if p_nf_sup.ser_conhec = "@" then
			let p_nf_sup.ser_conhec = " "
		end if
	end if
	call log1200_executa_programa(m_prog_conhec_frete,comando3)
	display " nr. itens: ", p_tot_itens ," "  at 20,02 attribute(reverse)

	if p_nf_sup.num_conhec = 0 then
		if find4glfunction('supy13_busca_conhec') = true then
			call supy13_busca_conhec(p_cod_empresa,
			p_nf_sup.num_aviso_rec)
			returning p_nf_sup.cod_transpor,
			p_nf_sup.num_conhec,
			p_nf_sup.ser_conhec,
			p_nf_sup.ssr_conhec
		end if
	end if
	call sup376_consulta_dados()

	command key ("+")"+-frete_cesta" "manutencao dos dados do frete cif."
	message ""
	display "                                                                               " at 20,01
	display "                                                                               " at 10,01

	#--inicio--os 728028 #
	if find4glfunction('supy13_busca_conhec') = true then
		call supy13_busca_conhec(p_cod_empresa,
		p_nf_sup.num_aviso_rec)
		returning p_nf_sup.cod_transpor,
		p_nf_sup.num_conhec,
		p_nf_sup.ser_conhec,
		p_nf_sup.ssr_conhec

	end if

	let comando3 = p_nf_sup.cod_transpor, " ",#728028
	p_nf_sup.num_conhec, " ",
	p_nf_sup.ser_conhec, " ",
	p_nf_sup.ssr_conhec, " ",
	p_nf_sup.num_aviso_rec, " ",
	"sup3760"
	call log1200_executa_programa("sup3430",comando3)

	call log006_exibe_teclas("01", p_versao)
	current window is w_sup37601
	call sup3760_display_totitens_conhecimento()
	#---fim----os 728028 #

	call sup376_consulta_dados()

	command key("r")  "fretes_relacionados"  "consulta fretes relacionados"
	message ""
	if p_dados_tela.num_aviso_rec is not null then
		let comando3 = p_cod_empresa, " ", p_dados_tela.num_aviso_rec, " ", "0", " sup3760"
		call log1200_executa_programa("sup1571",comando3)
	else
		call log0030_mensagem(" consulte previamente para executar esta funcao", "info")
	end if

### tfnlwb - nova opcao: anulacao frete
	command key("5")  "5-anulacao frete"  "anula��o frete"
	if p_nf_sup.num_conhec <> 0 then
		if not sup3760_existe_frete_transito() then
			if p_nf_sup.ser_conhec is null or p_nf_sup.ser_conhec = " " then
				let p_nf_sup.ser_conhec = "@"
			end if
			let m_tipo_frete = 'afc'
			let comando3 = p_nf_sup.num_conhec,"  ",
			p_nf_sup.ser_conhec,"  ",
			p_nf_sup.ssr_conhec,"  """,
			p_nf_sup.cod_transpor, """  ",
			m_tipo_frete," ",
			p_cod_empresa
			if p_nf_sup.ser_conhec = "@" then
				let p_nf_sup.ser_conhec = " "
			end if
			call log1200_executa_programa("sup1991",comando3)
		else
			call log0030_mensagem("conhecimento de frete em tr�nsito. n�o � permitida a anula��o.", "stop")
		end if
	else
		if p_nf_sup.ies_especie_nf = "con" then
			if p_dados_tela.ies_nf_aguard_nfe <> "7" then #em transito
				if p_nf_sup.ser_nf is null or p_nf_sup.ser_nf = " " then
					let p_nf_sup.ser_nf = "@"
				end if
				let m_tipo_frete = 'act'
				let comando3 = p_nf_sup.num_nf,"  ",
				p_nf_sup.ser_nf,"  ",
				p_nf_sup.ssr_nf,"  """,
				p_nf_sup.cod_fornecedor, """  ",
				m_tipo_frete," ",
				p_cod_empresa
				if p_nf_sup.ser_nf = "@" then
					let p_nf_sup.ser_nf = " "
				end if
				call log1200_executa_programa("sup1991",comando3)
			else
				call log0030_mensagem("conhecimento de frete em tr�nsito. n�o � permitida a anula��o.", "stop")
			end if
		else
			call log0030_mensagem(" nota n�o possui frete relacionado ou n�o � uma nota de conhecimento de transporte.", "info")
		end if
	end if

	command key ("f11") "sobre" "informa��es sobre a aplica��o (f11)."
	call log_info_sobre(sourcename(),p_versao)

	command "fim" "retorna ao menu anterior"
	exit menu
end menu

end function

#----------------------------------------------#
function sup3760_verifica_fornec_emp(l_num_cgc)
#----------------------------------------------#
	define l_num_cgc      like fornecedor.num_cgc_cpf

	whenever error continue
	select cod_empresa
	from empresa
	where num_cgc = l_num_cgc
	and cod_empresa <> p_cod_empresa
	whenever error stop

	if sqlca.sqlcode = 0
		or sqlca.sqlcode = -284 then
		return true
	else
		return false
	end if

end function

#-------------------------------#
function sup3760_relaciona_nf()
#-------------------------------#

	if p_dados_tela.num_aviso_rec is null
		or p_dados_tela.num_aviso_rec = " " then
		call log0030_mensagem("consulte previamente para executar esta fun��o.", "info")
		return
	end if

	call log006_exibe_teclas("01", p_versao)

	open window w_sup3760k at 2,2 with form "sup3760k"
	attribute(border, message line last, prompt line last, comment line last)

	call sup3760_busca_num_ar_relac()

	menu "op��o"
	before menu
	call sup3760_save_cur_field_name('sup3760_menu_7')

	command "incluir" "inclui relacionamento entre nf's."
	message ""
	if log005_seguranca(p_user,"suprimen","sup3760","in") then
		if not sup3760_verifica_nf_sup_erro(p_dados_tela.num_aviso_rec) then
			call log0030_mensagem("ar n�o possue erro de cfop servi�o/retorno simbolico.","info")
		else
			call sup3760_inclusao_nf_relac()
			exit menu

			clear form
			close window w_sup3760k
		end if
	end if

	command "excluir" "permite excluir os relacionamento entre as nf's."
	message ""
	if log005_seguranca(p_user,"suprimen","sup3760","ex") then
		if m_num_ar_relac is null then
			call log0030_mensagem("ar n�o possue relacionamento para ser excluido.","info")
		else
			if sup3760_excluir_relacionamento_ar() then
				exit menu

				clear form
				close window w_sup3760k
			end if
		end if
	end if

	command "fim" "retorna ao menu anterior."
	message ""
	exit menu
end menu

clear form
close window w_sup3760k
end function

#------------------------------------#
function sup3760_inclusao_nf_relac()
#------------------------------------#
	define l_comando char(100)

	if sup3760_entrada_dados_nf_relac() then
		whenever error continue
		call log085_transacao("begin")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("begin","inclusao")
			return
		end if

		whenever error continue
		insert into sup_par_ar(empresa,
		aviso_recebto,
		seq_aviso_recebto,
		parametro,
		par_ind_especial,
		parametro_texto,
		parametro_val,
		parametro_dat)
		values (p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		1,
		"final_cfop", " ", " ",
		m_num_ar_relac, null)
		whenever error stop
		if sqlca.sqlcode = 0 then
			whenever error continue
			insert into sup_par_ar(empresa,
			aviso_recebto,
			seq_aviso_recebto,
			parametro,
			par_ind_especial,
			parametro_texto,
			parametro_val,
			parametro_dat)
			values (p_cod_empresa,
			m_num_ar_relac, 1,
			"final_cfop", " ", " ",
			p_dados_tela.num_aviso_rec, null)
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				call log085_transacao("commit")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("commit","inclusao")
					call log085_transacao("rollback") #os596059
					return
				else
					message "inclus�o efetuada com sucesso." attribute(reverse)

					let l_comando = p_cod_empresa,
					" ",m_num_ar_relac,
					" s",
					" ",0
					call log1200_executa_programa("sup0680",l_comando)

					# inicio chamado 835591
					if not sup3760_insere_parametro_sup1544(p_dados_tela.num_aviso_rec) then
						return
					end if
					# fim chamado 835591

					error " aguarde... efetuando consistencia da nf. "
					let l_comando = p_cod_empresa,
					" ",p_dados_tela.num_aviso_rec,
					" s",
					" ",0
					call log1200_executa_programa("sup0680",l_comando)

					# inicio chamado 835591
					if not sup3760_elimina_parametro_sup1544(p_dados_tela.num_aviso_rec) then
						return
					end if
					# fim chamado 835591

					error " "

					whenever error continue
					select count(*)
					into p_tem_erro
					from nf_sup_erro
					where nf_sup_erro.empresa       = p_cod_empresa
					and nf_sup_erro.num_aviso_rec = p_dados_tela.num_aviso_rec
					and nf_sup_erro.ies_origem_erro <> "4"
					whenever error stop
					if sqlca.sqlcode <> 0 or p_tem_erro is null then
						let p_tem_erro = 0
					end if

					if p_tem_erro > 0 then
						call log0030_mensagem("foram detectados erros na consistencia da nota fiscal ","exclamation")
						#o.s. 529316
						if p_dados_tela.num_nf is not null
							and m_abre_aut_tela_erros = "s" then
							call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)
							let p_nom_resp_aceite_er = p_nf_sup.nom_resp_aceite_er
							call sup377_zoom_erros(p_cod_empresa, p_dados_tela.num_aviso_rec, p_nom_resp_aceite_er)
						end if
						#o.s. 529316
					else
						call log0030_mensagem("n�o foram detectados erros na consistencia da nota fiscal ","exclamation")
					end if

					display p_dados_tela.num_aviso_rec to m_num_ar
					display by name m_num_ar_relac
				end if
			else
				call log003_err_sql("insert","sup_par_ar")

				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("rollback","inclusao")
				end if

				return
			end if
		else
			call log003_err_sql("insert","sup_par_ar")

			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback","inclusao")
			end if

			return
		end if
	else
		clear form
		error "inclus�o cancelada."
	end if

end function

#--------------------------------------------#
function sup3760_excluir_relacionamento_ar()
#--------------------------------------------#

	define l_comando char(100)

	if log0040_confirm(17,40,"confirma a exclus�o do registro?") then
		whenever error continue
		call log085_transacao("begin")
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("begin","excluir_relacionamento_ar")
			return false
		end if

		whenever error continue
		delete from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 1
		and parametro         = "final_cfop"
		whenever error stop
		if sqlca.sqlcode = 0 then
			whenever error continue
			delete from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = m_num_ar_relac
			and seq_aviso_recebto = 1
			and parametro         = "final_cfop"
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("delete","sup_par_ar")

				whenever error continue
				call log085_transacao("rollback")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("rollback","excluir_relacionamento_ar")
				end if

				return false
			else
				whenever error continue
				call log085_transacao("commit")
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("commit","excluir_relacionamento_ar")
					call log085_transacao("rollback") #os596059
					return false
				end if

				message "exclus�o efetuada com sucesso." attribute(reverse)
				clear form

				if sup3760_verifica_num_ar(m_num_ar_relac) then
					error " aguarde... efetuando consistencia da nf. "
					let l_comando = p_cod_empresa,
					" ",m_num_ar_relac,
					" s",
					" ",0
					call log1200_executa_programa("sup0680",l_comando)
				end if

				if sup3760_verifica_num_ar(p_dados_tela.num_aviso_rec) then
					# inicio chamado 835591
					if not sup3760_insere_parametro_sup1544(p_dados_tela.num_aviso_rec) then
						return false
					end if
					# fim chamado 835591

					error " aguarde... efetuando consistencia da nf. "
					let l_comando = p_cod_empresa,
					" ",p_dados_tela.num_aviso_rec,
					" s",
					" ",0
					call log1200_executa_programa("sup0680",l_comando)

					# inicio chamado 835591
					if not sup3760_elimina_parametro_sup1544(p_dados_tela.num_aviso_rec) then
						return false
					end if
					# fim chamado 835591

				end if

				error " "

				whenever error continue
				select count(*)
				into p_tem_erro
				from nf_sup_erro
				where nf_sup_erro.empresa       = p_cod_empresa
				and nf_sup_erro.num_aviso_rec = p_dados_tela.num_aviso_rec
				and nf_sup_erro.ies_origem_erro <> "4"
				whenever error stop
				if sqlca.sqlcode <> 0 or p_tem_erro is null then
					let p_tem_erro = 0
				end if

				if p_tem_erro > 0 then
					call log0030_mensagem(" foram detectados erros na consistencia da nota fiscal ","exclamation")
					#o.s. 529316
					if p_dados_tela.num_nf is not null
						and m_abre_aut_tela_erros = "s" then
						call sup376_busca_nf_sup(p_dados_tela.num_aviso_rec)
						let p_nom_resp_aceite_er = p_nf_sup.nom_resp_aceite_er
						call sup377_zoom_erros(p_cod_empresa, p_dados_tela.num_aviso_rec, p_nom_resp_aceite_er)
					end if
					#o.s. 529316
				else
					call log0030_mensagem(" nao foram detectados erros na consistencia da nota fiscal ","exclamation")
				end if

				return true
			end if
		else
			call log003_err_sql("delete","sup_par_ar")

			whenever error continue
			call log085_transacao("rollback")
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("rollback","excluir_relacionamento_ar")
			end if

			return false
		end if
	else
		error "exclus�o cancelada."

		return false
	end if

end function

#-----------------------------------------#
function sup3760_entrada_dados_nf_relac()
#-----------------------------------------#
	define l_funcao char(15)

	call log006_exibe_teclas("01 02 07",p_versao)
	current window is w_sup3760k

	display p_cod_empresa to empresa
	display p_dados_tela.num_aviso_rec to m_num_ar

	initialize m_num_ar_relac to null

	let int_flag = false

	input by name m_num_ar_relac without defaults

	before field m_num_ar_relac
	if g_ies_grafico then
		--# call fgl_dialog_setkeylabel('control-z','zoom')
	else
		display "( zoom )" at 3,37
	end if

	call sup3760_save_cur_field_name('m_num_ar_relac')
	after field m_num_ar_relac
	if g_ies_grafico then
		--# call fgl_dialog_setkeylabel('control-z',null)
	else
		display "--------" at 3,37
	end if

	if m_num_ar_relac is null
		or m_num_ar_relac = " " then
		call log0030_mensagem("informe o n�mero do ar.","info")
	next field m_num_ar_relac
end if

if not sup3760_verifica_nf_sup_erro(m_num_ar_relac) then
	call log0030_mensagem("ar n�o possue item com cfop servi�o/retorno simbolico.","info")
next field m_num_ar_relac
end if

on key (control-z, f4)
call sup376_popups(l_funcao)

after input
if int_flag = 0 then
	if m_num_ar_relac is null
		or m_num_ar_relac = " " then
		call log0030_mensagem("informe o n�mero do ar.","info")
	next field m_num_ar_relac
end if
end if
end input

call log006_exibe_teclas("01",p_versao)
current window is w_sup3760k

if int_flag then
	let int_flag = 0
	clear form
return false
else
return true
end if

end function

#-------------------------------------#
function sup3760_busca_num_ar_relac()
#-------------------------------------#

	whenever error continue
	select parametro_val
	into m_num_ar_relac
	from sup_par_ar
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = 1
	and parametro         = "final_cfop"
	whenever error stop
	if sqlca.sqlcode = 0 then
		display p_dados_tela.num_aviso_rec to m_num_ar
		display by name m_num_ar_relac
	end if

end function

#------------------------------------------------------#
function sup3760_verifica_nf_sup_erro(l_num_aviso_rec)
#------------------------------------------------------#

	define l_num_aviso_rec like aviso_rec.num_aviso_rec,
	l_cfop_retn     smallint,
	l_cfop_serv     smallint

	let l_cfop_retn = false
	let l_cfop_serv = false

	whenever error continue
	select num_aviso_rec
	from nf_sup_erro
	where empresa            = p_cod_empresa
	and num_aviso_rec      = l_num_aviso_rec
	and num_seq            = 1
	and ies_origem_erro    = '1'
	and des_pendencia_item = "nota fiscal n�o possui item que tenha cfop servi�o"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_cfop_retn = false
	else
		let l_cfop_retn = true

		if l_num_aviso_rec = p_dados_tela.num_aviso_rec then
			let m_cfop_serv = false
		end if
	end if

	whenever error continue
	select num_aviso_rec
	from nf_sup_erro
	where empresa             = p_cod_empresa
	and num_aviso_rec       = l_num_aviso_rec
	and num_seq             = 1
	and ies_origem_erro     = '1'
	and des_pendencia_item  = "nota fiscal n�o possui item que tenha cfop retorno simbolico"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_cfop_serv = false
	else
		let l_cfop_serv = true

		if l_num_aviso_rec = p_dados_tela.num_aviso_rec then
			let m_cfop_serv = true
		end if
	end if

	if l_cfop_retn = false and l_cfop_serv = false
		or l_cfop_retn = true  and l_cfop_serv = true then
		return false
	end if

return true

end function

#------------------------------------------#
function sup3760_verifica_num_ar(l_num_ar)
#------------------------------------------#

	define l_num_ar like aviso_rec.num_aviso_rec

	whenever error continue
	select aviso_rec.num_aviso_rec
	from aviso_rec
	where aviso_rec.cod_empresa   = p_cod_empresa
	and aviso_rec.num_aviso_rec = l_num_ar
	whenever error stop
	if sqlca.sqlcode <> 0 then
		return false
	else
		return true
	end if

end function

#------------------------------------------#
function sup3760_verifica_cfop_retr_serv()
#------------------------------------------#

	define l_cod_fiscal_item like aviso_rec.cod_fiscal_item,
	l_cfop_retr       smallint,
	l_cfop_serv       smallint,
	l_pos             smallint,
	l_cfop            char(03)

	whenever error continue
	declare cq_cfop_itens cursor for
	select aviso_rec.cod_fiscal_item
	from aviso_rec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = m_num_ar_relac
	whenever error stop
	if sqlca.sqlcode != 0 then
		call log003_err_sql("declare","cq_cfop_itens")
	end if

	let l_cfop_retr = false
	let l_cfop_serv = false

	whenever error continue
	foreach cq_cfop_itens into l_cod_fiscal_item
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("foreach cursor","cq_cfop_itens")
	end if

	let l_pos  = length(l_cod_fiscal_item)

	if l_pos < 5 then
		continue foreach
	end if

	let l_cfop = l_cod_fiscal_item[l_pos-2,l_pos]

	whenever error continue
	select fim_cfop_nf_retn
	from sup_cfop_retn_serv
	where empresa          = p_cod_empresa
	and fim_cfop_nf_retn = l_cfop
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> notfound then
			call log003_err_sql('select','sup_cfop_retn_serv')
		end if
	else
		let l_cfop_retr = true
	end if

	whenever error continue
	select fim_cfop_nf_retn
	from sup_cfop_retn_serv
	where empresa            = p_cod_empresa
	and final_cfop_nf_serv = l_cfop
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> notfound then
			call log003_err_sql('select','sup_cfop_retn_serv')
		end if
	else
		let l_cfop_serv = true
	end if

	if  l_cfop_retr = true
		and l_cfop_serv = true then
		exit foreach
	end if
end foreach
whenever error stop

if l_cfop_retr = true and l_cfop_serv = false then
	call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop servi�o")
else
	if l_cfop_retr = false and l_cfop_serv = true then
		call sup3760_inclui_nf_sup_erro(1,"1","s","nota fiscal n�o possui item que tenha cfop retorno simbolico")
	end if
end if

free cq_cfop_itens

end function

#--------------------------------------------------------------------------#
function sup3760_inclui_nf_sup_erro(l_num_seq,l_origem,l_erro_grave,l_msg)
#--------------------------------------------------------------------------#

	define lr_nf_sup_erro record like nf_sup_erro.*,
	l_num_seq      like nf_sup_erro.num_seq,
	l_origem       like nf_sup_erro.ies_origem_erro,
	l_erro_grave   like nf_sup_erro.ies_erro_grave,
	l_msg          like nf_sup_erro.des_pendencia_item

	let lr_nf_sup_erro.empresa            = p_cod_empresa
	let lr_nf_sup_erro.num_aviso_rec      = m_num_ar_relac
	let lr_nf_sup_erro.num_seq            = l_num_seq
	let lr_nf_sup_erro.ies_origem_erro    = l_origem
	let lr_nf_sup_erro.ies_erro_grave     = l_erro_grave
	let lr_nf_sup_erro.des_pendencia_item = l_msg

	whenever error continue
	insert into nf_sup_erro(empresa,
	num_aviso_rec,
	num_seq,
	des_pendencia_item,
	ies_origem_erro,
	ies_erro_grave)
	values (lr_nf_sup_erro.empresa,
	lr_nf_sup_erro.num_aviso_rec,
	lr_nf_sup_erro.num_seq,
	lr_nf_sup_erro.des_pendencia_item,
	lr_nf_sup_erro.ies_origem_erro,
	lr_nf_sup_erro.ies_erro_grave)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","nf_sup_erro")
	end if

end function

## 534641
#--------------------------------------------------#
function sup3760_verifica_sup_fornec(l_cod_fornec,
	l_cod_fiscal)
#--------------------------------------------------#
	define l_cod_fornec   like fornecedor.cod_fornecedor,
	l_cod_fiscal   like cod_fiscal_sup.cod_fiscal

	let l_cod_fiscal = l_cod_fiscal[3,5]

	if not m_exst_forntriter then
		return " "
	end if

	whenever error continue
	select fornec_depositante
	from sup_fornec_tri_ter
	where empresa         = p_cod_empresa
	and fornecedor      = l_cod_fornec
	and cod_fisc_fornec = l_cod_fiscal
	whenever error stop
	if sqlca.sqlcode = 0 or
		sqlca.sqlcode = -284 then
		return "a"
	end if

	whenever error continue
	select fornecedor
	from sup_fornec_tri_ter
	where empresa             = p_cod_empresa
	and fornec_depositante  = l_cod_fornec
	and cod_fisc_depos      = l_cod_fiscal
	whenever error stop
	if sqlca.sqlcode = 0 or
		sqlca.sqlcode = -284 then
		return "b"
	end if

# 534641
return " "

end function
# 534641
#----------------------------------#
function sup3760_cad_item_triang(l_cod_fornecedor,
	l_cod_fiscal,
	l_cod_item,
	l_tipo)
#----------------------------------#

	define l_cod_fornecedor     like fornecedor.cod_fornecedor,
	l_cod_fiscal         like nf_sup.cod_operacao,
	l_cod_item           like item.cod_item,
	l_tipo               char(01),
	l_necessidade_pedido char(01)

	if not m_exst_forntriter then
		call log0030_mensagem("tabela de triangula��o de terceiros (sup_fornec_tri_ter) n�o existe.","info")
		return false
	end if

	let l_cod_fiscal = l_cod_fiscal[3,5]

	if l_tipo = "a" then
		whenever error continue
		select unique necessidade_pedido
		into l_necessidade_pedido
		from sup_fornec_tri_ter
		where empresa         = p_cod_empresa
		and fornecedor      = l_cod_fornecedor
		and cod_fisc_fornec = l_cod_fiscal
		and item            = l_cod_item
		whenever error stop
	else
		whenever error continue
		select unique necessidade_pedido
		into l_necessidade_pedido
		from sup_fornec_tri_ter
		where empresa            = p_cod_empresa
		and fornec_depositante = l_cod_fornecedor
		and cod_fisc_depos     = l_cod_fiscal
		and item               = l_cod_item
		whenever error stop
	end if

	if sqlca.sqlcode = -284 then
		let l_necessidade_pedido = 's'
	end if

	if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
		if p_pedidos[1,5] = "xxxxx" or p_pedidos is null then
			if p_ies_informou_ped = "n" and p_ies_entr_sem_ped = false then

				if find4glfunction('supy5_fornecedor_possue_pc_oc') then
					if supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor) then
						if l_necessidade_pedido = "s" then
							call log0030_mensagem("fornecedor n�o permite a entrada desse item sem pedido de compra (sup1648).","info")
							return false
						end if
					end if
				else
					if l_necessidade_pedido = "s" then
						call log0030_mensagem("fornecedor n�o permite a entrada desse item sem pedido de compra (sup1648).","info")
						return false
					end if
				end if

			end if
		end if
	else
		call log0030_mensagem("item n�o cadastrado no programa de triangula��o de terceiros (sup1648).","info")
		return false
	end if

return true

end function
# 534641
#534641
#-------------------------------------#
function sup3760_informa_nf_cobraca()
#-------------------------------------#
	define l_num_nf_cobranca like nf_sup.num_nf,
	l_achou           smallint,
	l_acessa_nf_cobranca smallint

	let l_acessa_nf_cobranca = true

	if log_existe_epl('sup3760y_before_informa_nf_cobranca') then
		call log_setvar("empresa", p_cod_empresa)
		#epl empresa nota fiscal entrada
		#epl tipo: nf_sup.cod_empresa

		call sup3760y_before_informa_nf_cobranca()

		let l_acessa_nf_cobranca = log_getvar('acessa_nf_cobranca')
	end if

	if l_acessa_nf_cobranca = false then
		return
	end if

	call log006_exibe_teclas("01", p_versao)
	call log130_procura_caminho("sup3760s") returning comando3
	open window w_sup3760s at 5,5 with form comando3
	attribute(border, message line last, prompt line last, comment line last)

	let l_achou = false
	#busca os dados e verifica se ja existe nota fiscal de cobran�a cadastrada
	whenever error continue
	select parametro_val
	into l_num_nf_cobranca
	from sup_par_ar
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and parametro         = "nf_cobr_fornec"
	and seq_aviso_recebto = 0
	whenever error stop
	if sqlca.sqlcode = 0 then
		let l_achou = true
		current window is w_sup3760s
		display by name l_num_nf_cobranca
	end if

	let int_flag = 0
	call log006_exibe_teclas("01 02 07", p_versao)
	current window is w_sup3760s
	input by name l_num_nf_cobranca without defaults

	before input
	call sup3760_save_cur_field_name('l_num_nf_cobranca')

	after input
	#se n�o existir nota de cobran�a faz a inclus�o.. sen�o modifica��o
	if not l_achou then
		if l_num_nf_cobranca is not null and
			l_num_nf_cobranca <> " " and
			l_num_nf_cobranca <> 0 then
			whenever error continue
			insert into sup_par_ar (empresa          ,
			aviso_recebto    ,
			seq_aviso_recebto,
			parametro        ,
			par_ind_especial ,
			parametro_texto  ,
			parametro_val    ,
			parametro_dat)
			values (p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"nf_cobr_fornec",
			null,
			null,
			l_num_nf_cobranca,
			null)
			whenever error stop
			if sqlca.sqlcode <>  0 then
				call log003_err_sql("insert","par_sup_pad")
			end if
		end if
	else
		whenever error continue
		update sup_par_ar set parametro_val = l_num_nf_cobranca
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro         = "nf_cobr_fornec"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","par_sup_pad")
		end if
	end if

end input

close window w_sup3760s

end function
#534641
#-----------------------------------------#
function sup3760_verifica_fornec_depos(l_cod_fornecedor)
#-----------------------------------------#
	define l_cod_fornecedor   like fornecedor.cod_fornecedor,
	l_cod_fornec_depos like fornecedor.cod_fornecedor,
	l_condicao         char(200)

	if not m_exst_forntriter then
		return false
	end if

	whenever error continue
	select fornec_depositante
	into l_cod_fornec_depos
	from sup_fornec_tri_ter
	where empresa = p_cod_empresa
	and fornecedor         = l_cod_fornecedor
	and fornec_depositante = l_cod_fornecedor
	whenever error stop
	if sqlca.sqlcode =  0 then
		whenever error continue
		select fornec_depositante
		from sup_fornec_tri_ter
		where empresa    = p_cod_empresa
		and fornecedor = l_cod_fornecedor
		whenever error stop
		if sqlca.sqlcode = 0 then
			return false
		else
			if sqlca.sqlcode = -284 then
				return true
			end if
		end if
	else
		return false
	end if
#retornando falso, nao encontrou fornecedor, pode deixar incluir nota tipo a
#retornando true, o fornecedor e depositante s�o os mesmo unicamente. n�o incluir nota tipo a

end function

#534641
#-----------------------------------------#
function sup3760_verifica_necessita_pc(l_cod_fornecedor,
	l_cod_fiscal,
	l_tipo)
#-----------------------------------------#

	define l_cod_fornecedor     like fornecedor.cod_fornecedor,
	l_cod_fiscal         like cod_fiscal_sup.cod_fiscal,
	l_tipo               char(01),
	l_necessidade_pedido char(01)

	if not m_exst_forntriter then
		return true
	end if

	if l_tipo = "a" then
		if l_cod_fiscal is null
			or l_cod_fiscal = " " then
			whenever error continue
			select unique necessidade_pedido
			into l_necessidade_pedido
			from sup_fornec_tri_ter
			where empresa            = p_cod_empresa
			and fornecedor         = l_cod_fornecedor
			whenever error stop
			if sqlca.sqlcode = 100 then
				call log0030_mensagem("fornecedor n�o cadastrado no programa de triangula��o de terceiros (sup1648).","info")
			else
				if sqlca.sqlcode <> 0 and sqlca.sqlcode <> -284 then
					call log003_err_sql("select","sup_fornec_tri_ter")
				end if
			end if
		else
			let l_cod_fiscal = l_cod_fiscal[3,5]
			whenever error continue
			select unique necessidade_pedido
			into l_necessidade_pedido
			from sup_fornec_tri_ter
			where empresa            = p_cod_empresa
			and fornecedor         = l_cod_fornecedor
			and cod_fisc_fornec    = l_cod_fiscal
			whenever error stop
			if sqlca.sqlcode = 100 then
				call log0030_mensagem("fornecedor e/ou cfop n�o cadastrado no programa de triangula��o de terceiros (sup1648).","info")
			else
				if sqlca.sqlcode <> 0 and sqlca.sqlcode <> -284 then
					call log003_err_sql("select","sup_fornec_tri_ter")
				end if
			end if
		end if
	else
		if l_cod_fiscal is null
			or l_cod_fiscal = " " then
			whenever error continue
			select unique necessidade_pedido
			into l_necessidade_pedido
			from sup_fornec_tri_ter
			where empresa            = p_cod_empresa
			and fornec_depositante = l_cod_fornecedor
			whenever error stop
			if sqlca.sqlcode = 100 then
				call log0030_mensagem("fornecedor n�o cadastrado no programa de triangula��o de terceiros (sup1648).","info")
			else
				if sqlca.sqlcode <> 0 and sqlca.sqlcode <> -284 then
					call log003_err_sql("select","sup_fornec_tri_ter")
				end if
			end if
		else
			let l_cod_fiscal = l_cod_fiscal[3,5]
			whenever error continue
			select unique necessidade_pedido
			into l_necessidade_pedido
			from sup_fornec_tri_ter
			where empresa            = p_cod_empresa
			and fornec_depositante = l_cod_fornecedor
			and cod_fisc_depos     = l_cod_fiscal
			whenever error stop
			if sqlca.sqlcode = 100 then
				call log0030_mensagem("fornecedor e/ou cfop n�o cadastrado no programa de triangula��o de terceiros (sup1648).","info")
			else
				if sqlca.sqlcode <> 0 and sqlca.sqlcode <> -284 then
					call log003_err_sql("select","sup_fornec_tri_ter")
				end if
			end if
		end if
	end if

	if sqlca.sqlcode <> 0 then
		let l_necessidade_pedido = 'n'
	end if

	if (p_pedidos[1,5] = "xxxxx") or
		(p_pedidos is null) then
		if #p_par_sup.ies_entrada_sem_pc = "n" and
			p_ies_informou_ped = "n" and
			p_ies_entr_sem_ped = false then
			if find4glfunction('supy5_fornecedor_possue_pc_oc') then
				if supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor) then
					if l_necessidade_pedido = "s" then
						return false
					else
						return true
					end if
				end if
			else
				if l_necessidade_pedido = "s" then
					return false
				else
					return true
				end if
			end if
		end if
	end if

return true

end function
#534641

#----------------------------------------------#
function sup3760_existe_cadastro_triangulacao()
#----------------------------------------------#
	define l_cod_operacao       like nf_sup.cod_operacao

	let l_cod_operacao     = p_dados_tela.cod_operacao[3,5]
	whenever error continue
	select empresa
	from sup_fornec_tri_ter
	where empresa = p_cod_empresa
	and (fornecedor         = p_dados_tela.cod_fornecedor
	or fornec_depositante = p_dados_tela.cod_fornecedor)
	and (cod_fisc_fornec    = l_cod_operacao
	or cod_fisc_depos     = l_cod_operacao)
	whenever error stop

	if sqlca.sqlcode = 0
		or sqlca.sqlcode = -284 then
		return true
	else
		return false
	end if

end function
#-------------------------------------------------------------------------#
function sup3760_verifica_saldo_transf_grade(l_cod_item,l_qtd_movto, l_local_est_orig,
	l_sit_est_orig,l_lote_orig)
#-------------------------------------------------------------------------#
	define l_cod_item          like estoque_trans.cod_item,
	l_qtd_movto         like estoque_trans.qtd_movto,
	l_local_est_orig    like estoque_trans.cod_local_est_orig,
	l_qtd_saldo         like estoque_lote.qtd_saldo,
	l_qtd_reservada     like estoque_loc_reser.qtd_reservada,
	l_sit_est_orig      like estoque_trans.ies_sit_est_orig,
	l_lote_orig         like estoque_trans.num_lote_orig

	if l_lote_orig is null or
		l_lote_orig = " " then
		whenever error continue
		select qtd_saldo
		into l_qtd_saldo
		from estoque_lote
		where cod_empresa   = p_cod_empresa
		and cod_item      = l_cod_item
		and cod_local     = l_local_est_orig
		and (num_lote is null or num_lote = " ")
		and ies_situa_qtd = l_sit_est_orig
		whenever error stop
		if sqlca.sqlcode <> 0 and
			sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","estoque_lote")
		end if
	else
		whenever error continue
		select qtd_saldo
		into l_qtd_saldo
		from estoque_lote
		where cod_empresa   = p_cod_empresa
		and cod_item      = l_cod_item
		and cod_local     = l_local_est_orig
		and num_lote      = l_lote_orig
		and ies_situa_qtd = l_sit_est_orig
		whenever error stop
		if sqlca.sqlcode <> 0 and
			sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","estoque_lote")
		end if
	end if
	if l_qtd_saldo is null then
		let l_qtd_saldo = 0
	end if

	if l_lote_orig is null or
		l_lote_orig = " " then
		whenever error continue
		select sum(qtd_reservada)
		into l_qtd_reservada
		from estoque_loc_reser
		where cod_empresa = p_cod_empresa
		and cod_item    = l_cod_item
		and cod_local   = l_local_est_orig
		and (num_lote is null or num_lote = " ")
		and ies_situacao not in ("l","c")
		whenever error stop
		whenever error stop
		if sqlca.sqlcode <> 0 and
			sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","estoque_loc_reser")
		end if
	else
		whenever error continue
		select sum(qtd_reservada)
		into l_qtd_reservada
		from estoque_loc_reser
		where cod_empresa = p_cod_empresa
		and cod_item    = l_cod_item
		and cod_local   = l_local_est_orig
		and num_lote    = l_lote_orig
		and ies_situacao not in ("l","c")
		whenever error stop
		if sqlca.sqlcode <> 0 and
			sqlca.sqlcode <> 100 then
			call log003_err_sql("leitura","estoque_loc_reser")
		end if
	end if

	if l_qtd_reservada is null then
		let l_qtd_reservada = 0
	end if

	if (l_qtd_saldo - l_qtd_reservada) < l_qtd_movto then
		return true
	end if

return false

end function

#--------------------------------------------------------------------#
function sup3760_zera_num_pedido(lr_estoque_trans,lr_estoque_trans_end)
#--------------------------------------------------------------------#
	define lr_estoque_trans_end  record like estoque_trans_end.*,
	lr_estoque_trans      record like estoque_trans.*,
	lr_estoque_lote_ender record like estoque_lote_ender.*,
	l_qtd_saldo           like estoque_lote_ender.qtd_saldo,
	l_num_ped_ven         like estoque_lote_ender.num_ped_ven,
	l_num_seq_ped_ven     like estoque_lote_ender.num_seq_ped_ven,
	l_num_transac         integer,
	l_houve_erro          smallint,
	l_qtd_saldo_total     smallint,
	l_diferenca           smallint

	let l_houve_erro = false
	let l_qtd_saldo_total = 0

	whenever error continue
	foreach cq_est_lote_ender3
	using lr_estoque_trans_end.cod_empresa,
	lr_estoque_trans.cod_item,
	lr_estoque_trans_end.endereco,
	lr_estoque_trans_end.num_volume,
	lr_estoque_trans_end.cod_grade_1,
	lr_estoque_trans_end.cod_grade_2,
	lr_estoque_trans_end.cod_grade_3,
	lr_estoque_trans_end.cod_grade_4,
	lr_estoque_trans_end.cod_grade_5,
	lr_estoque_trans_end.dat_hor_producao,
	lr_estoque_trans_end.dat_hor_validade,
	lr_estoque_trans_end.num_peca,
	lr_estoque_trans_end.num_serie,
	lr_estoque_trans_end.comprimento,
	lr_estoque_trans_end.largura,
	lr_estoque_trans_end.altura,
	lr_estoque_trans_end.diametro,
	lr_estoque_trans_end.dat_hor_reserv_1,
	lr_estoque_trans_end.dat_hor_reserv_2,
	lr_estoque_trans_end.dat_hor_reserv_3,
	lr_estoque_trans_end.qtd_reserv_1,
	lr_estoque_trans_end.qtd_reserv_2,
	lr_estoque_trans_end.qtd_reserv_3,
	lr_estoque_trans_end.num_reserv_1,
	lr_estoque_trans_end.num_reserv_2,
	lr_estoque_trans_end.num_reserv_3,
	lr_estoque_trans_end.tex_reservado
	into lr_estoque_lote_ender.cod_empresa         ,
	lr_estoque_lote_ender.cod_item            ,
	lr_estoque_lote_ender.cod_local           ,
	lr_estoque_lote_ender.num_lote            ,
	lr_estoque_lote_ender.endereco            ,
	lr_estoque_lote_ender.num_volume          ,
	lr_estoque_lote_ender.cod_grade_1         ,
	lr_estoque_lote_ender.cod_grade_2         ,
	lr_estoque_lote_ender.cod_grade_3         ,
	lr_estoque_lote_ender.cod_grade_4         ,
	lr_estoque_lote_ender.cod_grade_5         ,
	lr_estoque_lote_ender.dat_hor_producao    ,
	lr_estoque_lote_ender.num_ped_ven         ,
	lr_estoque_lote_ender.num_seq_ped_ven     ,
	lr_estoque_lote_ender.ies_situa_qtd       ,
	lr_estoque_lote_ender.qtd_saldo           ,
	lr_estoque_lote_ender.num_transac         ,
	lr_estoque_lote_ender.ies_origem_entrada  ,
	lr_estoque_lote_ender.dat_hor_validade    ,
	lr_estoque_lote_ender.num_peca            ,
	lr_estoque_lote_ender.num_serie           ,
	lr_estoque_lote_ender.comprimento         ,
	lr_estoque_lote_ender.largura             ,
	lr_estoque_lote_ender.altura              ,
	lr_estoque_lote_ender.diametro            ,
	lr_estoque_lote_ender.dat_hor_reserv_1    ,
	lr_estoque_lote_ender.dat_hor_reserv_2    ,
	lr_estoque_lote_ender.dat_hor_reserv_3    ,
	lr_estoque_lote_ender.qtd_reserv_1        ,
	lr_estoque_lote_ender.qtd_reserv_2        ,
	lr_estoque_lote_ender.qtd_reserv_3        ,
	lr_estoque_lote_ender.num_reserv_1        ,
	lr_estoque_lote_ender.num_reserv_2        ,
	lr_estoque_lote_ender.num_reserv_3        ,
	lr_estoque_lote_ender.tex_reservado
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_est_lote_ender3")
		return false
	end if

	if lr_estoque_lote_ender.qtd_saldo = lr_estoque_trans.qtd_movto
		and l_qtd_saldo_total = 0 then
		whenever error continue
		update estoque_lote_ender
		set num_ped_ven     = 0,
		num_seq_ped_ven = 0
		where estoque_lote_ender.cod_empresa        = lr_estoque_trans_end.cod_empresa
		and estoque_lote_ender.num_transac        = lr_estoque_lote_ender.num_transac
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let l_houve_erro = true
			exit foreach
		else
			exit foreach
		end if
	else
		if lr_estoque_lote_ender.qtd_saldo < lr_estoque_trans.qtd_movto then
			whenever error continue
			update estoque_lote_ender
			set num_ped_ven     = 0,
			num_seq_ped_ven = 0
			where estoque_lote_ender.cod_empresa        = lr_estoque_trans_end.cod_empresa
			and estoque_lote_ender.num_transac        = lr_estoque_lote_ender.num_transac
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let l_houve_erro = true
				exit foreach
			else
				let l_qtd_saldo_total = l_qtd_saldo_total + lr_estoque_lote_ender.qtd_saldo
				if lr_estoque_trans.qtd_movto = l_qtd_saldo_total then
					exit foreach
				end if
			end if
		else
			if l_qtd_saldo_total <> 0 then
				let l_diferenca = lr_estoque_trans.qtd_movto - l_qtd_saldo_total
				let l_diferenca = lr_estoque_lote_ender.qtd_saldo - l_diferenca
			else
				let l_diferenca = lr_estoque_lote_ender.qtd_saldo - lr_estoque_trans.qtd_movto
			end if
			whenever error continue
			update estoque_lote_ender
			set num_ped_ven     = 0,
			num_seq_ped_ven = 0
			where estoque_lote_ender.cod_empresa        = lr_estoque_trans_end.cod_empresa
			and estoque_lote_ender.num_transac        = lr_estoque_lote_ender.num_transac
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let l_houve_erro = true
				exit foreach
				{else
				whenever error continue
				insert into estoque_lote_ender (cod_empresa         ,
				cod_item            ,
				cod_local           ,
				num_lote            ,
			endereco            ,
			num_volume          ,
			cod_grade_1         ,
			cod_grade_2         ,
			cod_grade_3         ,
			cod_grade_4         ,
			cod_grade_5         ,
			dat_hor_producao    ,
			num_ped_ven         ,
			num_seq_ped_ven     ,
			ies_situa_qtd       ,
			qtd_saldo           ,
			num_transac         ,
			ies_origem_entrada  ,
			dat_hor_validade    ,
			num_peca            ,
			num_serie           ,
			comprimento         ,
			largura             ,
			altura              ,
			diametro            ,
			dat_hor_reserv_1    ,
			dat_hor_reserv_2    ,
			dat_hor_reserv_3    ,
			qtd_reserv_1        ,
			qtd_reserv_2        ,
			qtd_reserv_3        ,
			num_reserv_1        ,
			num_reserv_2        ,
			num_reserv_3        ,
			tex_reservado       )
			values (lr_estoque_lote_ender.cod_empresa         ,
			lr_estoque_lote_ender.cod_item            ,
			lr_estoque_lote_ender.cod_local           ,
			lr_estoque_lote_ender.num_lote            ,
			lr_estoque_lote_ender.endereco            ,
			lr_estoque_lote_ender.num_volume          ,
			lr_estoque_lote_ender.cod_grade_1         ,
			lr_estoque_lote_ender.cod_grade_2         ,
			lr_estoque_lote_ender.cod_grade_3         ,
			lr_estoque_lote_ender.cod_grade_4         ,
			lr_estoque_lote_ender.cod_grade_5         ,
			lr_estoque_lote_ender.dat_hor_producao    ,
			lr_estoque_lote_ender.num_ped_ven         ,
			lr_estoque_lote_ender.num_seq_ped_ven     ,
			lr_estoque_lote_ender.ies_situa_qtd       ,
			l_diferenca                               , #qtd_saldo
			0                                         ,
			lr_estoque_lote_ender.ies_origem_entrada  ,
			lr_estoque_lote_ender.dat_hor_validade    ,
			lr_estoque_lote_ender.num_peca            ,
			lr_estoque_lote_ender.num_serie           ,
			lr_estoque_lote_ender.comprimento         ,
			lr_estoque_lote_ender.largura             ,
			lr_estoque_lote_ender.altura              ,
			lr_estoque_lote_ender.diametro            ,
			lr_estoque_lote_ender.dat_hor_reserv_1    ,
			lr_estoque_lote_ender.dat_hor_reserv_2    ,
			lr_estoque_lote_ender.dat_hor_reserv_3    ,
			lr_estoque_lote_ender.qtd_reserv_1        ,
			lr_estoque_lote_ender.qtd_reserv_2        ,
			lr_estoque_lote_ender.qtd_reserv_3        ,
			lr_estoque_lote_ender.num_reserv_1        ,
			lr_estoque_lote_ender.num_reserv_2        ,
			lr_estoque_lote_ender.num_reserv_3        ,
			lr_estoque_lote_ender.tex_reservado       )
			whenever error stop
			if sqlca.sqlcode <> 0 then
				let l_houve_erro = true
				exit foreach
			end if}
		end if
	end if
end if
end foreach
whenever error stop

#free cq_est_lote_ender3

if l_houve_erro = false then
return true
else
return false
end if

end function

#-----------------------------------------------------------------------------------------------#
function sup3760_busca_local_motivo_remessa(l_cod_empresa,l_cod_fornecedor, l_num_nf_remessa, l_num_sequencia_nf)
#-----------------------------------------------------------------------------------------------#

	define l_cod_empresa            like item_ret_terc.cod_empresa,
	l_num_nf_remessa         like item_ret_terc.num_nf_remessa,
	l_num_sequencia_nf       like item_ret_terc.num_sequencia_nf,
	l_cod_local_est_orig     like estoque_trans.cod_local_est_orig,
	l_ies_sit_est_orig       like estoque_trans.ies_sit_est_orig,
	l_cod_local_est_dest     like estoque_trans.cod_local_est_dest,
	l_ies_sit_est_dest       like estoque_trans.ies_sit_est_dest,
	l_cod_motivo_remessa     like item_em_terc.cod_motivo_remessa,
	l_cod_fornecedor         like item_ret_terc.cod_fornecedor

	initialize l_cod_motivo_remessa, l_cod_local_est_orig, l_ies_sit_est_orig,
	l_cod_local_est_dest, l_ies_sit_est_dest to null

	whenever error continue
	select item_em_terc.cod_motivo_remessa
	into l_cod_motivo_remessa
	from item_em_terc
	where item_em_terc.cod_empresa    = l_cod_empresa
	and item_em_terc.cod_fornecedor = l_cod_fornecedor
	and item_em_terc.num_nf         = l_num_nf_remessa
	and item_em_terc.num_sequencia  = l_num_sequencia_nf
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_cod_motivo_remessa = " "
	end if

	whenever error continue
	select motivo_remessa.cod_local_remessa,
	motivo_remessa.ies_situa_remessa,
	motivo_remessa.cod_local_retorno,
	motivo_remessa.ies_situa_retorno
	into l_cod_local_est_orig, l_ies_sit_est_orig,
	l_cod_local_est_dest, l_ies_sit_est_dest
	from motivo_remessa
	where motivo_remessa.cod_empresa        = l_cod_empresa
	and motivo_remessa.cod_motivo_remessa = l_cod_motivo_remessa
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let l_cod_local_est_orig = null
		let l_ies_sit_est_orig   = null
		let l_cod_local_est_dest = null
		let l_ies_sit_est_dest   = null
	end if

return l_cod_local_est_orig, l_ies_sit_est_orig,
	l_cod_local_est_dest, l_ies_sit_est_dest

end function

#--------------------------------------------------------------------#
#                                                                    #
#                          fun��es do wms                            #
#                                                                    #
#--------------------------------------------------------------------#

# passo 4 #
#-----------------------------------------------#
function sup3760_wms_tipo_documento(l_parametro,
	l_funcao)
#-----------------------------------------------#
	define l_parametro       char(1),
	l_funcao          char(30),
	l_altera          smallint,
	l_continua        smallint,
	l_tela            char(100),
	l_msg             char(100)

	define lr_tip_documento  record
	tip_documento char(1)
end record

initialize m_tipo_documento_old to null
let m_utiliz_regulariz_fiscal = "n"

call log130_procura_caminho("sup3760p") returning l_tela
open window w_sup3760p at 7,12 with form l_tela
attribute (border, prompt line last ,form line 1)

call log006_exibe_teclas("01,02,07", p_versao)
current window is w_sup3760p

# indica que o processo foi cancelado
let l_continua = true

if l_funcao = "modificacao" then
	if p_dados_tela.ies_nf_aguard_nfe = "a" then
		let lr_tip_documento.tip_documento = "p"
	else
		if p_dados_tela.ies_nf_aguard_nfe = "b" then
			let lr_tip_documento.tip_documento = "d"
		else
			let lr_tip_documento.tip_documento = "n"
		end if
	end if
	let m_tipo_documento_old = lr_tip_documento.tip_documento
else
	let lr_tip_documento.tip_documento = "p"
end if

let int_flag = 0
input by name lr_tip_documento.* without defaults
after field tip_documento
let m_tipo_documento = lr_tip_documento.tip_documento
# se o tipo for alterado de "normal" para "definido":
# -> verificar se o c�digo do fornecedor que est� na tela � um depositante.
# -> verificar se os itens existentes na nf pertencem ao depositante em quest�o.
if l_funcao = "modificacao" then
	if m_tipo_documento_old = "n" and
		m_tipo_documento     = "d" then
		if not sup3760_altera_normal_definitivo() then
		next field tip_documento
	end if
end if
{if m_tipo_documento_old = "n" and
m_tipo_documento     = "p" then
if not sup3760_altera_normal_provisorio() then
next field tip_documento
end if
end if}
if m_tipo_documento_old = "p" and
	m_tipo_documento     = "d" then
	if not sup3760_altera_provisorio_definitivo() then
	next field tip_documento
end if
end if
if  m_tipo_documento = "d" then
	# os 547161
	if log0040_confirm(17,40,"nota fiscal ser� utilizada para regulariza��o fiscal?") then
		let m_utiliz_regulariz_fiscal = "s"
	else
		let m_utiliz_regulariz_fiscal = "n"
	end if

end if
else
	# os 547161
	# inclus�o
	if m_tipo_documento = "d" then
		if log0040_confirm(17,40,"nota fiscal ser� utilizada para regulariza��o fiscal?") then
			let m_utiliz_regulariz_fiscal = "s"
		else
			let m_utiliz_regulariz_fiscal = "n"
		end if
	end if
end if

after input
if int_flag = 0 then
	# passo 4.1 #
	if l_parametro = "o" and
		lr_tip_documento.tip_documento = "p" then
		let p_dados_tela.ies_nf_aguard_nfe = "a"
		let l_altera = false
	else
		# passo 4.2 #
		if l_parametro = "o" and
			lr_tip_documento.tip_documento = "d" then
			let p_dados_tela.ies_nf_aguard_nfe = "b"
			let l_altera = false
		else
			# passo 4.3 #
			if l_parametro = "o" and
				lr_tip_documento.tip_documento = "n" then
				let l_altera = true
			end if
		end if
	end if
	let m_tipo_documento = lr_tip_documento.tip_documento
	if m_tipo_documento_old = "p" or
		m_tipo_documento_old = "d" then
		if m_tipo_documento  = "n" then
			let p_dados_tela.ies_nf_aguard_nfe = "1"
		end if
	end if
else
	let l_continua = false
end if
end input

#  # alimenta a vari�vel modular usada em outro processo da parte do wms
#  let p_tipo_documento = lr_tip_documento.tip_documento

close window w_sup3760p

return l_altera, l_continua

end function

#--------------------------------------------------#
function sup3760_itens_pertencem_deposit(l_deposit)
#--------------------------------------------------#
	define l_deposit         like wms_item_complemento.item_deposit,
	l_ind             smallint,
	l_status          smallint,
	l_item_nao_existe smallint,
	l_sucesso_sql     smallint,
	l_ies_item_wms    smallint

	let l_item_nao_existe = false

	for l_ind = 1 to arraylength(p_array_wms)
		if p_array_wms[l_ind].cod_item is null or p_array_wms[l_ind].cod_item = " " then
			exit for
		end if

		# verifica se � um item controlado pelo wms.
		call wms0004_item_sob_controle_wms(p_cod_empresa, p_array_wms[l_ind].cod_item)
		returning l_sucesso_sql, l_ies_item_wms

		# se o item � controlado pelo wms, verificar se pertecem ao depositante (fornecedor tela).
		if l_ies_item_wms then
			let l_status = false

			call wmst81_wms_item_complemento_busca_item(p_cod_empresa,l_deposit,p_array_wms[l_ind].cod_item clipped,1) # valida item 25 posi��es.
			returning l_status, m_item_interno
			if l_status = false  then
				# verifica se foi informado item 15 posi��es para o depositante.
				whenever error continue
				select item
				from wms_item_complemento
				where empresa = p_cod_empresa
				and deposit = l_deposit
				and item    = p_array_wms[l_ind].cod_item  # item 15 posi��es
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let l_item_nao_existe = true
					let m_item_interno = p_array_wms[l_ind].cod_item
					exit for
				end if
			end if
		end if

	end for

	if l_item_nao_existe = true then
		return false
	else
		return true
	end if
end function

# passo 5 #
#-----------------------------------------------#
function sup3760_wms_emit_cnpj_inscr_estadual()
#-----------------------------------------------#
	define l_tipo         char(1),
	l_altera       smallint,
	l_continua     smallint,
	l_cnpj         like fornecedor.num_cgc_cpf,
	l_ins_estadual like fornecedor.ins_estadual,
	l_tela         char(100),
	l_valor        char(20)

	define lr_emitente record
	cnpj           char(19),
	inscr_estadual char(16),
	emitente       char(15),
	raz_social     char(50)
end record

call log130_procura_caminho("sup3760q") returning l_tela
open window w_sup3760q at 7,2 with form l_tela
attribute (border, prompt line last ,form line 1)

call log006_exibe_teclas("01,02,07", p_versao)
current window is w_sup3760q

# indica que o processo foi cancelado
let l_continua = true

initialize lr_emitente to null
let int_flag = 0
input by name lr_emitente.cnpj,
lr_emitente.inscr_estadual,
lr_emitente.emitente,
lr_emitente.raz_social without defaults

after input
if int_flag = 0 then
	if lr_emitente.cnpj is null or
		lr_emitente.cnpj = " " then
		call log0030_processa_mensagem("cnpj/cpf n�o preenchido.","exclamation",0)
	next field cnpj
end if

if lr_emitente.inscr_estadual is null or
	lr_emitente.inscr_estadual = " " then
	whenever error continue
	select cod_fornecedor, raz_social
	into lr_emitente.emitente,
	lr_emitente.raz_social
	from fornecedor
	where num_cgc_cpf  = lr_emitente.cnpj
	and ins_estadual is null
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_mensagem("emitente n�o cadastrado.","exclamation",0)
	next field cnpj
else
	display by name lr_emitente.*
end if
else
	whenever error continue
	select cod_fornecedor, raz_social
	into lr_emitente.emitente,
	lr_emitente.raz_social
	from fornecedor
	where num_cgc_cpf  = lr_emitente.cnpj
	and ins_estadual = lr_emitente.inscr_estadual
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_mensagem("emitente n�o cadastrado.","exclamation",0)
	next field cnpj
else
	display by name lr_emitente.*
end if
end if
end if

before input
call sup3760_save_cur_field_name('lr_emitente.cnpj,')
on key (control-z,f4)
call sup3760_wms_popup("sup3760q") returning lr_emitente.cnpj,
lr_emitente.inscr_estadual,
lr_emitente.emitente,
lr_emitente.raz_social
display by name lr_emitente.*

end input

if int_flag = 0 then
	let l_continua = true
else
	let l_continua = false
end if

close window w_sup3760q

return lr_emitente.emitente, lr_emitente.raz_social, l_continua

end function

#----------------------------------#
function sup3760_wms_popup(l_tela)
#----------------------------------#
	define l_tela char(10)

	define l_cnpj           like fornecedor.num_cgc_cpf,
	l_inscr_estadual like fornecedor.ins_estadual,
	l_emitente       like fornecedor.cod_fornecedor,
	l_raz_social     like fornecedor.raz_social,
	l_fornecedor     like fornecedor.cod_fornecedor

	case l_tela
	when "sup3760q"
	let l_fornecedor = sup162_popup_fornecedor()
	current window is w_sup3760q
	if l_fornecedor is not null then
		whenever error continue
		select num_cgc_cpf, ins_estadual,
		cod_fornecedor, raz_social
		into l_cnpj,
		l_inscr_estadual,
		l_emitente,
		l_raz_social
		from fornecedor
		where cod_fornecedor = l_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log0030_processa_mensagem("emitente n�o cadastrado.","exclamation",0)
		end if
	end if

	when "sup3760r"
	let l_fornecedor = wms6130_popup_forn_cli_depos("3")
	current window is w_sup3760r
	if l_fornecedor is not null then
		whenever error continue
		select num_cgc_cpf, ins_estadual,
		cod_fornecedor, raz_social
		into l_cnpj,
		l_inscr_estadual,
		l_emitente,
		l_raz_social
		from fornecedor
		where cod_fornecedor = l_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log0030_processa_mensagem("depositante n�o cadastrado.","exclamation",0)
		end if
	end if

	when "sup3760r2"
	let l_fornecedor = wms6130_popup_forn_cli_depos("6")
	current window is w_sup3760r
	if l_fornecedor is not null then
		whenever error continue
		select fornecedor.num_cgc_cpf,
		fornecedor.ins_estadual,
		fornecedor.cod_fornecedor,
		vdp_cli_fornec_cpl.razao_social_reduz
		into l_cnpj,
		l_inscr_estadual,
		l_emitente,
		l_raz_social
		from fornecedor,
		vdp_cli_fornec_cpl
		where fornecedor.cod_fornecedor = l_fornecedor
		and vdp_cli_fornec_cpl.cliente_fornecedor = l_fornecedor
		and vdp_cli_fornec_cpl.tip_cadastro = 'f'
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log0030_processa_mensagem("respons�vel n�o cadastrado.","exclamation",0)
		end if
	end if

end case

return l_cnpj,
l_inscr_estadual,
l_emitente,
l_raz_social

end function

# passo 7 #
# passo 8 #
#----------------------------------------------------#
function sup3760_wms_busca_cfop(l_segmto_utilizacao)
#----------------------------------------------------#
	define l_cod_pais_uni_feder       char(3),
	l_cod_pais_fornecedor      char(3),
	l_cod_uni_feder_fornecedor char(2),
	l_parametro_cfop           char(5),
	l_parametro_cfop_compl     char(5),
	l_segmto_utilizacao        char(1),
	l_status                   smallint

	if m_wms_instal = "s" then
		initialize l_parametro_cfop, l_parametro_cfop_compl to null
		if l_segmto_utilizacao = "o" and
			p_dados_tela.ies_nf_aguard_nfe = "a" then

			call log2250_busca_parametro(p_cod_empresa,"cfop_nota_fiscal_provis") returning l_parametro_cfop, l_status
			call log2250_busca_parametro(p_cod_empresa,"cfop_compl_nota_fiscal_provis") returning l_parametro_cfop_compl, l_status
		else
			if l_segmto_utilizacao = "o" and
				p_dados_tela.ies_nf_aguard_nfe = "b" then

				call log2250_busca_parametro(p_cod_empresa,"cfop_nota_fiscal_definit") returning l_parametro_cfop, l_status
				call log2250_busca_parametro(p_cod_empresa,"cfop_compl_nota_fiscal_definit") returning l_parametro_cfop_compl, l_status
			end if
		end if

		if ((l_parametro_cfop       is not null and
			l_parametro_cfop       <> ' ') and
			(l_parametro_cfop_compl is not null and
			l_parametro_cfop_compl <> ' ')) then
			# caso ambos os par�metros tenham algum valor ent�o dever�
			# buscar ...
			# passo 7.1 #
			whenever error continue
			select cod_pais
			into l_cod_pais_uni_feder
			from uni_feder
			where cod_uni_feder = p_empresa.uni_feder
			whenever error stop
			if sqlca.sqlcode = 0 then
				# passo 7.2 #
				whenever error continue
				select cod_pais, cod_uni_feder
				into l_cod_pais_fornecedor, l_cod_uni_feder_fornecedor
				from fornecedor
				where cod_fornecedor = p_dados_tela.cod_fornecedor
				whenever error stop
				if sqlca.sqlcode = 0 then
					if l_cod_pais_uni_feder <>  l_cod_pais_fornecedor then
						let p_dados_tela.cod_operacao     = "7.", l_parametro_cfop
						let p_dados_tela.cod_fiscal_compl = l_parametro_cfop_compl
					else
						if p_empresa.uni_feder = l_cod_uni_feder_fornecedor then
							let p_dados_tela.cod_operacao  = "5.", l_parametro_cfop
						else
							let p_dados_tela.cod_operacao  = "6.", l_parametro_cfop
						end if
						let p_dados_tela.cod_fiscal_compl = l_parametro_cfop_compl
					end if
				end if
			end if
		end if
	end if

end function

# passo 9  #
# passo 10 #
#----------------------------------#
function sup3760_wms_depositante()
#----------------------------------#
	define l_parametro       char(1),
	l_status          smallint,
	l_parametro_texto char(1),
	l_contrato        like wms_contrato.contrato,
	l_regime_armazen  smallint,
	l_tipo            char(1),
	l_tela            char(100),
	l_msg             char(100),
	l_deposit         like fornecedor.cod_fornecedor,
	l_cgc             like empresa.num_cgc,
	l_ins_estadual    like empresa.ins_estadual

	define lr_depositante record
	num_docto_provisorio        like nf_sup.num_nf,
	serie_docto_provisorio      like nf_sup.ser_nf,
	subserie_docto_provisorio   like nf_sup.ssr_nf,
	especie_docto_provisorio    like nf_sup.ies_especie_nf,
	emitente                    like fornecedor.cod_fornecedor,
	raz_social                  char(50),
	cnpj                        char(19),
	inscr_estadual              char(16),
	depositante                 char(15),
	den_depositante             like fornecedor.raz_social
end record

initialize l_tipo to null
if m_wms_instal = "s" then

	call log130_procura_caminho("sup3760r") returning l_tela
	open window w_sup3760r at 8,2 with form l_tela
	attribute (border, prompt line last ,form line 1)

	call log006_exibe_teclas("01,02,07", p_versao)
	current window is w_sup3760r

	let lr_depositante.num_docto_provisorio      = p_dados_tela.num_nf
	let lr_depositante.serie_docto_provisorio    = p_dados_tela.ser_nf
	let lr_depositante.subserie_docto_provisorio = p_dados_tela.ssr_nf
	let lr_depositante.especie_docto_provisorio  = p_dados_tela.ies_especie_nf
	let lr_depositante.emitente                  = p_dados_tela.cod_fornecedor
	whenever error continue
	select raz_social_reduz
	into lr_depositante.raz_social
	from fornecedor
	where cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let lr_depositante.raz_social = " "
	end if

	whenever error continue
	select cod_depositante
	into lr_depositante.depositante
	from ar_depos
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> notfound then
		call log003_err_sql("select","ar_depos")
	end if

	call log2250_busca_parametro(p_cod_empresa,"iden_emit_cnpj_inscr_estadual") returning l_parametro, l_status
	let int_flag = 0
	input by name lr_depositante.* without defaults

	before field cnpj
	if l_parametro = "n" then
	next field depositante
end if

call sup3760_save_cur_field_name('cnpj')
before field inscr_estadual
if l_parametro = "n" then
next field depositante
end if
call sup3760_save_cur_field_name('inscr_estadual')

before field depositante
if l_parametro = "s" then
next field den_depositante
end if
if m_wms_instal = "s" and m_segmento = "i" then
	# se for ind�stria, sugere o depositante como sendo a pr�pria empresa
	whenever error continue
	select fornecedor.cod_fornecedor
	into l_deposit
	from fornecedor
	inner join empresa
	on empresa.num_cgc      = fornecedor.num_cgc_cpf
	and empresa.ins_estadual = fornecedor.ins_estadual
	where empresa.cod_empresa = p_cod_empresa
	and fornecedor.ies_fornec_ativo = 'a'
	whenever error stop
	if sqlca.sqlcode = 0 then
		let lr_depositante.depositante = l_deposit
		if supm2_fornecedor_leitura(l_deposit,true,1) then
			let lr_depositante.den_depositante = supm2_fornecedor_get_raz_social()
		else
			let lr_depositante.den_depositante = ''
		end if
		display lr_depositante.depositante to depositante
		display lr_depositante.den_depositante to den_depositante
	end if
end if
call sup3760_save_cur_field_name('depositante')

after field depositante
if lr_depositante.depositante is null or
	lr_depositante.depositante = '' then
	display " " to depositante
end if
if m_alterou_tipo_modif then
	if m_tipo_documento_old = "n" or m_tipo_documento_old = "d" then
		if m_tipo_documento  = "p" then
			if not sup3760_itens_pertencem_deposit(lr_depositante.depositante) then
				initialize l_msg to null
				let l_msg = "item ", m_item_interno clipped, " n�o pertence ao depositante da nota fiscal."
				call log0030_processa_mensagem(l_msg,"exclamation",0)
			next field depositante
		end if
	end if
end if
end if

after input
if int_flag = 0 then
	let m_possui_regime_filial = false
	if l_parametro = 's' then
		if lr_depositante.cnpj is null or
			lr_depositante.cnpj = " " then
			call log0030_processa_mensagem("cnpj/cpf n�o preenchido.","exclamation",0)
		next field cnpj
	end if

	if lr_depositante.inscr_estadual is null or
		lr_depositante.inscr_estadual = " " then
		whenever error continue
		select cod_fornecedor, raz_social
		into lr_depositante.depositante,
		lr_depositante.den_depositante
		from fornecedor
		where num_cgc_cpf = lr_depositante.cnpj
		and ins_estadual is null
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log0030_processa_mensagem("depositante n�o cadastrado.","exclamation",0)
		next field cnpj
	else
		display by name lr_depositante.*
	end if
else
	whenever error continue
	select cod_fornecedor, raz_social
	into lr_depositante.depositante,
	lr_depositante.den_depositante
	from fornecedor
	where num_cgc_cpf  = lr_depositante.cnpj
	and ins_estadual = lr_depositante.inscr_estadual
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_mensagem("depositante n�o cadastrado.","exclamation",0)
	next field cnpj
else
	display by name lr_depositante.*
end if
end if
#                 if lr_depositante.depositante = lr_depositante.emitente then
#                    call log0030_processa_mensagem("depositante deve ser diferente do emitente.","exclamation",0)
#                    next field cnpj
#                 end if

# buscar na tabela sup_par_fornecedor
# se o c�digo informado � de um depositante
whenever error continue
select parametro_texto
into l_parametro_texto
from sup_par_fornecedor
where empresa    = "se"
and fornecedor = lr_depositante.depositante
and parametro  = "ies_depositante"
whenever error stop
if sqlca.sqlcode = 0        or
	sqlca.sqlcode = notfound then
	if l_parametro_texto = "n" then
		call log0030_processa_mensagem("emitente informado n�o � um depositante.","exclamation",0)
	next field cnpj
end if
end if

call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
lr_depositante.depositante,
today,
0) returning l_contrato, l_status
if l_contrato = "0" then
	call log0030_processa_mensagem("depositante n�o possui contrato ativo.","exclamation",0)
next field cnpj
else
	if  m_segmento <> "i" then # marcegaglia 14/07
		let m_possui_regime_filial = false
		if wmsm15_wms_contrato_leitura(p_cod_empresa,
			wmst15_wms_contrato_busca_transacao(p_cod_empresa,l_contrato) ,
			true,
			1) then
			if wmsm15_wms_contrato_get_regime_armazen() = "f" then
				call log0030_processa_mensagem("regime de armazenagem deste depositante � filial, a nota fiscal ser� considerada como definitiva.","exclamation",0)
				let l_tipo = "b"
				let m_possui_regime_filial = true
			end if
		end if
	end if
end if
else
	whenever error continue
	select cod_fornecedor, raz_social
	into lr_depositante.depositante,
	lr_depositante.den_depositante
	from fornecedor
	where cod_fornecedor = lr_depositante.depositante
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_mensagem("depositante n�o cadastrado.","exclamation",0)
	next field depositante
else
	display by name lr_depositante.*
end if

#                 if lr_depositante.depositante = lr_depositante.emitente then
#                    call log0030_processa_mensagem("depositante deve ser diferente do emitente.","exclamation",0)
#                    next field cnpj
#                 end if

# buscar na tabela sup_par_fornecedor
# se o c�digo informado � de um depositante
whenever error continue
select parametro_texto
into l_parametro_texto
from sup_par_fornecedor
where empresa    = "se"
and fornecedor = lr_depositante.depositante
and parametro  = "ies_depositante"
whenever error stop
if sqlca.sqlcode = 0        or
	sqlca.sqlcode = notfound then
	if l_parametro_texto = "n" then
		call log0030_processa_mensagem("emitente informado n�o � um depositante.","exclamation",0)
	next field cnpj
end if
end if

call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
lr_depositante.depositante,
today,
0) returning l_contrato, l_status
if l_contrato = "0" then
	call log0030_processa_mensagem("depositante n�o possui contrato ativo.","exclamation",0)
next field cnpj
else
	if  m_segmento <> "i" then # marcegaglia 14/07
		let m_possui_regime_filial = false
		if wmsm15_wms_contrato_leitura(p_cod_empresa,
			wmst15_wms_contrato_busca_transacao(p_cod_empresa,l_contrato) ,
			true,
			1) then
			if wmsm15_wms_contrato_get_regime_armazen() = "f" then
				call log0030_processa_mensagem("regime de armazenagem deste depositante � filial, a nota fiscal ser� considerada como definitiva.","exclamation",0)
				let l_tipo = "b"
				let m_possui_regime_filial = true
			end if
		end if
	end if
end if
end if
end if

on key (control-z,f4)
call sup3760_wms_popup("sup3760r") returning lr_depositante.cnpj,
lr_depositante.inscr_estadual,
lr_depositante.depositante,
lr_depositante.den_depositante
if l_parametro = 'n' then
	let lr_depositante.cnpj           = null
	let lr_depositante.inscr_estadual = null
end if

display by name lr_depositante.*

end input

end if

close window w_sup3760r

# alimenta a vai�vel modular como depositante informado na tela
let m_wms_depositante = lr_depositante.depositante

return l_tipo, (not int_flag)

end function

#------------------------------------------------------#
function sup3760_wms_depositante_com_troca_pagamento()
#------------------------------------------------------#
	define l_parametro       char(1),
	l_status          smallint,
	l_parametro_texto char(1),
	l_contrato        like wms_contrato.contrato,
	l_regime_armazen  smallint,
	l_tipo            char(1),
	l_tela            char(100),
	l_msg             char(100),
	l_deposit         like fornecedor.cod_fornecedor,
	l_cgc             like empresa.num_cgc,
	l_ins_estadual    like empresa.ins_estadual,
	l_zoom_forn_depos char(01),
	l_cnpj_outro      like fornecedor.num_cgc_cpf,
	l_inscricao_outro like fornecedor.ins_estadual

	define lr_depositante record
	num_docto_provisorio        like nf_sup.num_nf,
	serie_docto_provisorio      like nf_sup.ser_nf,
	subserie_docto_provisorio   like nf_sup.ssr_nf,
	especie_docto_provisorio    like nf_sup.ies_especie_nf,
	emitente                    like fornecedor.cod_fornecedor,
	raz_social                  char(50),
	cnpj                        char(19),
	inscr_estadual              char(16),
	depositante                 char(15),
	resp_pgto_armazenagem       char(01),
	outro_resp_pgto_armaz       char(15),
	raz_social_outro_resp       char(20),
	dias_prazo_armazenagem      smallint,
	transf_pgto_apos_prazo      char(01),
	den_depositante             like fornecedor.raz_social #este campo foi colocado por �ltimo na vari�vel para que ele fa�a o after input automaticamente.
end record

initialize l_tipo to null
if m_wms_instal = "s" then

	call log130_procura_caminho("sup3760r2") returning l_tela
	open window w_sup3760r at 8,2 with form l_tela
	attribute (border, prompt line last ,form line 1)

	call log006_exibe_teclas("01,02,07", p_versao)
	current window is w_sup3760r

	let lr_depositante.num_docto_provisorio      = p_dados_tela.num_nf
	let lr_depositante.serie_docto_provisorio    = p_dados_tela.ser_nf
	let lr_depositante.subserie_docto_provisorio = p_dados_tela.ssr_nf
	let lr_depositante.especie_docto_provisorio  = p_dados_tela.ies_especie_nf
	let lr_depositante.emitente                  = p_dados_tela.cod_fornecedor
	whenever error continue
	select raz_social_reduz
	into lr_depositante.raz_social
	from fornecedor
	where cod_fornecedor = p_dados_tela.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		let lr_depositante.raz_social = " "
	end if

	whenever error continue
	select cod_depositante
	into lr_depositante.depositante
	from ar_depos
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> notfound then
		call log003_err_sql("select","ar_depos")
	end if

	call wms6521_busca_dados_troca_pagamento(p_cod_empresa,p_dados_tela.num_aviso_rec)
returning lr_depositante.resp_pgto_armazenagem,
	lr_depositante.outro_resp_pgto_armaz,
	lr_depositante.raz_social_outro_resp,
	lr_depositante.dias_prazo_armazenagem,
	lr_depositante.transf_pgto_apos_prazo

	if lr_depositante.transf_pgto_apos_prazo is null or
		lr_depositante.transf_pgto_apos_prazo = ' ' then
		let lr_depositante.transf_pgto_apos_prazo = 'n'
	end if

	call log2250_busca_parametro(p_cod_empresa,"iden_emit_cnpj_inscr_estadual") returning l_parametro, l_status
	let int_flag = 0
	input by name lr_depositante.* without defaults

	before field cnpj
	if l_parametro = "n" then
	next field depositante
end if

call sup3760_save_cur_field_name('cnpj')
before field inscr_estadual
if l_parametro = "n" then
next field depositante
end if
call sup3760_save_cur_field_name('inscr_estadual')

before field depositante
let m_possui_regime_filial = false
if l_parametro = 's' then
	if lr_depositante.cnpj is null or
		lr_depositante.cnpj = " " then
		call log0030_processa_mensagem("cnpj/cpf n�o preenchido.","exclamation",0)
	next field cnpj
end if

if lr_depositante.inscr_estadual is null or
	lr_depositante.inscr_estadual = " " then
	whenever error continue
	select cod_fornecedor, raz_social
	into lr_depositante.depositante,
	lr_depositante.den_depositante
	from fornecedor
	where num_cgc_cpf = lr_depositante.cnpj
	and ins_estadual is null
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_mensagem("depositante n�o cadastrado.","exclamation",0)
	next field cnpj
else
	display by name lr_depositante.*
end if
else
	whenever error continue
	select cod_fornecedor, raz_social
	into lr_depositante.depositante,
	lr_depositante.den_depositante
	from fornecedor
	where num_cgc_cpf  = lr_depositante.cnpj
	and ins_estadual = lr_depositante.inscr_estadual
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_mensagem("depositante n�o cadastrado.","exclamation",0)
	next field cnpj
else
	display by name lr_depositante.*
end if
end if
#                 if lr_depositante.depositante = lr_depositante.emitente then
#                    call log0030_processa_mensagem("depositante deve ser diferente do emitente.","exclamation",0)
#                    next field cnpj
#                 end if

# buscar na tabela sup_par_fornecedor
# se o c�digo informado � de um depositante
whenever error continue
select parametro_texto
into l_parametro_texto
from sup_par_fornecedor
where empresa    = "se"
and fornecedor = lr_depositante.depositante
and parametro  = "ies_depositante"
whenever error stop
if sqlca.sqlcode = 0        or
	sqlca.sqlcode = notfound then
	if l_parametro_texto = "n" then
		call log0030_processa_mensagem("emitente informado n�o � um depositante.","exclamation",0)
	next field cnpj
end if
end if

call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
lr_depositante.depositante,
today,
0) returning l_contrato, l_status
if l_contrato = "0" then
	call log0030_processa_mensagem("depositante n�o possui contrato ativo.","exclamation",0)
next field cnpj
else
	if  m_segmento <> "i" then # marcegaglia 14/07
		let m_possui_regime_filial = false
		if wmsm15_wms_contrato_leitura(p_cod_empresa,
			wmst15_wms_contrato_busca_transacao(p_cod_empresa,l_contrato) ,
			true,
			1) then
			if wmsm15_wms_contrato_get_regime_armazen() = "f" then
				call log0030_processa_mensagem("regime de armazenagem deste depositante � filial, a nota fiscal ser� considerada como definitiva.","exclamation",0)
				let l_tipo = "b"
				let m_possui_regime_filial = true
			end if
		end if
	end if
end if
if fgl_lastkey() = fgl_keyval("up") or
	fgl_lastkey() = fgl_keyval("left") then
next field inscr_estadual
else
next field resp_pgto_armazenagem
end if
end if
if m_wms_instal = "s" and m_segmento = "i" then
	# se for ind�stria, sugere o depositante como sendo a pr�pria empresa
	whenever error continue
	select fornecedor.cod_fornecedor
	into l_deposit
	from fornecedor
	inner join empresa
	on empresa.num_cgc      = fornecedor.num_cgc_cpf
	and empresa.ins_estadual = fornecedor.ins_estadual
	where empresa.cod_empresa = p_cod_empresa
	and fornecedor.ies_fornec_ativo = 'a'
	whenever error stop
	if  sqlca.sqlcode = 0 then
		let lr_depositante.depositante = l_deposit
		if supm2_fornecedor_leitura(l_deposit,true,1) then
			let lr_depositante.den_depositante = supm2_fornecedor_get_raz_social()
		else
			let lr_depositante.den_depositante = ''
		end if
		display lr_depositante.depositante to depositante
		display lr_depositante.den_depositante to den_depositante
	end if
end if

call sup3760_save_cur_field_name('depositante')
after field depositante
if l_parametro = 'n' then
	whenever error continue
	select cod_fornecedor, raz_social
	into lr_depositante.depositante,
	lr_depositante.den_depositante
	from fornecedor
	where cod_fornecedor = lr_depositante.depositante
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_mensagem("depositante n�o cadastrado.","exclamation",0)
	next field depositante
else
	display by name lr_depositante.*
end if

#                 if lr_depositante.depositante = lr_depositante.emitente then
#                    call log0030_processa_mensagem("depositante deve ser diferente do emitente.","exclamation",0)
#                    next field cnpj
#                 end if

# buscar na tabela sup_par_fornecedor
# se o c�digo informado � de um depositante
whenever error continue
select parametro_texto
into l_parametro_texto
from sup_par_fornecedor
where empresa    = "se"
and fornecedor = lr_depositante.depositante
and parametro  = "ies_depositante"
whenever error stop
if sqlca.sqlcode = 0        or
	sqlca.sqlcode = notfound then
	if l_parametro_texto = "n" then
		call log0030_processa_mensagem("emitente informado n�o � um depositante.","exclamation",0)
	next field cnpj
end if
end if

call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
lr_depositante.depositante,
today,
0) returning l_contrato, l_status
if l_contrato = "0" then
	call log0030_processa_mensagem("depositante n�o possui contrato ativo.","exclamation",0)
next field cnpj
else
	if  m_segmento <> "i" then # marcegaglia 14/07
		let m_possui_regime_filial = false
		if wmsm15_wms_contrato_leitura(p_cod_empresa,
			wmst15_wms_contrato_busca_transacao(p_cod_empresa,l_contrato) ,
			true,
			1) then
			if wmsm15_wms_contrato_get_regime_armazen() = "f" then
				call log0030_processa_mensagem("regime de armazenagem deste depositante � filial, a nota fiscal ser� considerada como definitiva.","exclamation",0)
				let l_tipo = "b"
				let m_possui_regime_filial = true
			end if
		end if
	end if
end if
end if
if lr_depositante.depositante is null or
	lr_depositante.depositante = '' then
	display " " to depositante
else
	if supm2_fornecedor_leitura(lr_depositante.depositante,true,1) then
		let lr_depositante.den_depositante = supm2_fornecedor_get_raz_social()
	else
		let lr_depositante.den_depositante = ''
	end if
	display lr_depositante.den_depositante to den_depositante
end if
if m_alterou_tipo_modif then
	if m_tipo_documento_old = "n" or m_tipo_documento_old = "d" then
		if m_tipo_documento  = "p" then
			if not sup3760_itens_pertencem_deposit(lr_depositante.depositante) then
				initialize l_msg to null
				let l_msg = "item ", m_item_interno clipped, " n�o pertence ao depositante da nota fiscal."
				call log0030_processa_mensagem(l_msg,"exclamation",0)
			next field depositante
		end if
	end if
end if
end if

before field resp_pgto_armazenagem
if not wms60023_depositante_permite_troca_pagamento(p_cod_empresa,
	lr_depositante.depositante,
	0) then
	let lr_depositante.resp_pgto_armazenagem  = null
	let lr_depositante.outro_resp_pgto_armaz  = null
	let lr_depositante.raz_social_outro_resp  = null
	let lr_depositante.dias_prazo_armazenagem = null
	let lr_depositante.transf_pgto_apos_prazo = null
	display by name lr_depositante.resp_pgto_armazenagem
	display by name lr_depositante.outro_resp_pgto_armaz
	display by name lr_depositante.raz_social_outro_resp
	display by name lr_depositante.dias_prazo_armazenagem
	display by name lr_depositante.transf_pgto_apos_prazo
next field den_depositante
else
	if lr_depositante.resp_pgto_armazenagem is null or
		lr_depositante.resp_pgto_armazenagem = ' ' then
		let lr_depositante.resp_pgto_armazenagem = 'f'
	end if
end if

call sup3760_save_cur_field_name('resp_pgto_armazenagem')
after field resp_pgto_armazenagem
if lr_depositante.resp_pgto_armazenagem <> "o" then
	let lr_depositante.outro_resp_pgto_armaz = null
	let lr_depositante.raz_social_outro_resp = null
	display by name lr_depositante.outro_resp_pgto_armaz
	display by name lr_depositante.raz_social_outro_resp
	if fgl_lastkey() = fgl_keyval("up") or
		fgl_lastkey() = fgl_keyval("left") then
	next field depositante
else
next field dias_prazo_armazenagem
end if
end if

before field outro_resp_pgto_armaz
if lr_depositante.resp_pgto_armazenagem <> "o" then
	if fgl_lastkey() = fgl_keyval("up") or
		fgl_lastkey() = fgl_keyval("left") then
		let lr_depositante.outro_resp_pgto_armaz = null
		let lr_depositante.raz_social_outro_resp = null
		display by name lr_depositante.outro_resp_pgto_armaz
		display by name lr_depositante.raz_social_outro_resp
	next field resp_pgto_armazenagem
else
next field dias_prazo_armazenagem
end if
end if

call sup3760_save_cur_field_name('outro_resp_pgto_armaz')
after field outro_resp_pgto_armaz
if lr_depositante.outro_resp_pgto_armaz is not null and
	lr_depositante.outro_resp_pgto_armaz <> " " then
	if find4glfunction('wms6521_verifica_outro_responsavel') then
		call wms6521_verifica_outro_responsavel(lr_depositante.outro_resp_pgto_armaz)
		returning l_status,
		lr_depositante.raz_social_outro_resp
	end if
	if not l_status then
		call log0030_mensagem("respons�vel n�o encontrado.","error")
	next field outro_resp_pgto_armaz
else
	display by name lr_depositante.raz_social_outro_resp
	if lr_depositante.outro_resp_pgto_armaz = lr_depositante.depositante then
		call log0030_mensagem("quando selecionada a op��o 'outro' n�o pode ser informado o pr�prio depositante.","error")
	next field outro_resp_pgto_armaz
end if
if lr_depositante.outro_resp_pgto_armaz = p_dados_tela.cod_fornecedor then
	call log0030_mensagem("quando selecionada a op��o 'outro' n�o pode ser informado o pr�prio fornecedor.","error")
next field outro_resp_pgto_armaz
end if
end if
else
	let lr_depositante.raz_social_outro_resp = null
	display by name lr_depositante.raz_social_outro_resp
end if

before field dias_prazo_armazenagem
call sup3760_save_cur_field_name('dias_prazo_armazenagem')
after field dias_prazo_armazenagem
if lr_depositante.dias_prazo_armazenagem < 0 then
	call log0030_mensagem("informe prazo de armazenagem maior ou igual a zero.","error")
next field dias_prazo_armazenagem
else
	if lr_depositante.dias_prazo_armazenagem is not null and
		lr_depositante.dias_prazo_armazenagem <> 0 and
		lr_depositante.resp_pgto_armazenagem = "d" then
		call log0030_mensagem("quando o respons�vel � o pr�prio depositante n�o � permitido informar o prazo de armazenagem.","error")
		let lr_depositante.dias_prazo_armazenagem = null
		display by name lr_depositante.dias_prazo_armazenagem
	next field dias_prazo_armazenagem
end if
end if
before field transf_pgto_apos_prazo
call sup3760_save_cur_field_name('transf_pgto_apos_prazo')

after field transf_pgto_apos_prazo
if (lr_depositante.dias_prazo_armazenagem is null or
	lr_depositante.dias_prazo_armazenagem = 0) and
	lr_depositante.transf_pgto_apos_prazo = "s" then
	call log0030_mensagem("somente � permitido transferir o pagamento ap�s o prazo quando o n�mero de dias � informado.","error")
	let lr_depositante.transf_pgto_apos_prazo = "n"
	display by name lr_depositante.transf_pgto_apos_prazo
next field transf_pgto_apos_prazo
end if

after input
if int_flag = 0 then
	if lr_depositante.resp_pgto_armazenagem = "o" and
		(lr_depositante.outro_resp_pgto_armaz is null or
		lr_depositante.outro_resp_pgto_armaz = " ") then
		call log0030_mensagem("informe o respons�vel pelo pagamento.","error")
	next field outro_resp_pgto_armaz
end if
if lr_depositante.dias_prazo_armazenagem < 0 then
	call log0030_mensagem("informe prazo de armazenagem maior ou igual a zero.","error")
next field dias_prazo_armazenagem
end if
if lr_depositante.dias_prazo_armazenagem is not null and
	lr_depositante.dias_prazo_armazenagem <> 0 and
	lr_depositante.resp_pgto_armazenagem = "d" then
	call log0030_mensagem("quando o respons�vel � o pr�prio depositante n�o � permitido informar o prazo de armazenagem.","error")
	let lr_depositante.dias_prazo_armazenagem = null
	display by name lr_depositante.dias_prazo_armazenagem
next field dias_prazo_armazenagem
end if
if (lr_depositante.dias_prazo_armazenagem is null or
	lr_depositante.dias_prazo_armazenagem = 0) and
	lr_depositante.transf_pgto_apos_prazo = "s" then
	call log0030_mensagem("somente � permitido transferir o pagamento ap�s o prazo quando o n�mero de dias � informado.","error")
	let lr_depositante.transf_pgto_apos_prazo = "n"
	display by name lr_depositante.transf_pgto_apos_prazo
next field transf_pgto_apos_prazo
end if
end if

on key (control-z,f4)
let l_zoom_forn_depos = null
case
when infield(cnpj)
let l_zoom_forn_depos = "d"
when infield(inscr_estadual)
let l_zoom_forn_depos = "d"
when infield(depositante)
let l_zoom_forn_depos = "d"
when infield(outro_resp_pgto_armaz)
let l_zoom_forn_depos = "f"
end case
if l_zoom_forn_depos is not null then
	if l_zoom_forn_depos = "d" then
		call sup3760_wms_popup("sup3760r") returning lr_depositante.cnpj,
		lr_depositante.inscr_estadual,
		lr_depositante.depositante,
		lr_depositante.den_depositante
		if l_parametro = 'n' then
			let lr_depositante.cnpj           = null
			let lr_depositante.inscr_estadual = null
		end if
	else
		call sup3760_wms_popup("sup3760r2") returning l_cnpj_outro,
		l_inscricao_outro,
		lr_depositante.outro_resp_pgto_armaz,
		lr_depositante.raz_social_outro_resp
	end if
	display by name lr_depositante.*
end if

end input

end if

close window w_sup3760r

# alimenta a vai�vel modular como depositante informado na tela
let m_wms_depositante = lr_depositante.depositante
let mr_troca_pgto.resp_pgto_armazenagem  = lr_depositante.resp_pgto_armazenagem
let mr_troca_pgto.outro_resp_pgto_armaz  = lr_depositante.outro_resp_pgto_armaz
let mr_troca_pgto.dias_prazo_armazenagem = lr_depositante.dias_prazo_armazenagem
let mr_troca_pgto.transf_pgto_apos_prazo = lr_depositante.transf_pgto_apos_prazo

return l_tipo, (not int_flag)
end function

# passo 17 #
#------------------------------------------#
function sup376_insere_array_wms(p_funcao)
#------------------------------------------#
	define p_funcao                        char(30),
	p_val_liquido_item              like aviso_rec.val_liquido_item,
	p_val_liquido_ant               like aviso_rec.val_liquido_item,
	p_par_forn                      char(01),
	p_ind_ant                       smallint,
	l_fat_conver_consig             like item_fornec.fat_conver_unid,
	l_sucesso                       smallint,
	l_item_wms                      smallint,
	l_ind_envio_interf              smallint,
	l_cod_cla_fisc_nf               like aviso_rec.cod_cla_fisc_nf,
	l_qtd_declarad_nf               like aviso_rec.qtd_declarad_nf,
	l_val_liquido_item              like aviso_rec.val_liquido_item,
	l_pct_ipi                       like aviso_rec.pct_ipi_tabela,
	l_ies_item_estoq                like aviso_rec.ies_item_estoq,
	l_item_balanca                  like sup_ctr_balanca.item,
	l_pes_liquido                   like sup_ctr_balanca.pesagem_entrada,
	l_status                        smallint,
	l_dat_fim_valid                 like cod_fiscal_sup.dat_fim_valid,
	l_den_item                      like item.den_item,
	l_aux                           smallint,
	l_val_tot_piscofins             decimal(17,6),
	l_grade                         smallint,
	l_perg_it_movto_estoq           char(1),         #vanderlei - os 400614 #
	l_entra_grades                  smallint,
	l_ies_situacao                  char(01),
	l_item_interno                  like sup_par_itforn.item,
	l_item_depositante              char(25),
	l_wms_item_aux                  char(15),
	l_continua                      smallint,
	l_wms_qtd_declarad_nf_aux       integer,
	l_cod_unid_med                  like item.cod_unid_med,
	l_depositante                   like fornecedor.cod_fornecedor,
	l_sucesso_sql                   smallint,
	l_forn_possui_pc                smallint,
	l_ies_item_wms                  smallint,
	l_sqlcode                       smallint,
	l_possui_q04                    smallint,
	l_wms_instalado                 smallint, ### tfajnz
	l_retorno_epl                   smallint,
	l_next_field_cod_item           smallint,
	l_houve_erro                    smallint, ### tqaft6
	l_next_field                    char(20), ### tqaft6
	l_quantidade                    like aviso_rec_proc_imp.quantidade,
	l_cod_empresa_orig              char(02),
	l_msg                           char(300)

	define la_dados_ant      array[] of record
	pre_unit_nf     like aviso_rec.pre_unit_nf,
	qtd_declarad_nf like aviso_rec.qtd_declarad_nf
end record

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup37601

let p_primeira_vez = true
let p_funcao_menu = p_funcao
let l_possui_q04 = false

if p_funcao <> "modificacao" then
	if p_dados_tela.ies_especie_nf = "nfd" then
		if g_ser_mark = false then
			initialize p_array to null
		end if
	end if
end if

if p_funcao = "inclu.itens" then
	initialize p_ordens, p_ordens_p1, p_ordens_p2, p_ordens_p3, p_ordens_p4, p_ordens_p5, p_ordens_p6, p_ordens_p7, p_ordens_p8 to null
	initialize p_pedidos, p_pedidos_p1, p_pedidos_p2, p_pedidos_p3, p_pedidos_p4, p_pedidos_p5, p_pedidos_p6 to null
	initialize p_prog_ordem to null
	initialize p_prog_ordem1 to null
	initialize p_prog_ordem2 to null
	initialize p_prog_ordem3 to null
	initialize p_prog_ordem4 to null
	initialize p_pedidos_p7   to null
	initialize p_pedidos_p8   to null
	initialize p_pedidos_p9   to null
	initialize p_pedidos_p10  to null
	initialize p_pedidos_p11  to null
	initialize p_pedidos_p12  to null
	initialize p_ordens_p9    to null
	initialize p_ordens_p10   to null
	initialize p_ordens_p11   to null
	initialize p_ordens_p12   to null
	initialize p_ordens_p13   to null
	initialize p_ordens_p14   to null
	initialize p_ordens_p15   to null
	initialize p_ordens_p16   to null
	initialize p_prog_ordem5  to null
	initialize p_prog_ordem6  to null
	initialize p_prog_ordem7  to null
	initialize p_prog_ordem8  to null
	if p_dados_tela.ies_especie_nf = "nfd" or p_dados_tela.ies_especie_nf = "nfr" then
	else
# os 463020
		while true
#      label pedido:
			if sup376_entrada_pedido_ordem(p_funcao) = false then
				let int_flag = 1
				return false
			else
				if (p_pedidos[1,5] = "xxxxx") or (p_pedidos is null) then
					if p_par_sup.ies_entrada_sem_pc = "n" and
						p_ies_informou_ped = "n" and
						p_ies_entr_sem_ped = false then

						let l_forn_possui_pc = true
						if find4glfunction('supy5_fornecedor_possue_pc_oc') then
							let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
						end if

						if l_forn_possui_pc then
							if p_dados_tela.ies_especie_nf is not null then
								if (p_dados_tela.ies_especie_nf <> "nfr" and
									p_dados_tela.ies_especie_nf <> "nfd" and
									p_dados_tela.ies_especie_nf <> "nfc" and
									p_dados_tela.ies_especie_nf <> "con" and
									p_dados_tela.ies_especie_nf <> "nfe") or
									(p_par_sup_compl.ies_nf_compl_preco = "4" and
									(p_dados_tela.ies_especie_nf = "nfe" or
									p_dados_tela.ies_especie_nf = "nfc")) or
									(p_par_sup_compl.ies_nf_compl_preco = "3" and
									p_dados_tela.ies_especie_nf = "nfc") or
									(p_par_sup_compl.ies_nf_compl_preco = "2" and
									p_dados_tela.ies_especie_nf = "nfe") then
									call log0030_mensagem(" funcao nao permitida, empresa nao permite entrada sem pedido de compra","exclamation")
# 463020
									continue while
#                           goto pedido
								end if
							end if
						end if
					else
						if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
							if p_array_pedidos[1].num_pedido is null or
								p_array_pedidos[1].num_pedido = " " then
								call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
# 463020
								continue while
#                        goto pedido
							end if
						end if
					end if
				end if
			end if
# 463020
			exit while
		end while
	end if
end if

if p_funcao = "inclusao" or p_funcao = "inclu.itens" then
	if p_nfe_import = true or p_nfm_import = true then
		let p_nf_sup.val_ipi_nf = 0
		let p_nf_sup.val_tot_icms_nf_d = 0
		let p_nf_sup.val_tot_nf_d = 0
		let p_nf_sup.val_despesa_aces = 0
		let p_dados_tela_f.val_ipi_nf = 0
		let p_dados_tela_f.val_tot_icms_nf_d = 0
		let p_dados_tela_f.val_tot_nf_d      = 0
	end if

	for p_ind9 = 1 to arraylength(p_array_compl)
		if p_array_compl[p_ind9].num_oc is not null and
			p_array_compl[p_ind9].num_oc <> 0 then
			if sup376_verifica_controla_valor(p_array_compl[p_ind9].num_oc) = true then
				let p_array_wms[p_ind9].pre_unit_nf = null
			end if
			call sup376_processa_conversao(p_ind9,p_funcao)
			if p_houve_erro then
				return false
			end if
		end if
	end for
end if

if p_funcao = "modificacao" then
	for p_ind9 = 1 to arraylength(p_array_wms)
		if p_array_wms[p_ind9].cod_item is not null then
			let p_array_compl[p_ind9].ies_bloqueada = "n"
		else
			exit for
		end if
	end for
end if

if p_funcao = "inclu.itens" then
	for p_ind9 = 1 to arraylength(p_array_wms)
		if p_array_wms[p_ind9].cod_item is not null then
			let  p_array_wms[p_ind9].seq = (p_prx_seq - 1) + p_ind9
		end if
	end for
end if

if p_aguard_5 = true then
	if p_funcao = "inclusao" then
		let p_dados_tela.ies_nf_aguard_nfe = "5"
		display by name p_dados_tela.ies_nf_aguard_nfe
	end if

	if p_ies_cod_operac is null or
		p_ies_cod_operac = "n" or
		p_ies_cod_operac = " " then
	else
		display by name p_dados_tela.cod_operac_estoq
	end if
end if

if p_dados_tela.ies_nf_aguard_nfe = "d" and p_funcao = "inclusao" then
	if g_ser_mark = false then
		initialize p_array to null
	end if
end if

let m_alterou_preco = false

for l_aux = 1 to arraylength(p_array_wms)
	call arrayadditem(la_dados_ant,1)
	let la_dados_ant[l_aux].pre_unit_nf     = p_array_wms[l_aux].pre_unit_nf
	let la_dados_ant[l_aux].qtd_declarad_nf = p_array_wms[l_aux].qtd_declarad_nf
end for

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec) then
	for l_aux = 1 to arraylength(p_array_wms)
		if m_classif_nfc <> "1" then ### tsnm37
			let p_array_wms[l_aux].cod_item      = " "
		end if
		let p_array_wms[l_aux].qtd_declarad_nf  = 0
		let p_array_wms[l_aux].pre_unit_nf      = 0
		let p_array_wms[l_aux].val_liquido_item = 0
	end for
end if

### tfajnz - caso parametro para selecionar nfps importa��o estiver ativo deve abrir tela para
### selecionar os itens do processo de importa��o.

if m_selec_itens_nfp_importacao = 's' then
	if p_nfe_import = true and p_dados_tela.ies_especie_nf = 'nfp' then
		### tfajnz - variavel de memoria, empresa possui wms instalado
		let l_wms_instalado = true
		call log_setvar('wms_instalado',l_wms_instalado)
		call sup1855_seleciona_itens_nfp_import(p_cod_empresa,
		p_dados_tela.num_aviso_rec,
		p_processo_imp.num_processo)
	end if
end if

#wms - in�cio chamado 763456
if find4glfunction('wmsy18_permite_modificacao_item_nf_sup') then
	if m_wms_instal = "s" then
		if p_funcao = "inclusao" and m_wms_gravou_q04 then
			let l_possui_q04 = true
			call set_count(p_ind_tela)
		else
			if not wmsy18_permite_modificacao_item_nf_sup(p_cod_empresa,
				p_dados_tela.num_aviso_rec, 1) then
				let l_possui_q04 = true
				let p_ind_tela   = p_ind
			end if
		end if
	end if
end if
#wms - fim chamado 763456

if p_funcao = "modificacao" then
	call set_count(p_ind)
else
	call set_count(0)
end if

input array p_array_wms without defaults from s_sup37601.*

before row
if arraylength(p_array) <= arr_curr() then
	call sup3760_checkarrayadditem_itens_nf(0,1)
end if

before input
call fgl_dialog_setkeylabel('insert',null)
call fgl_dialog_setkeylabel('delete',null)

on key (insert)
next field seq

on key (delete)
next field seq

before field seq
if m_ver_aviso_rec = true then
	exit input
end if
let p_ind = arr_curr()
let p_ind1  = scr_line()

if p_funcao = "inclu.itens" then
	let p_array_wms[1].seq = p_prx_seq
	display p_array_wms[1].seq to s_sup37601[1].seq
end if

if p_funcao <> "modificacao" then
	if p_dados_tela.ies_especie_nf = "nfd" then
		if g_ser_mark = false then
			call sup376_inicializa_nfd_nfr()
			display p_array_wms[p_ind].* to s_sup37601[p_ind1].*
		end if
	end if
end if

### os 159597
if m_contr_pes_rec = 's' then #eduardo - o.s.290538 19/11/03
	whenever error continue
	initialize l_item_balanca, l_pes_liquido to null
	select item,
	qtd_peso_entrada - qtd_peso_saida
	into l_item_balanca,
	l_pes_liquido
	from sup_ctr_balanca
	where empresa           = p_cod_empresa
	and num_docum         = p_dados_tela.num_nf
	and serie_nota_fiscal = p_dados_tela.ser_nf
	and subserie_nf       = p_dados_tela.ssr_nf
	and fornecedor        = p_dados_tela.cod_fornecedor
	and seq_nota_fiscal   = p_ind
	and tip_pesagem       = "1"
	and aviso_recebto     is null
	whenever error stop
end if

current window is w_sup37601
next field cod_item

call sup3760_save_cur_field_name('seq')

before field cod_item
let p_ind = arr_curr()
let p_ind1  = scr_line()
#wms - in�cio chamado 763456
if l_possui_q04 and p_funcao <> "modificacao" then
	let p_array[p_ind].seq              = p_array_wms[p_ind].seq
	let p_array[p_ind].cod_item         = p_array_wms[p_ind].cod_item
	let p_array[p_ind].qtd_declarad_nf  = p_array_wms[p_ind].qtd_declarad_nf
	let p_array[p_ind].cod_unid_med_nf  = p_array_wms[p_ind].cod_unid_med_nf
	let p_array[p_ind].pre_unit_nf      = p_array_wms[p_ind].pre_unit_nf
	let p_array[p_ind].val_liquido_item = p_array_wms[p_ind].val_liquido_item
	let p_array[p_ind].den_item         = p_array_wms[p_ind].den_item
	let p_array[p_ind].cod_cla_fisc_nf  = p_array_wms[p_ind].cod_cla_fisc_nf
	let p_array[p_ind].pct_ipi          = p_array_wms[p_ind].pct_ipi
next field pre_unit_nf
end if
#wms - fim chamado 763456
if (p_dados_tela.ies_especie_nf <> "nfd" and
	p_dados_tela.ies_especie_nf <> "nfr" and
	(p_array_compl[p_ind].num_pedido is null or
	p_array_compl[p_ind].num_pedido = " "   or
	p_array_compl[p_ind].num_pedido = 0))   or
	(p_dados_tela.ies_especie_nf = "nfr" or
	p_dados_tela.ies_especie_nf = "nfd") then
	call sup3760_botao_zoom("on",3,68)
end if

call wmsm81_wms_item_complemento_leitura(p_cod_empresa, p_array[p_ind].cod_item, true,1) returning l_status

if m_selec_itens_nfp_importacao = 'n' then
	if p_funcao = "inclusao" then
		let p_array_wms[p_ind].seq = p_ind
		display p_array_wms[p_ind].seq to s_sup37601[p_ind1].seq
	end if
else
	if p_nfe_import = false then
		if p_funcao = "inclusao" then
			let p_array_wms[p_ind].seq = p_ind
			display p_array_wms[p_ind].seq to s_sup37601[p_ind1].seq
		end if
	end if
end if

if p_funcao = "inclusao" then
end if
if p_funcao = "inclu.itens" then
	if p_ind1 > 1 then
		let p_sequencia = null
		let p_sequencia = p_array_wms[p_ind - 1].seq
		let p_sequencia = p_sequencia + 1
		let p_array_wms[p_ind].seq = p_sequencia
		display p_array_wms[p_ind].seq to s_sup37601[p_ind1].seq
	end if
end if

initialize p_cod_moeda_ped to null
if p_nfe_import = true or p_nfm_import = true then
	let p_cod_moeda_ped = p_processo_imp.cod_moeda
else
	call sup376_busca_pedido_sup(p_cod_empresa, p_array_compl[p_ind].num_pedido)
	let p_cod_moeda_ped = p_pedido_sup.cod_moeda
end if
if p_funcao = "modificacao" then
	let p_array_compl[p_ind].qtd_declarad_nf = null
	let p_entra_tot = "s"
	if p_array_wms[p_ind].cod_item is null then
		#nota de complemento de imposto s� tem 1 item j� que � sem informa��es..
		#(sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
		#                           p_cod_empresa,
		#                           p_dados_tela.num_aviso_rec) and
		# p_ind >1) then
		### inicio tqaft6
		let l_houve_erro = false
		let l_next_field = null

		call sup3760_after_input_item_wms(p_funcao) returning l_houve_erro, l_next_field
		if l_houve_erro then
			let p_houve_erro = true
			exit input
		end if
		case l_next_field
		when 'cod_item'
	next field cod_item
	when 'den_item'
next field den_item
when 'cod_unid_med_nf'
next field cod_unid_med_nf
when 'cod_cla_fisc_nf'
next field cod_cla_fisc_nf
when 'qtd_declarad_nf'
next field qtd_declarad_nf
when 'pre_unit_nf'
next field pre_unit_nf
when 'val_liquido_item'
next field val_liquido_item
end case
### fim tqaft6
exit input
end if

call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq)
let p_array_compl[p_ind].ies_bloqueada = "n"

### nota de complemento de valor permite alterar o item!!!
if sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) = false then
next field cod_unid_med_nf
end if

end if
if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec)  and
	m_classif_nfc <> "1" then ### tsnm37
	let p_array_wms[p_ind].cod_item = " "
next field qtd_declarad_nf
end if

call sup3760_save_cur_field_name('cod_item')

after field cod_item
#let p_array[p_ind].* = p_array_wms[p_ind].*

let p_array[p_ind].seq              = p_array_wms[p_ind].seq
let p_array[p_ind].cod_item         = p_array_wms[p_ind].cod_item
let p_array[p_ind].qtd_declarad_nf  = p_array_wms[p_ind].qtd_declarad_nf
let p_array[p_ind].cod_unid_med_nf  = p_array_wms[p_ind].cod_unid_med_nf
let p_array[p_ind].pre_unit_nf      = p_array_wms[p_ind].pre_unit_nf
let p_array[p_ind].val_liquido_item = p_array_wms[p_ind].val_liquido_item
let p_array[p_ind].den_item         = p_array_wms[p_ind].den_item
let p_array[p_ind].cod_cla_fisc_nf  = p_array_wms[p_ind].cod_cla_fisc_nf
let p_array[p_ind].pct_ipi          = p_array_wms[p_ind].pct_ipi

if p_array_wms[p_ind].cod_item is not null and
	p_array_wms[p_ind].cod_item <> " " and int_flag = 0 then
	# passo 18.1 #
	call sup3760_localiza_item_deposit_fornec(p_array_wms[p_ind].cod_item,
	p_dados_tela.cod_fornecedor)
returning l_item_depositante,
	l_status,
	l_continua
	if l_status then
		#let p_array[p_ind].cod_item = l_item_interno
		let p_array_wms[p_ind].cod_item = l_item_depositante
		display p_array_wms[p_ind].cod_item to s_sup37601[p_ind1].cod_item
	else
		# caso de erro de sql
		if l_continua = false then
			#call log0030_processa_mensagem("item do depositante n�o encontrado.","exclamation",0)
		next field cod_item
	end if
end if

# passo 18.2 e passo 18.3 #
call sup3760_wms_busca_item_complemento(p_array_wms[p_ind].cod_item)
returning l_item_interno,
l_status
if l_status then
	let p_array[p_ind].cod_item = l_item_interno
	display p_array_wms[p_ind].cod_item to s_sup37601[p_ind1].cod_item
else
	call log0030_processa_mensagem("item n�o cadastrado ou pertencente a outro depositante.","exclamation",0)
next field cod_item
end if

call wmsm81_wms_item_complemento_leitura(p_cod_empresa,p_array[p_ind].cod_item,true,1) returning l_status
end if

call sup3760_botao_zoom("off",3,68)

if p_array[p_ind].cod_item is not null and
	p_array[p_ind].cod_item <> " " then
	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#

	# n�o permitir digitar um item se ele for controlado pelo wms
	# e n�o tiver controle de estoque.
	if m_wms_instal = "s" then
		if g_ies_wms_instalado = "s" then
			call wms0004_item_sob_controle_wms(p_cod_empresa, p_array[p_ind].cod_item )
			returning l_sucesso_sql, l_ies_item_wms
			if l_sucesso_sql and l_ies_item_wms then
				if not sup3760_ies_item_ctr_estoq(p_cod_empresa, p_array[p_ind].cod_item ) then
					call log0030_mensagem('para item controlado pelo wms o mesmo deve possuir controle de estoque.','exclamation')
				next field cod_item
			end if
			### n�o permitir digitar um item bloqueado pelo wms (sit_bloqueio_item igual a "1" na tabela wms_item_complemento)
			if wms6135_verifica_bloqueio_wms(p_cod_empresa, p_array[p_ind].cod_item, 0) = false then
				call log0030_mensagem('o item encontra-se bloqueado por n�o possuir saldo ou ter excedido o prazo de movimenta��o (man9922).','exclamation')
			next field cod_item
		end if
		let l_next_field_cod_item = false

		if log_existe_epl('sup3760y_after_field_cod_item_wms') then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl codigo da empresa
			#epl tipo: ordem_sup.cod_empresa

			call log_setvar('cod_item', p_array[p_ind].cod_item)
			#epl codigo do item
			#epl tipo: ordem_sup.cod_item

			call log_setvar('next_field_cod_item', l_next_field_cod_item)
			#epl indicador se inicializa as vari�veis
			#epl tipo: smallint

			call sup3760y_after_field_cod_item_wms()

			let p_cod_empresa           = log_getvar('cod_empresa')
			let p_array[p_ind].cod_item = log_getvar('cod_item')
			let l_next_field_cod_item   = log_getvar('next_field_cod_item')
		end if

		if l_next_field_cod_item then
		next field cod_item
	end if

	if wmsr158_item_cross_docking_volume(p_cod_empresa,
		p_array[p_ind].cod_item,
		0) then
		call log0030_mensagem('item configurado para ser utilizado exclusivamente para processo de cross docking por volume.','exclamation')
	next field cod_item
end if

#se item configurado para somente saldo fiscal co-packing, cfop da nf tem que estar
#parametrizada para remessa para industrializa��o.
if manm281_man_inf_com_item_leitura(p_cod_empresa,
	p_array[p_ind].cod_item,
	"wms_saldo_fiscal_cop",
	true,
	1) then
	if manm281_man_inf_com_item_get_val_flag() = "s" then
		if not wmsr173_cfop_eh_remessa_industrializa(p_cod_empresa,
			p_dados_tela.cod_operacao,
			1) then
			let l_msg = "nota fiscal n�o possui cfop de 'remessa para industrializa��o' para processo 'co-packing' ",
			"e o item informado est� configurado para 'somente saldo fiscal co-packing'."
			call log0030_mensagem(l_msg,"exclamation")
		next field cod_item
	end if
end if
end if
#---
end if
end if
end if
#--------------------------#

end if

if p_funcao = "modificacao" then
	### nota de complemento de valor permite alterar o item!!!
	if sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
		p_cod_empresa,
		p_dados_tela.num_aviso_rec) = false then
	next field den_item
end if
end if

let p_ind = arr_curr()
let p_ind1  = scr_line()

#------------------------------------------------------------------------------------------#
#se for informado codigo de barra do item em tela, este ser� convertido para o c�digo de
#cadastro do item se o parametro para conversao autom�tica estiver ativo e codigo informado
#estiver registrado como codigo de barra valido na tabela item_barra ou item_barra_fornec.
let p_array[p_ind].cod_item =
sup3760_conversao_item_codigo_barra(p_array[p_ind].cod_item,p_dados_tela.cod_fornecedor)
#display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item
#------------------------------------------------------------------------------------------#
# passo 18 - busca item interno
if p_dados_tela.ies_nf_aguard_nfe = "a" or
	p_dados_tela.ies_nf_aguard_nfe = "b" or
	p_dados_tela.ies_nf_aguard_nfe = "7" then
	# se a nf for do tipo 7-(material em tr�nsito) exibir os c�digos dos itens
	# do depositante se o mesmo for encontrado na wms_item_complemento.
	call wmst81_wms_item_complemento_get_dados_deposit(p_cod_empresa,p_array[p_ind].cod_item,1)
returning l_status,l_depositante,l_item_depositante
	if l_item_depositante is not null and
		l_item_depositante <> " " then
		let p_array_wms[p_ind].cod_item = l_item_depositante
		display p_array_wms[p_ind].cod_item to s_sup37601[p_ind1].cod_item
	end if
end if
#------------------------------------------------------------------------------------------#

if m_ies_cit_item = "s" then
	if sup3760_testa_cit_item(p_array[p_ind].cod_item) then
		error "produto citricola, verificar tabela cit_item "
	next field cod_item
end if
end if

call sup376_busca_item(p_cod_empresa, p_array[p_ind].cod_item)
returning p_status
if p_status = false then
	#se n�o existe na tabela item, pesquisar o c�digo do item informado
	#como c�digo do item no cliente na tabela cliente_item.
	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		if p_dados_tela.ies_especie_nf = "nfd" or
			p_dados_tela.ies_especie_nf = "nfr" then
			if sup376_verifica_cliente_item() = false then
				error " material nao cadastrado "
			next field cod_item
		end if
	else
		error " material nao cadastrado "
	next field cod_item
end if
else
	if p_dados_tela.ies_especie_nf = "nfc" then
		let p_array[p_ind].cod_item = " "
		let p_array_wms[p_ind].cod_item = " "
	end if
end if
end if

#os 492297
if p_array[p_ind].cod_item is not null and
	p_array[p_ind].cod_item <> " " then
	if p_item.ies_situacao = 'i' then
		## permitir entrada de nota de devolu��o de cliente ou nfc para item inativo.
		if (p_dados_tela.ies_especie_nf = 'nfd' or p_ies_tip_entrada = '5') or
			(p_dados_tela.ies_especie_nf = 'nfc') then
			if log0040_confirm(0,0,'item inativo. continua processamento?') then
			else next field cod_item
			end if
		else
			call log0030_mensagem('item inativo.','excla')
		next field cod_item
	end if
else
	if p_item.ies_situacao = 'c' then
		if p_ies_rec_item_cancel = 's' then
			if log0040_confirm(0,0,'material est� cancelado. continua processamento? ') then
			else next field cod_item
			end if
		else
			call log0030_mensagem('material est� cancelado.','excla')
		next field cod_item
	end if
end if
end if
end if

if sup3762_verifica_material_ipi(true) = false  then
	let p_array_compl[p_ind].ies_item_estoq = "n"
	let p_array_compl[p_ind].move_estoque   = "n"
	let p_array_compl[p_ind].ies_liberacao_insp = "n"
	let p_array_compl[p_ind].ies_controle_lote  = "n"
	let p_array_compl[p_ind].cod_local_estoq    = " "
	let p_array_compl[p_ind].cod_cla_fisc = " "
	let p_array_compl[p_ind].pct_ipi_tabela = 0
end if

if find4glfunction('supy22_busca_den_item') then
	call supy22_busca_den_item(p_cod_empresa, p_array_compl[p_ind].num_oc)
returning p_status, l_den_item
else
	let p_status   = false
	let l_den_item = 0
end if

if p_status = true then
	let p_array[p_ind].den_item = l_den_item
end if

if manm281_man_inf_com_item_leitura(p_cod_empresa ,
	p_array[p_ind].cod_item,
	"wms_unid_med_deposit",
	true, 1) then

	let p_array[p_ind].cod_unid_med_nf = manm281_man_inf_com_item_get_val_texto()
end if

display p_array_wms[p_ind].den_item        to s_sup37601[p_ind1].den_item
display p_array_wms[p_ind].cod_unid_med_nf to s_sup37601[p_ind1].cod_unid_med_nf

#------------- dev. clientes ---------------#
if (p_dados_tela.ies_especie_nf = "nfd" or
	p_ies_tip_entrada = "5") then
	if p_array_compl[p_ind].ies_item_estoq = "s" then
		if p_par_sup_compl.cod_operac_dev_cli is not null and
			p_par_sup_compl.cod_operac_dev_cli <> " " then
		else
			error " operacao de devolucao nao cadastrada - ver sup7160 "
			sleep 2
			let p_array_compl[p_ind].ies_item_estoq = "n"
			let p_array_compl[p_ind].move_estoque   = "n"
		end if
	end if
end if
#------------- dev. clientes ---------------#
let l_ies_item_estoq = p_array_compl[p_ind].ies_item_estoq

#--------------------------#
# altera��o wms os: 450083 #
#--------------------------#
# passo 24                 #
if m_wms_instal <> "s" then
	if p_dados_tela.ies_nf_aguard_nfe = "b" then
		let p_array_compl[p_ind].ies_item_estoq = "n"
	end if
end if

#-- desativa flag no sup3762 para que n�o busque a conta cont�bil      --#
#-- no sup1400, e sim apenas continue fazendo como � feito atualmente  --#
call sup3762_seta_cta_n_estoq_ret_terc("n",p_ind) #vanderlei - os 382815 #
if p_dados_tela.ies_especie_nf = "nfr" and m_nfr_import = false then
	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		if l_ies_item_estoq = "s" then
			call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor, p_array[p_ind].cod_item,p_dados_tela.dat_emis_nf,p_dados_tela.num_aviso_rec)
			returning p_par_forn
			if p_par_forn <> "3" then
				call sup376_busca_parametros_item(p_array[p_ind].cod_item)
				let p_parametros = p_item_parametro.parametros[2,2]
				if p_parametros = "1" then
					let p_array_compl[p_ind].move_estoque = "n"
					let p_array_compl[p_ind].ies_item_estoq = "n"
				else
					if p_dados_tela.ies_nf_aguard_nfe <> "4" and
						p_dados_tela.ies_nf_aguard_nfe <> "5" and
						(p_parametros <> "6" or p_parametros is null)then
						if p_dados_tela.ies_especie_nf = "nfr" and
							p_dados_tela.ies_nf_aguard_nfe = "x" then
							let p_array_compl[p_ind].move_estoque   = "n"
							let p_array_compl[p_ind].ies_item_estoq = "n"
							#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
							call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
						else
							if log_existe_epl('supy181_after_field_cod_item_remove_mensagem') then
								#epl remover conforme parametro mensagem movimentar estoque
								call log_setvar("empresa",p_cod_empresa)
								#epl empresa nota fiscal entrada
								#epl tipo: nf_sup.cod_empresa
								call log_setvar("especie",p_dados_tela.ies_especie_nf)
								#epl especie da nota de entrada
								#epl tipo: nf_sup.ies_especie_nf
								call log_setvar("tipo",p_dados_tela.ies_nf_aguard_nfe)
								#epl tipo da nota de entrada
								#epl tipo: nf_sup.ies_nf_aguard_nfe

								call log_setvar("cfop",p_dados_tela.cod_operacao)
								#epl c�digo da opera��o
								#epl tipo: nf_sup.cod_operacao

								if not supy181_after_field_cod_item_remove_mensagem() then
									if log0040_confirm(18,10,"este item deve ser movimentado na conta estoque?") then
										let p_array_compl[p_ind].move_estoque   = "s"
										let p_array_compl[p_ind].ies_item_estoq = "s"
									else
										let p_array_compl[p_ind].move_estoque   = "n"
										let p_array_compl[p_ind].ies_item_estoq = "n"
										#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
										call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
									end if
								else
									let p_array_compl[p_ind].move_estoque   = "n"
									let p_array_compl[p_ind].ies_item_estoq = "n"
									#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
									call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
								end if
							else
								if log_existe_epl('sup3760y_before_mensagem_movto_estoque') then
									call log_setvar("tipo",p_dados_tela.ies_nf_aguard_nfe)
									#epl tipo da nota de entrada
									#epl tipo: nf_sup.ies_nf_aguard_nfe

									if not sup3760y_before_mensagem_movto_estoque() then
										let p_array_compl[p_ind].move_estoque   = log_getvar('move_estoque')
										let p_array_compl[p_ind].ies_item_estoq = log_getvar('ies_item_estoq')
									else
										if log0040_confirm(18,10,"este item deve ser movimentado na conta estoque?") then
											let p_array_compl[p_ind].move_estoque   = "s"
											let p_array_compl[p_ind].ies_item_estoq = "s"
										else
											let p_array_compl[p_ind].move_estoque   = "n"
											let p_array_compl[p_ind].ies_item_estoq = "n"
											#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
											call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
										end if
									end if
								else
									if log0040_confirm(18,10,"este item deve ser movimentado na conta estoque?") then
										let p_array_compl[p_ind].move_estoque   = "s"
										let p_array_compl[p_ind].ies_item_estoq = "s"
									else
										let p_array_compl[p_ind].move_estoque   = "n"
										let p_array_compl[p_ind].ies_item_estoq = "n"
										#-- ativa flag no sup3762 para que busque a conta cont�bil no sup1400  --#
										call sup3762_seta_cta_n_estoq_ret_terc("s",p_ind) #vanderlei - os 382815 #
									end if
								end if
							end if
						end if
					else
						if p_parametros = "6" then
							if p_dados_tela.ies_nf_aguard_nfe = "b" then
								#--------------------------#
								# altera��o wms os: 450083 #
								#--------------------------#
								# passo 24                 #
								if m_wms_instal <> "s" then
									let p_array_compl[p_ind].move_estoque = "n"
									let p_array_compl[p_ind].ies_item_estoq = "n"
								end if
							else
								let p_array_compl[p_ind].move_estoque = "s"
								let p_array_compl[p_ind].ies_item_estoq = "s"
							end if
						else
							let p_array_compl[p_ind].move_estoque = "n"
							let p_array_compl[p_ind].ies_item_estoq = "n"
						end if
					end if
				end if
			end if
		end if
	end if
end if
if p_dados_tela.ies_especie_nf <> "nfd" and
	p_dados_tela.ies_especie_nf <> "nfr" or
	(p_dados_tela.ies_especie_nf = "nfr" and
	p_array_compl[p_ind].move_estoque = "s") then
	call sup376_verifica_fornec_credenc(p_array[p_ind].cod_item,
	p_dados_tela.cod_fornecedor)
end if
if p_array_compl[p_ind].num_pedido is not null and
	p_array_compl[p_ind].num_pedido <> 0 and
	p_array_compl[p_ind].num_pedido <> " " then
	initialize p_ordem_sup.* to null
	call sup3762_busca_ordem_sup(p_cod_empresa,
	p_array_compl[p_ind].num_oc)
	let p_cod_item_oc = p_ordem_sup.cod_item
	if p_dados_tela.ies_nf_aguard_nfe <> "d"
		then
		if p_cod_item_oc <> p_array[p_ind].cod_item then
			call log0030_mensagem('material informado difere do material da ordem de compra','excla')
		next field cod_item
	end if
else whenever error continue
	select * from item_em_terc_envio
	where cod_empresa    = p_cod_empresa
	and ped_compra     = p_array_compl[p_ind].num_pedido
	and cod_compon     = p_array[p_ind].cod_item
	whenever error stop
	if sqlca.sqlcode <> 0
		then
		call log0030_mensagem('material informado n�o consta como item enviado a terceiros','excla')
	next field cod_item
end if
end if
end if

if l_item_balanca is not null then
	if l_item_balanca <> p_array[p_ind].cod_item then
		error " item informado difere do item da pesagem "
	next field cod_item
end if
end if

#--inicio--vanderlei os 400614 #
call log2250_busca_parametro(p_cod_empresa,"pergunta_item_movto_estoq_nfd")
returning l_perg_it_movto_estoq, p_status

if p_array[p_ind].cod_item is not null and
	p_array[p_ind].cod_item <> " " then
	if l_perg_it_movto_estoq = 's' then
		if (p_dados_tela.ies_especie_nf = 'nfd' or p_ies_tip_entrada = '5') then
			if sup3760_ies_item_ctr_estoq(p_cod_empresa, p_array[p_ind].cod_item) then
				if log0040_confirm(15,45,'item deve movimentar estoque?') then
					let p_array_compl[p_ind].ies_item_estoq = 's'
					let p_array_compl[p_ind].move_estoque   = 's'
				else
					let p_array_compl[p_ind].ies_item_estoq = 'n'
					let p_array_compl[p_ind].move_estoque   = 'n'
				end if
			end if
		end if
	end if
end if
#---fim----vanderlei os 400614 #

let l_forn_possui_pc = true
if find4glfunction('supy5_fornecedor_possue_pc_oc') then
	let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
end if

if  p_ies_informou_ped = 'n'
	and not l_forn_possui_pc then
	if find4glfunction('supy12_item_possui_contrato') then
		call supy12_item_possui_contrato(p_dados_tela.cod_fornecedor, p_array[p_ind].cod_item)
		returning p_status, p_array[p_ind].pre_unit_nf
	else
		let p_status = true
		let p_array[p_ind].pre_unit_nf = 0
	end if

	if p_status = false then
		call log0030_mensagem('item n�o possui cota��o de pre�o para este fornecedor.','exclamation')
	next field cod_item
end if
end if

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec)  and
	m_classif_nfc <> "1" then ### tsnm37
	if p_array[p_ind].cod_item is not null and
		p_array[p_ind].cod_item <> " " then
		let p_array[p_ind].cod_item = null
		let p_array_wms[p_ind].cod_item = null

		#display p_array[p_ind].cod_item to s_sup37601[p_ind1].cod_item
		display p_array_wms[p_ind].cod_item to s_sup37601[p_ind1].cod_item

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter item informado.","exclamation")

	next field cod_item
end if
end if

# transfere os dados do p_array para o p_array_wms
if p_array[p_ind].den_item is not null and
	p_array[p_ind].den_item <> " " then
	let p_array_wms[p_ind].den_item = p_array[p_ind].den_item
	display p_array_wms[p_ind].den_item to s_sup37601[p_ind1].den_item
end if
if p_array[p_ind].cod_unid_med_nf is not null and
	p_array[p_ind].cod_unid_med_nf <> " " then
	let p_array_wms[p_ind].cod_unid_med_nf = p_array[p_ind].cod_unid_med_nf
	display p_array_wms[p_ind].cod_unid_med_nf to s_sup37601[p_ind1].cod_unid_med_nf
end if
if p_array[p_ind].pre_unit_nf is not null and
	p_array[p_ind].pre_unit_nf <> " " then
	let p_array_wms[p_ind].pre_unit_nf = p_array[p_ind].pre_unit_nf
	display p_array_wms[p_ind].pre_unit_nf to s_sup37601[p_ind1].pre_unit_nf
end if
if p_array[p_ind].qtd_declarad_nf is not null and
	p_array[p_ind].qtd_declarad_nf then
	let p_array_wms[p_ind].qtd_declarad_nf = p_array[p_ind].qtd_declarad_nf
	display p_array_wms[p_ind].qtd_declarad_nf to s_sup37601[p_ind1].qtd_declarad_nf
end if
if p_array[p_ind].val_liquido_item is not null and
	p_array[p_ind].val_liquido_item <> " " then
	let p_array_wms[p_ind].val_liquido_item = p_array[p_ind].val_liquido_item
	display p_array_wms[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item
end if
if p_array[p_ind].pct_ipi is not null and
	p_array[p_ind].pct_ipi <> " " then
	let p_array_wms[p_ind].pct_ipi = p_array[p_ind].pct_ipi
end if
if p_array[p_ind].cod_cla_fisc_nf is not null and
	p_array[p_ind].cod_cla_fisc_nf <> " " then
	let p_array_wms[p_ind].cod_cla_fisc_nf = p_array[p_ind].cod_cla_fisc_nf
	display p_array_wms[p_ind].cod_cla_fisc_nf to s_sup37601[p_ind1].cod_cla_fisc_nf
end if


before field den_item
if m_wms_instal = 's' then
	if m_tipo_documento = "n" then
		if find4glfunction('wms6612_retorna_indicador_aduaneiro_ar') then
			if m_indicador_aduaneiro is null or m_indicador_aduaneiro = ' ' then
				let m_indicador_aduaneiro = wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec)
			end if
			if p_dados_tela.num_aviso_rec is not null and
				p_dados_tela.num_aviso_rec <> 0 and
				p_array[p_ind].cod_item is not null and
				p_array[p_ind].cod_item <> ' ' and
				m_indicador_aduaneiro = 't' then
				if not wms6612_tem_conferencia_alfandegado_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) then
					call wms6612_incluir_peso_item(p_dados_tela.num_aviso_rec,
					p_array[p_ind].cod_item,
					p_array[p_ind].seq)
					current window is w_sup37601
				end if
			end if
		end if
	end if
end if
if m_alter_den_item_nf = 'n' then
	if fgl_lastkey() = fgl_keyval("up") or
		fgl_lastkey() = fgl_keyval("left") then
	next field val_liquido_item
else
next field cod_cla_fisc_nf
end if
end if
let p_ind = arr_curr()
let p_ind1  = scr_line()
if p_dados_tela.ies_nf_aguard_nfe = "6" then
	if sup3760_busca_den_item(p_array_wms[p_ind].cod_item) then
		if find4glfunction('supy45_modifica_den_item') then
			if supy45_modifica_den_item(p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq, m_den_item) then

				call log006_exibe_teclas("01 02 03 07", p_versao)
				current window is w_sup37601

				let p_array_wms[p_ind].den_item = g_den_item
				display p_array_wms[p_ind].den_item to s_sup37601[p_ind1].den_item

				if fgl_lastkey() = fgl_keyval("up")
					or fgl_lastkey() = fgl_keyval("left") then
				next field val_liquido_item
			else
			next field cod_cla_fisc_nf
		end if
	end if
end if

call log006_exibe_teclas("01 02 03 07", p_versao)
current window is w_sup37601
end if
end if #--

call sup3760_save_cur_field_name('den_item')
after field  den_item
let p_ind = arr_curr()
let p_ind1  = scr_line()
let p_array[p_ind].den_item = p_array_wms[p_ind].den_item

before field cod_unid_med_nf
call sup3760_botao_zoom("on",3,68)
let p_ind = arr_curr()
let p_ind1  = scr_line()
if l_possui_q04 then
next field pre_unit_nf
end if

if p_funcao = "modificacao" then
	call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq)
	display p_array_wms[p_ind].* to s_sup37601[p_ind1].*
	#se contagem j� realizada, n�o alterar a un
	if p_aviso_rec.ies_item_estoq = 's' and
		p_aviso_rec.ies_liberacao_cont = 's' then
	next field pre_unit_nf
end if
end if
call sup3760_save_cur_field_name('cod_unid_med_nf')

after field cod_unid_med_nf
let p_array[p_ind].cod_unid_med_nf = p_array_wms[p_ind].cod_unid_med_nf

call sup3760_botao_zoom("off",3,68)
let p_ind = arr_curr()
let p_ind1  = scr_line()
#809554
if p_array[p_ind].cod_unid_med_nf is not null or
	p_array[p_ind].cod_unid_med_nf <> " " then
	if sup376_verifica_unid_med() = false then
		error " c�digo da unidade de medida n�o cadastrado. "
	next field cod_unid_med_nf
end if
else
	if p_array[p_ind].cod_item <> null or
		p_array[p_ind].cod_item <> " " then
		if sup376_verifica_unid_med() = false then
			error " c�digo da unidade de medida n�o cadastrado. "
		next field cod_unid_med_nf
	end if
else
	let p_array[p_ind].cod_unid_med_nf = " "
end if
end if
#809554

#let p_array[p_ind].cod_unid_med_nf = p_array_wms[p_ind].cod_unid_med_nf
if p_array[p_ind].cod_unid_med_nf is not null and
	p_array[p_ind].cod_unid_med_nf <> " " then
	let p_array_wms[p_ind].cod_unid_med_nf = p_array[p_ind].cod_unid_med_nf
	display p_array_wms[p_ind].cod_unid_med_nf to s_sup37601[p_ind1].cod_unid_med_nf
end if

if find4glfunction('supy31_valida_unid_med_fixa') then
	if not supy31_valida_unid_med_fixa(p_array_compl[p_ind].ies_tip_item, p_array[p_ind].cod_unid_med_nf) then
	next field cod_unid_med_nf
end if
end if

# passo 19.1 #
whenever error continue
select cod_unid_med
into l_cod_unid_med
from item
where cod_empresa  = p_cod_empresa
and cod_item = p_array[p_ind].cod_item
whenever error stop
if sqlca.sqlcode = 0 then
	if m_wms_instal = 's' then
		call wms0004_item_sob_controle_wms(p_cod_empresa, p_array[p_ind].cod_item) returning l_sqlcode, l_status
		if l_status then
			if l_cod_unid_med <> p_array_wms[p_ind].cod_unid_med_nf then
				if wmsm81_wms_item_complemento_get_permite_conversao_unid_medida() = "s" then
					whenever error continue
					select 1
					from fat_conver
					where cod_empresa  = p_cod_empresa
					and cod_item = p_array[p_ind].cod_item
					and cod_unid_med_orig = l_cod_unid_med
					and cod_unid_med_dest = p_array_wms[p_ind].cod_unid_med_nf
					whenever error stop
					if sqlca.sqlcode = notfound then
						whenever error continue
						select 1
						from fat_conver
						where cod_empresa  = p_cod_empresa
						and cod_item = p_array[p_ind].cod_item
						and cod_unid_med_orig = p_array_wms[p_ind].cod_unid_med_nf
						and cod_unid_med_dest = l_cod_unid_med
						whenever error stop
						if sqlca.sqlcode = notfound then
							call log0030_processa_mensagem("unidade de medida informada n�o possui convers�o para a unidade de medida do item.","exclamation",0)
						next field cod_unid_med_nf
					end if
				end if
			else
				call log0030_processa_mensagem("item n�o permite convers�o de unidade de medida.","exclamation",0)
			next field cod_unid_med_nf
		end if
	end if
end if
end if
end if

if p_funcao = "modificacao" and
	p_array_compl[p_ind].ies_bloqueada = "s" then
next field pre_unit_nf
end if

##### citrosuco os 157335 #####
if m_ies_obj_entrada = "99" then
	if (p_array_compl[p_ind].num_pedido is not null and
		p_array_compl[p_ind].num_pedido <> 0 and
		p_array_compl[p_ind].num_pedido <> " ") then
		if sup376_cond_pgto_com_pag() then
			if sup376_aprov_tecnica() then
				#### trabalha com aprovacao tecnica - sup0289 ####
				whenever error continue
				select cod_unid_med
				from um_aprov_tecnica
				where cod_empresa  = p_cod_empresa
				and cod_unid_med = p_array_wms[p_ind].cod_unid_med_nf
				whenever error stop
				if sqlca.sqlcode = 100 then
					error " unidade de medida deve estar cadastrada sup0141(aprov.tecnica)"
				next field cod_unid_med_nf
			end if
		end if
	end if
end if
end if
################################


before field cod_cla_fisc_nf
call sup3760_botao_zoom("on",3,68)
let p_ind = arr_curr()
let p_ind1  = scr_line()
let l_cod_cla_fisc_nf = p_array_wms[p_ind].cod_cla_fisc_nf

call sup3760_save_cur_field_name('cod_cla_fisc_nf')
after field cod_cla_fisc_nf
call sup3760_botao_zoom("off",3,68)

let p_array[p_ind].cod_cla_fisc_nf = p_array_wms[p_ind].cod_cla_fisc_nf

if p_array_wms[p_ind].cod_cla_fisc_nf is not null and
	p_array_wms[p_ind].cod_cla_fisc_nf <> ' ' then
	if not sup3762_verifica_cod_cla_fisc_nf(p_array_wms[p_ind].cod_cla_fisc_nf) then
		error 'nbm nao cadastrado'
	next field cod_cla_fisc_nf
end if
end if

if p_array_wms[p_ind].den_item is not null then
	if m_tem_valid_fim then
		if p_dados_tela.dat_entrada_nf > m_dat_fim_valid then
			if p_dados_tela.cod_operacao[3,5] = "101" and
				p_ies_contrib_ipi = "s" then
				if p_array_wms[p_ind].cod_cla_fisc_nf is null or
					p_array_wms[p_ind].cod_cla_fisc_nf = " " or
					p_array_wms[p_ind].cod_cla_fisc_nf = 0 then
					error "informe classificacao fiscal"
				next field cod_cla_fisc_nf
			end if
		end if
	else
		if p_dados_tela.cod_operacao[3,4] = "11" and
			p_ies_contrib_ipi = "s" then
			if p_array_wms[p_ind].cod_cla_fisc_nf is null or
				p_array_wms[p_ind].cod_cla_fisc_nf = " " or
				p_array_wms[p_ind].cod_cla_fisc_nf = 0 then
				error "informe classificacao fiscal"
			next field cod_cla_fisc_nf
		end if
	end if
end if
else
	if p_dados_tela.cod_operacao[3,4] = "11" and
		p_ies_contrib_ipi = "s" then
		if p_array_wms[p_ind].cod_cla_fisc_nf is null or
			p_array_wms[p_ind].cod_cla_fisc_nf = " " or
			p_array_wms[p_ind].cod_cla_fisc_nf = 0 then
			error "informe classificacao fiscal"
		next field cod_cla_fisc_nf
	end if
end if
end if
end if
if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_cod_cla_fisc_nf <> p_array_wms[p_ind].cod_cla_fisc_nf then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array_wms[p_ind].cod_cla_fisc_nf = l_cod_cla_fisc_nf
			display p_array_wms[p_ind].cod_cla_fisc_nf to cod_cla_fisc_nf
		next field cod_cla_fisc_nf
	end if
end if
end if

#let p_array[p_ind].cod_cla_fisc_nf = p_array_wms[p_ind].cod_cla_fisc_nf
if p_array[p_ind].cod_cla_fisc_nf is not null and
	p_array[p_ind].cod_cla_fisc_nf <> " " then
	let p_array_wms[p_ind].cod_cla_fisc_nf = p_array[p_ind].cod_cla_fisc_nf
	display p_array_wms[p_ind].cod_cla_fisc_nf to s_sup37601[p_ind1].cod_cla_fisc_nf
end if


before field qtd_declarad_nf
if m_wms_instal = 's' then
	if p_array[p_ind].cod_item is not null or
		p_array[p_ind].cod_item <> ' ' then
		if find4glfunction('wms6612_verifica_item_generico') then
			if not wms6612_verifica_item_generico(p_array[p_ind].cod_item,
				m_indicador_aduaneiro) then
			next field cod_item
		end if
	end if
end if
end if
let p_ind = arr_curr()
let p_ind1  = scr_line()

let l_qtd_declarad_nf = p_array_wms[p_ind].qtd_declarad_nf
if l_possui_q04 then
next field pre_unit_nf
end if

if p_funcao = "modificacao" and
	p_array_compl[p_ind].ies_bloqueada = "s" then
	let p_array_compl[p_ind].ies_bloqueada = "n"
next field cod_unid_med_nf
end if

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) or
	sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	let p_array_compl[p_ind].qtd_declarad_nf = 0
next field cod_unid_med_nf
end if
if p_funcao = "modificacao" then
	if g_ies_wis_instalado = "s" then
		if p_aviso_rec.cod_item is not null and
			p_aviso_rec.cod_item <> " " then
			call vdp3188_item_sob_controle_wis(p_cod_empresa,p_aviso_rec.cod_item)
			returning l_sucesso,l_item_wms
		end if
	else
		if g_ies_wms_instalado = "s" and sup376_verifica_interf_ent_wms() then
			call wms0004_item_sob_controle_wms(p_cod_empresa,p_array_wms[p_ind].cod_item)
			returning l_sucesso,l_item_wms
			if l_item_wms then
				whenever error continue
				select count(*)
				into l_ind_envio_interf
				from wms_e_nf_item a, wms_e_entrada_veic b
				where a.fornecedor         = p_dados_tela.cod_fornecedor
				and a.num_nota_fiscal    = p_dados_tela.num_nf
				and a.serie_nota_fiscal  = p_dados_tela.ser_nf
				and a.subserie_nf        = p_dados_tela.ssr_nf
				and a.item_terceiro      = p_array_wms[p_ind].cod_item
				and b.entrada_veiculo    = a.entrada_veiculo
				and b.ind_envio_interf   = "s"
				whenever error stop
				if sqlca.sqlcode = 0 and l_ind_envio_interf > 0 then
					error " item ja enviado ao logix-wms. modificacao nao permitida. "
				next field cod_unid_med_nf
			end if
		end if
	end if
end if

call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq)

if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
	if sup376_verifica_update() = false then
		let p_array_compl[p_ind].ies_bloqueada = "s"
		let p_array_compl[p_ind].qtd_declarad_nf = p_array_wms[p_ind].qtd_declarad_nf
		let p_qtd_declarad_nf    = 0
		let p_val_liquido_item   = 0
		let p_qtd_declarad_nf    = p_array_wms[p_ind].qtd_declarad_nf
		let p_pre_unit_nf        = p_array_wms[p_ind].pre_unit_nf
		let p_val_liquido_item   = p_array_wms[p_ind].val_liquido_item
		display p_array_wms[p_ind].* to s_sup37601[p_ind1].*
	next field pre_unit_nf
end if
else
next field pre_unit_nf
end if

else
	if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = true then
		let p_array_wms[p_ind].qtd_declarad_nf  = 0
		display p_array_wms[p_ind].qtd_declarad_nf to s_sup37601[p_ind1].qtd_declarad_nf
	next field pre_unit_nf
end if
end if

if l_item_balanca is not null then
	let p_array_wms[p_ind].qtd_declarad_nf = l_pes_liquido
	display p_array_wms[p_ind].qtd_declarad_nf to qtd_declarad_nf
end if

call sup3760_save_cur_field_name('qtd_declarad_nf')
after field qtd_declarad_nf
let p_ind = arr_curr()
let p_ind1  = scr_line()

let p_array[p_ind].qtd_declarad_nf = p_array_wms[p_ind].qtd_declarad_nf

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	if p_array_wms[p_ind].qtd_declarad_nf > 0 then
		let p_array_wms[p_ind].qtd_declarad_nf = 0

		display p_array_wms[p_ind].qtd_declarad_nf to s_sup37601[p_ind1].qtd_declarad_nf

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter quantidade informada.","exclamation")

	next field qtd_declarad_nf
end if
end if

if p_array_wms[p_ind].qtd_declarad_nf is not null then
	if p_dados_tela.ies_especie_nf = "nfc" then
		if p_array_wms[p_ind].qtd_declarad_nf <> 0 then
			call log0030_mensagem("nota fiscal de complemento n�o deve ter quantidade informada.","exclamation")
		next field qtd_declarad_nf
	end if
end if
else
	if p_dados_tela.ies_especie_nf = "nfc" then
		let p_array_wms[p_ind].qtd_declarad_nf = 0
	end if
end if

sleep 1

if p_array_wms[p_ind].qtd_declarad_nf is not null and
	p_array_compl[p_ind].ar_com_pc = "s" then
	let p_qtd_array = p_array_wms[p_ind].qtd_declarad_nf
	let p_val_array = p_array_wms[p_ind].pre_unit_nf
	if p_dados_tela.ies_especie_nf <> "nfd" then
		if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
			let p_soma_reserva2 = null
			call sup386_popup_ordens_reservada(p_cod_empresa,
			p_array_wms[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
			p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
			p_qtd_array, "n" , p_funcao,
			p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq, p_ind)
			returning p_soma_reserva2, p_ies_reservou, p_ord_forn
			let p_qtd_array = 0
			let p_val_array = 0
			let int_flag = 0
			call log006_exibe_teclas("01 02 03 07", p_versao)
			current window is w_sup37601
		end if
	end if
	if m_bloq_entr_data = "s" and p_dados_tela.ies_nf_aguard_nfe <> "7" then
		if not sup0949_verifica_diverg_dat_entrega(p_ind) then
		next field qtd_declarad_nf
	end if
end if
end if

if p_funcao = "inclusao" or p_funcao =  "inclu.itens"  then
	if p_dados_tela.ies_especie_nf <> "nfr" and
		p_dados_tela.ies_especie_nf <> "nfd" then
		if p_array_wms[p_ind].cod_item  is not null and
			p_array_wms[p_ind].cod_item <> " " then
			if (p_pedidos[1,5] = 'xxxxx') or  # os 390034 - winston
				(p_pedidos is null) then
				if p_array_compl[p_ind].ar_com_pc <> "s" or
					p_array_compl[p_ind].ar_com_pc is null   then
					if p_par_sup.ies_modulo_compras = "s" then

						let l_forn_possui_pc = true
						if find4glfunction('supy5_fornecedor_possue_pc_oc') then
							let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
						end if

						if l_forn_possui_pc then
							if p_par_sup.ies_entrada_sem_pc = "n" and
								p_ies_entr_sem_ped = false then
								if p_dados_tela.ies_especie_nf <> "nfc" and
									p_dados_tela.ies_especie_nf <> "con" and
									p_dados_tela.ies_especie_nf <> "nfe" then
									error "empresa nao permite entrada de n.f. sem pedido de compra"
								next field cod_item
							end if
							if p_dados_tela.ies_especie_nf = "nfc" and
								(p_par_sup_compl.ies_nf_compl_preco = "3" or
								p_par_sup_compl.ies_nf_compl_preco = "4") then
								error "empresa nao permite entrada de nfc sem pedido de compra"
							next field cod_item
						end if
						if p_dados_tela.ies_especie_nf = "nfe" and
							(p_par_sup_compl.ies_nf_compl_preco = "2" or
							p_par_sup_compl.ies_nf_compl_preco = "4") then
							error "empresa nao permite entrada de nfe sem pedido de compra."
						next field cod_item
					end if
				else
					if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
						if p_array_pedidos[1].num_pedido is null or
							p_array_pedidos[1].num_pedido = " " then
							call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
						next field cod_item
					end if
				end if
			end if
		end if
	end if
else
	if p_ies_reservou = "n" then
		if p_par_sup.ies_modulo_compras = "s" then

			let l_forn_possui_pc = true
			if find4glfunction('supy5_fornecedor_possue_pc_oc') then
				let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
			end if

			if l_forn_possui_pc then
				if p_par_sup.ies_entrada_sem_pc = "n" and
					p_ies_entr_sem_ped = false then
					if p_dados_tela.ies_especie_nf <> "nfc" and
						p_dados_tela.ies_especie_nf <> "con" and
						p_dados_tela.ies_especie_nf <> "nfe" then
						error "empresa nao permite entrada de n.f. sem pedido de compra"
					next field cod_item
				end if
				if p_dados_tela.ies_especie_nf = "nfc" and
					(p_par_sup_compl.ies_nf_compl_preco = "3" or
					p_par_sup_compl.ies_nf_compl_preco = "4") then
					error "empresa nao permite entrada de nfc sem pedido de compra"
				next field cod_item
			end if
			if p_dados_tela.ies_especie_nf = "nfe" and
				(p_par_sup_compl.ies_nf_compl_preco = "2" or
				p_par_sup_compl.ies_nf_compl_preco = "4") then
				error "empresa nao permite entrada de nfe sem pedido de compra."
			next field cod_item
		end if
	else
		if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
			if p_array_pedidos[1].num_pedido is null or
				p_array_pedidos[1].num_pedido = " " then
				call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
			next field cod_item
		end if
	end if
end if
end if
end if
end if
end if
end if
end if
end if
end if

let p_somatorio_dif = 0
for p_ind5 = 1 to 50
	if p_array_it_prg_entr[p_ind, p_ind5].qtd_solic is null or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = " "   or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = 0 then
		exit for
	end if
	if p_array_compl[p_ind].num_oc <> 0        and
		p_array_compl[p_ind].num_oc is not null then
		initialize p_ordem_sup.* to null
		call sup3762_busca_ordem_sup(p_cod_empresa,
		p_array_compl[p_ind].num_oc)

		let p_fat_conver_unid = p_ordem_sup.fat_conver_unid
		if sqlca.sqlcode <> 0 then
			let p_fat_conver_unid = 1
		end if
	end if
	if p_fat_conver_unid = 0 then
		let p_fat_conver_unid = 1
	end if
	let p_dif_aceite = 0
	if p_array_compl[p_ind].pct_aceite_dif = 0
		and p_dados_tela.ies_nf_aguard_nfe <> "5"
		then let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_par_sup.pct_maximo_div_q) / 100
	else let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_array_compl[p_ind].pct_aceite_dif) / 100
	end if
	let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
end for
let p_array_compl[p_ind].tot_reserv_dif = 0
let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_soma_reserva2
if p_array_wms[p_ind].qtd_declarad_nf > (p_soma_reserva2 + p_somatorio_dif) and p_dados_tela.ies_nf_aguard_nfe <> "d" then
	if p_funcao <> "modificacao" or
		p_funcao = "modificacao" and p_msg_qtd = "s" then
		if p_array_compl[p_ind].num_pedido is not null and
			p_array_compl[p_ind].num_pedido <> 0        and
			p_array_compl[p_ind].ies_liquida_oc <> "3"  then
			if p_dados_tela.ies_nf_aguard_nfe = "5" then
				error "entrada sem saldo suficiente; contatar comprador urgente "
			next field qtd_declarad_nf
		end if

		if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
			call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
			call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

			call sup3760y_before_process_ies_entrada_maior()
			let p_ies_entrada_maior = log_getvar('ies_entrada_maior')
		end if
		if p_ies_entrada_maior = "n"  then
			call log0030_mensagem("entrada sem saldo suficiente; contatar comprador urgente ","exclamation")
		else
			call log0030_mensagem("entrada sem saldo suficiente.","exclamation")
		end if
		if p_ies_entrada_maior = "s"  then
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	else
		if p_ies_entrada_maior = "c" then
			if p_aguard_5 = true then
			next field qtd_declarad_nf
		else
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	end if
else
next field qtd_declarad_nf
end if
end if
end if
end if
end if

if p_nfe_import = true or p_nfm_import = true then
	let p_array_imp[p_ind].val_ii = (p_array_imp[p_ind].val_ii_tot *
	p_array_wms[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
	let p_array_imp[p_ind].val_desp_imp =
	(p_array_imp[p_ind].val_desp_imp_tot *
	p_array_wms[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
	let p_array_imp[p_ind].val_ipi =
	(p_array_imp[p_ind].val_ipi_tot *
	p_array_wms[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
	let p_array_imp[p_ind].val_icms =
	(p_array_imp[p_ind].val_icms_tot *
	p_array_wms[p_ind].qtd_declarad_nf) /
	p_array_imp[p_ind].quantidade
end if

if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_qtd_declarad_nf <> p_array_wms[p_ind].qtd_declarad_nf then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array_wms[p_ind].qtd_declarad_nf = l_qtd_declarad_nf
			display p_array_wms[p_ind].qtd_declarad_nf to qtd_declarad_nf
		next field qtd_declarad_nf
	end if
end if
end if

# transfere os dados para a p_array_wms
if p_array[p_ind].qtd_declarad_nf is not null and
	p_array[p_ind].qtd_declarad_nf then
	let p_array_wms[p_ind].qtd_declarad_nf = p_array[p_ind].qtd_declarad_nf
	display p_array_wms[p_ind].qtd_declarad_nf to s_sup37601[p_ind1].qtd_declarad_nf
end if

#let p_array[p_ind].qtd_declarad_nf = p_array_wms[p_ind].qtd_declarad_nf

# passo 19 #
let l_wms_qtd_declarad_nf_aux = p_array_wms[p_ind].qtd_declarad_nf
if p_array_wms[p_ind].qtd_declarad_nf > l_wms_qtd_declarad_nf_aux then
	if wmsm81_wms_item_complemento_get_unid_medida_fracion() = "n" then
		call log0030_processa_mensagem("item n�o permite quantidade fracionada.","exclamation",0)
	next field qtd_declarad_nf
end if
end if

if log_existe_epl("sup3760y_after_field_qtd_declarad_nf") then
	call log_setvar("cod_empresa", p_cod_empresa)
	call log_setvar("cod_item", p_array[p_ind].cod_item)
	call log_setvar("qtd_declarad_nf", p_array[p_ind].qtd_declarad_nf)
	call log_setvar("retorno_epl", true)

	call sup3760y_after_field_qtd_declarad_nf()

	if log_getvar("retorno_epl") = false then
	next field qtd_declarad_nf
end if
end if

before field pre_unit_nf
let p_ind = arr_curr()
let p_ind1  = scr_line()
if p_funcao = "inclusao" then
	if p_dados_tela.ies_especie_nf <> "nfd" and
		p_dados_tela.ies_especie_nf <> "nfr" then
		call sup3760_botao_zoom("on",3,68)
	end if
end if
if p_funcao = "modificacao" then
	call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq)
	if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) then
		if sup376_verifica_ar_item_contagem() then
			if fgl_lastkey() = fgl_keyval("up") then
			next field cod_cla_fisc_nf
		else
			if fgl_lastkey() = fgl_keyval("left") then
			next field cod_cla_fisc_nf
		else
		next field pct_ipi
	end if
end if
end if
end if
end if
let p_base_ipi[p_ind].val_liquido_item = p_array_wms[p_ind].val_liquido_item
let p_array_compl[p_ind].alterou_val_liquido = false

call sup3760_save_cur_field_name('pre_unit_nf')
after field pre_unit_nf
let p_ind = arr_curr()
let p_ind1  = scr_line()

let p_array[p_ind].pre_unit_nf = p_array_wms[p_ind].pre_unit_nf

call sup3760_botao_zoom("off",3,68)
if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	if p_array_wms[p_ind].pre_unit_nf > 0 then
		let p_array_wms[p_ind].pre_unit_nf = 0

		display p_array_wms[p_ind].pre_unit_nf to s_sup37601[p_ind1].pre_unit_nf

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter pre�o informado.","exclamation")

	next field pre_unit_nf
end if
end if
if p_ord_forn = false and
	p_funcao = "inclusao" then
	if (p_pedidos[1,5] = "xxxxx") or
		(p_pedidos is null) then
		if p_par_sup.ies_entrada_sem_pc = "n" and
			p_ies_entr_sem_ped = false then
			let p_ies_pagamento2 = null
			let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
			if l_cod_empresa_orig is not null then
				let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
			end if
			let p_ies_pagamento2 = p_cond_pgto_cap.ies_pagamento
			if p_ies_pagamento2 = "3" then
			else
				error " nao ha ordens de compras para este fornecedor "
			next field qtd_declarad_nf
		end if
	end if
end if
end if

if p_array_compl[p_ind].ar_com_pc = "s" and p_par_sup.ies_modulo_compras = "s" and p_funcao = "inclusao" then
	if not sup3760_pedido_ordem_valido(p_array_compl[p_ind].num_pedido,
		p_array_compl[p_ind].num_oc) then
	next field pre_unit_nf
end if
end if

if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) then
	if p_array_wms[p_ind].pre_unit_nf is not null then
		let p_val_liquido_ant = p_array_wms[p_ind].val_liquido_item
		call sup376_calcula_val_liquido(p_funcao)
		display p_array_wms[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item
	end if
	if p_array_wms[p_ind].qtd_declarad_nf is not null and
		p_array_compl[p_ind].ar_com_pc = "s"      then

		let p_val_array = p_array_wms[p_ind].val_liquido_item

		if p_dados_tela.ies_especie_nf <> "nfd" and
			p_dados_tela.ies_especie_nf <> "nfr" then
			call log_setvar("dat_emis_nf", p_dados_tela.dat_emis_nf)#tfrzdr
			call sup861_popup_ordens_val_reserv(p_cod_empresa,
			p_array_wms[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
			p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
			p_val_array, "n", p_funcao,
			p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq, p_ind)
			returning p_val_soma_reserva2, p_ies_reservou, p_ord_forn
			let p_val_array = 0
			let int_flag = 0
			current window is w_sup37601
		end if
	end if
	let p_somatorio_dif = 0
	for p_ind5 = 1 to 50
		if p_array_it_prg_entr[p_ind, p_ind5].val_solic is null or
			p_array_it_prg_entr[p_ind, p_ind5].val_solic = " "   or
			p_array_it_prg_entr[p_ind, p_ind5].val_solic = 0 then
			exit for
		end if
		let p_dif_aceite = 0
		let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].val_solic * p_array_compl[p_ind].pct_aceite_dif) / 100
		let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
	end for
	let p_array_compl[p_ind].tot_reserv_dif = 0
	let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_val_soma_reserva2
	if p_array_wms[p_ind].val_liquido_item > (p_val_soma_reserva2 + p_somatorio_dif) then
		if p_funcao <> "modificacao" or
			p_funcao = "modificacao"  then
			if p_array_compl[p_ind].num_pedido is not null and
				p_array_compl[p_ind].num_pedido <> 0        and
				p_array_compl[p_ind].ies_liquida_oc <> "3"  then
				if p_dados_tela.ies_nf_aguard_nfe = "5" then
					error "entrada sem saldo suficiente; contatar comprador urgente "
				next field qtd_declarad_nf
			end if

			if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
				call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
				call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

				call sup3760y_before_process_ies_entrada_maior()
				let p_ies_entrada_maior = log_getvar('ies_entrada_maior')
			end if
			if p_ies_entrada_maior = "n"  then
				error "entrada sem saldo suficiente; contatar comprador urgente "
			else
				error "entrada sem saldo suficiente."
			end if
			if p_ies_entrada_maior = "s"  then
				if log004_confirm(14,42) then
				else
				next field pre_unit_nf
			end if
		else
			if p_ies_entrada_maior = "c" then
				if p_aguard_5 = true then
				next field pre_unit_nf
			else
				if log004_confirm(14,42) then
				else
				next field pre_unit_nf
			end if
		end if
	else
	next field pre_unit_nf
end if
end if
end if
end if
end if
else
	if p_array_wms[p_ind].pre_unit_nf is not null then
		let p_val_liquido_ant = p_array_wms[p_ind].val_liquido_item
		call sup376_calcula_val_liquido(p_funcao)
		display p_array_wms[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item
	end if
end if

if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
	if fgl_lastkey() = fgl_keyval("up") or
		fgl_lastkey() = fgl_keyval("left") then
	next field qtd_declarad_nf
end if
else
next field pct_ipi
end if
let p_par_forn = null
if p_array_compl[p_ind].num_oc is not null and
	p_array_compl[p_ind].num_oc <> 0       then
	if sup376_verifica_ordem_consig(p_array_compl[p_ind].num_oc) then
		let p_par_forn = "3"
	end if
else
	if p_dados_tela.ies_especie_nf = "nfr" then
		call sup376_verifica_item_forn_particip(p_dados_tela.cod_fornecedor,
		p_array_wms[p_ind].cod_item,
		p_dados_tela.dat_emis_nf,
		p_dados_tela.num_aviso_rec) returning p_par_forn
	end if
end if
if p_par_forn = "3" then
	call sup3762_le_cotacao_preco(p_dados_tela.cod_fornecedor,
	p_array_wms[p_ind].cod_item)

	call sup376_ver_fat_conver_consig(p_array_wms[p_ind].cod_item)
returning l_fat_conver_consig

	if ((p_cotacao_preco.pre_unit_liquido * l_fat_conver_consig) <>
		p_array_wms[p_ind].pre_unit_nf) or
		p_cotacao_preco.pre_unit_liquido is null then
		error " preco do item difere do contrato ou nao possui contrato de consignacao." attribute (reverse)
		if log004_confirm(21,42) then
		else
		next field pre_unit_nf
	end if
end if
end if

if p_funcao = "modificacao" then
	if la_dados_ant[p_ind].pre_unit_nf <> p_array_wms[p_ind].pre_unit_nf then
		if sup376_contagem_custo_diario(2) then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array_wms[p_ind].pre_unit_nf = la_dados_ant[p_ind].pre_unit_nf
			display p_array_wms[p_ind].pre_unit_nf to pre_unit_nf
		next field pre_unit_nf
	end if

	if m_controla_gao = "s" and m_controla_sup = "s" and m_desc_nf_rec = "n" then
		if not sup3760_permite_alteracao_gao() then
			call log0030_mensagem("controle gao ativo exclua inspe��o/contagem antes de modificar o pre�o. ap�s realize inspe��o/contagem manual.","excl")
			let p_array_wms[p_ind].pre_unit_nf = la_dados_ant[p_ind].pre_unit_nf
			display p_array_wms[p_ind].pre_unit_nf to pre_unit_nf
		next field pre_unit_nf
	end if

	let m_alterou_preco = true
end if
end if
end if

# transfere os dados para a p_array_wms
if p_array[p_ind].pre_unit_nf is not null and
	p_array[p_ind].pre_unit_nf then
	let p_array_wms[p_ind].pre_unit_nf = p_array[p_ind].pre_unit_nf
	display p_array_wms[p_ind].pre_unit_nf to s_sup37601[p_ind1].pre_unit_nf
end if
if p_array[p_ind].val_liquido_item is not null and
	p_array[p_ind].val_liquido_item <> " " then
	let p_array_wms[p_ind].val_liquido_item = p_array[p_ind].val_liquido_item
	display p_array_wms[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item
end if
if p_array[p_ind].pct_ipi is not null and
	p_array[p_ind].pct_ipi <> " " then
	let p_array_wms[p_ind].pct_ipi = p_array[p_ind].pct_ipi
end if
if p_array[p_ind].cod_cla_fisc_nf is not null and
	p_array[p_ind].cod_cla_fisc_nf <> " " then
	let p_array_wms[p_ind].cod_cla_fisc_nf = p_array[p_ind].cod_cla_fisc_nf
	display p_array_wms[p_ind].cod_cla_fisc_nf to s_sup37601[p_ind1].cod_cla_fisc_nf
end if
#let p_array[p_ind].pre_unit_nf = p_array_wms[p_ind].pre_unit_nf

before field val_liquido_item
let p_ind = arr_curr()
let p_ind1  = scr_line()
let l_val_liquido_item = p_array_wms[p_ind].val_liquido_item
if p_funcao = "modificacao" then
	call sup376_busca_aviso_rec(p_cod_empresa, p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq)
	if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) then
		if sup376_verifica_ar_item_contagem() then
			if fgl_lastkey() = fgl_keyval("up") then
			next field cod_cla_fisc_nf
		else
			if fgl_lastkey() = fgl_keyval("left") then
			next field cod_cla_fisc_nf
		else
		next field pct_ipi
	end if
end if
end if
end if
end if

call sup3760_save_cur_field_name('val_liquido_item')
after field val_liquido_item
let p_ind = arr_curr()
let p_ind1  = scr_line()

let p_array[p_ind].val_liquido_item = p_array_wms[p_ind].val_liquido_item

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) then
	if p_array_wms[p_ind].val_liquido_item > 0 then
		let p_array_wms[p_ind].val_liquido_item = 0

		display p_array_wms[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item

		call log0030_mensagem("nota fiscal de complemento de imposto n�o deve ter valor informado.","exclamation")

	next field val_liquido_item
end if
end if

if p_funcao = "modificacao" then
	if p_val_liquido_ant <> p_array_wms[p_ind].val_liquido_item
		then
		error "altera base de calculo do ipi?" attribute(reverse)
		if log004_confirm(21,39)
			then let p_base_ipi[p_ind].val_liquido_item = p_val_liquido_ant
		end if
		let p_array_compl[p_ind].alterou_val_liquido = true
	end if
end if

if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_val_liquido_item <> p_array_wms[p_ind].val_liquido_item then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array_wms[p_ind].val_liquido_item = l_val_liquido_item
			display p_array_wms[p_ind].val_liquido_item to val_liquido_item
		next field val_liquido_item
	end if
end if
end if

# transfere os dados para a p_array_wms
if p_array[p_ind].val_liquido_item is not null and
	p_array[p_ind].val_liquido_item <> " " then
	let p_array_wms[p_ind].val_liquido_item = p_array[p_ind].val_liquido_item
	display p_array_wms[p_ind].val_liquido_item to s_sup37601[p_ind1].val_liquido_item
end if
if p_array[p_ind].pct_ipi is not null and
	p_array[p_ind].pct_ipi <> " " then
	let p_array_wms[p_ind].pct_ipi = p_array[p_ind].pct_ipi
end if
if p_array[p_ind].cod_cla_fisc_nf is not null and
	p_array[p_ind].cod_cla_fisc_nf <> " " then
	let p_array_wms[p_ind].cod_cla_fisc_nf = p_array[p_ind].cod_cla_fisc_nf
	display p_array_wms[p_ind].cod_cla_fisc_nf to s_sup37601[p_ind1].cod_cla_fisc_nf
end if

let p_array[p_ind].val_liquido_item = p_array_wms[p_ind].val_liquido_item


before field pct_ipi
let p_ind = arr_curr()
let p_ind1  = scr_line()
let l_pct_ipi = p_array_wms[p_ind].pct_ipi
call sup3760_save_cur_field_name('pct_ipi')

after field pct_ipi
let p_ind = arr_curr()
let p_ind1  = scr_line()

let p_array[p_ind].pct_ipi = p_array_wms[p_ind].pct_ipi

if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = true then
	if fgl_lastkey() = fgl_keyval("up")   or
		fgl_lastkey() = fgl_keyval("left") then
	next field pre_unit_nf
end if
end if
##se for nota fiscal de importa��o n�o dever� verificar diverg�ncia de pre�o
if m_bloq_entr_preco = "s" and p_array_compl[p_ind].ar_com_pc = "s" and
	p_dados_tela.cod_operacao[1,1] <> "7" and m_nfr_import = false then
	if not sup0949_verifica_diverg_preco_unit(p_funcao, p_ind, p_dados_tela.num_aviso_rec, p_array[p_ind].seq,
		p_array[p_ind].pre_unit_nf, 'sup3760') then
	next field pre_unit_nf
end if
end if

if p_funcao = "modificacao" then
	if sup376_contagem_custo_diario(2) then
		if l_pct_ipi <> p_array_wms[p_ind].pct_ipi then
			error "custo medio diario nao permite modificacao p/ recebimento com contagem efetuada."
			let p_array_wms[p_ind].pct_ipi = l_pct_ipi
			display p_array_wms[p_ind].pct_ipi to pct_ipi
		next field pct_ipi
	end if
end if
end if

if find4glfunction('supy36_verifica_nf_retorno_industrializacao') then
	if supy36_verifica_nf_retorno_industrializacao(p_dados_tela.cod_operacao,
		p_dados_tela.cod_fiscal_compl) then

		if find4glfunction('supy36_executa_item_ret_terc') then
			call supy36_executa_item_ret_terc(p_dados_tela.cod_empresa,
			p_dados_tela.num_nf,
			p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf,
			p_dados_tela.ies_especie_nf,
			p_dados_tela.cod_fornecedor,
			p_array_wms[p_ind].seq)
		end if
	end if
end if

# transfere os dados para a p_array_wms
if p_array[p_ind].pct_ipi is not null and
	p_array[p_ind].pct_ipi <> " " then
	let p_array_wms[p_ind].pct_ipi = p_array[p_ind].pct_ipi
end if
if p_array[p_ind].cod_cla_fisc_nf is not null and
	p_array[p_ind].cod_cla_fisc_nf <> " " then
	let p_array_wms[p_ind].cod_cla_fisc_nf = p_array[p_ind].cod_cla_fisc_nf
	display p_array_wms[p_ind].cod_cla_fisc_nf to s_sup37601[p_ind1].cod_cla_fisc_nf
end if

after row
if int_flag = 0 then
	if log_existe_epl("sup3760y_after_row_insere_array_wms") then
		call log_setvar("linha_array", p_ind)
		call log_setvar("cod_fornecedor",p_dados_tela.cod_fornecedor)
		call log_setvar("wms_depositante",m_wms_depositante)

		if not sup3760y_after_row_insere_array_wms() then
		next field seq
	end if
end if
end if

after input
if int_flag = 0 then
	if log_existe_epl("sup3760y_after_input_insere_array_wms") then
		call log_setvar("cod_fornecedor",p_dados_tela.cod_fornecedor)
		call log_setvar("wms_depositante",m_wms_depositante)

		if not sup3760y_after_input_insere_array_wms() then
		next field cod_item
	end if
end if

let l_entra_grades   = true
if p_dados_tela.ies_especie_nf = "nfd" then
	let l_entra_grades = false
end if

# transfere todos os dados da vari�vel p_array_wms para p_array
for l_aux = 1 to arraylength(p_array_wms)
	let l_wms_item_aux          = p_array[l_aux].cod_item

	let p_array[l_aux].seq              = p_array_wms[l_aux].seq
	let p_array[l_aux].cod_item         = p_array_wms[l_aux].cod_item
	let p_array[l_aux].qtd_declarad_nf  = p_array_wms[l_aux].qtd_declarad_nf
	let p_array[l_aux].cod_unid_med_nf  = p_array_wms[l_aux].cod_unid_med_nf
	let p_array[l_aux].pre_unit_nf      = p_array_wms[l_aux].pre_unit_nf
	let p_array[l_aux].val_liquido_item = p_array_wms[l_aux].val_liquido_item
	let p_array[l_aux].den_item         = p_array_wms[l_aux].den_item
	let p_array[l_aux].cod_cla_fisc_nf  = p_array_wms[l_aux].cod_cla_fisc_nf
	let p_array[l_aux].pct_ipi          = p_array_wms[l_aux].pct_ipi

	if l_wms_item_aux <> " " and l_wms_item_aux is not null then
		let p_array[l_aux].cod_item = l_wms_item_aux
	end if
end for

let p_ind_ant = p_ind
for p_ind = 1 to arraylength(p_array)
	let m_informou_grade = false
	if p_array[p_ind].cod_item is null or p_array[p_ind].cod_item = " " then
		let l_entra_grades = false
		exit for
	end if
	#chamado a24579
	if m_wms_instal = 's' then
		if find4glfunction('wms6612_retorna_indicador_aduaneiro_ar') then
			if m_indicador_aduaneiro is null or m_indicador_aduaneiro = ' ' then
				let m_indicador_aduaneiro = wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec)
			end if
			if p_array[p_ind].cod_item is not null or p_array[p_ind].cod_item <> ' ' then
				if not wms6612_verifica_item_generico(p_array[p_ind].cod_item,m_indicador_aduaneiro) then
				next field cod_item
			end if
		end if
		if m_tipo_documento = "n" then
			if p_dados_tela.num_aviso_rec is not null and
				p_dados_tela.num_aviso_rec <> 0 and
				p_array[p_ind].cod_item is not null and
				p_array[p_ind].cod_item <> ' ' and
				m_indicador_aduaneiro = 't' then
				if not wms6612_tem_conferencia_alfandegado_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) then
					whenever error continue
					select peso_item
					from t_peso_item
					where aviso_rec = p_dados_tela.num_aviso_rec
					and item      = p_array[p_ind].cod_item
					and sequencia = p_array[p_ind].seq
					and peso_item > 0
					whenever error stop
					if sqlca.sqlcode = 100 then
						call wms6612_incluir_peso_item(p_dados_tela.num_aviso_rec,
						p_array[p_ind].cod_item,
						p_array[p_ind].seq)
						current window is w_sup37601
					end if
				end if
			end if
		end if
	end if
end if
if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) = false and
	sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
	p_cod_empresa,
	p_dados_tela.num_aviso_rec) = false then

	if m_mov_qtd_ser = "s" and p_array[p_ind].qtd_declarad_nf > 1 then
		call sup0063_verifica_controles(14,
		p_array[p_ind].cod_item,
		"inclusao",
		"sup3760")
		returning m_controles

		if m_controles <> " " then
			call sup0063_grava_temp_controles(m_controles)
			returning p_status

			if sup0063_existe_controle("11") then
				call log0030_mensagem("movimenta��o de quantidade deve ser �nica para item com controle de s�rie.","exclamation")

				let l_entra_grades = false
			end if
		end if
	end if

	#chamado tpjeo6 verificar o log0087 "perm_ent_nf_item_wms_s_dimens" quando for 's', verificar se a empresa utiliza wms e se o item controla wms, caso sim nao informa dimensional
	if m_perm_ent_nf_item_wms_s_dimens = 's' then
		if g_ies_wms_instalado = 's' then
			call wms0004_item_sob_controle_wms(p_cod_empresa, p_array[p_ind].cod_item) returning  l_sucesso,l_item_wms
			if l_item_wms then
				let l_entra_grades = false
			end if
		end if
	end if
	######

	if l_entra_grades then
		#-in�cio ch-tfkwzx-#
		let l_retorno_epl = false

		if log_existe_epl("sup3760y_before_informacao_grade_item") then
			call log_setvar("retorno_epl", l_retorno_epl)
			call log_setvar("nfe_import", p_nfe_import)
			call log_setvar("nfm_import", p_nfm_import)
			call log_setvar("ind_aux", p_ind)

			if sup3760y_before_informacao_grade_item() then
				let m_informou_grade = true
			end if

			let l_retorno_epl = log_getvar('retorno_epl')
		end if

		if l_retorno_epl = false then
			call sup3766_informacao_grade_item(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			p_array[p_ind].seq,
			p_array[p_ind].cod_item,
			p_array[p_ind].qtd_declarad_nf,
			p_array_compl[p_ind].ar_com_pc,
			1,
			p_array_compl[p_ind].num_oc)
			returning l_status, l_grade
			if l_status = false then
				let p_houve_erro = true
			else
				if l_grade = true then
					let m_informou_grade = true
				else
					if m_informa_controles_sup3760 = "s" then #os544582
						call sup0063_verifica_controles(14, p_array[p_ind].cod_item,"inclusao","sup3760")
						returning m_controles

						if m_controles <> " " then
							if log0040_confirm(12,15,"obrigat�rio informar o controle de grade/dimensional. informar controles?") then
								call sup3766_informacao_grade_item(p_cod_empresa,
								p_dados_tela.num_aviso_rec,
								p_array[p_ind].seq,
								p_array[p_ind].cod_item,
								p_array[p_ind].qtd_declarad_nf,
								p_array_compl[p_ind].ar_com_pc,
								0,
								p_array_compl[p_ind].num_oc)
								returning l_status, l_grade

								if l_status = false then
									let p_houve_erro = true
								else
									if l_grade = true then
										let m_informou_grade = true
									end if
								end if
							else
							next field cod_item
						end if
					end if
				end if
			end if
		end if
	end if
	#-fim ch-tfkwzx-#
end if
else
	exit for
end if
end for

for p_ind = 1 to arraylength(p_array)
	if p_dados_tela.ies_especie_nf = "nfc" and p_array[p_ind].qtd_declarad_nf is null then
		let p_array[p_ind].qtd_declarad_nf = 0
	end if

	if m_contr_pes_rec = 's' then   #eduardo o.s. 290538 19/11/03
		whenever error continue
		select empresa
		from sup_ctr_balanca
		where empresa           = p_cod_empresa
		and num_docum         = p_dados_tela.num_nf
		and serie_nota_fiscal = p_dados_tela.ser_nf
		and subserie_nf       = p_dados_tela.ssr_nf
		and fornecedor        = p_dados_tela.cod_fornecedor
		and seq_nota_fiscal   = p_array[p_ind].seq
		and tip_pesagem       = "1"
		and aviso_recebto     is null
		whenever error stop
		if sqlca.sqlcode = 0 then
			for l_aux = 1 to arraylength(p_array)
				if l_aux = p_ind then
					continue for
				end if

				if p_array[p_ind].cod_item = p_array[l_aux].cod_item then
					whenever error continue
					select empresa
					from sup_ctr_balanca
					where empresa           = p_cod_empresa
					and num_docum         = p_dados_tela.num_nf
					and serie_nota_fiscal = p_dados_tela.ser_nf
					and subserie_nf       = p_dados_tela.ssr_nf
					and fornecedor        = p_dados_tela.cod_fornecedor
					and seq_nota_fiscal   = p_array[l_aux].cod_item
					and tip_pesagem       = "1"
					and aviso_recebto     is null
					whenever error stop
					if sqlca.sqlcode <> 0 then
						error " item informado ja possui sequencia com pesagem "
						sleep 2
					next field cod_item
				end if
			end if
		end for
	end if
end if

if p_array[p_ind].qtd_declarad_nf is not null and p_array_compl[p_ind].ar_com_pc = "s" then
	let p_qtd_array = p_array[p_ind].qtd_declarad_nf
	let p_val_array = p_array[p_ind].pre_unit_nf
	if p_dados_tela.ies_especie_nf <> "nfd" then
		if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
			let p_soma_reserva2 = null
			call sup386_popup_ordens_reservada(p_cod_empresa,
			p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
			p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
			p_qtd_array, "n" , p_funcao,
			p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
			returning p_soma_reserva2, p_ies_reservou, p_ord_forn
			let p_qtd_array = 0
			let p_val_array = 0
			let int_flag = 0
			call log006_exibe_teclas("01 02 03 07", p_versao)
			current window is w_sup37601
		end if
	end if
	if m_bloq_entr_data = "s" and p_dados_tela.ies_nf_aguard_nfe <> "7" then
		if not sup0949_verifica_diverg_dat_entrega(p_ind) then
		next field qtd_declarad_nf
	end if
end if
##se for nota fiscal de importa��o n�o dever� verificar diverg�ncia de pre�o
if m_bloq_entr_preco = "s" and p_dados_tela.cod_operacao[1,1] <> "7" and
	m_nfr_import = false and p_array_compl[p_ind].ar_com_pc = "s" {760674} then
	if not sup0949_verifica_diverg_preco_unit(p_funcao, p_ind, p_dados_tela.num_aviso_rec, p_array[p_ind].seq,
		p_array[p_ind].pre_unit_nf, 'sup3760') then
	next field pre_unit_nf
end if
end if
else
	exit for
end if
end for

let p_ind = p_ind_ant

if p_funcao = "modificacao" and
	p_array_compl[p_ind].alterou_val_liquido = false then
	if p_val_liquido_ant <> p_array[p_ind].val_liquido_item then
		error "altera base de calculo do ipi?" attribute (reverse)
		if log004_confirm(21,39) then
			let p_base_ipi[p_ind].val_liquido_item = p_val_liquido_ant
		end if
		let p_array_compl[p_ind].alterou_val_liquido = true

		if log_existe_epl("sup3760y_after_field_val_liquido_item") then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl c�digo da empresa
			#epl tipo: aviso_rec.cod_empresa

			call log_setvar('num_nf', p_dados_tela.num_nf)
			#epl n�mero da nota fiscal
			#epl tipo: nf_sup.num_nf

			call log_setvar('ser_nf', p_dados_tela.ser_nf)
			#epl s�rie da nota fiscal
			#epl tipo: nf_sup.ser_nf

			call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
			#epl subserie da nota fiscal
			#epl tipo: nf_sup.ssr_nf

			call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
			#epl esp�cie da nota fiscal
			#epl tipo: nf_sup.ies_especie_nf

			call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
			#epl c�digo do fornecedor da nota fiscal
			#epl tipo: nf_sup.cod_fornecedor

			call log_setvar('num_seq', p_aviso_rec.num_seq)
			#epl sequencia do item na nf
			#epl tipo: aviso_rec.num_seq

			call log_setvar('val_liquido_item', p_array[p_ind].val_liquido_item)
			#epl valor l�quido do item
			#epl tipo: aviso_rec.val_liquido_item

			if not sup3760y_after_field_val_liquido_item() then
			next field val_liquido_item
		end if
	end if
end if
end if

if p_ord_forn = false and
	p_funcao = "inclusao" then
	if (p_pedidos[1,5] = "xxxxx") or
		(p_pedidos is null)        then
		if p_par_sup.ies_entrada_sem_pc = "n" and
			p_ies_entr_sem_ped = false then
			let p_ies_pagamento2 = null
			let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
			if l_cod_empresa_orig is not null then
				let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
			end if
			let p_ies_pagamento2 = p_cond_pgto_cap.ies_pagamento
			if p_ies_pagamento2 = "3" then
			else
				error " nao ha ordens de compras para este fornecedor "
			next field qtd_declarad_nf
		end if
	end if
end if
end if

let p_ind = arr_count()

for p_ind2 = 1 to p_ind
	if (p_array[p_ind2].cod_item is null or
		p_array[p_ind2].cod_item = " ")  and
		(p_array[p_ind2].den_item is null or
		p_array[p_ind2].den_item = " ")  and
		(p_array[p_ind2].cod_unid_med_nf is null or
		p_array[p_ind2].cod_unid_med_nf = " ")  and
		(p_array[p_ind2].qtd_declarad_nf is null or
		p_array[p_ind2].qtd_declarad_nf = 0  or
		p_array[p_ind2].qtd_declarad_nf = " ")  and
		(p_array[p_ind2].pre_unit_nf     is null or
		p_array[p_ind2].pre_unit_nf     = 0     or
		p_array[p_ind2].pre_unit_nf = " ")      and
		(p_array[p_ind2].val_liquido_item is null or
		p_array[p_ind2].val_liquido_item = 0     or
		p_array[p_ind2].val_liquido_item = " ")  then
		if p_ind2 > 1 then
			initialize p_array[p_ind2].* to null
		end if
	else
		if p_funcao = "modificacao" then
			call sup376_verifica_update_after()

			call sup3760_atualiza_item_de_terc(0, 0," ", " ", p_dados_tela.dat_emis_nf,
			p_dados_tela.dat_entrada_nf,
			p_dados_tela.num_nf, p_dados_tela.ser_nf,
			p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
			p_dados_tela.ies_especie_nf,
			p_array[p_ind2].seq, 2)
			returning p_status
		end if

		if p_funcao = "inclusao" or
			p_funcao =  "inclu.itens" then

			if p_array_compl[p_ind2].ar_com_pc = "s" and p_par_sup.ies_modulo_compras = "s" then
				if not sup3760_pedido_ordem_valido(p_array_compl[p_ind2].num_pedido,
					p_array_compl[p_ind2].num_oc) then
				next field cod_item
			end if
		end if

		if (p_dados_tela.ies_especie_nf <> "nfr" and
			p_dados_tela.ies_especie_nf <> "nfd") or
			m_nfr_import then
			if p_array[p_ind2].cod_item  is not null and
				p_array[p_ind2].cod_item <> " " then
				if p_array_compl[p_ind2].ar_com_pc <> "s" or
					p_array_compl[p_ind2].ar_com_pc is null then

					let l_forn_possui_pc = true
					if find4glfunction('supy5_fornecedor_possue_pc_oc') then
						let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
					end if

					if l_forn_possui_pc then
						if p_par_sup.ies_modulo_compras = "s" then
							if p_par_sup.ies_entrada_sem_pc = "n" and
								p_ies_entr_sem_ped = false then
								if p_dados_tela.ies_especie_nf <> "nfc" and
									p_dados_tela.ies_especie_nf <> "con" and
									p_dados_tela.ies_especie_nf <> "nfe" and
									not sup3760_busca_mat_aplicado(p_array[p_ind2].cod_item, p_dados_tela.cod_fornecedor) then
									error "empresa nao permite entrada de n.f. sem pedido de compra"
								next field cod_item
							end if

							if p_dados_tela.ies_especie_nf = "nfc" and
								(p_par_sup_compl.ies_nf_compl_preco = "3" or
								p_par_sup_compl.ies_nf_compl_preco = "4") then
								error "empresa nao permite entrada de nfc sem pedido de compra"
							next field cod_item
						end if

						if p_dados_tela.ies_especie_nf = "nfe"       and
							(p_par_sup_compl.ies_nf_compl_preco = "2" or
							p_par_sup_compl.ies_nf_compl_preco = "4") then
							error "empresa nao permite entrada de nfe sem pedido de compra."
						next field cod_item
					end if
				else
					if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
						if p_array_pedidos[1].num_pedido is null or
							p_array_pedidos[1].num_pedido = " " then
							call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
						next field cod_item
					end if
				end if
			end if
		end if
	end if
end if
#### calcula totais importacao
if p_nfe_import = true or p_nfm_import = true then
	let p_array_imp[p_ind2].val_ii =
	(p_array_imp[p_ind2].val_ii_tot *
	p_array[p_ind2].qtd_declarad_nf) /
	p_array_imp[p_ind2].quantidade
	let p_array_imp[p_ind2].val_desp_imp =
	(p_array_imp[p_ind2].val_desp_imp_tot *
	p_array[p_ind2].qtd_declarad_nf) /
	p_array_imp[p_ind2].quantidade
	let p_array_imp[p_ind2].val_ipi =
	(p_array_imp[p_ind2].val_ipi_tot *
	p_array[p_ind2].qtd_declarad_nf) /
	p_array_imp[p_ind2].quantidade
	let p_array_imp[p_ind2].val_icms =
	(p_array_imp[p_ind2].val_icms_tot *
	p_array[p_ind2].qtd_declarad_nf) /
	p_array_imp[p_ind2].quantidade
	let p_array_imp[p_ind2].val_da_icms =
	(p_array_imp[p_ind2].val_da_icms *
	p_array[p_ind2].qtd_declarad_nf) /
	p_array_imp[p_ind2].quantidade

	let p_nf_sup.val_ipi_nf = p_nf_sup.val_ipi_nf +
	p_array_imp[p_ind2].val_ipi
	if m_num_processo >= g_proc_ini_os163407 then
		let p_nf_sup.val_despesa_aces = p_nf_sup.val_despesa_aces +
		p_array_imp[p_ind2].val_da_icms
	else
		let p_nf_sup.val_despesa_aces = p_nf_sup.val_despesa_aces +
		p_array_imp[p_ind2].val_ii +
		p_array_imp[p_ind2].val_desp_imp
	end if
	let p_nf_sup.val_tot_icms_nf_d = p_nf_sup.val_tot_icms_nf_d +
	p_array_imp[p_ind2].val_icms

	call sup3762_busca_piscofins_imp() returning l_val_tot_piscofins, l_quantidade
	if l_quantidade is null then
		let l_quantidade = 0
	end if

	if  l_val_tot_piscofins is not null
		and l_val_tot_piscofins <> 0 then
		let l_val_tot_piscofins = (l_val_tot_piscofins *
		p_array[p_ind2].qtd_declarad_nf) /
		(p_array_imp[p_ind2].quantidade - l_quantidade)
	end if

	if g_icms_total_nf = "s" and p_nf_sup.dat_entrada_nf >= g_dat_icms_tot_nf then
		let p_nf_sup.val_tot_nf_d = p_nf_sup.val_tot_nf_d +
		p_array[p_ind2].val_liquido_item +
		p_array_imp[p_ind2].val_ipi +
		p_array_imp[p_ind2].val_icms +
		l_val_tot_piscofins
	else
		let p_nf_sup.val_tot_nf_d = p_nf_sup.val_tot_nf_d +
		p_array[p_ind2].val_liquido_item +
		p_array_imp[p_ind2].val_ipi +
		l_val_tot_piscofins
	end if
	let p_dados_tela_f.val_ipi_nf        = p_nf_sup.val_ipi_nf
	let p_dados_tela_f.val_tot_icms_nf_d = p_nf_sup.val_tot_icms_nf_d
	let p_dados_tela_f.val_tot_nf_d      = p_nf_sup.val_tot_nf_d
end if
end if
end if
end if
if p_array[p_ind2].cod_item is null or
	p_array[p_ind2].cod_item = " "   then
	if (p_dados_tela.ies_especie_nf <> "nfd" and
		p_dados_tela.ies_especie_nf <> "nfr" and
		p_dados_tela.ies_especie_nf <> "nfc") or
		((p_dados_tela.ies_especie_nf = "nfd" or
		p_dados_tela.ies_especie_nf  =  "nfr") and
		p_ies_item_nfd_nfr          = "s")  then
		error "informe codigo do item"
	next field cod_item
else
	let p_array[p_ind2].cod_item = " "
end if
else
	if m_ies_cit_item = "s" then
		if sup3760_testa_cit_item(p_array[p_ind2].cod_item) then
			error "produto citricola, verificar tabela cit_item "
		next field cod_item
	end if
end if
end if

if p_array[p_ind2].den_item is null     and
	p_dados_tela.ies_especie_nf <> "nfd" and
	p_dados_tela.ies_especie_nf <> "nfr" then
	error "informe denominacao do item"
next field den_item
end if
if p_array[p_ind2].cod_unid_med_nf is null and
	p_dados_tela.ies_especie_nf <> "nfd" and
	p_dados_tela.ies_especie_nf <> "nfr" and
	p_dados_tela.ies_especie_nf <> "nfc" then
	error "informe unidade de medida"
next field cod_unid_med_nf
end if

if m_tem_valid_fim then
	### tabela cod_fiscal_sup ja foi convertida.
	initialize l_status, l_dat_fim_valid to null
	call sup0686_retorna_dat_fim_valid(p_dados_tela.cod_operacao,
	p_dados_tela.cod_fiscal_compl)
returning l_status,
	l_dat_fim_valid
	if l_dat_fim_valid is null then
		if p_dados_tela.cod_operacao[3,5] = "101" and
			p_ies_contrib_ipi = "s" and
			p_array[p_ind2].cod_item is not null and
			p_array[p_ind2].cod_item <> " " then
			if p_array[p_ind2].cod_cla_fisc_nf is null or
				p_array[p_ind2].cod_cla_fisc_nf = " " or
				p_array[p_ind2].cod_cla_fisc_nf = 0 then
				error "informe classificacao fiscal"
			next field cod_cla_fisc_nf
		end if
	end if
else
	if p_dados_tela.cod_operacao[3,4] = "11" and
		p_ies_contrib_ipi = "s" and
		p_array[p_ind2].cod_item is not null and
		p_array[p_ind2].cod_item <> " " then
		if p_array[p_ind2].cod_cla_fisc_nf is null or
			p_array[p_ind2].cod_cla_fisc_nf = " " or
			p_array[p_ind2].cod_cla_fisc_nf = 0 then
			error "informe classificacao fiscal"
		next field cod_cla_fisc_nf
	end if
end if
end if
else
	if p_dados_tela.cod_operacao[3,4] = "11" and
		p_ies_contrib_ipi = "s" and
		p_array[p_ind2].cod_item is not null and
		p_array[p_ind2].cod_item <> " " then
		if p_array[p_ind2].cod_cla_fisc_nf is null or
			p_array[p_ind2].cod_cla_fisc_nf = " " or
			p_array[p_ind2].cod_cla_fisc_nf = 0 then
			error "informe classificacao fiscal"
		next field cod_cla_fisc_nf
	end if
end if
end if
###nota complementar quantidade nula assume quantidade zero.
if p_array[p_ind2].qtd_declarad_nf clipped is null then
	if p_dados_tela.ies_especie_nf = "nfc" then
		let p_array[p_ind2].qtd_declarad_nf = 0
	else
		error "informe quantidade declarada"
	next field qtd_declarad_nf
end if
end if

if p_array[p_ind2].pre_unit_nf clipped is null then
	error "informe preco unitario"
next field pre_unit_nf
end if

if p_array[p_ind2].val_liquido_item clipped is null then
	error "informe valor liquido do item"
next field val_liquido_item
end if
end if
end for

#tfmmv2
let p_ind = arr_curr()
let p_somatorio_dif = 0

#utilizando seta pra cima e pra baixo, n�o atualizava o p_soma_reserva2 de acordo com a
#quantidade real do item onde o cursor est� parado
if p_array_wms[p_ind].qtd_declarad_nf is not null and
	p_array_compl[p_ind].ar_com_pc = "s" then
	let p_qtd_array = p_array_wms[p_ind].qtd_declarad_nf
	let p_val_array = p_array_wms[p_ind].pre_unit_nf
	if p_dados_tela.ies_especie_nf <> "nfd" then
		if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
			let p_soma_reserva2 = null
			call sup386_popup_ordens_reservada(p_cod_empresa,
			p_array_wms[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
			p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
			p_qtd_array, "n" , p_funcao,
			p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq, p_ind)
			returning p_soma_reserva2, p_ies_reservou, p_ord_forn
			let p_qtd_array = 0
			let p_val_array = 0
			let int_flag = 0
			call log006_exibe_teclas("01 02 03 07", p_versao)
			current window is w_sup37601
		end if
	end if
end if

for p_ind5 = 1 to 50
	if p_array_it_prg_entr[p_ind, p_ind5].qtd_solic is null or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = " "   or
		p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = 0 then
		exit for
	end if
	if p_array_compl[p_ind].num_oc <> 0        and
		p_array_compl[p_ind].num_oc is not null then
		initialize p_ordem_sup.* to null
		call sup3762_busca_ordem_sup(p_cod_empresa,
		p_array_compl[p_ind].num_oc)

		let p_fat_conver_unid = p_ordem_sup.fat_conver_unid
		if sqlca.sqlcode <> 0 then
			let p_fat_conver_unid = 1
		end if
	end if
	if p_fat_conver_unid = 0 then
		let p_fat_conver_unid = 1
	end if
	let p_dif_aceite = 0
	if p_array_compl[p_ind].pct_aceite_dif = 0
		and p_dados_tela.ies_nf_aguard_nfe <> "5"
		then let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_par_sup.pct_maximo_div_q) / 100
	else let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
		* p_array_compl[p_ind].pct_aceite_dif) / 100
	end if
	let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
end for
let p_array_compl[p_ind].tot_reserv_dif = 0
let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_soma_reserva2
if p_array_wms[p_ind].qtd_declarad_nf > (p_soma_reserva2 + p_somatorio_dif) and p_dados_tela.ies_nf_aguard_nfe <> "d" then
	if p_funcao <> "modificacao" or
		p_funcao = "modificacao" and p_msg_qtd = "s" then
		if p_array_compl[p_ind].num_pedido is not null and
			p_array_compl[p_ind].num_pedido <> 0        and
			p_array_compl[p_ind].ies_liquida_oc <> "3"  then
			if p_dados_tela.ies_nf_aguard_nfe = "5" then
				error "entrada sem saldo suficiente; contatar comprador urgente "
			next field qtd_declarad_nf
		end if

		if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
			call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
			call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

			call sup3760y_before_process_ies_entrada_maior()
			let p_ies_entrada_maior = log_getvar('ies_entrada_maior')
		end if
		if p_ies_entrada_maior = "n"  then
			call log0030_mensagem("entrada sem saldo suficiente; contatar comprador urgente ","exclamation")
		else
			call log0030_mensagem("entrada sem saldo suficiente.","exclamation")
		end if
		if p_ies_entrada_maior = "s"  then
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	else
		if p_ies_entrada_maior = "c" then
			if p_aguard_5 = true then
			next field qtd_declarad_nf
		else
			if log004_confirm(14,42) then
			else
			next field qtd_declarad_nf
		end if
	end if
else
next field qtd_declarad_nf
end if
end if
end if
end if
end if
#tfmmv2
end if

on key (control-z, f4)
call sup376_popups(p_funcao)
let int_flag = 0

end input

let p_ind = arr_curr()
let p_ind1 = scr_line()
call sup3760_botao_zoom("off",3,68)
current window is w_sup37601

if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,p_cod_empresa,p_dados_tela.num_aviso_rec) = false then
	if p_array_wms[1].cod_item is null then
		if (p_array_wms[1].den_item is null or
			p_array_wms[1].den_item = " ")  and
			(p_array_wms[1].cod_unid_med_nf is null or
			p_array_wms[1].cod_unid_med_nf = " ")  and
			(p_array_wms[1].qtd_declarad_nf is null or
			p_array_wms[1].qtd_declarad_nf = 0  or
			p_array_wms[1].qtd_declarad_nf = " ")  and
			(p_array_wms[1].pre_unit_nf     is null or
			p_array_wms[1].pre_unit_nf     = 0     or
			p_array_wms[1].pre_unit_nf = " ")      and
			(p_array_wms[1].val_liquido_item is null or
			p_array_wms[1].val_liquido_item = 0     or
			p_array_wms[1].val_liquido_item = " ")  then
			error "nao foi informado item para esta nota"
			sleep 2
			let int_flag = 1
			return false
		else
			if (p_dados_tela.ies_especie_nf <> "nfd" and p_dados_tela.ies_especie_nf <> "nfr") then
				let int_flag = 1
				return false
			end if
		end if
	end if
end if

if p_dados_tela.cod_fornecedor is not null then
	if sup376_verifica_fornecedor() = false then
		error "fornecedor excluido durante a opera��o."
		sleep 2
		let int_flag = 1
	end if
end if

if int_flag <> 0 then
	for l_aux = 1 to arraylength(p_array)
		initialize p_array[p_ind].* to null
		initialize p_array_wms[p_ind].* to null
	end for
return false
end if

return true
end function

#------------------------------------------#
function sup3760_tempo_gasto(l_dathor_fim,
	l_dathor_ini)
#------------------------------------------#
	define l_minutos      integer,
	l_horas        integer,
	l_dias         integer,
	l_horas_totais integer,
	l_segundos     integer,
	l_tempo_gasto  char(10),
	l_data         char(20),
	l_dathor_fim   datetime year to second,
	l_dathor_ini   datetime year to second

	let l_data = l_dathor_fim - l_dathor_ini
	# contornando problema no totvstec espa�o na primeira posi��o do retorno
	if length(l_data) <= 19 then
		let l_segundos = l_data[17,18]
		let l_minutos  = l_data[14,15]
		let l_horas    = l_data[11,12]
		let l_dias     = l_data[08,09] * 24
	else
		let l_segundos = l_data[19,20]
		let l_minutos  = l_data[16,17]
		let l_horas    = l_data[13,14]
		let l_dias     = l_data[10,11] * 24
	end if

	let l_horas_totais = l_dias + l_horas

	if l_horas_totais > 99 then
		let l_tempo_gasto = l_horas_totais using "&&&", ":", l_minutos using "&&", ":", l_segundos using "&&"
	else
		let l_tempo_gasto = l_horas_totais using "&&", ":", l_minutos using "&&", ":", l_segundos using "&&"
	end if

return l_tempo_gasto
end function

# passo 18 #
#-----------------------------------------------------------------------#
function sup3760_localiza_item_deposit_fornec(l_cod_item, l_fornecedor)
#-----------------------------------------------------------------------#
	{ localizar o item do depositante
	}
	define l_cod_item         char(25),
	l_fornecedor       like fornecedor.cod_fornecedor,
	l_status           smallint,
	l_item_depositante char(25),
	l_continua         smallint

	if m_possui_regime_filial then
		let l_fornecedor  = m_emitente_nf_filial
	end if

	let l_status = false
	let l_continua = true
	if ((p_dados_tela.ies_nf_aguard_nfe = "a") or (p_dados_tela.ies_nf_aguard_nfe = "b" and m_possui_regime_filial)) and
		m_wms_depositante <> l_fornecedor then
		# passo 18.1
		whenever error continue
		declare cq_sup_par_itforn cursor for
		select item
		from sup_par_itforn
		where empresa         = p_cod_empresa
		and fornecedor      = l_fornecedor
		and parametro       = 'item_fornecedor_25'
		and parametro_texto = l_cod_item
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log0030_processa_err_sql("declare cursor","cq_sup_par_itforn", 0)
			let l_continua = false
		end if

		whenever error continue
		open cq_sup_par_itforn
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log0030_processa_err_sql("open cursor","cq_sup_par_itforn", 0)
			let l_continua = false
		end if

		whenever error continue
		fetch cq_sup_par_itforn into l_item_depositante
		whenever error stop
		if sqlca.sqlcode = 0 then
			let l_status = true
		end if
	end if

return l_item_depositante, l_status, l_continua

end function

# passo 18.2 #
#-------------------------------------------------------#
function sup3760_wms_busca_item_complemento(l_cod_item)
#-------------------------------------------------------#
	{ busca o item que dever� ser adicionado a vari�vel p_array

	parametros:
	l_cod_item: c�digo do item da tela

	retorno:
	c�digo do item e o status da opera��o

	}
	define l_cod_item         char(25),
	l_status           smallint,
	l_cod_item_erp     like sup_par_itforn.item,
	l_sucesso_sql      smallint,
	l_ies_item_wms     smallint

	let l_status = false
	call wmst81_wms_item_complemento_busca_item(p_cod_empresa,m_wms_depositante,l_cod_item clipped,1) # valida item 25 posi��es
returning l_status,l_cod_item_erp # retorna item de 15 posi��es.
	if l_status then
		return l_cod_item_erp, true
	else
		if length(l_cod_item clipped) > 15 then
			return null, false
		else
			# passo 18.3 #
			initialize l_status to null
			call sup376_busca_item(p_cod_empresa, l_cod_item clipped) returning l_status
			if l_status then
				if m_tipo_documento = "p" or    # provis�rio
					m_tipo_documento = "d" then  # definido
					# verifica se o item de 15 posi��es pertence ao depositante.
					whenever error continue
					select item
					from wms_item_complemento
					where empresa = p_cod_empresa
					and deposit = m_wms_depositante
					and item    = l_cod_item  # item 15 posi��es
					whenever error stop
					if sqlca.sqlcode = 0 then
						return l_cod_item clipped, true
					else
						# verifica se o item est� sob controle do wms.
						call wms0004_item_sob_controle_wms(p_cod_empresa,l_cod_item)
						returning l_sucesso_sql, l_ies_item_wms
						# se n�o estiver sendo controlado pelo wms, permitir informar item.
						if not l_ies_item_wms then
							return l_cod_item clipped, true
						end if
					end if
				else
					# tipo de documento normal -> indica que a nf n�o ser� utilizada em processos do wms.
					return l_cod_item clipped, true
				end if
			else
				return null, false
			end if
		end if
	end if

return null, false

end function

#---------------------------------------#
function sup3760_fornecedor_eh_deposit()
#---------------------------------------#
	define l_parametro_texto like sup_par_ar.parametro_texto

	# verifica se o fornecedor informado � um depositante.

	whenever error continue
	select parametro_texto
	into l_parametro_texto
	from sup_par_fornecedor
	where empresa    = "se"
	and fornecedor = p_dados_tela.cod_fornecedor
	and parametro  = "ies_depositante"
	whenever error stop
	if sqlca.sqlcode = 0        or
		sqlca.sqlcode = notfound then
		if l_parametro_texto = "n" or
			l_parametro_texto is null or
			l_parametro_texto = ' ' then
			call log0030_processa_mensagem("fornecedor informado n�o � um depositante.","exclamation",0)
			return false
		end if
	end if

return true

end function

#----------------------------------------------#
function sup3760_altera_provisorio_definitivo()
#----------------------------------------------#
# verifica se o tipo do documento pode ser alterado de provis�rio para definido.

	# somente permitir a troca se o fornecedor for um depositante.
	if not sup3760_fornecedor_eh_deposit() then
		return false
	end if

	# somente permitir a troca se para o depositante existit um contrato ativo.
	if not sup3760_possui_contrato_ativo_deposit() then
		return false
	end if

	# somente permitir a troca se o depositante for igual ao fornecedor.
	if not sup3760_deposit_diferente_fornec() then
		return false
	end if

return true

end function

#------------------------------------------#
function sup3760_altera_normal_provisorio()
#------------------------------------------#
# verifica se o tipo do documento pode ser alterado de normal para provis�rio.

	# somente permitir a troca se o fornecedor for um depositante.
	if not sup3760_fornecedor_eh_deposit() then
		return false
	end if

	# somente permitir a troca se para o depositante existit um contrato ativo.
	if not sup3760_possui_contrato_ativo_deposit() then
		return false
	end if

	if not sup3760_itens_nf_pertecem_deposit() then
		return false
	end if

return true

end function

#-----------------------------------------------#
function sup3760_possui_contrato_ativo_deposit()
#-----------------------------------------------#
	define l_contrato        like wms_contrato.contrato,
	l_status          smallint

	call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
	p_dados_tela.cod_fornecedor,
	today,0) returning l_contrato,
	l_status
	if l_contrato = "0" then
		call log0030_processa_mensagem("depositante n�o possui contrato ativo.","exclamation",0)
		return false
	end if

return  true

end function

#------------------------------------------#
function sup3760_deposit_diferente_fornec()
#------------------------------------------#
	define l_wms_depositante char(15)

	initialize l_wms_depositante to null

	whenever error continue
	select cod_depositante
	into l_wms_depositante
	from ar_depos
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("leitura","ar_depos")
		return false
	else
		if l_wms_depositante <> p_dados_tela.cod_fornecedor then
			call log0030_mensagem("depositante da nota fiscal � diferente do fornecedor. tipo de documento n�o pode ser alterado para definitivo.","exclamation")
			return false
		end if
	end if

return true

end function

#-------------------------------------------#
function sup3760_itens_nf_pertecem_deposit()
#-------------------------------------------#
# verfica se os itens da nf que forem controlados pelo wms pertencem ao depositante.
	define l_msg            char(100)

	initialize l_msg to null

	if not sup3760_itens_pertencem_deposit(p_dados_tela.cod_fornecedor) then
		let l_msg = "item ", m_item_interno clipped, " n�o pertence ao fornecedor da nota fiscal."
		call log0030_processa_mensagem(l_msg,"exclamation",0)
		return false
	end if

return true

end function

#------------------------------------------#
function sup3760_altera_normal_definitivo()
#------------------------------------------#
# verifica se o tipo do documento pode ser alterado de normal para definido.

	# somente permitir a troca se o fornecedor for um depositante.
	if not sup3760_fornecedor_eh_deposit() then
		return false
	end if

	# somente permitir a troca se para o depositante existit um contrato ativo.
	if not sup3760_possui_contrato_ativo_deposit() then
		return false
	end if

	if not sup3760_itens_nf_pertecem_deposit() then
		return false
	end if

return true

end function

#---------------------------------#
function sup3760_existe_ar_depos()
#---------------------------------#
	define l_cont smallint

	let l_cont = 0

	whenever error continue
	select count(*)
	into l_cont
	from aviso_rec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode = 0 or
		l_cont <> 0 then
		return true
	end if

return false

end function

#-----------------------------------#
function sup3760_verifica_usuario()
#-----------------------------------#
	whenever error continue
	select sup_par_usuario.usuario
	from sup_par_usuario
	where sup_par_usuario.empresa   = p_cod_empresa
	and sup_par_usuario.parametro = "unidade_funcional"
	and sup_par_usuario.usuario   = p_user
	whenever error stop
	if sqlca.sqlcode <> 0 then
		return false
	else
		return true
	end if
end function

#---------------------------------------#
function sup3760_aprova_erro_qtd_dias()
#---------------------------------------#
	define l_ind       smallint,
	l_arr_curr  smallint,
	l_scr_line  smallint,
	l_arr_count smallint,
	l_entrou    smallint,
	l_msg       char(50)

	call log006_exibe_teclas("01",p_versao)

	call log130_procura_caminho("sup3760l") returning comando3
	open window w_sup3760l at 7,20 with form comando3
	attribute(border, message line last, prompt line last, comment line last)

	whenever error continue
	declare cq_nf_erro cursor for
	select "n", nf_sup.dat_emis_nf, nf_sup.num_nf, nf_sup.ser_nf, nf_sup.ssr_nf,
	aviso_rec.cod_item, nf_sup.num_aviso_rec, aviso_rec.num_seq
	from nf_sup, nf_sup_erro, aviso_rec
	where nf_sup.cod_empresa             = p_cod_empresa
	and nf_sup.cod_empresa             = nf_sup_erro.empresa
	and nf_sup.cod_empresa             = aviso_rec.cod_empresa
	and nf_sup.num_aviso_rec           = nf_sup_erro.num_aviso_rec
	and nf_sup.num_aviso_rec           = aviso_rec.num_aviso_rec
	and nf_sup_erro.num_seq            = aviso_rec.num_seq
	and nf_sup_erro.des_pendencia_item = 'data de validade n�o permite o recebimento do item'
	order by nf_sup.dat_emis_nf
	whenever error stop
	if  sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("declare","nf_sup / nf_sup_erro / aviso_rec")
	end if

	let l_ind    = 1
	let l_entrou = false

	whenever error continue
	foreach cq_nf_erro into ma_nf_erro[l_ind].seleciona,
	ma_nf_erro[l_ind].dat_emis_nf,
	ma_nf_erro[l_ind].num_nf,
	ma_nf_erro[l_ind].ser_nf,
	ma_nf_erro[l_ind].ssr_nf,
	ma_nf_erro[l_ind].cod_item,
	ma_aviso_rec[l_ind].num_aviso_rec,
	ma_aviso_rec[l_ind].num_seq
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("foreach cursor","cq_nf_erro")
	end if

	let l_ind = l_ind + 1
	call sup3760_checkarrayadditem_ar(l_ind,1)
	let l_entrou = true
end foreach
free cq_nf_transito
whenever error stop

if l_entrou = false then
	call log0030_mensagem("n�o existem notas fiscais com erro a serem listadas.","info")
return
end if

call log006_exibe_teclas("01 02 07",p_versao)
current window is w_sup3760l

call set_count(l_ind - 1)
let int_flag = 0
input array ma_nf_erro without defaults from sr_nf_erro.*
attributes(insert row = false, delete row = false)

before row
let l_arr_curr  = arr_curr()
let l_scr_line  = scr_line()
let l_arr_count = arr_count()

before field seleciona
call sup3760_save_cur_field_name('seleciona')

after field seleciona
if ma_nf_erro[l_arr_curr].seleciona is not null then
	if  ma_nf_erro[l_arr_curr].seleciona <> "s"
		and ma_nf_erro[l_arr_curr].seleciona <> "n" then
		call log0030_mensagem("valor inv�lido.","excl")
	next field seleciona
end if
else
	call log0030_mensagem("campo n�o preenchido.","excl")
next field seleciona
end if

if ma_nf_erro[l_arr_curr].seleciona = "s" then
	if sup3760_verifica_aprovacao_erro(l_arr_curr) then
		let l_msg = "nf j� aprovada. usu�rio - ", m_user clipped, " no dia ", m_data, ". "
		call log0030_mensagem(l_msg,"excl")
		let ma_nf_erro[l_arr_curr].seleciona = "n"
		display ma_nf_erro[l_arr_curr].* to sr_nf_erro[l_arr_curr].*
	end if
end if

if l_arr_curr = l_arr_count then
	if  not fgl_lastkey() = fgl_keyval("up")
		and not fgl_lastkey() = fgl_keyval("left")
		and not fgl_lastkey() = fgl_keyval("accept") then
		call log0030_mensagem("n�o h� mais itens para esta dire��o.","excl")
	next field seleciona
end if
end if
end input

if int_flag = 0 then
	for l_ind = 1 to arraylength(ma_nf_erro)
		if ma_nf_erro[l_ind].seleciona = "s" then
			call sup3760_insert_sup_par_ar(l_arr_count)
			exit for
		end if
	end for
end if
close window w_sup3760l

call sup3760_initialize_ar()
end function

#-----------------------------------------------#
function sup3760_insert_sup_par_ar(l_arr_count)
#-----------------------------------------------#
	define l_arr_count      smallint,
	l_ind            smallint

	for l_ind = 1 to l_arr_count
		if ma_nf_erro[l_ind].seleciona = "s" then
			whenever error continue
			insert into sup_par_ar(empresa,
			aviso_recebto,
			seq_aviso_recebto,
			parametro,
			par_ind_especial,
			parametro_texto,
			parametro_val,
			parametro_dat)
			values (p_cod_empresa,
			ma_aviso_rec[l_ind].num_aviso_rec,
			ma_aviso_rec[l_ind].num_seq,
			"aprova_erro",
			" ", p_user, null, today)
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql('insert','sup_par_ar')
			end if

			whenever error continue
			delete from nf_sup_erro
			where nf_sup_erro.empresa            = p_cod_empresa
			and nf_sup_erro.num_aviso_rec      = ma_aviso_rec[l_ind].num_aviso_rec
			and nf_sup_erro.num_seq            = ma_aviso_rec[l_ind].num_seq
			and nf_sup_erro.des_pendencia_item = 'data de validade n�o permite o recebimento do item'
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql('delete','nf_sup_erro')
			end if
		end if
	end for
end function

#----------------------------------------------------#
function sup3760_verifica_aprovacao_erro(l_arr_curr)
#----------------------------------------------------#
	define l_arr_curr smallint

	whenever error continue
	select sup_par_ar.parametro_dat,
	sup_par_ar.parametro_texto
	into m_data, m_user
	from sup_par_ar
	where sup_par_ar.empresa           = p_cod_empresa
	and sup_par_ar.aviso_recebto     = ma_aviso_rec[l_arr_curr].num_aviso_rec
	and sup_par_ar.seq_aviso_recebto = ma_aviso_rec[l_arr_curr].num_seq
	and sup_par_ar.parametro         = "aprova_erro"
	whenever error stop
	if sqlca.sqlcode <> 0 then
		return false
	else
		return true
	end if

end function
#fim os490902

# in�cio o.s 450083
#-------------------------------------------------#
function sup3760_exclui_atualiza_prim_nf_deposit()
#-------------------------------------------------#
	define l_num_aviso_rec like nf_sup.num_aviso_rec,
	l_altera_cod_nf smallint,
	l_depositante   like ar_depos.cod_depositante

	# verifica se existem outras notas fiscais para o depositante.
	# se houver, ir�  alterar  a tabela  wms_valid_prim_nf_deposit
	# para o n�mero da primeira nota encontrada para o depositante.

	let l_altera_cod_nf = false

	whenever error continue
	select cod_depositante
	into l_depositante
	from ar_depos
	where cod_empresa   = p_nf_sup.cod_empresa
	and num_aviso_rec = p_nf_sup.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_err_sql("select", "ar_depos", 0)
		return false
	end if

	whenever error continue
	declare cq_nf_sup cursor for
	select num_aviso_rec
	from nf_sup
	where cod_empresa    = p_nf_sup.cod_empresa
	and cod_fornecedor = l_depositante
	and num_aviso_rec in
	(select num_aviso_rec
	from ar_depos
	where cod_empresa     = p_nf_sup.cod_empresa
	and cod_depositante = l_depositante
	and num_aviso_rec   <> p_nf_sup.num_aviso_rec)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log0030_processa_err_sql("select", "ar_depos", 0)
		return false
	end if


	if sqlca.sqlcode <> 0 then
		message ""
		call log003_err_sql("declare sql","cq_nf_sup")
		return false
	end if

	whenever error continue
	foreach cq_nf_sup into l_num_aviso_rec

	if sqlca.sqlcode <> 0 then
		message ""
		call log003_err_sql("foreach sql","cq_nf_sup")
		return false
	end if

	whenever error continue
	update wms_valid_prim_nf_deposit
	set aviso_recebto = l_num_aviso_rec
	where empresa       = p_nf_sup.cod_empresa
	and deposit       = l_depositante
	and aviso_recebto = p_nf_sup.num_aviso_rec  # nf que ser� excluida.
	whenever error stop

	if sqlca.sqlcode <> 0 then
		message ""
		call log003_err_sql("update","wms_valid_prim_nf_deposit")
		return false
	end if

	let l_altera_cod_nf = true

	exit foreach

end foreach
whenever error stop

free cq_nf_sup
# se nota que est� sendo exclu�da � a �nica do depositante,
# excluir o registro da tabela wms_valid_prim_nf_deposit.
if l_altera_cod_nf = false then
	if wmsm131_wms_valid_prim_nf_deposit_leitura(p_nf_sup.cod_empresa,
		l_depositante,
		true,1) then
		if not wmst131_wms_valid_prim_nf_deposit_exclui(p_nf_sup.cod_empresa,
			l_depositante,
			false,false,0) then
			return false
		end if
	else
		return false
	end if
end if
return true
end function

#----------------------------------------------------#
function sup3760_busca_val_icms_dev_ret(l_val_liquido_item,l_num_seq) #542889
#----------------------------------------------------#
	define l_val_icms_dev_ret like ar_subst_tribut.val_icms_dev_ret,
	l_val_liquido_item like aviso_rec.val_liquido_item,
	l_num_seq          like aviso_rec.num_seq

	whenever error continue
	select ar_subst_tribut.val_icms_dev_ret
	into l_val_icms_dev_ret
	from ar_subst_tribut
	where ar_subst_tribut.cod_empresa   = p_cod_empresa
	and ar_subst_tribut.num_aviso_rec = p_dados_tela.num_aviso_rec
	and ar_subst_tribut.num_seq       = l_num_seq
	and ar_subst_tribut.ies_tipo_icms = 'r'
	whenever error stop
	if sqlca.sqlcode = 0 then
		let l_val_liquido_item = (l_val_liquido_item + l_val_icms_dev_ret)
	end if

return l_val_liquido_item
end function

#------------------------------------------#
function sup3760_insere_nf_regular_fiscal()
#------------------------------------------#
	whenever error continue
	insert into sup_par_ar (empresa,
	aviso_recebto,
	seq_aviso_recebto,
	parametro,
	par_ind_especial,
	parametro_texto,
	parametro_val,
	parametro_dat)
	values (p_cod_empresa,
	p_nf_sup.num_aviso_rec,
	0,
	"nf_regular_fiscal",
	m_utiliz_regulariz_fiscal,
	null,
	null,
	null)
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("inclusao","sup_par_ar - wms")
		return false
	end if
return true
end function

#------------------------------------------#
function sup3760_controle_wms(l_funcao)
#------------------------------------------#
	define l_status              smallint,
	l_altera_tipo_deposit smallint,
	l_tipo                char(1),
	l_contrato            like wms_contrato.contrato,
	l_funcao              char(30),
	l_deposit             like fornecedor.cod_fornecedor,
	l_cgc                 like empresa.num_cgc,
	l_ins_estadual        like empresa.ins_estadual,
	l_msg                 char(50)

	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 9                  #

	if m_wms_instal = "s" then

		let m_alterou_tipo_modif   = false
		if l_funcao = "modificacao"  and
			m_segmto_utilizacao = "o" then
			# se o tipo de documento for alterado de �definitivo� ou �normal� para
			# �provis�rio� dever� ser solicitado o c�digo do depositante e na efe-
			# tiva��o da modifica��o deve-se incluir um registro da tabela ar_depos.
			if m_tipo_documento_old = "d" or
				m_tipo_documento_old = "n" then
				if m_tipo_documento  = "p" then
					let m_alterou_tipo_modif  = true
				end if
			end if
		end if

		if l_funcao = "inclusao" or m_alterou_tipo_modif  then
			let m_wms_depositante = p_dados_tela.cod_fornecedor
			if p_dados_tela.ies_nf_aguard_nfe <> "b" then
				let l_deposit = null
				if  m_segmento = "i" then
					whenever error continue
					select fornecedor.cod_fornecedor
					into l_deposit
					from fornecedor
					inner join empresa
					on empresa.num_cgc      = fornecedor.num_cgc_cpf
					and empresa.ins_estadual = fornecedor.ins_estadual
					where empresa.cod_empresa = p_cod_empresa
					and fornecedor.ies_fornec_ativo = 'a'
					whenever error stop
					if sqlca.sqlcode <> 0 then
						let l_deposit = null
					end if
					let m_wms_depositante = l_deposit

				end if
				if  ( m_segmento = "o" and p_dados_tela.ies_nf_aguard_nfe = "a" ) or (m_segmento = "i" and l_deposit is null ) then # os 561019
					if find4glfunction('wms60023_depositante_permite_troca_pagamento') then
						if wms60023_depositante_permite_troca_pagamento(p_cod_empresa,
							p_dados_tela.cod_fornecedor,
							0) then
							call sup3760_wms_depositante_com_troca_pagamento() returning l_tipo, l_status
						else
							call sup3760_wms_depositante() returning l_tipo, l_status
						end if
					else
						call sup3760_wms_depositante() returning l_tipo, l_status
					end if
					# passo 11      #
					if l_status then
						if l_tipo is not null then
							let p_dados_tela.ies_nf_aguard_nfe = l_tipo
							display by name p_dados_tela.*
						else
							let l_altera_tipo_deposit = true
						end if
					else
						return false
					end if
				end if
			else
				if p_dados_tela.ies_nf_aguard_nfe = "b" then
					call wmst15_retorna_contrato_ativo_deposit(p_cod_empresa,
					p_dados_tela.cod_fornecedor,
					today,
					0) returning l_contrato, l_status
					if l_contrato = "0" then
						call log0030_processa_mensagem("depositante n�o possui contrato ativo.","exclamation",0)
						return false
					end if
				end if
			end if
		end if
	end if

	if find4glfunction('wmsy18_vincula_q04') then
		if m_wms_instal = "s"    and
			l_funcao = "inclusao" then
			let m_wms_gravou_q04 = false
			if p_dados_tela.ies_especie_nf = 'nfd' then
				call wmsy18_vincula_q04(p_cod_empresa, p_dados_tela.num_aviso_rec) returning m_wms_q04
				if m_wms_q04 is not null and m_wms_q04 <> 0 then
					let m_wms_gravou_q04 = true
				end if
			end if
		end if
	end if

	#--------------------------#
	# altera��o wms os: 450083 #
	#--------------------------#
	# passo 17                 #
	if m_wms_instal = 's' then
		if m_utiliza_codf_deposit = 's' then
			if log_existe_epl("sup3760y_before_controle_insere_array_wms") then
				call log_setvar('cod_empresa', p_cod_empresa)
				#epl codigo da empresa
				#epl tipo: ordem_sup.cod_empresa

				call log_setvar('num_aviso_rec', p_dados_tela.num_aviso_rec)
				#epl numero do ar
				#epl tipo: aviso_rec.num_aviso_rec

				call log_setvar('num_nf', p_dados_tela.num_nf)
				#epl numero da nota fiscal
				#epl tipo: nf_sup.num_nf

				call log_setvar("ser_nf", p_dados_tela.ser_nf)
				#epl numero da nota fiscal
				#epl tipo: nf_sup.ser_nf

				call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
				#epl subserie da nota fiscal
				#epl tipo: nf_sup.ssr_nf

				call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
				#epl codigo do fornecedor
				#epl tipo: nf_sup.cod_fornecedor

				call log_setvar('ies_nf_aguard_nfe', p_dados_tela.ies_nf_aguard_nfe)
				#epl tipo da nota fiscal
				#epl tipo: nf_sup.ies_nf_aguard_nfe

				call log_setvar('funcao', l_funcao)
				#epl opera��o que est� sendo executada (inclus�o, modifica��o)
				#epl tipo: char(20)

				call log_setvar('depositante', m_wms_depositante)
				#epl codigo do fornecedor
				#epl tipo: nf_sup.cod_fornecedor

				call log_setvar('dat_entrada_nf', p_dados_tela.dat_entrada_nf)
				#epl data de entrada da nota
				#epl tipo: nf_sup.dat_entrada_nf

				call sup3760y_before_controle_insere_array_wms()

			end if
			if sup376_insere_array_wms(l_funcao) = true then
				if sup376_insere_totais(l_funcao) = true then
					return true
				else
					return false
				end if
			else
				return false
			end if
		else
			if sup376_insere_array(l_funcao) = true then
				if sup376_insere_totais(l_funcao) = true then
					return true
				else
					return false
				end if
			else
				return false
			end if
		end if

	end if
end function

#-------------------------------------------------------#
function sup3760_busca_preco_sup_par_oc(l_num_oc)
#-------------------------------------------------------#
	define l_num_oc        like ordem_sup.num_oc,
	l_num_cotacao   like cotacao_preco.num_cotacao

	whenever error continue
	select num_cotacao
	into l_num_cotacao
	from ordem_sup
	where cod_empresa = p_cod_empresa
	and num_oc      = l_num_oc
	and ies_versao_atual = "s"
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("select","ordem_sup(2)")
	end if

	if l_num_cotacao is null then
		let l_num_cotacao = 0
	end if

	initialize m_pre_unit_oc to null
	whenever error continue
	select parametro_num
	into m_pre_unit_oc
	from sup_par_oc
	where empresa       = p_cod_empresa
	and ordem_compra  = l_num_oc
	and parametro     = "preco_oito_decimais"
	and seq_parametro = l_num_cotacao
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("select","sup_par_oc")
	end if
end function

#--------------------------------------------#
function sup3760_recalculo_pre_liquido(l_ind,l_fat_conver_unid)
#--------------------------------------------#
	define l_ind       smallint
	define l_liquido   like sup_par_oc.parametro_num,
	l_pre_unit  like sup_par_oc.parametro_num,
	l_qtd_solic like ordem_sup.qtd_solic
	define l_val_aux   like sup_par_oc.parametro_num

	define l_val_desc_acrescimos like sup_par_des_acr.parametro_numerico,
	l_num_versao_cot      like cotacao_preco.num_versao,
	lr_desc_acrescimos    record like desc_acrescimos.*,
	l_fat_conver_unid     like ordem_sup.fat_conver_unid,
	l_pre_unit_liquido     like cotacao_preco.pre_unit_liquido,
	l_status               smallint,
	l_mensagem             char(100)

	initialize m_pre_unit_oc to null

	whenever error continue
	select o.num_versao_cot
	into l_num_versao_cot
	from cotacao_preco c, ordem_sup_cot o
	where c.cod_empresa    = p_cod_empresa
	and c.cod_fornecedor = p_ordem_sup.cod_fornecedor
	and c.num_cotacao    = p_ordem_sup.num_cotacao
	and c.cod_item       = p_ordem_sup.cod_item
	and o.cod_empresa    = c.cod_empresa
	and o.num_oc         = p_ordem_sup.num_oc
	and o.num_versao_oc  = p_ordem_sup.num_versao
	and o.num_cotacao    = c.num_cotacao
	and o.num_versao_cot = c.num_versao
	and o.cod_fornecedor = c.cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("select","cotacao_preco")
	end if

	whenever error continue
	declare cq_rec_desc cursor for
	select cod_empresa     ,
	cod_fornecedor  ,
	num_cotacao     ,
	num_versao      ,
	cod_item        ,
	num_sequencia   ,
	val_desc_acres  ,
	ies_desc_acres_1,
	ies_desc_acres_2,
	ies_desc_acres_3,
	ies_desc_acres_4,
	ies_desc_acres_5,
	txt_desc_acres
	from desc_acrescimos
	where cod_empresa    = p_cod_empresa
	and cod_fornecedor = p_ordem_sup.cod_fornecedor
	and num_cotacao    = p_ordem_sup.num_cotacao
	and num_versao     = l_num_versao_cot
	and cod_item       = p_ordem_sup.cod_item
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare cursor","cq_rec_desc")
	end if

	whenever error continue
	open cq_rec_desc
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("open cursor","cq_rec_desc")
	end if

	whenever error continue
	fetch cq_rec_desc into lr_desc_acrescimos.*
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("fetch cursor","cq_rec_desc")
	end if

	let l_liquido   = p_array[l_ind].pre_unit_nf     / l_fat_conver_unid
	let l_pre_unit  =  p_array[l_ind].pre_unit_nf    / l_fat_conver_unid
	let l_qtd_solic = p_ordem_sup.qtd_solic

	while sqlca.sqlcode = 0
		call sup3760_busca_preco_sup_par_des_acr(lr_desc_acrescimos.cod_empresa    ,
		lr_desc_acrescimos.cod_fornecedor ,
		lr_desc_acrescimos.num_cotacao    ,
		lr_desc_acrescimos.num_versao     ,
		lr_desc_acrescimos.cod_item       ,
		lr_desc_acrescimos.num_sequencia) returning l_val_desc_acrescimos

		if l_val_desc_acrescimos is null then
			let l_val_desc_acrescimos = lr_desc_acrescimos.val_desc_acres
		end if

		if lr_desc_acrescimos.ies_desc_acres_5 <> "5" and #iss
			lr_desc_acrescimos.ies_desc_acres_5 <> "7" then #acrescimo valor de venda
			if lr_desc_acrescimos.ies_desc_acres_3 = "2" then #sobre o novo preco
#-lteracao conforme o.s. 150619 ---------#
				if lr_desc_acrescimos.ies_desc_acres_5 = "6" then #bonificacao
					if lr_desc_acrescimos.ies_desc_acres_1 = "2" then #percentual
						if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
							let l_liquido = l_liquido + (l_liquido -
							(l_liquido /
							((l_val_desc_acrescimos / 100 ) + 1)))
						else #desconto
							let l_liquido = #l_liquido -
							( l_liquido /
							((l_val_desc_acrescimos / 100 ) + 1))
						end if
					else #valor absoluto
						if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
							let l_liquido = l_liquido +
							l_val_desc_acrescimos
						else #desconto
							let l_liquido = l_liquido -
							l_val_desc_acrescimos
						end if
					end if
				else
#----------------------------------------#
					if  lr_desc_acrescimos.ies_desc_acres_5 = "3" #frete
						and lr_desc_acrescimos.ies_desc_acres_1 = "1" then #valor absoluto

						let l_val_aux = l_val_desc_acrescimos
						if l_qtd_solic <> 0 then
							let l_val_aux = l_val_aux / l_qtd_solic
						end if
						let l_liquido = l_liquido + l_val_aux
					else
						if lr_desc_acrescimos.ies_desc_acres_1 = "2" then #percentual
							if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
								let l_liquido = l_liquido +
								( l_liquido * l_val_desc_acrescimos / 100 )
							else #desconto
								let l_liquido = l_liquido -
								( l_liquido * l_val_desc_acrescimos / 100 )
							end if
						else #valor absoluto
							if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
								let l_liquido = l_liquido + l_val_desc_acrescimos
							else #desconto
								let l_liquido = l_liquido - l_val_desc_acrescimos
							end if
						end if
					end if
				end if
			else #sobre o preco base
#-lteracao conforme o.s. 150619 ---------#
				if lr_desc_acrescimos.ies_desc_acres_5 = "6" then #bonificacao
					if lr_desc_acrescimos.ies_desc_acres_1 = "2" then #percentual
						if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
							let l_liquido = l_liquido + (l_pre_unit -
							(l_pre_unit /
							((l_val_desc_acrescimos / 100 ) + 1)))
						else #desconto
							let l_liquido = l_liquido - (l_pre_unit -
							(l_pre_unit /
							((l_val_desc_acrescimos / 100 ) + 1)))
						end if
					else #valor absoluto
						if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
							let l_liquido = l_liquido +
							l_val_desc_acrescimos
						else #desconto
							let l_liquido = l_liquido -
							l_val_desc_acrescimos
						end if
					end if
				else
#----------------------------------------#
					if  lr_desc_acrescimos.ies_desc_acres_5 = "3" #frete
						and lr_desc_acrescimos.ies_desc_acres_1 = "1" then #valor absoluto

						let l_val_aux = l_val_desc_acrescimos
						if l_qtd_solic <> 0 then
							let l_val_aux = l_val_aux / l_qtd_solic
						end if
						let l_liquido = l_liquido + l_val_aux
					else
						if lr_desc_acrescimos.ies_desc_acres_1 = "2" then #percentual
							if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
								let l_liquido = l_liquido + ( l_pre_unit *
								l_val_desc_acrescimos / 100 )
							else #desconto
								let l_liquido = l_liquido - ( l_pre_unit *
								l_val_desc_acrescimos / 100 )
							end if
						else #valor absoluto
							if lr_desc_acrescimos.ies_desc_acres_2 = "1" then #acrescimo
								let l_liquido = l_liquido + l_val_desc_acrescimos
							else #desconto
								let l_liquido = l_liquido - l_val_desc_acrescimos
							end if
						end if
					end if
				end if
			end if
		end if

		whenever error continue
		fetch cq_rec_desc into lr_desc_acrescimos.*
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			call log003_err_sql("fetch cursor","cq_rec_desc")
		end if
	end while

	let m_pre_unit_oc = l_liquido * l_fat_conver_unid

	if find4glfunction('sup13800_verifica_sup_par_des_acr_base_ipi') then

		if sup13800_verifica_sup_par_des_acr_base_ipi(p_cod_empresa,
			p_ordem_sup.cod_fornecedor,
			p_ordem_sup.num_cotacao,
			p_ordem_sup.cod_item) then

			call sup13800_set_preco_base(p_array[l_ind].pre_unit_nf)

			call sup13800_retorno_preco_liquido_ordem(p_cod_empresa,
			p_ordem_sup.num_oc)
			returning l_status,l_mensagem,l_pre_unit_liquido

			if l_status then
				let m_pre_unit_oc = l_pre_unit_liquido * l_fat_conver_unid
			else
				call log0030_mensagem(l_mensagem,"exclamation")
				return false
			end if
		end if
	end if

	let p_array[l_ind].pre_unit_nf = m_pre_unit_oc
end function

#-------------------------------------------------------#
function sup3760_busca_preco_sup_par_des_acr(l_cod_empresa    ,
	l_cod_fornecedor ,
	l_num_cotacao    ,
	l_num_versao     ,
	l_cod_item       ,
	l_seq)
#-------------------------------------------------------#
	define l_seq    smallint,
	l_val_desc_acrescimos decimal(25,10) # like sup_par_des_acr.parametro_numerico

	define l_cod_empresa            like desc_acrescimos.cod_empresa   ,
	l_cod_fornecedor         like desc_acrescimos.cod_fornecedor,
	l_num_cotacao            like desc_acrescimos.num_cotacao   ,
	l_num_versao             like desc_acrescimos.num_versao    ,
	l_cod_item               like desc_acrescimos.cod_item

	initialize l_val_desc_acrescimos to null
	whenever error continue
	select parametro_numerico
	into l_val_desc_acrescimos
	from sup_par_des_acr
	where empresa            = l_cod_empresa
	and fornecedor         = l_cod_fornecedor
	and cotacao            = l_num_cotacao
	and versao_cotacao     = l_num_versao
	and item               = l_cod_item
	and seq_desconto_acres = l_seq
	and parametro          = "preco_oito_decimais"
	and seq_parametro      = 1
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("select","sup_par_des_acr")
	end if

return l_val_desc_acrescimos

end function

#----------------------------------------------------------#
function sup3760_verifica_cadastro_sup1785(l_funcao,
	l_cod_fisc_ant) #o.s. 550997
#----------------------------------------------------------#
	define l_funcao            char(15),
	l_cod_fisc_ant      like aviso_rec.cod_fiscal_item,
	l_msg               char(200),
	l_status            smallint,
	l_ies_tip_entr_ant  like cod_fiscal_sup.ies_tip_entrada

	let l_ies_tip_entr_ant = " "
	if l_cod_fisc_ant is not null and ##verificar se cfop anterior caracterizava uma devolu��o.
		l_cod_fisc_ant <> p_dados_tela.cod_operacao then
		call sup0686_retorna_tipo_entrada(l_cod_fisc_ant,
		p_dados_tela.cod_fiscal_compl)
		returning l_status,
		l_ies_tip_entr_ant

	end if

	if (p_ies_tip_entrada = "5" or p_dados_tela.ies_especie_nf = "nfd" or
		l_ies_tip_entr_ant = "5") then

		if sup1786_existe_cadastro_sup1785(p_cod_empresa) then

			if l_funcao = "inclusao" or
				not sup1786_devolucao_total(p_cod_empresa,
				p_dados_tela.num_aviso_rec, 0,
				p_dados_tela.ser_nf) then
				if not sup1786_cfop_cadastrado_devolucao_sup1785(p_cod_empresa,
					p_dados_tela.cod_operacao) and
					m_validou_cfop = false then
					let l_msg = "cfop n�o cadastrado como devolu��o no sup1785. continuar com a "
					if l_funcao = "inclusao" then
						let l_msg = l_msg clipped, " inclus�o?"
					else
						let l_msg = l_msg clipped, " modifica��o?"
					end if

					let m_validou_cfop = true

					if not log0040_confirm(12,15,l_msg) then
						return false
					end if
				end if
			else
				if l_cod_fisc_ant <> p_dados_tela.cod_operacao then
					if not sup1786_verifica_de_para_cfop_sup1785(p_cod_empresa,
						p_dados_tela.num_aviso_rec,
						p_dados_tela.cod_operacao,
						0,0) then
						return false
					end if
				end if
			end if
		end if
	end if

return true
end function

#---------------------------------------------------------------------------#
function sup3760_valida_alteracao_data_entrada_antes_corte()
#---------------------------------------------------------------------------#

	if not supr6_integracao_batch(p_cod_empresa) then
		if supr6_data_posterior_data_corte_logix_10(p_cod_empresa,  p_dados_tela.dat_entrada_nf) = true then
			return true
		else
			if supr6_data_posterior_data_corte_logix_10(p_cod_empresa,  m_dat_entrada_ant) = false and
				supr6_data_posterior_data_corte_logix_10(p_cod_empresa,  p_dados_tela.dat_entrada_nf) = false then
				return true
			end if
			call log0030_mensagem("n�o � poss�vel alterar data de entrada para antes da data de corte (con4110).","exclamation")
			return false
		end if
	end if

return true
end function

#---------------------------------------------------------------------------#
function sup3760_valida_alteracao_data_entrada_depois_corte()
#---------------------------------------------------------------------------#
	if not supr6_integracao_batch(p_cod_empresa) then
		if supr6_data_posterior_data_corte_logix_10(p_cod_empresa, m_dat_entrada_ant) = false
			and supr6_data_posterior_data_corte_logix_10(p_cod_empresa, p_dados_tela.dat_entrada_nf) = true then
			call log0030_mensagem("n�o � poss�vel alterar data de entrada para depois da data de corte (con4110).","exclamation")
			return false
		else
			return true
		end if
	end if
return true
end function

#-----------------------------------------#
function sup3760_isprocesso_importacao()
#-----------------------------------------#
	define l_cont     smallint

	whenever error continue
	select count(*)
	into l_cont
	from sup_par_ar
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and parametro         = "nfc_processo_imp"
	and parametro_val > 0
	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("select","sup_par_ar(2)")
		end if
		return false
	end if

	if l_cont > 0 then
		return true
	else
		return false
	end if

end function

#----------------------------------------------------#
function sup3760_limpa_ar_despesa_compl_imp()
#----------------------------------------------------#

	if sup3760_isprocesso_importacao() then
		whenever error continue
		update imp_desp_proc_item
		set aviso_recebto     = null,
		sequencia_recebto = null
		where empresa           = p_cod_empresa
		and  aviso_recebto    = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","imp_desp_proc_item")
			return false
		end if

		whenever error continue
		update despesa_processo
		set num_aviso_rec  = null
		where cod_empresa    = p_cod_empresa
		and num_aviso_rec  = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","despesa_processo")
			return false
		end if
	end if

return true
end function

#----------------------------------------------------#
function sup3760_atualiza_tabela_dados_antigo()
#----------------------------------------------------#
	define l_ind               smallint

	whenever error continue
	update nf_sup
	set ser_nf            = mr_dados_tela_ant.ser_nf,
	ssr_nf            = mr_dados_tela_ant.ssr_nf,
	ies_nf_aguard_nfe = mr_dados_tela_ant.ies_nf_aguard_nfe ,
	cod_operacao      = mr_dados_tela_ant.cod_operacao      ,
	dat_emis_nf       = mr_dados_tela_ant.dat_emis_nf       ,
	dat_entrada_nf    = mr_dados_tela_ant.dat_entrada_nf    ,
	cnd_pgto_nf       = mr_dados_tela_ant.cnd_pgto_nf       ,
	cod_mod_embar     = mr_dados_tela_ant.cod_mod_embar
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("update","nf_sup")
		return
	end if


	for l_ind = 1 to p_tot_itens
		update aviso_rec
		set ies_situa_ar       = mr_array_transito[l_ind].ies_situa_ar,
		ies_liberacao_ar   = mr_array_transito[l_ind].ies_liberacao_ar,
		ies_liberacao_cont = mr_array_transito[l_ind].ies_liberacao_cont,
		ies_liberacao_insp = mr_array_transito[l_ind].ies_liberacao_insp,
		ies_diverg_listada = mr_array_transito[l_ind].ies_diverg_listada,
		ies_item_estoq     = mr_array_transito[l_ind].ies_item_estoq,
		cod_cla_fisc       = mr_array_transito[l_ind].cod_cla_fisc,
		cod_unid_med_nf    = mr_array_transito[l_ind].cod_unid_med_nf,
		ies_tip_incid_ipi  = mr_array_transito[l_ind].ies_tip_incid_ipi,
		ies_bitributacao   = mr_array_transito[l_ind].ies_bitributacao,
		qtd_recebida       = mr_array_transito[l_ind].qtd_recebida,
		cod_fiscal_item    = mr_array_transito[l_ind].cod_fiscal_item,
		gru_ctr_desp_item  = mr_array_transito[l_ind].gru_ctr_desp_item,
		cod_local_estoq    = mr_array_transito[l_ind].cod_local_estoq,
		ies_incid_icms_ite = mr_array_transito[l_ind].ies_incid_icms_ite,
		ies_contabil       = mr_array_transito[l_ind].ies_contabil,
		cod_tip_despesa    = mr_array_transito[l_ind].cod_tip_despesa
		where cod_empresa      = p_cod_empresa
		and num_aviso_rec    = p_dados_tela.num_aviso_rec
		and num_seq          = mr_array_transito[l_ind].num_seq
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("update","aviso_rec")
			return
		end if
	end for

	whenever error continue
	update aviso_rec_compl
	set cod_fiscal_compl = mr_dados_tela_ant.cod_fiscal_compl,
	cod_operacao     = mr_dados_tela_ant.cod_operac_estoq
	where cod_empresa      = p_cod_empresa
	and num_aviso_rec    = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("update","aviso_rec_compl")
		return
	end if

end function

#-------------------------------------#
function sup3760_backup_dados_tela()
#-------------------------------------#
	define l_ind               smallint

	let mr_dados_tela_ant.ser_nf            = p_dados_tela.ser_nf
	let mr_dados_tela_ant.ssr_nf            = p_dados_tela.ssr_nf
	let mr_dados_tela_ant.ies_nf_aguard_nfe = p_dados_tela.ies_nf_aguard_nfe
	let mr_dados_tela_ant.cod_operac_estoq  = p_dados_tela.cod_operac_estoq
	let mr_dados_tela_ant.cod_operacao      = p_dados_tela.cod_operacao
	let mr_dados_tela_ant.cod_fiscal_compl  = p_dados_tela.cod_fiscal_compl
	let mr_dados_tela_ant.dat_emis_nf       = p_dados_tela.dat_emis_nf
	let mr_dados_tela_ant.dat_entrada_nf    = p_dados_tela.dat_entrada_nf
	let mr_dados_tela_ant.cnd_pgto_nf       = p_dados_tela.cnd_pgto_nf
	let mr_dados_tela_ant.cod_mod_embar     = p_dados_tela.cod_mod_embar
	let mr_dados_tela_ant.num_nf            = p_dados_tela.num_nf
	let mr_dados_tela_ant.ies_especie_nf    = p_dados_tela.ies_especie_nf

	for l_ind = 1 to p_tot_itens
		if l_ind >= arraylength(mr_array_transito) then
			call arrayadditem(mr_array_transito,1)
		end if
		whenever error continue
		select num_seq,
		ies_situa_ar,
		ies_liberacao_ar,
		ies_liberacao_cont,
		ies_liberacao_insp,
		ies_diverg_listada,
		ies_item_estoq,
		cod_cla_fisc,
		cod_unid_med_nf,
		ies_tip_incid_ipi,
		ies_bitributacao,
		qtd_recebida,
		cod_fiscal_item,
		gru_ctr_desp_item,
		cod_local_estoq,
		ies_incid_icms_ite,
		ies_contabil,
		cod_tip_despesa
		into mr_array_transito[l_ind].num_seq,
		mr_array_transito[l_ind].ies_situa_ar,
		mr_array_transito[l_ind].ies_liberacao_ar,
		mr_array_transito[l_ind].ies_liberacao_cont,
		mr_array_transito[l_ind].ies_liberacao_insp,
		mr_array_transito[l_ind].ies_diverg_listada,
		mr_array_transito[l_ind].ies_item_estoq,
		mr_array_transito[l_ind].cod_cla_fisc,
		mr_array_transito[l_ind].cod_unid_med_nf,
		mr_array_transito[l_ind].ies_tip_incid_ipi,
		mr_array_transito[l_ind].ies_bitributacao,
		mr_array_transito[l_ind].qtd_recebida,
		mr_array_transito[l_ind].cod_fiscal_item,
		mr_array_transito[l_ind].gru_ctr_desp_item,
		mr_array_transito[l_ind].cod_local_estoq,
		mr_array_transito[l_ind].ies_incid_icms_ite,
		mr_array_transito[l_ind].ies_contabil,
		mr_array_transito[l_ind].cod_tip_despesa
		from aviso_rec
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		and num_seq       = p_array[l_ind].seq
		whenever error stop
	end for
end function

#----------------------------------------------------#
function sup3760_existe_nota_debito_automatica() # 523038
#----------------------------------------------------#

	if not m_exst_carcoraut then
		return false
	end if

	whenever error continue
	select num_nota_debito
	from deb_fornec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and exists( select unique aviso_recebto
	from sup_cart_corr_aut
	where empresa       = p_cod_empresa
	and aviso_recebto = p_dados_tela.num_aviso_rec)

	whenever error stop
	if sqlca.sqlcode <> 0 then
		if sqlca.sqlcode <> 100 then
			call log003_err_sql("select","deb_fornec")
		end if
		return false
	end if

return true

end function
#----------------------------------------------------#
function sup3760_nfe_transito_ja_impressa(l_cod_empresa,
	l_num_aviso_rec,
	l_ies_nf_aguard_nfe,
	l_cod_operacao,
	l_data_entrada)
#----------------------------------------------------#

	define l_cod_empresa              like empresa.cod_empresa,
	l_num_aviso_rec            like aviso_rec.num_aviso_rec,
	l_ies_nf_aguard_nfe        like nf_sup.ies_nf_aguard_nfe,
	l_ies_especie_nf           like nf_sup.ies_especie_nf,
	l_ies_nfe_emit             like nfe_sup_compl.ies_nfe_emit,
	l_cod_operacao             like nf_sup.cod_operacao,
	l_data_entrada             date

	whenever error continue
	select ies_nfe_emit
	into l_ies_nfe_emit
	from nfe_sup_compl
	where cod_empresa   = l_cod_empresa
	and num_aviso_rec = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("select","nfe_sup_compl")
		return false
	end if

	if l_ies_nfe_emit = "n" then
		whenever error continue
		select par_ind_especial
		from sup_par_ar
		where empresa           = l_cod_empresa
		and aviso_recebto     = l_num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro         = 'num_nf_atualizado'
		whenever error stop
		if sqlca.sqlcode = 0 then
			let l_ies_nfe_emit = "s"
		end if
	end if

	if l_ies_nf_aguard_nfe = "7" #and l_cod_operacao[1,1] = "7"
		and l_ies_nfe_emit = "s" then
		return true
	end if

return false

end function

#----------------------------------------------------------------------------#
function sup3760_consiste_nota_fiscal_transito(l_ies_nf_aguard_nfe,
	l_cod_operacao)
#----------------------------------------------------------------------------#

	define l_ies_nf_aguard_nfe        like nf_sup.ies_nf_aguard_nfe,
	l_cod_operacao           like nf_sup.cod_operacao

	if l_ies_nf_aguard_nfe = "7" #and l_cod_operacao[1,1] = "7"
		then
		return true
	end if

return false

end function

#---------------------------------------------#
function sup3760_ies_utiliza_nfe(l_fornecedor)
#---------------------------------------------#
	define  l_fornecedor        like fornecedor.cod_fornecedor,
	l_ies_utiliza_nfe   char(01)

	initialize l_ies_utiliza_nfe to null
	whenever error continue
	select parametro_booleano
	into l_ies_utiliza_nfe
	from sup_par_fornecedor
	where empresa    = 'se'
	and fornecedor = l_fornecedor
	and parametro  = "ies_utiliza_nfe"
	whenever error stop

	if sqlca.sqlcode <> 0 then
		let l_ies_utiliza_nfe = "n"
	end if

	if l_ies_utiliza_nfe is null then
		let l_ies_utiliza_nfe = "n"
	end if

return l_ies_utiliza_nfe
end function

#------------------------------------------------------#
function sup3760_verifica_permissao_setor_aplicacao()
#------------------------------------------------------#
	define l_cod_item          like item.cod_item

	whenever error continue
	declare cl_ar cursor for
	select unique cod_item
	from aviso_rec
	where cod_empresa   = p_dados_tela.cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cl_ar")
		return false
	end if

	whenever error continue
	foreach cl_ar into l_cod_item
	whenever error stop

	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cl_ar")
		return false
	end if

	#--# performance ja chamada a epl acima #--#
	#if find4glfunction('supy152_verifica_permissao_setor_aplicacao') then
	if not supy152_verifica_permissao_setor_aplicacao(l_cod_item) then
		return false
	end if
	#end if

end foreach
free cl_ar

return true

end function

#--------------------------------------#
function sup3760_busca_mod_emb_oc()
#--------------------------------------#
	define l_mod_embarque like ordem_sup.cod_mod_embar

	whenever error continue
	declare cq_mod_embar cursor for
	select ordem_sup.cod_mod_embar
	from ordem_sup, proc_item
	where ordem_sup.cod_empresa      = p_cod_empresa
	and ordem_sup.num_oc           = proc_item.num_oc
	and ordem_sup.ies_versao_atual = 's'
	and ordem_sup.cod_empresa      = proc_item.cod_empresa
	and proc_item.num_processo     = p_processo_imp.num_processo
	and proc_item.num_versao       = p_processo_imp.num_versao
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("declare","cq_ordens")
	end if

	whenever error continue
	foreach cq_mod_embar into l_mod_embarque
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_mod_embar")
	end if

	exit foreach

end foreach
whenever error continue
free cq_mod_embar
whenever error stop

return l_mod_embarque

end function

#---------------------------------------#
function sup3760_valida_frete_cif_nf()
#---------------------------------------#
	define l_frete      smallint,
	l_num_conhec like frete_sup.num_conhec

	whenever error continue
	declare cq_frete_cif cursor for
	select num_conhec
	from ar_frete_cesta
	where cod_empresa = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("cq_frete_cif","ar_frete_cesta")
	end if

	let l_frete = false

	whenever error continue
	foreach cq_frete_cif into l_num_conhec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("foreach","cq_frete_cif")
	end if

	let l_frete = true

end foreach

if l_frete = true then
return true
else
return false
end if
whenever error continue
free cq_frete_cif
whenever error stop

end function

#-----------------------------------#
function sup3760_informa_num_nfe(l_tipo)
#-----------------------------------#
	define l_tipo           char(15)
	define l_num_nfe_aux    char(15)

	call log130_procura_caminho("sup3760y") returning comando3
	open window w_sup3760y at 8,2 with form comando3
	attribute(form line 1)
	current window is w_sup3760y

	display by name p_dados_tela.ser_nf
	display by name p_dados_tela.ssr_nf
	display by name p_dados_tela.ies_especie_nf
	display by name p_dados_tela.cod_operac_estoq
	display by name p_dados_tela.cod_emp_benef
	display by name p_dados_tela.cod_operacao
	display by name p_dados_tela.cod_fiscal_compl
	display by name p_dados_tela.dat_emis_nf
	display by name p_dados_tela.dat_entrada_nf
	display by name p_dados_tela.cnd_pgto_nf
	display by name p_dados_tela.cod_mod_embar
	display by name p_dados_tela.ies_impostos
	call sup376_verifica_cnd_pgto() returning p_status
	call sup376_verifica_mod_embar() returning p_status


	input m_num_nf_eletronica without defaults from num_nfe

	before field num_nfe
	call sup3760_save_cur_field_name('num_nfe')
	after field num_nfe
	call sup3760_botao_zoom("off",3,68)
	if m_num_nf_eletronica is  null  then
		if l_tipo <> "consulta" then
			error "informe o numero da nota."
		next field num_nfe
	end if
else
	### manmat-5083
	if l_tipo <> "consulta" then
		if m_num_nf_eletronica > 999999999 then
			if not log0040_confirm(12,10,"numero de nota fiscal com mais de 9 digitos. confirma?") then
			next field num_nfe
		end if
	end if
end if
if p_dados_tela.ies_nf_aguard_nfe <> "6" and
	m_num_nf_eletronica = 0 then
	error "nr.da nota fiscal invalido. nao pode ser 0"
next field num_nfe
end if
#---in�cio ch tfbgot---#
if fgl_lastkey() = fgl_keyval("up") or
	fgl_lastkey() = fgl_keyval("left") then
	let m_retorno_num_nfe = true
	exit input
	close window w_sup3760y
end if
let m_num_nfe = m_num_nf_eletronica
#---fim ch tfbgot---#
end if

on key (control-z, f4)
call sup3760_popup_nfe()

end input

if int_flag <> 0 then
	close window w_sup3760y
	current window is w_sup3760
return false
end if

let l_num_nfe_aux = m_num_nf_eletronica

### nf 15 digitos
if l_tipo <> "consulta" then
	case
	when length(l_num_nfe_aux) <= 7
	let p_dados_tela.num_nf = m_num_nf_eletronica
	when length(l_num_nfe_aux) = 8
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 9
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
	when length(l_num_nfe_aux) = 10
	let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
	when length(l_num_nfe_aux) = 11
	let p_dados_tela.num_nf = l_num_nfe_aux[5,11]
	when length(l_num_nfe_aux) = 12
	let p_dados_tela.num_nf = l_num_nfe_aux[6,12]
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[7,13]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[8,14]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[9,15]
end case
else
	### paula aqui
	let p_dados_tela.num_nf = m_num_nf_eletronica
end if

close window w_sup3760y
current window is w_sup3760
display by name p_dados_tela.num_nf
call sup3760_display_num_nfe_cte() ### manmat-5083

return true
end function

### tqfxnr - esta fun��o tem como objetivo montar numero da nota fiscal, caso seja 0(zero) ou exista no sistema
### ir� montar novo numero de nota e validar a mesma.
#-------------------------------------------#
function sup3760_valida_num_nf_eletronica(l_exibe_erro)
#-------------------------------------------#
	define l_num_nfe_aux    char(15),
	l_exibe_erro     smallint

	let l_num_nfe_aux = m_num_nf_eletronica
	call conout ("linha 53243 l_num_nfe_aux: ", l_num_nfe_aux)

	### nf 15 digitos
	case
	when length(l_num_nfe_aux) <= 7
	let p_dados_tela.num_nf = m_num_nf_eletronica
	when length(l_num_nfe_aux) = 8
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 9
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
	when length(l_num_nfe_aux) = 10
	let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
	when length(l_num_nfe_aux) = 11
	let p_dados_tela.num_nf = l_num_nfe_aux[5,11]
	when length(l_num_nfe_aux) = 12
	let p_dados_tela.num_nf = l_num_nfe_aux[6,12]
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[7,13]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[8,14]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[9,15]
end case

call conout ("linha 53253 p_dados_tela.num_nf: ", p_dados_tela.num_nf)

### nf 15 digitos
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	### dmanentlgx-1769 - pesquisa se numero da nota j� existe, caso afirmativo apresenta mensagem em tela e ao responder
	### sim - retorna para campo numero nota fiscal permitindo que altere a numera��o e/ou subs�rie da nota,
	###       retorna para campo do numero da nota afim de inicializar novamente as vari�veis utilizadas de controle de
	###       numera��o de nota fiscal
	call conout ("linha 53276 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
	if l_exibe_erro = true then
		if log0040_confirm_default(12,10,"nota j� existe no sistema, deseja alterar subserie?\n\n  sim - retorna para numero de nota e permite\n        alterar subserie \n  n�o - a numera��o da nota pode ficar diferente\n        da nota original informada em tela.","s") then
			return false
		end if
	end if
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 8
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
	when length(l_num_nfe_aux) = 9
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 10
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
	when length(l_num_nfe_aux) = 11
	let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
	when length(l_num_nfe_aux) = 12
	let p_dados_tela.num_nf = l_num_nfe_aux[5,11]
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[6,12]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[7,13]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[8,13]
end case
call conout ("linha 53266 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 9
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
	when length(l_num_nfe_aux) = 10
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 11
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
	when length(l_num_nfe_aux) = 12
	let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[5,11]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[6,12]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[7,13]
end case

call conout ("linha 55582 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 10
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
	when length(l_num_nfe_aux) = 11
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 12
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[5,11]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[6,12]
end case

call conout ("linha 55603 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 11
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
	when length(l_num_nfe_aux) = 12
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[5,11]
end case

call conout ("linha 55662 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 12
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[4,10]
end case

call conout ("linha 55639 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 13
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[3,9]
end case

call conout ("linha 55654 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 14
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[2,8]
end case

call conout ("linha 55667 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
if (p_dados_tela.ies_nf_aguard_nfe <> "6" and
	p_dados_tela.num_nf = 0) or
	sup3760_montagem_nota_existe() = true then
	case
	when length(l_num_nfe_aux) <= 7
return true
	when length(l_num_nfe_aux) = 15
	let p_dados_tela.num_nf = l_num_nfe_aux[1,7]
end case
end if
end if
end if
end if
end if
end if
end if
end if

call conout ("linha 53276 p_dados_tela.num_nf: ", p_dados_tela.num_nf)
return true
end function

#-----------------------------------#
function sup3760_grava_num_nfe()
#-----------------------------------#
	define l_num_nfe_aux        char(15)

	let l_num_nfe_aux = m_num_nf_eletronica

	### nf 15 digitos
	if length(l_num_nfe_aux) >= 7 and
		length(l_num_nfe_aux) <= 9 then
		call supm72_sup_par_ar_set_null()
		call supm72_sup_par_ar_set_empresa(p_cod_empresa)
		call supm72_sup_par_ar_set_aviso_recebto(p_dados_tela.num_aviso_rec)
		call supm72_sup_par_ar_set_seq_aviso_recebto(0)
		call supm72_sup_par_ar_set_parametro("num_nf_eletronica")
		call supm72_sup_par_ar_set_parametro_val(m_num_nf_eletronica)

		if not supt72_sup_par_ar_inclui(true,true) then
			return false
		end if
	else
		if length(l_num_nfe_aux) > 9 then
			call supm72_sup_par_ar_set_null()
			call supm72_sup_par_ar_set_empresa(p_cod_empresa)
			call supm72_sup_par_ar_set_aviso_recebto(p_dados_tela.num_aviso_rec)
			call supm72_sup_par_ar_set_seq_aviso_recebto(0)
			call supm72_sup_par_ar_set_parametro("num_nf_eletronica")
			call supm72_sup_par_ar_set_parametro_texto(l_num_nfe_aux)

			if not supt72_sup_par_ar_inclui(true,true) then
				return false
			end if
		end if
	end if

return true

end function

#---------------------------------#
function sup3760_popup_nfe()
#---------------------------------#
	define p_num_pedido       like pedido_sup.num_pedido,
	p_num_oc           like ar_diverg.num_oc,
	p_num_prog_entrega like ar_diverg.num_prog_entrega,
	p_cod_item         like ordem_sup.cod_item,
	p_den_item         like aviso_rec.den_item,
	p_cod_imp_renda    like nf_sup.cod_imp_renda,
	p_cod_unid_med_nf  like aviso_rec.cod_unid_med_nf

	case
	when infield(num_nfe)
	if p_dados_tela.cod_fornecedor is null  then
		error " o codigo do fornecedor deve ser informado "
	else
		call sup125_popup_ordens_fornec(p_cod_empresa,p_dados_tela.cod_fornecedor)
		for p_ind = 1 to 998
			if p_array_volta[p_ind].num_pedido is null then
				exit for
			end if
			let p_num_pedido = p_array_volta[p_ind].num_pedido
			let p_num_oc     = p_array_volta[p_ind].num_oc
			let p_num_prog_entrega = p_array_volta[p_ind].num_prog_entrega
			let p_cod_item = p_array_volta[p_ind].cod_item
			let p_den_item = p_array_volta[p_ind].den_item
			let p_cod_unid_med_nf = p_array_volta[p_ind].cod_unid_med
		end for
		if p_num_pedido is not null  then
			current window is w_sup3760y
		end if
	end if
end case

end function

#-------------------------------------#
function sup3760_verifica_nfm_total()
#--------------------------------------#
	define  l_num_nf            like nf_sup.num_nf,
	l_ser_nf            like nf_sup.ser_nf,
	l_ssr_nf            like nf_sup.ssr_nf,
	l_cod_fornecedor    like nf_sup.cod_fornecedor,
	l_num_aviso_rec     like nf_sup.num_aviso_rec,
	l_cod_operacao      like aviso_rec_compl.cod_operacao,
	l_cod_fiscal_compl  like aviso_rec_compl.cod_fiscal_compl,
	l_dat_emis_nf       like nf_sup.dat_emis_nf,
	l_dat_entrada_nf    like nf_sup.dat_entrada_nf,
	l_cnd_pgto_nf       like nf_sup.cnd_pgto_nf,
	l_cod_mod_embar     like nf_sup.cod_mod_embar,
	l_cod_operac_estoq  like aviso_rec.cod_operac_estoq,
	l_total_itens_nfm   like aviso_rec.qtd_declarad_nf,
	l_qtd_regularizada  like ar_x_nf_pend.qtd_regularizada,
	l_comando           char(200),
	l_contador          smallint

	#encontra nota nfm
	whenever error continue
	select unique num_nf, ser_nf, ssr_nf, cod_fornecedor
	into l_num_nf, l_ser_nf, l_ssr_nf, l_cod_fornecedor
	from ar_x_nf_pend
	where ar_x_nf_pend.cod_empresa   = p_cod_empresa
	and ar_x_nf_pend.num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		return
	end if

	#busca num_aviso_rec nfm
	whenever error continue
	select num_aviso_rec, dat_emis_nf, dat_entrada_nf, cnd_pgto_nf
	into l_num_aviso_rec, l_dat_emis_nf, l_dat_entrada_nf, l_cnd_pgto_nf
	from nf_sup
	where cod_empresa    = p_cod_empresa
	and num_nf         = l_num_nf
	and ser_nf         = l_ser_nf
	and ssr_nf         = l_ssr_nf
	and cod_fornecedor = l_cod_fornecedor
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","nf_sup")
	end if

	#verifica total de itens da nfm
	whenever error continue
	select sum(qtd_declarad_nf)
	into l_total_itens_nfm
	from aviso_rec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = l_num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","aviso_rec")
	end if

	#verifica total de itens regularizados para esta nf
	whenever error continue
	select sum(ar_x_nf_pend.qtd_regularizada)
	into l_qtd_regularizada
	from ar_x_nf_pend, nf_sup # sdissm
	where ar_x_nf_pend.cod_empresa     = p_cod_empresa
	and ar_x_nf_pend.num_nf          = l_num_nf
	and ar_x_nf_pend.ser_nf          = l_ser_nf
	and ar_x_nf_pend.ssr_nf          = l_ssr_nf
	and ar_x_nf_pend.cod_fornecedor  = l_cod_fornecedor
## sdissm
	and nf_sup.cod_empresa = p_cod_empresa
	and nf_sup.num_aviso_rec = ar_x_nf_pend.num_aviso_rec
	and nf_sup.ies_nf_aguard_nfe <> '7'
#   and ar_x_nf_pend.num_aviso_rec   in (select num_aviso_rec
#                                          from nf_sup
#                                         where nf_sup.cod_empresa = p_cod_empresa
#                                               nf_sup.ies_nf_aguard_nfe     <> '7')
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","ar_x_nf_pend")
	end if

## sdissm
	if l_qtd_regularizada is null then
		let l_qtd_regularizada = 0
	end if
	if l_qtd_regularizada >= l_total_itens_nfm then
		## sdizen - alterado para que apresente mensagem em tela alertando que � a ultima nfp e
		## que ser� alterada a nfm de 7 para 6.
		if m_msg_nfm_total is null then
			let m_msg_nfm_total = "ultima nfp relacionada a nfm ar ",l_num_aviso_rec,"."
			call log0030_mensagem(m_msg_nfm_total,"info")
		end if
		whenever error continue
		update nf_sup set ies_nf_aguard_nfe = '6'
		where cod_empresa = p_cod_empresa
		and num_aviso_rec = l_num_aviso_rec
		whenever error stop

		let l_comando = p_cod_empresa," ",l_num_aviso_rec
		call log1200_executa_programa("sup0682",l_comando)

		# inicio chamado 835591
		if not sup3760_insere_parametro_sup1544(l_num_aviso_rec) then
			return
		end if
		# fim chamado 835591

		let l_comando = p_cod_empresa," ",l_num_aviso_rec
		call log1200_executa_programa("sup0680",l_comando)

		# inicio chamado 835591
		if not sup3760_elimina_parametro_sup1544(l_num_aviso_rec) then
			return
		end if
		# fim chamado 835591

		let l_contador = 0
		whenever error continue
		select count(*)
		into l_contador
		from nf_sup_erro
		where empresa = p_cod_empresa
		and nf_sup_erro.num_aviso_rec  = l_num_aviso_rec
		and nf_sup_erro.ies_origem_erro <> "4"
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("select","nf_sup_erro")
			return
		end if

		if l_contador > 0  then
			whenever error continue
			update nf_sup set nf_sup.ies_nf_com_erro = "s"
			where nf_sup.cod_empresa   = p_cod_empresa
			and nf_sup.num_aviso_rec = l_num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("update","nf_sup")
				return
			end if
		end if

		whenever error continue
		select cod_operacao,
		cod_fiscal_compl
		into l_cod_operacao,
		l_cod_fiscal_compl
		from aviso_rec_compl
		where aviso_rec_compl.cod_empresa   = p_cod_empresa
		and aviso_rec_compl.num_aviso_rec = l_num_aviso_rec
		whenever error continue

		whenever error continue
		select cod_operac_estoq
		into l_cod_operac_estoq
		from aviso_rec
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = l_num_aviso_rec
		and num_seq       = 1
		whenever error stop

		if sup3760_passa_parametro('modificacao',
			p_cod_empresa,
			l_num_aviso_rec,
			l_cod_operacao,     #p_dados_tela.cod_operacao,
			l_cod_fiscal_compl, #p_dados_tela.cod_fiscal_compl,
			l_dat_emis_nf,      #p_dados_tela.dat_emis_nf,
			today,              #p_dados_tela.dat_entrada_nf,
			l_cnd_pgto_nf,      #p_dados_tela.cnd_pgto_nf,
			l_cod_mod_embar,    #p_dados_tela.cod_mod_embar,
			'6',
			'n',
			' ',
			l_cod_operac_estoq, #p_dados_tela.cod_operac_estoq,
			l_cod_fornecedor,
			l_ser_nf,
			l_ssr_nf,
			'nfm') then
			call log1200_executa_programa("sup3771","")
			let m_executou_sup3771 = true
		end if
	end if

end function

#------------------------------------#
function sup3760_verifica_nf_cap()
#------------------------------------#

	whenever error continue
	select cod_empresa
	from audit_sup_cre
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	and txt_processo  = "nota fiscal em tr�nsito. optado por n�o gerar abatimento"
	whenever error stop
	if sqlca.sqlcode = 100 then
		return false
	else
		return true
	end if

end function

#-----------------------------------------------#
function sup3760_busca_mod_embar_sem_frete()
#-----------------------------------------------#
	define l_cod_mod_embar like modo_embarque.cod_mod_embar,
	l_den_mod_embar like modo_embarque.den_mod_embar

	whenever error continue
	select cod_mod_embar, den_mod_embar
	into l_cod_mod_embar, l_den_mod_embar
	from modo_embarque
	where cod_mod_embar = m_mod_embarque_nfm_importacao
	whenever error stop
	if sqlca.sqlcode <> 0 and
		sqlca.sqlcode <> 100 then
		call log003_err_sql("select","cq_mod_embarque")
		return false
	else
		if sqlca.sqlcode = 100 then
			initialize l_cod_mod_embar to null
			let l_den_mod_embar = ' '
		end if
	end if

return l_cod_mod_embar, l_den_mod_embar

end function

#---------------------------------------------#
function sup3760_carrega_dados_importacao()
#---------------------------------------------#
	define l_peso_bruto      like nfe_sup_compl.peso_bruto,
	l_peso_liquido    like nfe_sup_compl.peso_liquido,
	l_cod_embal_srf   like embalagem.cod_embal,
	l_cod_embal_vdp   like embalagem.cod_embal,
	l_cod_transp_nac  like proc_imp_compl.cod_transp_nac,
	l_volume          char(05),
	l_num_di          like processo_imp.num_di,
	l_raz_social      like fornecedor.raz_social,
	l_num_di_compl    decimal(15,0),
	l_cod_via_transp  like proc_imp_compl.cod_via_transp,
	l_dat_desembaraco like proc_imp_compl.dat_desembaraco,
	l_den_uni_feder   like uni_feder.den_uni_feder,
	l_cod_local_des   like proc_imp_compl.urf_despacho,
	l_urf_despacho    like proc_imp_compl.urf_despacho,
	l_dat_emiss_di    like processo_imp.dat_emiss_di,
	l_den_local       like loc_emb_des.den_local,
	l_cod_importador  like processo_imp.cod_importador,
	l_cod_uni_feder   like fornecedor.cod_uni_feder,
	l_den_embal_compl like embalagem.den_embal,
	l_den_embal       like nfe_sup_compl.den_embal,
	l_status          smallint

	initialize l_num_di to null
	initialize l_dat_emiss_di to null
	whenever error continue
	select num_di, dat_emiss_di, cod_importador
	into l_num_di, l_dat_emiss_di, l_cod_importador
	from processo_imp
	where processo_imp.cod_empresa      = p_processo_imp.cod_empresa
	and processo_imp.num_processo     = p_processo_imp.num_processo
	and processo_imp.ies_versao_atual = 's'
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","processo_imp")
	end if

	whenever error continue
	select peso_bruto,     #nfe_sup_compl.peso_bruto
	#peso_liquido,   #nfe_sup_compl.peso_liquido
	cod_embal_srf,  #if not sup7540_atualiza_sup_par_ar("cod_embalagem_nf",m_cod_embalagem,"text") then
	cod_transp_nac, #p_aviso_rec_compl.cod_transpor
	qtd_volum_embal, #nfe_sup_compl.qtd_volumes
	cod_via_transp,
	dat_desembaraco,
	cod_local_des,
	urf_despacho
	into l_peso_bruto,
	#l_peso_liquido,
	l_cod_embal_srf,
	l_cod_transp_nac,
	l_volume,
	l_cod_via_transp,
	l_dat_desembaraco,
	l_cod_local_des,
	l_urf_despacho
	from proc_imp_compl
	where cod_empresa  = p_processo_imp.cod_empresa
	and num_processo = p_processo_imp.num_processo
	and num_versao   = p_processo_imp.num_versao
	whenever error stop
	if sqlca.sqlcode = 0 then

		if m_existe_uf_urf = "s" then
			let l_cod_local_des = l_urf_despacho
		end if
		whenever error continue
		select sum(proc_item.val_tot_pes_it)
		into l_peso_liquido
		from proc_item
		where proc_item.cod_empresa  = p_cod_empresa
		and proc_item.num_processo = p_processo_imp.num_processo
		and proc_item.num_versao   = p_processo_imp.num_versao
		and proc_item.quantidade > 0 ## tdxn45
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("select","proc_item")
		end if

		if log_existe_epl('sup3760y_after_select_proc_item') then
			call log_setvar('cod_empresa', p_cod_empresa)
			#epl c�digo da empresa
			#epl tipo: proc_item.cod_empresa

			call log_setvar('num_processo', p_processo_imp.num_processo)
			#epl n�mero do processo de importa��o
			#epl tipo: proc_item.num_processo

			call log_setvar('num_versao', p_processo_imp.num_versao)
			#epl n�mero da vers�o do processo de importa��o
			#epl tipo: proc_item.num_versao

			call log_setvar('l_peso_liquido', l_peso_liquido)
			#epl peso l�quido dos itens do processo
			#epl tipo: proc_item.val_tot_pes_it

			call sup3760y_after_select_proc_item()

			let l_peso_liquido = log_getvar('peso_liquido')

		end if
		##mm
		#busca embalagem do vdp
		whenever error continue
		select cod_embal
		into l_cod_embal_vdp
		from embalagem_srf
		where cod_embal_srf = l_cod_embal_srf
		whenever error stop
		if sqlca.sqlcode <> 0 then
			let l_cod_embal_vdp = ' '
		end if

		let l_den_embal_compl = ' '
		let l_den_embal = ' '
		whenever error continue
		select den_embal
		into l_den_embal_compl
		from embalagem
		where embalagem.cod_embal = l_cod_embal_vdp
		if sqlca.sqlcode <> 0 then
			let l_den_embal_compl = ' '
		end if
		let l_den_embal = l_den_embal_compl[1,10]

		whenever error continue
		select empresa
		from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro         = 'cod_embalagem_nf'
		whenever error stop
		if sqlca.sqlcode = 0 then
			whenever error continue
			update sup_par_ar set parametro_texto = l_cod_embal_srf
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = 'cod_embalagem_nf'
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("update","sup_par_ar")
			end if
		else
			whenever error continue
			insert into sup_par_ar(empresa          ,
			aviso_recebto    ,
			seq_aviso_recebto,
			parametro        ,
			par_ind_especial ,
			parametro_texto  ,
			parametro_val    ,
			parametro_dat)
			values (p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			'cod_embalagem_nf',
			null,
			l_cod_embal_vdp,
			null,
			null)
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("insert","sup_par_ar")
			end if
		end if
		##mm

		whenever error continue
		select cod_empresa
		from nfe_sup_compl
		where cod_empresa   = p_cod_empresa
		and num_aviso_rec = p_dados_tela.num_aviso_rec
		whenever error stop
		if sqlca.sqlcode = 0 then
			### tsedcv - caso j� possua registro atualiza apenas informa��es referente a volume.
			whenever error continue
			update nfe_sup_compl set
			#peso_bruto    = l_peso_bruto,
			#peso_liquido  = l_peso_liquido,
			qtd_volumes   = l_volume
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("update","nfe_sup_comp")
			end if
		else
			whenever error continue
			insert into nfe_sup_compl(cod_empresa       ,
			num_aviso_rec     ,
			den_embal         ,
			qtd_volumes       ,
			peso_bruto        ,
			peso_liquido      ,
			ies_proc_nfs      ,
			num_proc_imp_nfs  ,
			texto_obs1        ,
			texto_obs2        ,
			texto_compl1      ,
			texto_compl2      ,
			ies_nfe_emit)
			values (p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			l_den_embal,
			l_volume,
			l_peso_bruto,
			l_peso_liquido,
			null,
			null,
			null,
			null,
			null,
			null,
			'n')
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("insert","nfe_sup_compl")
			end if
		end if

		if m_num_oc_ant is null and m_num_pedido_ant is null then
			#trogvb se tiver valor nessas duas vari�veis � porque se trata da fun��o de copia da nf
			#e neste caso, j� ser� gravada a aviso_rec_compl pela fun��o de copia
			whenever error continue
			select cod_empresa
			from aviso_rec_compl
			where cod_empresa   = p_cod_empresa
			and num_aviso_rec = p_dados_tela.num_aviso_rec
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				select raz_social
				into l_raz_social
				from fornecedor
				where cod_fornecedor = l_cod_transp_nac
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let l_raz_social = ' '
				end if

				whenever error continue
				update aviso_rec_compl set cod_transpor = l_cod_transp_nac,
				num_di       = p_processo_imp.num_di

				where cod_empresa   = p_cod_empresa
				and num_aviso_rec = p_dados_tela.num_aviso_rec
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("update","aviso_rec_compl")
				end if
			else
				whenever error continue
				select raz_social
				into l_raz_social
				from fornecedor
				where cod_fornecedor = l_cod_transp_nac
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let l_raz_social = ' '
				end if

				call supm44_aviso_rec_compl_set_cod_empresa(p_cod_empresa)
				call supm44_aviso_rec_compl_set_num_aviso_rec(p_dados_tela.num_aviso_rec)
				call supm44_aviso_rec_compl_set_cod_transpor(l_cod_transp_nac)
				call supm44_aviso_rec_compl_set_den_transpor(l_raz_social)
				call supm44_aviso_rec_compl_set_num_placa_veic(null)
				call supm44_aviso_rec_compl_set_num_di(p_processo_imp.num_di)
				call supm44_aviso_rec_compl_set_ies_incl_import(null)
				call supm44_aviso_rec_compl_set_num_lote_pat(null)
				call supm44_aviso_rec_compl_set_cod_operacao(null)
				call supm44_aviso_rec_compl_set_cod_empresa_orig(null)
				call supm44_aviso_rec_compl_set_cod_moeda_forn(null)
				call supm44_aviso_rec_compl_set_num_embarque(null)
				call supm44_aviso_rec_compl_set_ies_situacao(null)
				call supm44_aviso_rec_compl_set_nom_usuario(null)
				call supm44_aviso_rec_compl_set_dat_proces(null)
				call supm44_aviso_rec_compl_set_hor_operac(null)
				call supm44_aviso_rec_compl_set_cod_fiscal_compl(0)
				if find4glfunction('supm44_aviso_rec_compl_set_filial') then
					call supm44_aviso_rec_compl_set_filial(null)
				end if

				call supm44_aviso_rec_compl_inclui(true,false)
				returning l_status
			end if
		end if

### inicio tebl05 - inclui sup_par_ar num_decl_import caso possua este parametro para o processo de importa��o.

		initialize l_num_di_compl to null
		whenever error continue
		select parametro_val
		into l_num_di_compl
		from imp_par_proc_item
		where empresa = p_cod_empresa
		and processo_import = p_processo_imp.num_processo
		and pedido_compra   = 0
		and ordem_compra    = 0
		and parametro       = 'num_decl_import'
		whenever error stop
		if sqlca.sqlcode = 0 and
			l_num_di_compl is not null then
			whenever error continue
			delete sup_par_ar
			where sup_par_ar.empresa           = p_cod_empresa
			and sup_par_ar.parametro         = 'num_decl_import'
			and sup_par_ar.aviso_recebto     = p_dados_tela.num_aviso_rec
			and sup_par_ar.seq_aviso_recebto = 0
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"num_decl_import",
				null,
				null,
				l_num_di_compl,
				today)
				whenever error stop
			end if
		end if
### fim tebl05
		#trogvb
		if l_cod_importador is not null and l_cod_importador <> ' ' then
			initialize m_num_cgc_cpf to null
			whenever error continue
			select num_cgc_cpf
			into m_num_cgc_cpf
			from fornecedor
			where cod_fornecedor = l_cod_importador
			whenever error stop
			if sqlca.sqlcode <> 0   and
				sqlca.sqlcode <> 100 then
				initialize m_num_cgc_cpf to null
			end if
			whenever error continue
			select empresa
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "cnpj_adq_enc"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_texto   = m_num_cgc_cpf
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = 'cnpj_adq_enc'
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql('update','sup_par_ar(imp)')
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"cnpj_adq_enc",
				null,
				m_num_cgc_cpf,
				null,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp)")
					let p_houve_erro = true
				end if
			end if

			whenever error continue
			select cod_uni_feder
			into l_cod_uni_feder
			from fornecedor
			where cod_fornecedor    = l_cod_importador
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				select parametro_texto
				from sup_par_ar
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = "uf_adq_enc"
				whenever error stop
				if sqlca.sqlcode = 0 then
					whenever error continue
					update sup_par_ar
					set parametro_texto   = l_cod_uni_feder
					where empresa           = p_cod_empresa
					and aviso_recebto     = p_dados_tela.num_aviso_rec
					and seq_aviso_recebto = 0
					and parametro         = "uf_adq_enc"
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("update","sup_par_ar(imp)")
						return false
					end if
				else
					whenever error continue
					insert into sup_par_ar values(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					0,
					"uf_adq_enc",
					null,
					l_cod_uni_feder,
					null,
					null)
					whenever error stop
					if sqlca.sqlcode <> 0 then
						call log003_err_sql("insert","sup_par_ar(imp)")
						return false
					end if
				end if
			end if
		end if

		#trnoc7
		let m_cod_via_transp = l_cod_via_transp
		if m_cod_via_transp is not null and m_cod_via_transp <> ' ' then
			whenever error continue
			select empresa
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "meio_transp_ar"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_val     = m_cod_via_transp
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = 'meio_transp_ar'
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql('update','sup_par_ar(imp1)')
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"meio_transp_ar",
				null,
				null,
				m_cod_via_transp,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp1)")
					let p_houve_erro = true
				end if
			end if
		end if

		if l_dat_desembaraco is not null and l_dat_desembaraco <> ' ' then
			whenever error continue
			select unique empresa
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 1
			and parametro         = "data_desembaraco"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_dat     = l_dat_desembaraco
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 1
				and parametro         = "data_desembaraco"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql('update','sup_par_ar(imp2)')
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				1,
				"data_desembaraco",
				null,
				null,
				null,
				l_dat_desembaraco)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp2)")
					let p_houve_erro = true
				end if
			end if
		end if

		initialize l_den_local to null
		initialize l_den_uni_feder to null
		initialize l_cod_uni_feder to null
		if l_cod_local_des is not null and l_cod_local_des <> ' ' then

			if m_existe_uf_urf = "s" then
				whenever error continue
				select den_urf, uni_feder
				into l_den_local, l_cod_uni_feder
				from urf
				where cod_urf = l_cod_local_des
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let l_den_local     = ""
					let l_cod_uni_feder = ""
				end if
			else
				whenever error continue
				select den_local, cod_uni_feder
				into l_den_local, l_cod_uni_feder
				from loc_emb_des
				where cod_local =  l_cod_local_des
				whenever error stop
				if sqlca.sqlcode <> 0 then
					let l_den_local     = ""
					let l_cod_uni_feder = ""
				end if
			end if

			whenever error continue
			select unique empresa
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "local_desemb_nf"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_texto   = l_den_local
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = "local_desemb_nf"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql('update','sup_par_ar(imp3)')
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"local_desemb_nf",
				null,
				l_den_local,
				null,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp3)")
					let p_houve_erro = true
				end if
			end if

			#trsozc
			whenever error continue
			select unique empresa
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "uf_desemb_nf"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_texto   = l_cod_uni_feder
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = "uf_desemb_nf"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql('update','sup_par_ar(imp8)')
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"uf_desemb_nf",
				null,
				l_cod_uni_feder,
				null,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp8)")
					let p_houve_erro = true
				end if
			end if

		end if

		if l_num_di is not null and l_num_di <> ' ' then
			select parametro_texto
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "num_di_sefaz"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_texto   = l_num_di
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = "num_di_sefaz"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("update","sup_par_ar(imp4)")
					return false
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"num_di_sefaz",
				null,
				l_num_di,
				null,
				null)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp4)")
					return false
				end if
			end if
		end if

		if l_dat_emiss_di is not null and l_dat_emiss_di <> ' ' then
			whenever error continue
			select parametro_dat
			into l_dat_emiss_di
			from sup_par_ar
			where empresa           = p_cod_empresa
			and aviso_recebto     = p_dados_tela.num_aviso_rec
			and seq_aviso_recebto = 0
			and parametro         = "data_di_nf"
			whenever error stop
			if sqlca.sqlcode = 0 then
				whenever error continue
				update sup_par_ar
				set parametro_dat     = l_dat_emiss_di
				where empresa           = p_cod_empresa
				and aviso_recebto     = p_dados_tela.num_aviso_rec
				and seq_aviso_recebto = 0
				and parametro         = "data_di_nf"
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql('update','sup_par_ar(imp5)')
				end if
			else
				whenever error continue
				insert into sup_par_ar values(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				0,
				"data_di_nf",
				null,
				null,
				null,
				l_dat_emiss_di)
				whenever error stop
				if sqlca.sqlcode <> 0 then
					call log003_err_sql("insert","sup_par_ar(imp5)")
					let p_houve_erro = true
				end if
			end if
		end if
		#trnoc7

		#trogvb / mman-7331
		whenever error continue
		select parametro_dat
		from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro         = "val_afrmm"
		whenever error stop
		if sqlca.sqlcode = 0 then
		else
			whenever error continue
			insert into sup_par_ar values(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"val_afrmm",
			null,
			null,
			0,
			null)
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("insert","sup_par_ar(imp6)")
				let p_houve_erro = true
			end if
		end if

		whenever error continue
		select parametro_dat
		from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = 0
		and parametro         = "forma_imp"
		whenever error stop
		if sqlca.sqlcode = 0 then
		else
			whenever error continue
			insert into sup_par_ar values(p_cod_empresa,
			p_dados_tela.num_aviso_rec,
			0,
			"forma_imp",
			null,
			null,
			1,
			null)
			whenever error stop
			if sqlca.sqlcode <> 0 then
				call log003_err_sql("insert","sup_par_ar(imp7)")
				let p_houve_erro = true
			end if
		end if
		#trogvb

	end if

end function

#--------------------------------------#
function sup3760_verifica_tipo(l_tipo)
#--------------------------------------#
	define l_tipo  char(01)

	if l_tipo <> p_dados_tela.ies_nf_aguard_nfe and
		p_dados_tela.ies_especie_nf = "nfr" then
		if not sup3760_verifica_fornec_depos(p_dados_tela.cod_fornecedor) then
			if l_tipo = "a" then
				call log0030_mensagem('fornecedor/cfop de nfr tipo a com origem fornecedor.','info')
				if p_dados_tela.ies_nf_aguard_nfe = 't' then
					if log0040_confirm(0,0, "deseja alterar tipo da nota para a ?") then
						let p_dados_tela.ies_nf_aguard_nfe = "a"
					end if
				else
					if log0040_confirm(0,0, "deseja alterar tipo da nota para t ?") then
						let p_dados_tela.ies_nf_aguard_nfe = "t"
					else
						let p_dados_tela.ies_nf_aguard_nfe = "a"
					end if
				end if
				display by name p_dados_tela.ies_nf_aguard_nfe
			end if
		end if
		if l_tipo = "b" then
			call log0030_mensagem('fornecedor/cfop de nfr tipo b com origem depositante.','info')
			#os558302
			if p_dados_tela.ies_nf_aguard_nfe = 't' then
				if log0040_confirm(0,0, "deseja alterar tipo da nota para b ?") then
					let p_dados_tela.ies_nf_aguard_nfe = "b"
				end if
			else
				if log0040_confirm(0,0, "deseja alterar tipo da nota para t ?") then
					let p_dados_tela.ies_nf_aguard_nfe = "t"
				else
					let p_dados_tela.ies_nf_aguard_nfe = "b"
				end if
			end if
			display by name p_dados_tela.ies_nf_aguard_nfe
		end if
	end if

end function

#-------------------------------------------------------------#
function sup3760_verifica_cadastro_triangulacao_depositante()
#-------------------------------------------------------------#
	define l_cod_fiscal          like cod_fiscal_sup.cod_fiscal,
	l_count               smallint

	if p_dados_tela.ies_especie_nf    = "nfr" and
		p_dados_tela.ies_nf_aguard_nfe = "a" then
		call sup3760_verifica_sup_fornec_tri_ter() returning l_count
		if l_count > 0 then
			let l_cod_fiscal = p_dados_tela.cod_operacao[3,5]
			whenever error continue
			select fornec_depositante
			from sup_fornec_tri_ter
			where empresa         = p_cod_empresa
			and fornecedor      = p_dados_tela.cod_fornecedor
			and cod_fisc_fornec = l_cod_fiscal
			whenever error stop
			if sqlca.sqlcode = 100 then
				call log0030_mensagem('fornecedor/cfop n�o cadastrado no programa de triangula��o (sup1648).','exclamation')
				return 0
			end if
		end if
		if not sup3760_verifica_necessita_pc(p_dados_tela.cod_fornecedor,
			p_dados_tela.cod_operacao,
			"a") then
			call log0030_mensagem("fornecedor n�o permite entrada sem pedido de compra","info")
			return 2
		end if
	end if

	if p_dados_tela.ies_especie_nf    = "nfr" and
		p_dados_tela.ies_nf_aguard_nfe = "b" then
		call sup3760_verifica_sup_fornec_tri_ter() returning l_count
		if l_count > 0 then
			let l_cod_fiscal = p_dados_tela.cod_operacao[3,5]
			whenever error continue
			select fornec_depositante
			from sup_fornec_tri_ter
			where empresa            = p_cod_empresa
			and fornec_depositante = p_dados_tela.cod_fornecedor
			and cod_fisc_depos     = l_cod_fiscal
			whenever error stop
			if sqlca.sqlcode = 100 then
				call log0030_mensagem('fornecedor/cfop n�o cadastrado no programa de triangula��o como depositante (sup1648).','exclamation')
				return 0
			end if
		end if
	end if
return 1

end function

#----------------------------------------------#
function sup3760_verifica_sup_fornec_tri_ter()
#----------------------------------------------#
	define l_count     smallint

	let l_count = 0
	if m_exst_forntriter then
		whenever error continue
		select count(*)
		into l_count
		from sup_fornec_tri_ter
		where empresa = p_cod_empresa
		whenever error stop
		if sqlca.sqlcode <> 0 or l_count is null then
			let l_count = 0
		end if
	end if
return l_count

end function

#----------------------------------------------------#
function sup3760_cancela_nf_venda_ponto_a_ponto()
#----------------------------------------------------#
	if not obf3760_nota_venda_ponto_a_ponto(p_cod_empresa, p_dados_tela.num_aviso_rec) then
		return true
	end if

	whenever error continue
	update nf_mestre_ent
	set ies_situacao = "c"
	where cod_empresa  = p_cod_empresa
	and num_nff      = p_dados_tela.num_nf
	whenever error stop
	if sqlca.sqlcode <> 0 then
		call log003_err_sql("select","nf_mestre_ent")
		return false
	end if

return true

end function

#----------------------------------------#
function sup3760_busca_numero_proc_imp()
#----------------------------------------#
	define  l_num_processo    like aviso_rec_proc_imp.num_processo

	whenever error continue
	initialize l_num_processo to null
	select unique(num_processo)
	into l_num_processo
	from processo_imp
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("leitura","aviso_rec_proc_imp")
	end if

return l_num_processo
end function

#-----------------------------------------------------------------------------------#
function sup3760_verifica_permissao_troca_tipo_docum_wms(l_empresa,l_num_aviso_rec)
#-----------------------------------------------------------------------------------#
	define l_empresa       like aviso_rec.cod_empresa,
	l_num_aviso_rec like aviso_rec.num_aviso_rec

	if find4glfunction('wms6135_verifica_permissao_troca_tipo_docum_wms') then
		if not wms6135_verifica_permissao_troca_tipo_docum_wms(l_empresa,
			l_num_aviso_rec) then
			return false
		end if
	end if

return true

end function

#-------------------------------------#
function sup3760_montagem_nota_existe()
#-------------------------------------#
	define l_num_aviso_rec like aviso_rec.num_aviso_rec,
	l_sqlcode       smallint,
	l_permite       smallint

	let l_permite = false
	if find4glfunction('fin80153_processa_parametro_financeiro_11') then
		call fin80153_inicializa_variaveis()
		call fin80153_processa_parametro_financeiro_11()
		let l_permite = fin80153_permite_nf_c_msm_num_ser_ssr()
	end if

	initialize l_num_aviso_rec to null
	if l_permite = false then
		whenever error continue
		select num_aviso_rec
		into l_num_aviso_rec
		from nf_sup
		where nf_sup.cod_empresa     = p_cod_empresa
		and nf_sup.num_nf          = p_dados_tela.num_nf
		and nf_sup.ser_nf          = p_dados_tela.ser_nf
		and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
		and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
		whenever error stop
	else
		whenever error continue
		select num_aviso_rec
		into l_num_aviso_rec
		from nf_sup
		where nf_sup.cod_empresa     = p_cod_empresa
		and nf_sup.num_nf          = p_dados_tela.num_nf
		and nf_sup.ser_nf          = p_dados_tela.ser_nf
		and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
		and nf_sup.ies_especie_nf  = p_dados_tela.ies_especie_nf
		and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
		whenever error stop
	end if

	if sqlca.sqlcode <> 0 and
		sqlca.sqlcode <> 100 and
		sqlca.sqlcode <> -284 then
		call log003_err_sql("select","nf_sup")
	else
		if sqlca.sqlcode = 0 or
			sqlca.sqlcode = -284 then #a56550
			let l_sqlcode = sqlca.sqlcode

			if log_existe_epl('sup3760y_after_process_verifica_nota_existe') then
				call log_setvar('cod_empresa', p_cod_empresa)
				#epl codigo da empresa
				#epl tipo: nf_sup.cod_empresa

				call log_setvar('num_nf', p_dados_tela.num_nf)
				#epl numero da nota fiscal
				#epl tipo: nf_sup.num_nf

				call log_setvar('ser_nf', p_dados_tela.ser_nf)
				#epl serie da nota fiscal
				#epl tipo: nf_sup.ser_nf

				call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
				#epl subserie da nota fiscal
				#epl tipo: nf_sup.ssr_nf

				call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
				#epl especie da nota fiscal
				#epl tipo: nf_sup.ies_especie_nf

				call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
				#epl codigo do fornecedor
				#epl tipo: nf_sup.cod_fornecedor

				if not sup3760y_after_process_verifica_nota_existe() then
					return false
				end if
			end if

			if l_sqlcode = -284 then
				return true
			else
				if l_sqlcode = 0 then
					return true
				end if
			end if
		end if
	end if

return false

end function

#-----------------------------#
function sup3760_nota_existe()  #809554
#-----------------------------#

	#tejuxm
	#somente ir� exibir a mensagem de nota fiscal j� cadastrada, caso exista realmente um
	#outro ar com os mesmos dados desta nota fiscal. ana paula/fabiano
	define l_num_aviso_rec like aviso_rec.num_aviso_rec,
	l_sqlcode       smallint,
	l_sql_stmt      char(1000),
	l_permite       smallint,
	l_tam_nf_eletronica smallint

	let l_tam_nf_eletronica = 0


	if m_num_nf_eletronica is not null and
		m_num_nf_eletronica > 0 then
		let l_tam_nf_eletronica = length(m_num_nf_eletronica)
	else
		let l_tam_nf_eletronica = length(p_dados_tela.num_nf)
	end if

	let l_permite = false
	if find4glfunction('fin80153_processa_parametro_financeiro_11') then
		call fin80153_inicializa_variaveis()
		call fin80153_processa_parametro_financeiro_11()
		let l_permite = fin80153_permite_nf_c_msm_num_ser_ssr()
	end if

	initialize l_num_aviso_rec to null
	if l_permite = false then
		whenever error continue
		select num_aviso_rec
		into l_num_aviso_rec
		from nf_sup
		where nf_sup.cod_empresa         = p_cod_empresa
		and nf_sup.num_nf          = p_dados_tela.num_nf
		and nf_sup.ser_nf          = p_dados_tela.ser_nf
		and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
		and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
		whenever error stop
	else
		whenever error continue
		select num_aviso_rec
		into l_num_aviso_rec
		from nf_sup
		where nf_sup.cod_empresa         = p_cod_empresa
		and nf_sup.num_nf          = p_dados_tela.num_nf
		and nf_sup.ser_nf          = p_dados_tela.ser_nf
		and nf_sup.ssr_nf          = p_dados_tela.ssr_nf
		and nf_sup.ies_especie_nf  = p_dados_tela.ies_especie_nf
		and nf_sup.cod_fornecedor  = p_dados_tela.cod_fornecedor
		whenever error stop
	end if

	if sqlca.sqlcode <> 0 and
		sqlca.sqlcode <> 100 and
		sqlca.sqlcode <> -284 then
		call log003_err_sql("select","nf_sup")
	else
		if sqlca.sqlcode = 0 or
			sqlca.sqlcode = -284 then #a56550
			let l_sqlcode = sqlca.sqlcode

			if log_existe_epl('sup3760y_after_process_verifica_nota_existe') then
				call log_setvar('cod_empresa', p_cod_empresa)
				#epl codigo da empresa
				#epl tipo: nf_sup.cod_empresa

				call log_setvar('num_nf', p_dados_tela.num_nf)
				#epl numero da nota fiscal
				#epl tipo: nf_sup.num_nf

				call log_setvar('ser_nf', p_dados_tela.ser_nf)
				#epl serie da nota fiscal
				#epl tipo: nf_sup.ser_nf

				call log_setvar('ssr_nf', p_dados_tela.ssr_nf)
				#epl subserie da nota fiscal
				#epl tipo: nf_sup.ssr_nf

				call log_setvar('ies_especie_nf', p_dados_tela.ies_especie_nf)
				#epl especie da nota fiscal
				#epl tipo: nf_sup.ies_especie_nf

				call log_setvar('cod_fornecedor', p_dados_tela.cod_fornecedor)
				#epl codigo do fornecedor
				#epl tipo: nf_sup.cod_fornecedor

				if not sup3760y_after_process_verifica_nota_existe() then
					return false
				end if
			end if

			if l_sqlcode = -284 then
				return true
			else
				if l_sqlcode = 0 and l_num_aviso_rec = p_dados_tela.num_aviso_rec and
					l_tam_nf_eletronica <= 7 then
					return false
				end if
			end if
		end if
	end if

	if m_num_nf_eletronica is not null and
		m_num_nf_eletronica > 0 then
		if l_tam_nf_eletronica > 7 then
			let l_sql_stmt = ' select aviso_recebto ',
			' from sup_par_ar ',
			' where empresa = "',p_cod_empresa,'"',
			' and parametro = "num_nf_eletronica"'

			if length(m_num_nf_eletronica) > 7 and
				length(m_num_nf_eletronica) <= 9 then
				let l_sql_stmt = l_sql_stmt clipped, ' and parametro_val = "',m_num_nf_eletronica,'"'
			else
				if length(m_num_nf_eletronica) > 9 then
					let l_sql_stmt = l_sql_stmt clipped, ' and parametro_texto = "',log_alltrim(m_num_nf_eletronica),'"'
				end if
			end if

			whenever error continue
			prepare var_notas from l_sql_stmt
			whenever error stop

			whenever error continue
			declare cq_notas cursor for var_notas
			whenever error stop

			whenever error continue
			foreach cq_notas into l_num_aviso_rec

			let l_sql_stmt = ' select num_aviso_rec ',
			' from nf_sup ',
			' where nf_sup.cod_empresa = "',p_cod_empresa,'"',
			' and nf_sup.ser_nf = "',p_dados_tela.ser_nf,'"',
			' and nf_sup.ssr_nf = "',p_dados_tela.ssr_nf,'"',
			' and nf_sup.cod_fornecedor = "',p_dados_tela.cod_fornecedor,'"',
			' and nf_sup.num_aviso_rec = "',l_num_aviso_rec,'"'
			if l_permite then
				let l_sql_stmt = l_sql_stmt clipped, ' and nf_sup.ies_especie_nf = "',p_dados_tela.ies_especie_nf,'"'
			end if

			whenever error continue
			prepare var_duplicado from l_sql_stmt
			whenever error stop

			whenever error continue
			execute var_duplicado
			whenever error stop
			if sqlca.sqlcode = 0 or
				sqlca.sqlcode = -284 then
				return true
			end if
		end foreach
		whenever error stop
		close cq_notas free cq_notas
	end if
end if

return false

end function

# inicio chamado 835.591
#------------------------------------------------------------#
function sup3760_insere_parametro_sup1544(l_num_aviso_rec)
#------------------------------------------------------------#
	define lr_sup_par_ar                 record
	empresa            like sup_par_ar.empresa,
	aviso_recebto      like sup_par_ar.aviso_recebto,
	seq_aviso_recebto  like sup_par_ar.seq_aviso_recebto,
	parametro          like sup_par_ar.parametro,
	par_ind_especial   like sup_par_ar.par_ind_especial,
	parametro_texto    like sup_par_ar.parametro_texto,
	parametro_val      like sup_par_ar.parametro_val,
	parametro_dat      like sup_par_ar.parametro_dat
end record

define l_num_aviso_rec               like aviso_rec.num_aviso_rec


if log_existe_epl("supy78_verifica_cliente_78") then
	if supy78_verifica_cliente_78() then
		let lr_sup_par_ar.empresa           = p_cod_empresa
		let lr_sup_par_ar.aviso_recebto     = l_num_aviso_rec
		let lr_sup_par_ar.seq_aviso_recebto = 1
		let lr_sup_par_ar.parametro         = 'impressao_sup1544'
		let lr_sup_par_ar.par_ind_especial  = 's'
		let lr_sup_par_ar.parametro_texto   = null
		let lr_sup_par_ar.parametro_val     = null
		let lr_sup_par_ar.parametro_dat     = null

		whenever error continue
		select empresa
		from sup_par_ar
		where empresa           = p_cod_empresa
		and aviso_recebto     = l_num_aviso_rec
		and seq_aviso_recebto = 1
		and parametro         = 'impressao_sup1544'
		whenever error stop
		if sqlca.sqlcode = 100 then
			whenever error continue
			insert into sup_par_ar (empresa,
			aviso_recebto,
			seq_aviso_recebto,
			parametro,
			par_ind_especial,
			parametro_texto,
			parametro_val,
			parametro_dat)
			values (lr_sup_par_ar.empresa,
			lr_sup_par_ar.aviso_recebto,
			lr_sup_par_ar.seq_aviso_recebto,
			lr_sup_par_ar.parametro,
			lr_sup_par_ar.par_ind_especial,
			lr_sup_par_ar.parametro_texto,
			lr_sup_par_ar.parametro_val,
			lr_sup_par_ar.parametro_dat)
			whenever error stop

			if sqlca.sqlcode <> 0 then
				call log003_err_sql("insert","sup_par_ar")
				return false
			end if
		end if
	end if
end if

return true

end function

#------------------------------------------------------------#
function sup3760_elimina_parametro_sup1544(l_num_aviso_rec)
#------------------------------------------------------------#
	define l_num_aviso_rec               like aviso_rec.num_aviso_rec

	if log_existe_epl("supy78_verifica_cliente_78") then
		if supy78_verifica_cliente_78() then
			whenever error continue
			delete from sup_par_ar
			where empresa = p_cod_empresa
			and aviso_recebto     = l_num_aviso_rec
			and seq_aviso_recebto = 1
			and parametro         = "impressao_sup1544"
			whenever error stop

			if sqlca.sqlcode <> 0 then
				call log003_err_sql("delete","sup_par_ar")
				return false
			end if
		end if
	end if

return true

end function
# fim chamado 835.591

#-----------------------------------------------------------#
function sup3760_relaciona_frete_nf(l_cod_empresa,
	l_num_aviso_rec,
	l_ies_nf_aguard_nfe_ant,
	l_ies_nf_aguard_nfe)
#-----------------------------------------------------------#
	define l_cod_empresa             like nf_sup.cod_empresa,
	l_num_aviso_rec           like nf_sup.num_aviso_rec,
	l_ies_nf_aguard_nfe_ant   like nf_sup.ies_nf_aguard_nfe,
	l_ies_nf_aguard_nfe       like nf_sup.ies_nf_aguard_nfe

	#--# se houve mudan�a de nf em tr�nsito para qualquer outro tipo de nf     #--#
	#--# e n�o entrou no array de itens                                        #--#
	#--# e a nf n�o possui ainda o frete relacionado ent�o ir� abrir o sup4510 #--#
	#--# e dentro desta fun��o � verificado se a nf deve possuir ou n�o o      #--#
	#--# o relacionamento com o frete.                                         #--#
	if p_entra_array = "n" then
		if  l_ies_nf_aguard_nfe_ant  = "7"
			and l_ies_nf_aguard_nfe     <> "7" then
			whenever error continue
			select num_conhec
			from nf_sup
			where cod_empresa   = l_cod_empresa
			and num_aviso_rec = l_num_aviso_rec
			and num_conhec    = 0
			and ser_conhec    = ' '
			and ssr_conhec    = 0
			and cod_transpor  = '0'
			whenever error stop

			if sqlca.sqlcode = 0 then
				return true
			end if
		end if
	end if

return false
end function

#---------------------------------#
function sup3760_busca_fat_conver()
#---------------------------------#
	define l_cod_unid_med like item.cod_unid_med,
	l_fat_conver_unid like ordem_sup.fat_conver_unid

	let l_fat_conver_unid = 1

	whenever error continue
	select fat_conver_unid
	into l_fat_conver_unid
	from ordem_sup
	where ordem_sup.cod_empresa = p_aviso_rec.cod_empresa
	and ordem_sup.num_oc = p_aviso_rec.num_oc
	and ordem_sup.ies_versao_atual = 's'
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("select","ordem_sup - fat_conver_unid")
	end if

	whenever error continue
	select cod_unid_med
	into l_cod_unid_med
	from item
	where cod_empresa = p_cod_empresa
	and cod_item = p_aviso_rec.cod_item
	whenever error stop
	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
		call log003_err_sql("select","item - cod_unid_med")
	end if

	if p_aviso_rec.cod_unid_med_nf <> l_cod_unid_med then

		whenever error continue
		select fat_conver_unid
		into l_fat_conver_unid
		from item_fornec
		where cod_empresa = p_cod_empresa
		and cod_fornecedor = p_dados_tela.cod_fornecedor
		and cod_item = p_aviso_rec.cod_item
		and cod_unid_med_forn = p_aviso_rec.cod_unid_med_nf
		whenever error stop
		if sqlca.sqlcode <> 0 then
			whenever error continue
			select fat_conver_unid
			into l_fat_conver_unid
			from fat_conver
			where cod_empresa = p_cod_empresa
			and cod_item = p_aviso_rec.cod_item
			and cod_unid_med_dest = p_aviso_rec.cod_unid_med_nf
			and cod_unid_med_orig = l_cod_unid_med
			whenever error stop
		end if
	end if

return l_fat_conver_unid, l_cod_unid_med

end function

#----------------------------------#
function sup3760_valida_sup8028()
#----------------------------------#
	whenever error continue
	select 1
	from sup_rec_oc
	where sup_rec_oc.empresa              = p_cod_empresa
	and sup_rec_oc.nota_fiscal          = p_dados_tela.num_nf
	and sup_rec_oc.serie_nota_fiscal    = p_dados_tela.ser_nf
	and sup_rec_oc.subserie_nota_fiscal = p_dados_tela.ssr_nf
	and sup_rec_oc.especie_nota_fiscal  = p_dados_tela.ies_especie_nf
	and sup_rec_oc.fornecedor           = p_dados_tela.cod_fornecedor
	whenever error stop

	if sqlca.sqlcode <> 0 and sqlca.sqlcode <> -284 then
		if sqlca.sqlcode = 100 then
			return false
		else
			call log003_err_sql("select","sup_rec_oc")
			return false
		end if
	else
		#--# se indicar que deve validar ent�o retorna true                   #--#
		#--# se indicar que n�o deve validar, ignora o resultado do sql acima #--#
		if m_valida_sup8028 = "s" then
			return true
		else
			return false
		end if
	end if

end function

#----------------------------------------------------------------#
function sup3760_cnd_pgto_prim_pc(l_cod_empresa, l_num_aviso_rec)
#----------------------------------------------------------------#
	define l_cod_empresa     like nf_sup.cod_empresa,
	l_num_aviso_rec   like nf_sup.num_aviso_rec,
	l_cnd_pgto        like pedido_sup.cnd_pgto

	initialize l_cnd_pgto to null

	whenever error continue
	select pedido_sup.cnd_pgto
	into l_cnd_pgto
	from pedido_sup, aviso_rec
	where aviso_rec.cod_empresa       = l_cod_empresa
	and aviso_rec.num_aviso_rec     = l_num_aviso_rec
	and pedido_sup.cod_empresa      = aviso_rec.cod_empresa
	and pedido_sup.num_pedido       = aviso_rec.num_pedido
	and pedido_sup.ies_versao_atual = 's'
	and aviso_rec.num_pedido       <> 0
	and aviso_rec.num_seq in (select min(aviso_rec.num_seq)
	from aviso_rec
	where cod_empresa             = l_cod_empresa
	and aviso_rec.num_aviso_rec = l_num_aviso_rec)
	whenever error stop

	if sqlca.sqlcode <> 0
		or l_cnd_pgto is null then
		let l_cnd_pgto = 0
	end if

return l_cnd_pgto
end function

#---------------------------------#
function sup3760_cria_temp_frete()
#---------------------------------#

	whenever error continue
	drop table w_sup37621
	whenever error stop

	whenever error continue
	create temp table w_sup37621
	(empresa         char(2),
	conhec          decimal(7,0),
	serie_conhec    char(3),
	subserie_conhec decimal(2,0),
	transportador   char(15))
	if sqlca.sqlcode <> 0 then
		whenever error continue
		delete from w_sup37621 where 1=1
		whenever error stop
		if sqlca.sqlcode <> 0 then
			call log003_err_sql("exclus�o","w_sup37621")
		end if
	end if
	whenever error stop

end function

#------------------------------------------------------------------------------------------------#
function sup3760_verifica_sit_fiscal_nf_saida(l_cod_empresa, l_num_aviso_rec, l_cod_empresa_orig)
#------------------------------------------------------------------------------------------------#
	define l_cod_empresa       like aviso_rec.cod_empresa,
	l_num_aviso_rec     like aviso_rec.num_aviso_rec,
	l_cod_empresa_orig  like fat_nf_mestre.empresa

	define l_trans_nota_fiscal like fat_nf_mestre.trans_nota_fiscal,
	l_sit_nota_fiscal   like fat_nf_mestre.sit_nota_fiscal

	define l_status             smallint,
	l_sit_atual_nf_eletr char(01)

	initialize l_trans_nota_fiscal, l_sit_nota_fiscal to null
	whenever error continue
	select unique a.trans_nota_fiscal_fatura, b.sit_nota_fiscal
	into l_trans_nota_fiscal,               l_sit_nota_fiscal
	from ar_nf_item a, fat_nf_mestre b
	where a.cod_empresa       = l_cod_empresa
	and a.num_aviso_rec     = l_num_aviso_rec
	and b.empresa           = l_cod_empresa_orig
	and b.trans_nota_fiscal = a.trans_nota_fiscal_fatura
	whenever error stop

	if  l_trans_nota_fiscal is not null
		and l_trans_nota_fiscal <> 0 then
		call obfr14_nota_fiscal_eletronica(l_cod_empresa_orig, "s", l_trans_nota_fiscal, l_sit_nota_fiscal, 0)
		returning l_status, l_sit_atual_nf_eletr

		if l_status = true then
			if l_sit_atual_nf_eletr = "d" then
				call log0030_mensagem('opera��o de transfer�ncia entre unidades: a nota fiscal de sa�da est� denegada.','exclamation')
				return false
			end if
			if l_sit_atual_nf_eletr = "i" then
				call log0030_mensagem('opera��o de transfer�ncia entre unidades: a nota fiscal de sa�da est� inutilizada/cancelada.','exclamation')
				return false
			end if
			if l_sit_atual_nf_eletr = "c" then
				call log0030_mensagem('opera��o de transfer�ncia entre unidades: a nota fiscal de sa�da est� inutilizada/cancelada.','exclamation')
				return false
			end if
		else
			if l_sit_atual_nf_eletr = "p" then
				call log0030_mensagem('opera��o de transfer�ncia entre unidades: a nota fiscal de sa�da est� sem protocolo de retorno da sefaz.','exclamation')
				return false
			end if
			call log0030_mensagem('opera��o de transfer�ncia entre unidades: a nota fiscal de sa�da n�o foi enviada/retornada da sefaz.','exclamation')
			return false
		end if
	end if

return true
end function

#-------------------------------#
function sup3760_valida_data_oc_ar()
#-------------------------------#
	define l_cont     integer,
	l_dat_emis like ordem_sup.dat_emis,
	l_msg      char(300),
	l_num_versao like ordem_sup.num_versao

	if p_dados_tela.dat_entrada_nf is not null and
		p_dados_tela.dat_entrada_nf <> ' ' then
		for l_cont=1 to 800
			if (p_array_pedidos[l_cont].num_oc is null or p_array_pedidos[l_cont].num_oc = ' ') and
				(p_array_pedidos[l_cont].num_pedido is null or p_array_pedidos[l_cont].num_pedido = ' ') then
				exit for
			end if

			initialize l_dat_emis to null
			if p_array_pedidos[l_cont].num_oc is null or p_array_pedidos[l_cont].num_oc = ' ' then
				whenever error continue
				select dat_entrega_prev, num_versao into l_dat_emis, l_num_versao
				from ordem_sup
				where cod_empresa = p_cod_empresa
				and num_pedido  = p_array_pedidos[l_cont].num_pedido
				and ies_versao_atual = 's'
				whenever error stop
			else
				whenever error continue
				select dat_entrega_prev, num_versao into l_dat_emis, l_num_versao
				from ordem_sup
				where cod_empresa = p_cod_empresa
				and num_oc      = p_array_pedidos[l_cont].num_oc
				and ies_versao_atual = 's'
				whenever error stop
			end if
			if sqlca.sqlcode = 0 then
				if l_dat_emis is not null and l_dat_emis <> ' ' and
					l_dat_emis > p_dados_tela.dat_entrada_nf then
					let l_msg = "data da ordem de compra ",p_array_pedidos[l_cont].num_oc clipped, " maior que a data de entrada da nota. "
					call log0030_mensagem(l_msg,'exclamation')
					return false
				end if

				#verifica as programa��es
				if (p_array_pedidos[l_cont].num_prog_entrega is not null and p_array_pedidos[l_cont].num_prog_entrega <> ' ') then
					initialize l_dat_emis to null
					whenever error continue
					select dat_entrega_prev into l_dat_emis
					from prog_ordem_sup
					where cod_empresa = p_cod_empresa
					and num_oc      = p_array_pedidos[l_cont].num_oc
					and num_versao  = l_num_versao
					and num_prog_entrega = p_array_pedidos[l_cont].num_prog_entrega
					whenever error stop
					if sqlca.sqlcode = 0 then
						if l_dat_emis is not null and l_dat_emis <> ' ' and
							l_dat_emis > p_dados_tela.dat_entrada_nf then
							let l_msg = "data da programa��o(",p_array_pedidos[l_cont].num_prog_entrega clipped,
							") da ordem de compra (",p_array_pedidos[l_cont].num_oc clipped,
							") maior que a data de entrada da nota. "
							call log0030_mensagem(l_msg,'exclamation')
							return false
						end if
					end if
				end if
			end if
		end for
	end if
return true
end function

#------------------------------------------------#
function sup3760_verifica_possui_anulacao_frete()
#------------------------------------------------#
	if m_anul_frete = false then
		return false
	end if
	if p_dados_tela.ies_especie_nf <> 'con' then
		return false
	end if
	whenever error continue
	select empresa
	from sup_anulacao_frete
	where empresa = p_nf_sup.cod_empresa
	and num_conhec = p_nf_sup.num_nf
	and ser_conhec = p_nf_sup.ser_nf
	and ssr_conhec = p_nf_sup.ssr_nf
	and transportador = p_nf_sup.cod_fornecedor
	and tipo_nota = 'act'
	whenever error stop
	if sqlca.sqlcode = 0 or
		sqlca.sqlcode = -284 then
		return true
	else
		return false
	end if

end function

### tqaft6 - fun��o chamada no after input de array de itens e chamada em todos os pontos em que houver exit input no array de itens
#-----------------------------------------#
function sup3760_after_input_item(l_funcao)
#-----------------------------------------#
	define l_funcao             char(30),
	l_next_field         char(20),
	l_entra_grades       smallint,
	l_retorno_epl        smallint,
	l_status             smallint,
	p_ind_ant            smallint,
	l_grade              smallint,
	l_aux                smallint,
	l_msg_erro           char(100),
	l_bloq_entr_preco    char(01),
	l_bloq_entr_data     char(01),
	l_forn_possui_pc     smallint,
	l_val_da_icms        decimal(15,2),
	l_val_tot_piscofins  decimal(17,6),
	l_dat_fim_valid      like cod_fiscal_sup.dat_fim_valid,
	l_val_liquido_ant    like aviso_rec.val_liquido_item,
	l_item_wms           smallint,
	l_quantidade         like aviso_rec_proc_imp.quantidade,
	l_cod_empresa_orig   char(02),
	l_aux1               decimal(15,2)


	let l_next_field = null

	let m_informou_grade = false
	let p_ind_ant = p_ind
	if fgl_lastkey() = fgl_keyval("accept") then
		let p_entra_tot = "s"
	end if

	for p_ind = 1 to arraylength(p_array)
		if  m_is_clie_319 = true
			and (p_dados_tela.cod_operacao = '5.601' or p_dados_tela.cod_operacao = '6.601')
			and  m_cod_item_cred_transf_icms = p_array[p_ind].cod_item then
			if p_ind > 1 then
				call log0030_mensagem('nota fiscal de transfer�ncia de icms dever� ter apenas um item.','exclamation')
				let l_next_field = 'cod_item'
				return p_houve_erro, l_next_field
			else
				if p_array[2].cod_item is null or p_array[2].cod_item = " " then
					return p_houve_erro, l_next_field
				else
					call log0030_mensagem('nota fiscal de transfer�ncia de icms dever� ter apenas um item.','exclamation')
					let l_next_field = 'cod_item'
					return p_houve_erro, l_next_field
				end if
			end if
		end if
		#---fim----os 502143 #

		if find4glfunction('supy31_valida_unid_med_fixa') then
			if p_array[p_ind].cod_unid_med_nf is not null then
				if not supy31_valida_unid_med_fixa(p_array_compl[p_ind].ies_tip_item, p_array[p_ind].cod_unid_med_nf) then
					let l_next_field = 'cod_unid_med_nf'
					return p_houve_erro, l_next_field
				end if
			end if
		end if

		let l_entra_grades   = true
		if p_dados_tela.ies_especie_nf = "nfd" then
			let l_entra_grades = false
			exit for
		end if
		if p_array[p_ind].cod_item is null or
			p_array[p_ind].cod_item = " " then
			let l_entra_grades = false
			exit for
		end if

		if p_array[p_ind].pct_ipi is null then
			let p_array[p_ind].pct_ipi = " "
		end if

		if p_array[p_ind].cod_cla_fisc_nf is null then
			let p_array[p_ind].cod_cla_fisc_nf = " "
		end if

		if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
			p_cod_empresa,
			p_dados_tela.num_aviso_rec) = false and
			sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
			p_cod_empresa,
			p_dados_tela.num_aviso_rec) = false then

			if m_mov_qtd_ser = "s" and p_array[p_ind].qtd_declarad_nf > 1 then
				call sup0063_verifica_controles(14,
				p_array[p_ind].cod_item,
				"inclusao",
				"sup3760")
				returning m_controles

				if m_controles <> " " then
					call sup0063_grava_temp_controles(m_controles)
					returning p_status

					if sup0063_existe_controle("11") then
						call log0030_mensagem("movimenta��o de quantidade deve ser �nica para item com controle de s�rie.","exclamation")

						let l_entra_grades = false
					end if
				end if
			end if

			if m_inclui_item_nota then
				call sup3766_set_m_ind_grade(p_ind)
			end if

			#chamado tpjeo6 verifica o log0087 "perm_ent_nf_item_wms_s_dimens" quando for 's', verificar se a empresa utiliza wms e se o item controla wms, caso sim nao informa dimensional
			if m_perm_ent_nf_item_wms_s_dimens = 's' then
				if g_ies_wms_instalado = 's' then
					call wms0004_item_sob_controle_wms(p_cod_empresa, p_array[p_ind].cod_item) returning l_status,l_item_wms
					if l_item_wms then
						#quando o item e controlado pelo wms e passou pelas situa��es acima nao dever� solicitar o dimensional
						let l_entra_grades = false
					end if
				end if
			end if

			if l_entra_grades then
				let l_retorno_epl = false

				if log_existe_epl("sup3760y_before_informacao_grade_item") then
					call log_setvar("retorno_epl", l_retorno_epl)
					call log_setvar("nfe_import", p_nfe_import)
					call log_setvar("nfm_import", p_nfm_import)
					call log_setvar("ind_aux", p_ind)

					if sup3760y_before_informacao_grade_item() then
						let m_informou_grade = true
					end if

					let l_retorno_epl = log_getvar('retorno_epl')
				end if

				if l_retorno_epl = false then
					call sup3766_informacao_grade_item(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					p_array[p_ind].seq,
					p_array[p_ind].cod_item,
					p_array[p_ind].qtd_declarad_nf,
					p_array_compl[p_ind].ar_com_pc,
					1,
					p_array_compl[p_ind].num_oc)
					returning l_status, l_grade
					if l_status = false then
						let p_houve_erro = true
						return p_houve_erro, l_next_field
					else
						if l_grade = true then
							let m_informou_grade = true
						else
							if m_informa_controles_sup3760 = "s" then #os544582
								call sup0063_verifica_controles(14, p_array[p_ind].cod_item,"inclusao","sup3760")
								returning m_controles

								if m_controles <> " " then
									if log0040_confirm(12,15,"obrigat�rio informar o controle de grade/dimensional. informar controles?") then
										call sup3766_informacao_grade_item(p_cod_empresa,
										p_dados_tela.num_aviso_rec,
										p_array[p_ind].seq,
										p_array[p_ind].cod_item,
										p_array[p_ind].qtd_declarad_nf,
										p_array_compl[p_ind].ar_com_pc,
										0,
										p_array_compl[p_ind].num_oc)
										returning l_status, l_grade

										if l_status = false then
											let p_houve_erro = true
											return p_houve_erro, l_next_field
										else
											if l_grade = true then
												let m_informou_grade = true
											end if
										end if
									else
										let l_next_field = 'cod_item'
										return p_houve_erro, l_next_field
									end if
								end if
							end if
						end if
					end if
				end if
			end if
		else
			exit for
		end if
	end for

	for p_ind = 1 to arraylength(p_array)
		if p_dados_tela.ies_especie_nf = "nfc" and p_array[p_ind].qtd_declarad_nf is null then
			let p_array[p_ind].qtd_declarad_nf = 0
		end if
		if m_wms_instal = 's' then
			if find4glfunction('wms6612_retorna_indicador_aduaneiro_ar') then
				if m_indicador_aduaneiro is null or m_indicador_aduaneiro = ' ' then
					let m_indicador_aduaneiro = wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec)
				end if
				if p_array[p_ind].cod_item is not null or
					p_array[p_ind].cod_item <> ' ' then
					if not wms6612_verifica_item_generico(p_array[p_ind].cod_item,
						m_indicador_aduaneiro) then
						let l_next_field = 'cod_item'
						return p_houve_erro, l_next_field
					end if
				end if
				if m_tipo_documento = "n" then
					if p_dados_tela.num_aviso_rec is not null and
						p_dados_tela.num_aviso_rec <> 0 and
						p_array[p_ind].cod_item is not null and
						p_array[p_ind].cod_item <> ' ' and
						m_indicador_aduaneiro = 't' then
						if not wms6612_tem_conferencia_alfandegado_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) then
							whenever error continue
							select peso_item
							from t_peso_item
							where aviso_rec = p_dados_tela.num_aviso_rec
							and item      = p_array[p_ind].cod_item
							and sequencia = p_array[p_ind].seq
							and peso_item > 0
							whenever error stop
							if sqlca.sqlcode = 100 then
								call wms6612_incluir_peso_item(p_dados_tela.num_aviso_rec,
								p_array[p_ind].cod_item,
								p_array[p_ind].seq)
								current window is w_sup37601
							end if
						end if
					end if
				end if
			end if
		end if
		if m_contr_pes_rec = 's' then
			whenever error continue
			select empresa
			from sup_ctr_balanca
			where empresa           = p_cod_empresa
			and num_docum         = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and fornecedor        = p_dados_tela.cod_fornecedor
			and seq_nota_fiscal   = p_array[p_ind].seq
			and tip_pesagem       = "1"
			and aviso_recebto     is null
			whenever error stop
			if sqlca.sqlcode = 0 then
				for l_aux = 1 to arraylength(p_array)
					if l_aux = p_ind then
						continue for
					end if
					if p_array[p_ind].cod_item = p_array[l_aux].cod_item then
						whenever error continue
						select empresa
						from sup_ctr_balanca
						where empresa           = p_cod_empresa
						and num_docum         = p_dados_tela.num_nf
						and serie_nota_fiscal = p_dados_tela.ser_nf
						and subserie_nf       = p_dados_tela.ssr_nf
						and fornecedor        = p_dados_tela.cod_fornecedor
						and seq_nota_fiscal   = p_array[l_aux].cod_item
						and tip_pesagem       = "1"
						and aviso_recebto     is null
						whenever error stop
						if sqlca.sqlcode <> 0 then
							error " item informado ja possui sequencia com pesagem "
							let l_next_field = 'cod_item'
							return p_houve_erro, l_next_field
						end if
					end if
				end for
			end if
		end if

		if log_existe_epl("sup3760y_after_field_cod_cla_fisc_nf") then
			call log_setvar("cod_cla_fisc_nf", p_array[p_ind].cod_cla_fisc_nf)
			#epl codigo da classificacao fiscal
			#epl tipo: char(10)

			call log_setvar("next_field", null)
			#epl para fazer next field em um campo
			#epl tipo: char(20)

			call log_setvar("msg_erro", null)
			#epl mensagem de erro
			#epl tipo: char(100)

			if sup3760y_after_field_cod_cla_fisc_nf() then
				let l_next_field = log_getvar('next_field')
				let l_msg_erro   = log_getvar('msg_erro')

				if l_next_field is not null then
					call log0030_mensagem(l_msg_erro,"excl")
					return p_houve_erro, l_next_field
				end if
			end if
		end if

		if p_array[p_ind].qtd_declarad_nf is not null and
			p_array_compl[p_ind].ar_com_pc = "s" then
			let p_qtd_array = p_array[p_ind].qtd_declarad_nf
			let p_val_array = p_array[p_ind].pre_unit_nf
			if p_dados_tela.ies_especie_nf <> "nfd" then
				if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
					let p_soma_reserva2 = null
					call sup386_popup_ordens_reservada(p_cod_empresa,
					p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
					p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
					p_qtd_array, "n" , l_funcao,
					p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
					returning p_soma_reserva2, p_ies_reservou, p_ord_forn
					let p_qtd_array = 0
					let p_val_array = 0
					let int_flag = 0
					call log006_exibe_teclas("01 02 03 07", p_versao)
					current window is w_sup37601
				end if
			end if
			#733238#
			if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf, p_cod_empresa, p_dados_tela.num_aviso_rec) = false then # chamado 739204
				call sup0949_busca_parametro_sup_par_divg_rec("consis_diverg_preco", p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor)
				returning m_consis_diverg_preco, m_parametro_val
				if m_consis_diverg_preco is not null then
					call sup0949_busca_parametro_sup_par_divg_rec("bloq_entr_preco", p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor)
					returning l_bloq_entr_preco, m_parametro_val
					if l_bloq_entr_preco is not null then
						let m_bloq_entr_preco = l_bloq_entr_preco
					end if
				end if

				call sup0949_busca_parametro_sup_par_divg_rec("bloq_div_dat_entrega", p_array[p_ind].cod_item, p_dados_tela.cod_fornecedor)
				returning l_bloq_entr_data, m_parametro_val
				if l_bloq_entr_data is not null then
					let m_bloq_entr_data = l_bloq_entr_data
				end if
			end if

			if (l_funcao = "inclusao" or l_funcao = "inclu.itens" or l_funcao = "modificacao") and ## 545418
				(m_bloq_entr_data = "s" and p_dados_tela.ies_nf_aguard_nfe <> "7" )then
				if not sup0949_verifica_diverg_dat_entrega(p_ind) then
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if
			end if
			##se for nota fiscal de importa��o n�o dever� verificar diverg�ncia de pre�o
			if m_bloq_entr_preco = "s" and p_dados_tela.cod_operacao[1,1] <> "7" and
				m_nfr_import = false and p_array_compl[p_ind].ar_com_pc = "s" {760674} then
				if not sup0949_verifica_diverg_preco_unit(l_funcao, p_ind, p_dados_tela.num_aviso_rec, p_array[p_ind].seq,
					p_array[p_ind].pre_unit_nf, 'sup3760') then
					let l_next_field = 'pre_unit_nf'
					return p_houve_erro, l_next_field
				end if
			end if
		else
			exit for
		end if
	end for

	let p_ind = p_ind_ant
	let l_val_liquido_ant = log_getvar('val_liquido_ant') ### tqaft6 - variavel setada no sup376_insere_array()

	if l_funcao = "modificacao" and
		p_array_compl[p_ind].alterou_val_liquido = false then
		if l_val_liquido_ant <> p_array[p_ind].val_liquido_item then
			error "altera base de calculo do ipi?" attribute (reverse)
			if log004_confirm(21,39) then
				let p_base_ipi[p_ind].val_liquido_item = l_val_liquido_ant
			end if
			let p_array_compl[p_ind].alterou_val_liquido = true
		end if
	end if

	if p_ord_forn = false and
		l_funcao = "inclusao" then
		if (p_pedidos[1,5] = "xxxxx") or
			(p_pedidos is null)        then
			if p_par_sup.ies_entrada_sem_pc = "n" and
				p_ies_entr_sem_ped = false then
				let p_ies_pagamento2 = null
				let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
				if l_cod_empresa_orig is not null then
					let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
				end if
				let p_ies_pagamento2 = p_cond_pgto_cap.ies_pagamento
				if p_ies_pagamento2 = "3" then
				else
					error " nao ha ordens de compras para este fornecedor "
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if
			end if
		end if
	end if

	let p_ind = arr_count()

	for p_ind2 = 1 to p_ind
		if (p_array[p_ind2].cod_item is null or
			p_array[p_ind2].cod_item = " ")  and
			(p_array[p_ind2].den_item is null or
			p_array[p_ind2].den_item = " ")  and
			(p_array[p_ind2].cod_unid_med_nf is null or
			p_array[p_ind2].cod_unid_med_nf = " ")  and
			(p_array[p_ind2].qtd_declarad_nf is null or
			p_array[p_ind2].qtd_declarad_nf = 0  or
			p_array[p_ind2].qtd_declarad_nf = " ")  and
			(p_array[p_ind2].pre_unit_nf     is null or
			p_array[p_ind2].pre_unit_nf     = 0     or
			p_array[p_ind2].pre_unit_nf = " ")      and
			(p_array[p_ind2].val_liquido_item is null or
			p_array[p_ind2].val_liquido_item = 0     or
			p_array[p_ind2].val_liquido_item = " ")  then
			if p_ind2 > 1 then
				initialize p_array[p_ind2].* to null
			end if
		else
			if l_funcao = "modificacao" then
				call sup376_verifica_update_after()

				call sup3760_atualiza_item_de_terc(0, 0," ", " ", p_dados_tela.dat_emis_nf,
				p_dados_tela.dat_entrada_nf,
				p_dados_tela.num_nf, p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
				p_dados_tela.ies_especie_nf,
				p_array[p_ind2].seq, 2)
				returning p_status
			end if

			if l_funcao = "inclusao" or
				l_funcao =  "inclu.itens" then

				if p_array_compl[p_ind2].ar_com_pc = "s" and p_par_sup.ies_modulo_compras = "s" then
					if not sup3760_pedido_ordem_valido(p_array_compl[p_ind2].num_pedido,
						p_array_compl[p_ind2].num_oc) then
						let l_next_field = 'cod_item'
						return p_houve_erro, l_next_field
					end if
				end if

				if (p_dados_tela.ies_especie_nf <> "nfr" and
					p_dados_tela.ies_especie_nf <> "nfd") or
					m_nfr_import then
					if p_array[p_ind2].cod_item  is not null and
						p_array[p_ind2].cod_item <> " " then
						if p_array_compl[p_ind2].ar_com_pc <> "s" or
							p_array_compl[p_ind2].ar_com_pc is null then

							let l_forn_possui_pc = true
							if find4glfunction('supy5_fornecedor_possue_pc_oc') then
								let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
							end if

							if l_forn_possui_pc then
								if p_par_sup.ies_modulo_compras = "s" then
									if p_par_sup.ies_entrada_sem_pc = "n" and
										p_ies_entr_sem_ped = false then
										if p_dados_tela.ies_especie_nf <> "nfc" and
											p_dados_tela.ies_especie_nf <> "con" and
											p_dados_tela.ies_especie_nf <> "nfe" and
											not sup3760_busca_mat_aplicado(p_array[p_ind2].cod_item, p_dados_tela.cod_fornecedor)then
											error "empresa nao permite entrada de n.f. sem pedido de compra"
											let l_next_field = 'cod_item'
											return p_houve_erro, l_next_field
										end if

										if p_dados_tela.ies_especie_nf = "nfc" and
											(p_par_sup_compl.ies_nf_compl_preco = "3" or
											p_par_sup_compl.ies_nf_compl_preco = "4") then
											error "empresa nao permite entrada de nfc sem pedido de compra"
											let l_next_field = 'cod_item'
											return p_houve_erro, l_next_field
										end if

										if p_dados_tela.ies_especie_nf = "nfe"       and
											(p_par_sup_compl.ies_nf_compl_preco = "2" or
											p_par_sup_compl.ies_nf_compl_preco = "4") then
											error "empresa nao permite entrada de nfe sem pedido de compra."
											let l_next_field = 'cod_item'
											return p_houve_erro, l_next_field
										end if
									else
										if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
											if p_array_pedidos[1].num_pedido is null or
												p_array_pedidos[1].num_pedido = " " then
												call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
												let l_next_field = 'cod_item'
												return p_houve_erro, l_next_field
											end if
										end if
									end if
								end if
							end if
						end if
						####calcula totais importacao
						if p_nfe_import = true or p_nfm_import = true then
							let p_array_imp[p_ind2].val_ii =
							(p_array_imp[p_ind2].val_ii_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade

							if p_array_imp[p_ind2].val_ii is null then
								let p_array_imp[p_ind2].val_ii = 0
							end if

							let p_array_imp[p_ind2].val_desp_imp =
							(p_array_imp[p_ind2].val_desp_imp_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade

							if p_array_imp[p_ind2].val_desp_imp is null then
								let p_array_imp[p_ind2].val_desp_imp = 0
							end if

							let p_array_imp[p_ind2].val_ipi =
							(p_array_imp[p_ind2].val_ipi_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade

							if p_array_imp[p_ind2].val_ipi is null then
								let p_array_imp[p_ind2].val_ipi = 0
							end if

							let p_array_imp[p_ind2].val_icms =
							(p_array_imp[p_ind2].val_icms_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade

							if p_array_imp[p_ind2].val_icms is null then
								let p_array_imp[p_ind2].val_icms = 0
							end if

							if p_array_imp[p_ind2].val_da_icms is null then
								let p_array_imp[p_ind2].val_da_icms = 0
							end if
							let l_val_da_icms = p_array_imp[p_ind2].val_da_icms
							let p_array_imp[p_ind2].val_da_icms =
							(p_array_imp[p_ind2].val_da_icms *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade

							call conout('nota001 val_da_icms 3760')
							call conout('nota001 p_ind2 :'||p_ind2)
							call conout('nota001 p_array_imp[p_ind2].val_da_icms :'||p_array_imp[p_ind2].val_da_icms)
							call conout('nota001 p_array[p_ind2].qtd_declarad_nf :'||p_array[p_ind2].qtd_declarad_nf)
							call conout('nota001 p_array_imp[p_ind2].quantidade :'||p_array_imp[p_ind2].quantidade)
							call conout('nota001 p_array_imp[p_ind2].pre_unit_nf :'||p_array[p_ind2].pre_unit_nf)
							call conout('nota001 total1 :'||p_array[p_ind2].pre_unit_nf*p_array[p_ind2].qtd_declarad_nf)

							let l_aux1 = (p_array[p_ind2].pre_unit_nf*p_array[p_ind2].qtd_declarad_nf)+p_array_imp[p_ind2].val_da_icms

							call conout('nota001 total2 :'||l_aux1)
							call conout('nota001 p_array[p_ind2].val_liquido_item :'||p_array[p_ind2].val_liquido_item)

							if (l_aux1 <> p_array[p_ind2].val_liquido_item) and p_array_imp[p_ind2].val_da_icms > 0 then
								let p_array[p_ind2].val_liquido_item = p_array[p_ind2].val_liquido_item + p_array_imp[p_ind2].val_da_icms

								if l_val_da_icms <> p_array_imp[p_ind2].val_da_icms then
									let l_val_da_icms = p_array_imp[p_ind2].val_da_icms
								end if
							end if

							call conout('nota002 p_array[p_ind2].val_liquido_item :'||p_array[p_ind2].val_liquido_item)

							if p_array_imp[p_ind2].val_da_icms is null then
								let p_array_imp[p_ind2].val_da_icms = 0
							end if


							let p_nf_sup.val_ipi_nf = p_nf_sup.val_ipi_nf +
							p_array_imp[p_ind2].val_ipi
							if m_num_processo >= g_proc_ini_os163407 then
								let p_nf_sup.val_despesa_aces = p_nf_sup.val_despesa_aces +
								p_array_imp[p_ind2].val_da_icms
							else
								let p_nf_sup.val_despesa_aces = p_nf_sup.val_despesa_aces +
								p_array_imp[p_ind2].val_ii +
								p_array_imp[p_ind2].val_desp_imp
							end if
							let p_nf_sup.val_tot_icms_nf_d = p_nf_sup.val_tot_icms_nf_d +
							p_array_imp[p_ind2].val_icms

							call sup3762_busca_piscofins_imp() returning l_val_tot_piscofins, l_quantidade
							if l_quantidade is null then
								let l_quantidade = 0
							end if

							if  l_val_tot_piscofins is not null
								and l_val_tot_piscofins <> 0 then
								let l_val_tot_piscofins = (l_val_tot_piscofins *
								p_array[p_ind2].qtd_declarad_nf) /
								(p_array_imp[p_ind2].quantidade - l_quantidade)
							end if

							if g_icms_total_nf = "s" and p_nf_sup.dat_entrada_nf >= g_dat_icms_tot_nf then
								let p_nf_sup.val_tot_nf_d = p_nf_sup.val_tot_nf_d +
								(p_array[p_ind2].val_liquido_item -
								l_val_da_icms +
								p_array_imp[p_ind2].val_da_icms) +
								p_array_imp[p_ind2].val_ipi +
								p_array_imp[p_ind2].val_icms +
								l_val_tot_piscofins
							else
								let p_nf_sup.val_tot_nf_d = p_nf_sup.val_tot_nf_d +
								(p_array[p_ind2].val_liquido_item -
								l_val_da_icms +
								p_array_imp[p_ind2].val_da_icms) +
								p_array_imp[p_ind2].val_ipi +
								l_val_tot_piscofins
							end if

							call conout('nota003 p_array[p_ind2].val_liquido_item :'||p_array[p_ind2].val_liquido_item)
							call conout('nota003 l_val_da_icms :'||l_val_da_icms)
							call conout('nota003 p_array_imp[p_ind2].val_da_icms :'||p_array_imp[p_ind2].val_da_icms)
							call conout('nota003 p_array_imp[p_ind2].val_ipi :'||p_array_imp[p_ind2].val_ipi)
							call conout('nota003 l_val_tot_piscofins :'||l_val_tot_piscofins)
							call conout('nota003 p_nf_sup.val_tot_nf_d :'||p_nf_sup.val_tot_nf_d)

							let p_dados_tela_f.val_ipi_nf        = p_nf_sup.val_ipi_nf
							let p_dados_tela_f.val_tot_icms_nf_d = p_nf_sup.val_tot_icms_nf_d
							let p_dados_tela_f.val_tot_nf_d      = p_nf_sup.val_tot_nf_d
						end if
					end if
				end if
			end if
			if p_array[p_ind2].cod_item is null or
				p_array[p_ind2].cod_item = " "   then
				if (p_dados_tela.ies_especie_nf <> "nfd" and
					p_dados_tela.ies_especie_nf <> "nfr" and
					p_dados_tela.ies_especie_nf <> "nfc") or
					((p_dados_tela.ies_especie_nf = "nfd" or
					p_dados_tela.ies_especie_nf  =  "nfr") and
					p_ies_item_nfd_nfr          = "s")  then
					error "informe codigo do item"
					let l_next_field = 'cod_item'
					return p_houve_erro, l_next_field
				else
					let p_array[p_ind2].cod_item = " "
				end if
			else
				if m_ies_cit_item = "s" then
					if sup3760_testa_cit_item(p_array[p_ind2].cod_item) then
						error "produto citricola, verificar tabela cit_item "
						let l_next_field = 'cod_item'
						return p_houve_erro, l_next_field
					end if
				end if
			end if
			if p_array[p_ind2].den_item is null     and
				p_dados_tela.ies_especie_nf <> "nfd" and
				p_dados_tela.ies_especie_nf <> "nfr" then
				error "informe denominacao do item"
				let l_next_field = 'den_item'
				return p_houve_erro, l_next_field
			end if
			if p_array[p_ind2].cod_unid_med_nf is null and
				p_dados_tela.ies_especie_nf <> "nfd" and
				p_dados_tela.ies_especie_nf <> "nfr" and
				p_dados_tela.ies_especie_nf <> "nfc" then
				error "informe unidade de medida"
				let l_next_field = 'cod_unid_med_nf'
				return p_houve_erro, l_next_field
			end if

			if m_tem_valid_fim then
				### tabela cod_fiscal_sup ja foi convertida.
				initialize l_status, l_dat_fim_valid to null
				call sup0686_retorna_dat_fim_valid(p_dados_tela.cod_operacao,
				p_dados_tela.cod_fiscal_compl)
				returning l_status,
				l_dat_fim_valid
				if l_dat_fim_valid is null then
					if p_dados_tela.cod_operacao[3,5] = "101" and
						p_ies_contrib_ipi = "s" and
						p_array[p_ind2].cod_item is not null and
						p_array[p_ind2].cod_item <> " " then
						if p_array[p_ind2].cod_cla_fisc_nf is null or
							p_array[p_ind2].cod_cla_fisc_nf = " " or
							p_array[p_ind2].cod_cla_fisc_nf = 0 then
							error "informe classificacao fiscal"
							let l_next_field = 'cod_cla_fisc_nf'
							return p_houve_erro, l_next_field
						end if
					end if
				else
					if p_dados_tela.cod_operacao[3,4] = "11" and
						p_ies_contrib_ipi = "s" and
						p_array[p_ind2].cod_item is not null and
						p_array[p_ind2].cod_item <> " " then
						if p_array[p_ind2].cod_cla_fisc_nf is null or
							p_array[p_ind2].cod_cla_fisc_nf = " " or
							p_array[p_ind2].cod_cla_fisc_nf = 0 then
							error "informe classificacao fiscal"
							let l_next_field = 'cod_cla_fisc_nf'
							return p_houve_erro, l_next_field
						end if
					end if
				end if
			else
				if p_dados_tela.cod_operacao[3,4] = "11" and
					p_ies_contrib_ipi = "s" and
					p_array[p_ind2].cod_item is not null and
					p_array[p_ind2].cod_item <> " " then
					if p_array[p_ind2].cod_cla_fisc_nf is null or
						p_array[p_ind2].cod_cla_fisc_nf = " " or
						p_array[p_ind2].cod_cla_fisc_nf = 0 then
						error "informe classificacao fiscal"
						let l_next_field = 'cod_cla_fisc_nf'
						return p_houve_erro, l_next_field
					end if
				end if
			end if

			if p_array[p_ind2].qtd_declarad_nf clipped is null then
				error "informe quantidade declarada"
				let l_next_field = 'qtd_declarad_nf'
				return p_houve_erro, l_next_field
			end if

			if p_array[p_ind2].pre_unit_nf clipped is null then
				error "informe preco unitario"
				let l_next_field = 'pre_unit_nf'
				return p_houve_erro, l_next_field
			end if

			if p_array[p_ind2].val_liquido_item clipped is null then
				error "informe valor liquido do item"
				let l_next_field = 'val_liquido_item'
				return p_houve_erro, l_next_field
			end if
		end if
	end for

	let p_ind = arr_curr()
	let p_somatorio_dif = 0
	#tpchol - utilizando seta pra cima e pra baixo, n�o atualizava o p_soma_reserva2 de acordo com a
	#quantidade real do item onde o cursor est� parado
	if p_array[p_ind].qtd_declarad_nf is not null and
		p_array_compl[p_ind].ar_com_pc = "s" then
		let p_qtd_array = p_array[p_ind].qtd_declarad_nf
		let p_val_array = p_array[p_ind].pre_unit_nf
		if p_dados_tela.ies_especie_nf <> "nfd" then
			if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
				let p_soma_reserva2 = null
				call sup386_popup_ordens_reservada(p_cod_empresa,
				p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
				p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
				p_qtd_array, "n" , l_funcao,
				p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
				returning p_soma_reserva2, p_ies_reservou, p_ord_forn
				let p_qtd_array = 0
				let p_val_array = 0
				let int_flag = 0
				call log006_exibe_teclas("01 02 03 07", p_versao)
				current window is w_sup37601
			end if
		end if
	end if

	for p_ind5 = 1 to 50
		if p_array_it_prg_entr[p_ind, p_ind5].qtd_solic is null or
			p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = " "   or
			p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = 0 then
			exit for
		end if
		if p_array_compl[p_ind].num_oc <> 0        and
			p_array_compl[p_ind].num_oc is not null then
			initialize p_ordem_sup.* to null
			call sup3762_busca_ordem_sup(p_cod_empresa,
			p_array_compl[p_ind].num_oc)

			let p_fat_conver_unid = p_ordem_sup.fat_conver_unid
			if sqlca.sqlcode <> 0 then
				let p_fat_conver_unid = 1
			end if
		end if
		if p_fat_conver_unid = 0 then
			let p_fat_conver_unid = 1
		end if
		let p_dif_aceite = 0
		if p_array_compl[p_ind].pct_aceite_dif = 0
			and p_dados_tela.ies_nf_aguard_nfe <> "5"
			then let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
			* p_par_sup.pct_maximo_div_q) / 100
		else let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
			* p_array_compl[p_ind].pct_aceite_dif) / 100
		end if
		let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
	end for
	let p_array_compl[p_ind].tot_reserv_dif = 0
	let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_soma_reserva2
	if p_array[p_ind].qtd_declarad_nf > (p_soma_reserva2 + p_somatorio_dif) and p_dados_tela.ies_nf_aguard_nfe <> "d" then
		if l_funcao <> "modificacao" or
			l_funcao = "modificacao" and p_msg_qtd = "s" then
			if p_array_compl[p_ind].num_pedido is not null and
				p_array_compl[p_ind].num_pedido <> 0        and
				p_array_compl[p_ind].ies_liquida_oc <> "3"  then
				if p_dados_tela.ies_nf_aguard_nfe = "5" then
					error "entrada sem saldo suficiente; contatar comprador urgente "
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if

				if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
					call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
					call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

					call sup3760y_before_process_ies_entrada_maior()
					let p_ies_entrada_maior = log_getvar('ies_entrada_maior')

				end if
				if p_ies_entrada_maior = "n"  then
					call log0030_mensagem("entrada sem saldo suficiente; contatar comprador urgente ","exclamation")
				else
					call log0030_mensagem("entrada sem saldo suficiente.","exclamation")
				end if
				if p_ies_entrada_maior = "s"  then
					if log004_confirm(14,42) then
					else
						let l_next_field = 'qtd_declarad_nf'
						return p_houve_erro, l_next_field
					end if
				else
					if p_ies_entrada_maior = "c" then
						if p_aguard_5 = true then
							let l_next_field = 'qtd_declarad_nf'
							return p_houve_erro, l_next_field
						else
							if log004_confirm(14,42) then
							else
								let l_next_field = 'qtd_declarad_nf'
								return p_houve_erro, l_next_field
							end if
						end if
					else
						let l_next_field = 'qtd_declarad_nf'
						return p_houve_erro, l_next_field
					end if
				end if
			end if
		end if
	end if

return p_houve_erro, l_next_field

end function

### tqaft6 - wms - fun��o chamada no after input de array de itens e chamada em todos os pontos em que houver exit input no array de itens
#---------------------------------------------#
function sup3760_after_input_item_wms(l_funcao)
#---------------------------------------------#
	define l_funcao             char(30),
	l_next_field         char(20),
	l_entra_grades       smallint,
	l_retorno_epl        smallint,
	l_status             smallint,
	p_ind_ant            smallint,
	l_grade              smallint,
	l_aux                smallint,
	l_msg_erro           char(100),
	l_bloq_entr_preco    char(01),
	l_bloq_entr_data     char(01),
	l_forn_possui_pc     smallint,
	l_val_da_icms        decimal(15,2),
	l_val_tot_piscofins  decimal(17,6),
	l_dat_fim_valid      like cod_fiscal_sup.dat_fim_valid,
	l_val_liquido_ant    like aviso_rec.val_liquido_item,
	l_wms_item_aux       char(15),
	l_item_wms           smallint,
	l_quantidade         like aviso_rec_proc_imp.quantidade,
	l_cod_empresa_orig   char(02)

	let l_entra_grades   = true
	if p_dados_tela.ies_especie_nf = "nfd" then
		let l_entra_grades = false
	end if
	# transfere todos os dados da vari�vel p_array_wms para p_array
	for l_aux = 1 to arraylength(p_array_wms)
		let l_wms_item_aux          = p_array[l_aux].cod_item

		let p_array[l_aux].seq              = p_array_wms[l_aux].seq
		let p_array[l_aux].cod_item         = p_array_wms[l_aux].cod_item
		let p_array[l_aux].qtd_declarad_nf  = p_array_wms[l_aux].qtd_declarad_nf
		let p_array[l_aux].cod_unid_med_nf  = p_array_wms[l_aux].cod_unid_med_nf
		let p_array[l_aux].pre_unit_nf      = p_array_wms[l_aux].pre_unit_nf
		let p_array[l_aux].val_liquido_item = p_array_wms[l_aux].val_liquido_item
		let p_array[l_aux].den_item         = p_array_wms[l_aux].den_item
		let p_array[l_aux].cod_cla_fisc_nf  = p_array_wms[l_aux].cod_cla_fisc_nf
		let p_array[l_aux].pct_ipi          = p_array_wms[l_aux].pct_ipi

		if l_wms_item_aux <> " " and l_wms_item_aux is not null then
			let p_array[l_aux].cod_item = l_wms_item_aux
		end if
	end for

	let p_ind_ant = p_ind
	for p_ind = 1 to arraylength(p_array)
		let m_informou_grade = false
		if p_array[p_ind].cod_item is null or p_array[p_ind].cod_item = " " then
			let l_entra_grades = false
			exit for
		end if

		if m_wms_instal = 's' then
			if find4glfunction('wms6612_retorna_indicador_aduaneiro_ar') then
				if m_indicador_aduaneiro is null or m_indicador_aduaneiro = ' ' then
					let m_indicador_aduaneiro = wms6612_retorna_indicador_aduaneiro_ar(p_cod_empresa, p_dados_tela.num_aviso_rec)
				end if
				if p_array[p_ind].cod_item is not null or
					p_array[p_ind].cod_item <> ' ' then
					if not wms6612_verifica_item_generico(p_array[p_ind].cod_item,
						m_indicador_aduaneiro) then
						let l_next_field = 'cod_item'
						return p_houve_erro, l_next_field
					end if
				end if
				if m_tipo_documento = "n" then
					if p_dados_tela.num_aviso_rec is not null and
						p_dados_tela.num_aviso_rec <> 0 and
						p_array[p_ind].cod_item is not null and
						p_array[p_ind].cod_item <> ' ' and
						m_indicador_aduaneiro = 't' then
						if not wms6612_tem_conferencia_alfandegado_ar(p_cod_empresa, p_dados_tela.num_aviso_rec) then
							whenever error continue
							select peso_item
							from t_peso_item
							where aviso_rec = p_dados_tela.num_aviso_rec
							and item      = p_array[p_ind].cod_item
							and sequencia = p_array[p_ind].seq
							and peso_item > 0
							whenever error stop
							if sqlca.sqlcode = 100 then
								call wms6612_incluir_peso_item(p_dados_tela.num_aviso_rec,
								p_array[p_ind].cod_item,
								p_array[p_ind].seq)
								current window is w_sup37601
							end if
						end if
					end if
				end if
			end if
		end if
		if sup1481_nfc_compl_imposto(p_dados_tela.ies_especie_nf,
			p_cod_empresa,
			p_dados_tela.num_aviso_rec) = false and
			sup1481_nfc_compl_valor(p_dados_tela.ies_especie_nf,
			p_cod_empresa,
			p_dados_tela.num_aviso_rec) = false then

			if m_mov_qtd_ser = "s" and p_array[p_ind].qtd_declarad_nf > 1 then
				call sup0063_verifica_controles(14,
				p_array[p_ind].cod_item,
				"inclusao",
				"sup3760")
				returning m_controles

				if m_controles <> " " then
					call sup0063_grava_temp_controles(m_controles)
					returning p_status

					if sup0063_existe_controle("11") then
						call log0030_mensagem("movimenta��o de quantidade deve ser �nica para item com controle de s�rie.","exclamation")

						let l_entra_grades = false
					end if
				end if
			end if

			#chamado tpjeo6 verificar o log0087 "perm_ent_nf_item_wms_s_dimens" quando for 's', verificar se a empresa utiliza wms e se o item controla wms, caso sim nao informa dimensional
			if m_perm_ent_nf_item_wms_s_dimens = 's' then
				if g_ies_wms_instalado = 's' then
					call wms0004_item_sob_controle_wms(p_cod_empresa, p_array[p_ind].cod_item) returning  l_status,l_item_wms
					if l_item_wms then
						let l_entra_grades = false
					end if
				end if
			end if

			if l_entra_grades then
				let l_retorno_epl = false

				if log_existe_epl("sup3760y_before_informacao_grade_item") then
					call log_setvar("retorno_epl", l_retorno_epl)
					call log_setvar("nfe_import", p_nfe_import)
					call log_setvar("nfm_import", p_nfm_import)
					call log_setvar("ind_aux", p_ind)

					if sup3760y_before_informacao_grade_item() then
						let m_informou_grade = true
					end if

					let l_retorno_epl = log_getvar('retorno_epl')
				end if

				if l_retorno_epl = false then
					call sup3766_informacao_grade_item(p_cod_empresa,
					p_dados_tela.num_aviso_rec,
					p_array[p_ind].seq,
					p_array[p_ind].cod_item,
					p_array[p_ind].qtd_declarad_nf,
					p_array_compl[p_ind].ar_com_pc,
					1,
					p_array_compl[p_ind].num_oc)
					returning l_status, l_grade
					if l_status = false then
						let p_houve_erro = true
						return p_houve_erro, l_next_field
					else
						if l_grade = true then
							let m_informou_grade = true
						else
							if m_informa_controles_sup3760 = "s" then #os544582
								call sup0063_verifica_controles(14, p_array[p_ind].cod_item,"inclusao","sup3760")
								returning m_controles

								if m_controles <> " " then
									if log0040_confirm(12,15,"obrigat�rio informar o controle de grade/dimensional. informar controles?") then
										call sup3766_informacao_grade_item(p_cod_empresa,
										p_dados_tela.num_aviso_rec,
										p_array[p_ind].seq,
										p_array[p_ind].cod_item,
										p_array[p_ind].qtd_declarad_nf,
										p_array_compl[p_ind].ar_com_pc,
										0,
										p_array_compl[p_ind].num_oc)
										returning l_status, l_grade

										if l_status = false then
											return p_houve_erro, l_next_field
										else
											if l_grade = true then
												let m_informou_grade = true
											end if
										end if
									else
										let l_next_field = 'cod_item'
										return p_houve_erro, l_next_field
									end if
								end if
							end if
						end if
					end if
				end if
			end if
		else
			exit for
		end if
	end for

	for p_ind = 1 to arraylength(p_array)
		if p_dados_tela.ies_especie_nf = "nfc" and p_array[p_ind].qtd_declarad_nf is null then
			let p_array[p_ind].qtd_declarad_nf = 0
		end if

		if m_contr_pes_rec = 's' then   #eduardo o.s. 290538 19/11/03
			whenever error continue
			select empresa
			from sup_ctr_balanca
			where empresa           = p_cod_empresa
			and num_docum         = p_dados_tela.num_nf
			and serie_nota_fiscal = p_dados_tela.ser_nf
			and subserie_nf       = p_dados_tela.ssr_nf
			and fornecedor        = p_dados_tela.cod_fornecedor
			and seq_nota_fiscal   = p_array[p_ind].seq
			and tip_pesagem       = "1"
			and aviso_recebto     is null
			whenever error stop
			if sqlca.sqlcode = 0 then
				for l_aux = 1 to arraylength(p_array)
					if l_aux = p_ind then
						continue for
					end if
					if p_array[p_ind].cod_item = p_array[l_aux].cod_item then
						whenever error continue
						select empresa
						from sup_ctr_balanca
						where empresa           = p_cod_empresa
						and num_docum         = p_dados_tela.num_nf
						and serie_nota_fiscal = p_dados_tela.ser_nf
						and subserie_nf       = p_dados_tela.ssr_nf
						and fornecedor        = p_dados_tela.cod_fornecedor
						and seq_nota_fiscal   = p_array[l_aux].cod_item
						and tip_pesagem       = "1"
						and aviso_recebto     is null
						whenever error stop
						if sqlca.sqlcode <> 0 then
							error " item informado ja possui sequencia com pesagem "
							let l_next_field = 'cod_item'
							return p_houve_erro, l_next_field
						end if
					end if
				end for
			end if
		end if

		if p_array[p_ind].qtd_declarad_nf is not null and
			p_array_compl[p_ind].ar_com_pc = "s" then
			let p_qtd_array = p_array[p_ind].qtd_declarad_nf
			let p_val_array = p_array[p_ind].pre_unit_nf
			if p_dados_tela.ies_especie_nf <> "nfd" then
				if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
					let p_soma_reserva2 = null
					call sup386_popup_ordens_reservada(p_cod_empresa,
					p_array[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
					p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
					p_qtd_array, "n" , l_funcao,
					p_dados_tela.num_aviso_rec, p_array[p_ind].seq, p_ind)
					returning p_soma_reserva2, p_ies_reservou, p_ord_forn
					let p_qtd_array = 0
					let p_val_array = 0
					let int_flag = 0
					call log006_exibe_teclas("01 02 03 07", p_versao)
					current window is w_sup37601
				end if
			end if
			if m_bloq_entr_data = "s" and p_dados_tela.ies_nf_aguard_nfe <> "7" then
				if not sup0949_verifica_diverg_dat_entrega(p_ind) then
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if
			end if
			##se for nota fiscal de importa��o n�o dever� verificar diverg�ncia de pre�o
			if m_bloq_entr_preco = "s" and p_dados_tela.cod_operacao[1,1] <> "7" and
				m_nfr_import = false and p_array_compl[p_ind].ar_com_pc = "s" {760674} then
				if not sup0949_verifica_diverg_preco_unit(l_funcao, p_ind, p_dados_tela.num_aviso_rec, p_array[p_ind].seq,
					p_array[p_ind].pre_unit_nf, 'sup3760') then
					let l_next_field = 'pre_unit_nf'
					return p_houve_erro, l_next_field
				end if
			end if
		else
			exit for
		end if
	end for

	let p_ind = p_ind_ant
	let l_val_liquido_ant = log_getvar('val_liquido_ant') ### tqaft6 - variavel setada no sup376_insere_array()

	if l_funcao = "modificacao" and p_array_compl[p_ind].alterou_val_liquido = false then
		if l_val_liquido_ant <> p_array[p_ind].val_liquido_item then
			error "altera base de calculo do ipi?" attribute (reverse)
			if log004_confirm(21,39) then
				let p_base_ipi[p_ind].val_liquido_item = l_val_liquido_ant
			end if
			let p_array_compl[p_ind].alterou_val_liquido = true
		end if
	end if

	if p_ord_forn = false and l_funcao = "inclusao" then
		if (p_pedidos[1,5] = "xxxxx") or (p_pedidos is null) then
			if p_par_sup.ies_entrada_sem_pc = "n" and
				p_ies_entr_sem_ped = false then
				let p_ies_pagamento2 = null
				let l_cod_empresa_orig = sup376_busca_cond_pgto_cap(p_dados_tela.cnd_pgto_nf)
				if l_cod_empresa_orig is not null then
					let p_aviso_rec_compl.cod_empresa_orig = l_cod_empresa_orig
				end if
				let p_ies_pagamento2 = p_cond_pgto_cap.ies_pagamento
				if p_ies_pagamento2 = "3" then
				else
					error " nao ha ordens de compras para este fornecedor "
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if
			end if
		end if
	end if

	let p_ind = arr_count()

	for p_ind2 = 1 to p_ind
		if (p_array[p_ind2].cod_item is null or
			p_array[p_ind2].cod_item = " ")  and
			(p_array[p_ind2].den_item is null or
			p_array[p_ind2].den_item = " ")  and
			(p_array[p_ind2].cod_unid_med_nf is null or
			p_array[p_ind2].cod_unid_med_nf = " ")  and
			(p_array[p_ind2].qtd_declarad_nf is null or
			p_array[p_ind2].qtd_declarad_nf = 0  or
			p_array[p_ind2].qtd_declarad_nf = " ")  and
			(p_array[p_ind2].pre_unit_nf     is null or
			p_array[p_ind2].pre_unit_nf     = 0     or
			p_array[p_ind2].pre_unit_nf = " ")      and
			(p_array[p_ind2].val_liquido_item is null or
			p_array[p_ind2].val_liquido_item = 0     or
			p_array[p_ind2].val_liquido_item = " ")  then
			if p_ind2 > 1 then
				initialize p_array[p_ind2].* to null
			end if
		else
			if l_funcao = "modificacao" then
				call sup376_verifica_update_after()

				call sup3760_atualiza_item_de_terc(0, 0," ", " ", p_dados_tela.dat_emis_nf,
				p_dados_tela.dat_entrada_nf,
				p_dados_tela.num_nf, p_dados_tela.ser_nf,
				p_dados_tela.ssr_nf, p_dados_tela.cod_fornecedor,
				p_dados_tela.ies_especie_nf,
				p_array[p_ind2].seq, 2)
				returning p_status
			end if

			if l_funcao = "inclusao" or l_funcao =  "inclu.itens" then

				if p_array_compl[p_ind2].ar_com_pc = "s" and p_par_sup.ies_modulo_compras = "s" then
					if not sup3760_pedido_ordem_valido(p_array_compl[p_ind2].num_pedido,
						p_array_compl[p_ind2].num_oc) then
						let l_next_field = 'cod_item'
						return p_houve_erro, l_next_field
					end if
				end if

				if (p_dados_tela.ies_especie_nf <> "nfr" and p_dados_tela.ies_especie_nf <> "nfd") or m_nfr_import then
					if p_array[p_ind2].cod_item  is not null and p_array[p_ind2].cod_item <> " " then
						if p_array_compl[p_ind2].ar_com_pc <> "s" or
							p_array_compl[p_ind2].ar_com_pc is null then

							let l_forn_possui_pc = true
							if find4glfunction('supy5_fornecedor_possue_pc_oc') then
								let l_forn_possui_pc = supy5_fornecedor_possue_pc_oc(p_cod_empresa, p_dados_tela.cod_fornecedor)
							end if

							if l_forn_possui_pc then
								if p_par_sup.ies_modulo_compras = "s" then
									if p_par_sup.ies_entrada_sem_pc = "n" and p_ies_entr_sem_ped = false then
										if p_dados_tela.ies_especie_nf <> "nfc" and
											p_dados_tela.ies_especie_nf <> "con" and
											p_dados_tela.ies_especie_nf <> "nfe" and
											not sup3760_busca_mat_aplicado(p_array[p_ind2].cod_item, p_dados_tela.cod_fornecedor)then
											error "empresa nao permite entrada de n.f. sem pedido de compra"
											let l_next_field = 'cod_item'
											return p_houve_erro, l_next_field
										end if

										if p_dados_tela.ies_especie_nf = "nfc" and
											(p_par_sup_compl.ies_nf_compl_preco = "3" or p_par_sup_compl.ies_nf_compl_preco = "4") then
											error "empresa nao permite entrada de nfc sem pedido de compra"
											let l_next_field = 'cod_item'
											return p_houve_erro, l_next_field
										end if

										if p_dados_tela.ies_especie_nf = "nfe"       and
											(p_par_sup_compl.ies_nf_compl_preco = "2" or
											p_par_sup_compl.ies_nf_compl_preco = "4") then
											error "empresa nao permite entrada de nfe sem pedido de compra."
											let l_next_field = 'cod_item'
											return p_houve_erro, l_next_field
										end if
									else
										if p_dados_tela.ies_especie_nf = "nfm" and m_controla_gao = "s" and m_controla_sup = "s" then
											if p_array_pedidos[1].num_pedido is null or p_array_pedidos[1].num_pedido = " " then
												call log0030_mensagem(" fun��o n�o permitida, nfm com controle de gao exige pedido de compra","exclamation")
												let l_next_field = 'cod_item'
												return p_houve_erro, l_next_field
											end if
										end if
									end if
								end if
							end if
						end if
						####calcula totais importacao
						if p_nfe_import = true or p_nfm_import = true then
							let p_array_imp[p_ind2].val_ii =
							(p_array_imp[p_ind2].val_ii_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade
							let p_array_imp[p_ind2].val_desp_imp =
							(p_array_imp[p_ind2].val_desp_imp_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade
							let p_array_imp[p_ind2].val_ipi =
							(p_array_imp[p_ind2].val_ipi_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade
							let p_array_imp[p_ind2].val_icms =
							(p_array_imp[p_ind2].val_icms_tot *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade
							let p_array_imp[p_ind2].val_da_icms =
							(p_array_imp[p_ind2].val_da_icms *
							p_array[p_ind2].qtd_declarad_nf) /
							p_array_imp[p_ind2].quantidade

							let p_nf_sup.val_ipi_nf = p_nf_sup.val_ipi_nf +
							p_array_imp[p_ind2].val_ipi
							if m_num_processo >= g_proc_ini_os163407 then
								let p_nf_sup.val_despesa_aces = p_nf_sup.val_despesa_aces +
								p_array_imp[p_ind2].val_da_icms
							else
								let p_nf_sup.val_despesa_aces = p_nf_sup.val_despesa_aces +
								p_array_imp[p_ind2].val_ii +
								p_array_imp[p_ind2].val_desp_imp
							end if
							let p_nf_sup.val_tot_icms_nf_d = p_nf_sup.val_tot_icms_nf_d +
							p_array_imp[p_ind2].val_icms

							call sup3762_busca_piscofins_imp() returning l_val_tot_piscofins, l_quantidade
							if l_quantidade is null then
								let l_quantidade = 0
							end if

							if  l_val_tot_piscofins is not null
								and l_val_tot_piscofins <> 0 then
								let l_val_tot_piscofins = (l_val_tot_piscofins *
								p_array[p_ind2].qtd_declarad_nf) /
								(p_array_imp[p_ind2].quantidade - l_quantidade)
							end if

							if g_icms_total_nf = "s" and p_nf_sup.dat_entrada_nf >= g_dat_icms_tot_nf then
								let p_nf_sup.val_tot_nf_d = p_nf_sup.val_tot_nf_d +
								p_array[p_ind2].val_liquido_item +
								p_array_imp[p_ind2].val_ipi +
								p_array_imp[p_ind2].val_icms +
								l_val_tot_piscofins
							else
								let p_nf_sup.val_tot_nf_d = p_nf_sup.val_tot_nf_d +
								p_array[p_ind2].val_liquido_item +
								p_array_imp[p_ind2].val_ipi +
								l_val_tot_piscofins
							end if
							let p_dados_tela_f.val_ipi_nf        = p_nf_sup.val_ipi_nf
							let p_dados_tela_f.val_tot_icms_nf_d = p_nf_sup.val_tot_icms_nf_d
							let p_dados_tela_f.val_tot_nf_d      = p_nf_sup.val_tot_nf_d
						end if
					end if
				end if
			end if
			if p_array[p_ind2].cod_item is null or
				p_array[p_ind2].cod_item = " "   then
				if (p_dados_tela.ies_especie_nf <> "nfd" and
					p_dados_tela.ies_especie_nf <> "nfr" and
					p_dados_tela.ies_especie_nf <> "nfc") or
					((p_dados_tela.ies_especie_nf = "nfd" or
					p_dados_tela.ies_especie_nf  =  "nfr") and
					p_ies_item_nfd_nfr          = "s")  then
					error "informe codigo do item"
					let l_next_field = 'cod_item'
					return p_houve_erro, l_next_field
				else
					let p_array[p_ind2].cod_item = " "
				end if
			else
				if m_ies_cit_item = "s" then
					if sup3760_testa_cit_item(p_array[p_ind2].cod_item) then
						error "produto citricola, verificar tabela cit_item "
						let l_next_field = 'cod_item'
						return p_houve_erro, l_next_field
					end if
				end if
			end if

			if p_array[p_ind2].den_item is null     and
				p_dados_tela.ies_especie_nf <> "nfd" and
				p_dados_tela.ies_especie_nf <> "nfr" then
				error "informe denominacao do item"
				let l_next_field = 'den_item'
				return p_houve_erro, l_next_field
			end if
			if p_array[p_ind2].cod_unid_med_nf is null and
				p_dados_tela.ies_especie_nf <> "nfd" and
				p_dados_tela.ies_especie_nf <> "nfr" and
				p_dados_tela.ies_especie_nf <> "nfc" then
				error "informe unidade de medida"
				let l_next_field = 'cod_unid_med_nf'
				return p_houve_erro, l_next_field
			end if

			if m_tem_valid_fim then
				### tabela cod_fiscal_sup ja foi convertida.
				initialize l_status, l_dat_fim_valid to null
				call sup0686_retorna_dat_fim_valid(p_dados_tela.cod_operacao,p_dados_tela.cod_fiscal_compl)
				returning l_status,l_dat_fim_valid
				if l_dat_fim_valid is null then
					if p_dados_tela.cod_operacao[3,5] = "101" and
						p_ies_contrib_ipi = "s" and
						p_array[p_ind2].cod_item is not null and
						p_array[p_ind2].cod_item <> " " then
						if p_array[p_ind2].cod_cla_fisc_nf is null or
							p_array[p_ind2].cod_cla_fisc_nf = " " or
							p_array[p_ind2].cod_cla_fisc_nf = 0 then
							error "informe classificacao fiscal"
							let l_next_field = 'cod_cla_fisc_nf'
							return p_houve_erro, l_next_field
						end if
					end if
				else
					if p_dados_tela.cod_operacao[3,4] = "11" and
						p_ies_contrib_ipi = "s" and
						p_array[p_ind2].cod_item is not null and
						p_array[p_ind2].cod_item <> " " then
						if p_array[p_ind2].cod_cla_fisc_nf is null or
							p_array[p_ind2].cod_cla_fisc_nf = " " or
							p_array[p_ind2].cod_cla_fisc_nf = 0 then
							error "informe classificacao fiscal"
							let l_next_field = 'cod_cla_fisc_nf'
							return p_houve_erro, l_next_field
						end if
					end if
				end if
			else
				if p_dados_tela.cod_operacao[3,4] = "11" and
					p_ies_contrib_ipi = "s" and
					p_array[p_ind2].cod_item is not null and
					p_array[p_ind2].cod_item <> " " then
					if p_array[p_ind2].cod_cla_fisc_nf is null or
						p_array[p_ind2].cod_cla_fisc_nf = " " or
						p_array[p_ind2].cod_cla_fisc_nf = 0 then
						error "informe classificacao fiscal"
						let l_next_field = 'cod_cla_fisc_nf'
						return p_houve_erro, l_next_field
					end if
				end if
			end if
			###nota complementar quantidade nula assume quantidade zero.
			if p_array[p_ind2].qtd_declarad_nf clipped is null then
				if p_dados_tela.ies_especie_nf = "nfc" then
					let p_array[p_ind2].qtd_declarad_nf = 0
				else
					error "informe quantidade declarada"
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if
			end if

			if p_array[p_ind2].pre_unit_nf clipped is null then
				error "informe preco unitario"
				let l_next_field = 'pre_unit_nf'
				return p_houve_erro, l_next_field
			end if

			if p_array[p_ind2].val_liquido_item clipped is null then
				error "informe valor liquido do item"
				let l_next_field = 'val_liquido_item'
				return p_houve_erro, l_next_field
			end if
		end if
	end for

	let p_ind = arr_curr()
	let p_somatorio_dif = 0

	#tpchol - utilizando seta pra cima e pra baixo, n�o atualizava o p_soma_reserva2 de acordo com a
	#quantidade real do item onde o cursor est� parado
	if p_array_wms[p_ind].qtd_declarad_nf is not null and
		p_array_compl[p_ind].ar_com_pc = "s" then
		let p_qtd_array = p_array_wms[p_ind].qtd_declarad_nf
		let p_val_array = p_array_wms[p_ind].pre_unit_nf
		if p_dados_tela.ies_especie_nf <> "nfd" then
			if sup376_verifica_controla_valor(p_array_compl[p_ind].num_oc) = false then
				let p_soma_reserva2 = null
				call sup386_popup_ordens_reservada(p_cod_empresa,
				p_array_wms[p_ind].cod_item, p_array_compl[p_ind].num_pedido,
				p_array_compl[p_ind].num_oc, p_array_compl[p_ind].num_prog_entrega,
				p_qtd_array, "n" , l_funcao,
				p_dados_tela.num_aviso_rec, p_array_wms[p_ind].seq, p_ind)
				returning p_soma_reserva2, p_ies_reservou, p_ord_forn
				let p_qtd_array = 0
				let p_val_array = 0
				let int_flag = 0
				call log006_exibe_teclas("01 02 03 07", p_versao)
				current window is w_sup37601
			end if
		end if
	end if

	for p_ind5 = 1 to 50
		if p_array_it_prg_entr[p_ind, p_ind5].qtd_solic is null or
			p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = " "   or
			p_array_it_prg_entr[p_ind, p_ind5].qtd_solic = 0 then
			exit for
		end if
		if p_array_compl[p_ind].num_oc <> 0        and
			p_array_compl[p_ind].num_oc is not null then
			initialize p_ordem_sup.* to null
			call sup3762_busca_ordem_sup(p_cod_empresa,
			p_array_compl[p_ind].num_oc)

			let p_fat_conver_unid = p_ordem_sup.fat_conver_unid
			if sqlca.sqlcode <> 0 then
				let p_fat_conver_unid = 1
			end if
		end if
		if p_fat_conver_unid = 0 then
			let p_fat_conver_unid = 1
		end if
		let p_dif_aceite = 0
		if p_array_compl[p_ind].pct_aceite_dif = 0
			and p_dados_tela.ies_nf_aguard_nfe <> "5"
			then let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
			* p_par_sup.pct_maximo_div_q) / 100
		else let p_dif_aceite = (p_array_it_prg_entr[p_ind, p_ind5].qtd_solic
			* p_array_compl[p_ind].pct_aceite_dif) / 100
		end if
		let p_somatorio_dif = p_somatorio_dif + p_dif_aceite
	end for
	let p_array_compl[p_ind].tot_reserv_dif = 0
	let p_array_compl[p_ind].tot_reserv_dif = p_somatorio_dif + p_soma_reserva2
	if p_array_wms[p_ind].qtd_declarad_nf > (p_soma_reserva2 + p_somatorio_dif) and p_dados_tela.ies_nf_aguard_nfe <> "d" then
		if l_funcao <> "modificacao" or
			l_funcao = "modificacao" and p_msg_qtd = "s" then
			if p_array_compl[p_ind].num_pedido is not null and
				p_array_compl[p_ind].num_pedido <> 0        and
				p_array_compl[p_ind].ies_liquida_oc <> "3"  then
				if p_dados_tela.ies_nf_aguard_nfe = "5" then
					error "entrada sem saldo suficiente; contatar comprador urgente "
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if

				if log_existe_epl("sup3760y_before_process_ies_entrada_maior") then
					call log_setvar("fornecedor", p_dados_tela.cod_fornecedor)
					call log_setvar("ies_entrada_maior",p_ies_entrada_maior)

					call sup3760y_before_process_ies_entrada_maior()
					let p_ies_entrada_maior = log_getvar('ies_entrada_maior')
				end if
				if p_ies_entrada_maior = "n"  then
					call log0030_mensagem("entrada sem saldo suficiente; contatar comprador urgente ","exclamation")
				else
					call log0030_mensagem("entrada sem saldo suficiente.","exclamation")
				end if
				if p_ies_entrada_maior = "s"  then
					if log004_confirm(14,42) then
					else
						let l_next_field = 'qtd_declarad_nf'
						return p_houve_erro, l_next_field
					end if
				else
					if p_ies_entrada_maior = "c" then
						if p_aguard_5 = true then
						next field qtd_declarad_nf
					else
						if log004_confirm(14,42) then
						else
							let l_next_field = 'qtd_declarad_nf'
							return p_houve_erro, l_next_field
						end if
					end if
				else
					let l_next_field = 'qtd_declarad_nf'
					return p_houve_erro, l_next_field
				end if
			end if
		end if
	end if
end if
#tfmmv2

return p_houve_erro, l_next_field
end function

#-------------------------------------#
function sup3760_exclui_item_de_terc(l_cod_fornecedor, l_num_seq )
#-------------------------------------#
	define l_cod_fornecedor like item_de_terc.cod_fornecedor,
	l_num_seq        like item_de_terc.num_sequencia

	if l_num_seq = 0 then
		if not sup3760_exclui_contab_terc(p_cod_empresa, p_dados_tela.num_nf, l_cod_fornecedor,
			0, p_dados_tela.ies_especie_nf, 0, 0, "1") then
			call log0030_mensagem("lote de terceiros contabilizado, n�o poder� ser excluido.","exclamation")
			let p_houve_erro = true
			return false
		end if

		whenever error continue
		delete from item_de_terc
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornecedor = l_cod_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","item_de_terc")
			return false
		end if

		whenever error continue
		delete from item_de_terc_compl
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornec_nf  = l_cod_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","item_de_terc_compl")
			return false
		end if

		whenever error continue
		delete from item_de_terc_area
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornecedor = l_cod_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","item_de_terc_area")
			return false
		end if

		whenever error continue
		delete from sup_item_terc_end
		where empresa           = p_cod_empresa
		and nota_fiscal       = p_dados_tela.num_nf
		and serie_nota_fiscal = p_dados_tela.ser_nf
		and subserie_nf       = p_dados_tela.ssr_nf
		and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
		and fornecedor        = l_cod_fornecedor
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","sup_item_terc_end")
			return false
		end if

	else
		if not sup3760_exclui_contab_terc(p_cod_empresa, p_dados_tela.num_nf, l_cod_fornecedor,
			0, p_dados_tela.ies_especie_nf, l_num_seq, 0, "1") then
			call log0030_mensagem("lote de terceiros contabilizado, n�o poder� ser excluido.","exclamation")
			let p_houve_erro = true
			return false
		end if
		whenever error continue
		delete from item_de_terc
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornecedor = l_cod_fornecedor
		and num_sequencia  = l_num_seq
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","item_de_terc")
			return false
		end if

		whenever error continue
		delete from item_de_terc_compl
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornec_nf  = l_cod_fornecedor
		and num_seq        = l_num_seq
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","item_de_terc_compl")
			return false
		end if

		whenever error continue
		delete from item_de_terc_area
		where cod_empresa    = p_cod_empresa
		and num_nf         = p_dados_tela.num_nf
		and ser_nf         = p_dados_tela.ser_nf
		and ssr_nf         = p_dados_tela.ssr_nf
		and ies_especie_nf = p_dados_tela.ies_especie_nf
		and cod_fornecedor = l_cod_fornecedor
		and num_sequencia  = l_num_seq
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","item_de_terc_area")
			return false
		end if

		whenever error continue
		delete from sup_item_terc_end
		where empresa           = p_cod_empresa
		and nota_fiscal       = p_dados_tela.num_nf
		and serie_nota_fiscal = p_dados_tela.ser_nf
		and subserie_nf       = p_dados_tela.ssr_nf
		and espc_nota_fiscal  = p_dados_tela.ies_especie_nf
		and fornecedor        = l_cod_fornecedor
		and seq_aviso_recebto = l_num_seq
		whenever error stop
		if sqlca.sqlcode <> 0 and sqlca.sqlcode <> 100 then
			let p_houve_erro = true
			call log003_err_sql("delete","sup_item_terc_end")
			return false
		end if
	end if
return true

end function

#-------------------------------------#
function sup3760_exclui_contab_terc(l_cod_empresa, l_num_nf, l_cod_fornecedor,
	l_num_nf_retorno, l_ies_especie, l_num_seq,
	l_num_seq_nf, l_ies_tip_ctrl)
#-------------------------------------#
	define l_cod_empresa like lanc_cont_terc.cod_empresa,
	l_num_nf      like lanc_cont_terc.num_nf,
	l_cod_fornecedor like lanc_cont_terc.cod_fornecedor,
	l_num_nf_retorno like lanc_cont_terc.num_nf_retorno,
	l_ies_especie    like lanc_cont_terc.ies_especie,
	l_num_seq        like lanc_cont_terc.num_sequencia,
	l_num_seq_nf     like lanc_cont_terc.num_sequencia_nf,
	l_sql_stmt       char(2000),
	l_where_clause1  char(2000),
	l_where_clause2  char(2000),
	l_ies_tip_ctrl   like lanc_cont_terc.ies_tip_ctrl

	let l_where_clause1 = " from lanc_cont_terc ",
	" where lanc_cont_terc.cod_empresa    = '",l_cod_empresa,"'",
	"   and lanc_cont_terc.num_nf         = ",l_num_nf,
	"   and lanc_cont_terc.ies_especie    = '",l_ies_especie,"'",
	"   and lanc_cont_terc.cod_fornecedor = '",l_cod_fornecedor,"'",
	"   and lanc_cont_terc.ies_tip_ctrl   = '",l_ies_tip_ctrl,"'"
	if l_num_seq <> 0 then
		let l_where_clause1 = l_where_clause1 clipped,  "  and lanc_cont_terc.num_sequencia  = ",l_num_seq
	end if
	if l_num_nf_retorno <> 0 then
		let l_where_clause1 = l_where_clause1 clipped,  "  and lanc_cont_terc.num_nf_retorno = ",l_num_nf_retorno
	end if
	if l_num_seq_nf <> 0 then
		let l_where_clause1 = l_where_clause1 clipped,  "  and lanc_cont_terc.num_sequencia_nf = ",l_num_seq_nf
	end if

	let l_sql_stmt = "select 1 ", l_where_clause1 clipped," and lanc_cont_terc.num_lote_lanc <> 0 "

	whenever error continue
	prepare var_lanc_cont_terc from l_sql_stmt
	declare cq_lanc_cont_terc cursor for var_lanc_cont_terc
	open cq_lanc_cont_terc
	fetch cq_lanc_cont_terc
	whenever error stop
	if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
		return false
	end if

	let l_where_clause2 = " from ctb_lanc_ctbl_terc ",
	" where ctb_lanc_ctbl_terc.empresa          = '",l_cod_empresa,"'",
	"   and ctb_lanc_ctbl_terc.nota_fiscal      = ",l_num_nf,
	"   and ctb_lanc_ctbl_terc.espc_nota_fiscal = '",l_ies_especie,"'",
	"   and ctb_lanc_ctbl_terc.fornec_nota_fiscal = '",l_cod_fornecedor,"'", ### tvifqe
	"   and ctb_lanc_ctbl_terc.tip_nf_terceiro    = '",l_ies_tip_ctrl,"'"
	if l_num_nf_retorno <> 0 then
		let l_where_clause2 = l_where_clause2 clipped,"   and ctb_lanc_ctbl_terc.nf_retorno       = ",l_num_nf_retorno
	end if
	if l_num_seq <> 0 then
		let l_where_clause2 = l_where_clause2 clipped,"   and ctb_lanc_ctbl_terc.seq_nf_remessa   = ",l_num_seq
	end if
	if l_num_seq_nf <> 0 then
		let l_where_clause2 = l_where_clause2 clipped,"   and ctb_lanc_ctbl_terc.seq_nf_retorno   = ",l_num_seq_nf
	end if

	let l_sql_stmt = "select 1 ", l_where_clause2 clipped," and ctb_lanc_ctbl_terc.lote_contab <> 0 "

	whenever error continue
	prepare var_ctb_lanc_ctbl_terc from l_sql_stmt
	declare cq_ctb_lanc_ctbl_terc cursor for var_ctb_lanc_ctbl_terc
	open cq_ctb_lanc_ctbl_terc
	fetch cq_ctb_lanc_ctbl_terc
	whenever error stop
	if sqlca.sqlcode = 0 or sqlca.sqlcode = -284 then
		return false
	end if

	let l_sql_stmt = "delete ",l_where_clause1 clipped
	whenever error continue
	prepare var_del_lanc_cont from l_sql_stmt
	execute var_del_lanc_cont
	whenever error stop

	let l_sql_stmt = "delete ",l_where_clause2 clipped
	whenever error continue
	prepare var_del_ctb_lanc from l_sql_stmt
	execute var_del_ctb_lanc
	whenever error stop

return true
end function

#-------------------------------------#
function sup3760_busca_mat_aplicado(l_cod_item, l_cod_fornecedor)
#-------------------------------------#
	define l_cod_item like item.cod_item,
	l_cod_fornecedor like fornecedor.cod_fornecedor

	if l_cod_item is not null and l_cod_item <> ' ' then
		whenever error continue
		select 1
		from sup_par_it_forn
		where empresa = p_cod_empresa
		and item       = l_cod_item
		and fornecedor = l_cod_fornecedor
		and parametro  ='mat_aplic_benef'
		and parametro_ind = 's'
		whenever error stop
		if sqlca.sqlcode = 0 then
			return true
		end if
	else
		whenever error continue
		select 1
		from sup_par_it_forn
		where empresa = p_cod_empresa
		and fornecedor = l_cod_fornecedor
		and parametro  ='mat_aplic_benef'
		and parametro_ind = 's'
		whenever error stop
		if sqlca.sqlcode = 0 or sqlca.sqlcode =-284 then
			return true
		end if
	end if
return false
end function

###apresenta campo nfe/cte em tela
#-------------------------------------#
function sup3760_display_num_nfe_cte()
#-------------------------------------#
	if m_num_nfe is null or m_num_nfe = ' ' or m_num_nfe = 0 then
		display '                   ' at 10,1  attribute(normal)
	else
		display 'nf: ',m_num_nfe using '##############&' at 10,1 attribute(reverse)
	end if
end function

#-------------------------------------#
function sup3760_busca_valor_bruto()
#-------------------------------------#
	define l_preco_base  like cotacao_preco.pre_unit_base

	whenever error continue
	select cotacao_preco.pre_unit_base
	into l_preco_base
	from cotacao_preco,
	ordem_sup_cot
	where cotacao_preco.cod_empresa    = ordem_sup_cot.cod_empresa
	and cotacao_preco.cod_fornecedor = ordem_sup_cot.cod_fornecedor
	and cotacao_preco.num_cotacao    = ordem_sup_cot.num_cotacao
	and cotacao_preco.num_versao     = ordem_sup_cot.num_versao_cot
	and ordem_sup_cot.num_oc         = p_ordem_sup.num_oc
	and ordem_sup_cot.num_versao_oc  = p_ordem_sup.num_versao
	and cotacao_preco.cod_item       = p_ordem_sup.cod_item
	and ordem_sup_cot.cod_empresa    = p_ordem_sup.cod_empresa
	and ordem_sup_cot.num_cotacao    = p_ordem_sup.num_cotacao
	whenever error stop
	if sqlca.sqlcode = 0 then
		return l_preco_base
	end if

return 0
end function

#------------------------------------------------------------#
function sup3760_grava_ies_valor_bruto(l_sequencia, l_valor)
#------------------------------------------------------------#
	define l_valor     decimal(15,2),
	l_sequencia like sup_par_ar.seq_aviso_recebto

	whenever error continue
	select par_ind_especial
	from sup_par_ar
	where empresa           = p_cod_empresa
	and aviso_recebto     = p_dados_tela.num_aviso_rec
	and seq_aviso_recebto = l_sequencia
	and parametro         = "preco_bruto"
	whenever error stop
	if sqlca.sqlcode = 0 then
		whenever error continue
		update sup_par_ar
		set parametro_val     = l_valor
		where empresa           = p_cod_empresa
		and aviso_recebto     = p_dados_tela.num_aviso_rec
		and seq_aviso_recebto = l_sequencia
		and parametro         = "preco_bruto"
		whenever error stop
	else
		if sqlca.sqlcode = notfound then
			if sup3760_grava_sup_par_ar(p_cod_empresa,
				p_dados_tela.num_aviso_rec,
				l_sequencia,
				"preco_bruto",
				"s",
				null,
				l_valor,
				null) = false then
				return false
			end if
		else
			call log003_err_sql("leitura","sup_par_ar")
			return false
		end if
	end if
end function

#-----------------------------------#
function sup3760_nota_devolucao()
#-----------------------------------#
	define l_cont decimal(10)

	let l_cont = 0

	whenever error continue
	select count(*)
	into l_cont
	from dev_fornec
	where cod_empresa   = p_cod_empresa
	and num_aviso_rec = p_dados_tela.num_aviso_rec
	whenever error stop
	if l_cont > 0 then
		return false
	end if

return true
end function

#----------------------------------------------#
function sup3760_retorno_merc_nao_entregue()
#----------------------------------------------#
	define l_status smallint

	call supm72_sup_par_ar_set_null()
	call supm72_sup_par_ar_leitura(p_cod_empresa,
	p_dados_tela.num_aviso_rec,
	0,
	"nfd_retorno_merc",
	true,
	true) returning l_status
	if l_status then
		call supm72_sup_par_ar_set_par_ind_especial('s')
		call supm72_sup_par_ar_set_parametro_dat(today)
		call supt72_sup_par_ar_modifica(true,true) returning l_status
	else
		call supm72_sup_par_ar_set_null()
		call supm72_sup_par_ar_set_empresa(p_cod_empresa)
		call supm72_sup_par_ar_set_aviso_recebto(p_dados_tela.num_aviso_rec)
		call supm72_sup_par_ar_set_seq_aviso_recebto(0)
		call supm72_sup_par_ar_set_parametro("nfd_retorno_merc")
		call supm72_sup_par_ar_set_par_ind_especial('s')
		call supm72_sup_par_ar_set_parametro_dat(today)

		call supt72_sup_par_ar_inclui(true,true) returning l_status
	end if
end function

#---------------------------------------#
function sup3760_existe_frete_transito()
#---------------------------------------#

	whenever error continue
	select empresa
	from sup_par_frete
	where empresa         = p_cod_empresa
	and num_conhec      = p_nf_sup.num_conhec
	and serie_conhec    = p_nf_sup.ser_conhec
	and subserie_conhec = p_nf_sup.ssr_conhec
	and transportadora  = p_nf_sup.cod_transpor
	and parametro       = "frete_transito"
	whenever error stop

	if sqlca.sqlcode = 100 then
		return false
	end if
return true
end function

#-----------------------------------------------------------------#
function sup3760_existe_item_somente_controle_fiscal_copacking()
#-----------------------------------------------------------------#
	define l_ind smallint

	for l_ind = 1 to arraylength(p_array)
		if p_array[l_ind].cod_item clipped is null then
			exit for
		end if

		if manm281_man_inf_com_item_leitura(p_cod_empresa,p_array[l_ind].cod_item,"wms_saldo_fiscal_cop",true,1) then
			if manm281_man_inf_com_item_get_val_flag() = "s" then
				return true
			end if
		end if
	end for

return false
end function

#-----------------------------------------#
function sup3760_eh_saida_identificada()
#-----------------------------------------#
	whenever error continue
	select distinct 1
	from sup_par_ar
	where sup_par_ar.empresa          = p_cod_empresa
	and sup_par_ar.aviso_recebto    = p_dados_tela.num_aviso_rec
	and sup_par_ar.parametro        = "possui_identif_saida"
	and sup_par_ar.par_ind_especial = 's'
	whenever error stop
	if sqlca.sqlcode < 0 then
		call log0030_processa_err_sql("select","sup_par_ar", 0)
		return false
	else
		if sqlca.sqlcode = 0 then
			return true
		else
			return false
		end if
	end if
end function

### esta fun��o tem como objetivo elimintar registros das tabelas inclu�das antes de efetuada a inclus�o nas tabelas nf_sup/aviso_rec,
### isso �, efetuado control-c para cancelamento da inclus�o da nota digitada (desta forma n�o fica 'lixo' registro em tabelas sem que
### tenha registro na nf_sup/aviso_rec deste ar.
#------------------------------------------------#
function sup3760_deleta_registros_inclusao_nota(l_cod_empresa, l_num_aviso_rec)
#------------------------------------------------#
	define l_cod_empresa      like aviso_rec.cod_empresa,
	l_num_aviso_rec    like aviso_rec.num_aviso_rec

	if l_num_aviso_rec is not null then
		whenever error continue
		delete from sup_par_ar
		where empresa       = l_cod_empresa
		and aviso_recebto = l_num_aviso_rec
		whenever error stop
		if sqlca.sqlcode <> 0 then
		end if
	end if

end function

#------------------------------------------------#
function sup3760_estoque_operac()
#------------------------------------------------#
	define l_ies_oc like estoque_operac.ies_oc

	whenever error continue
	select ies_oc
	into l_ies_oc
	from estoque_operac
	where estoque_operac.cod_empresa  = p_cod_empresa
	and estoque_operac.cod_operacao = p_dados_tela.cod_operac_estoq
	whenever error stop
	if sqlca.sqlcode <> 0 then
		return true
	end if

	if l_ies_oc <> "3" then
		return false # valida
	end if
return true # n�o valida
end function

#-------------------------------#
function sup3760_busca_array_compl(l_cod_empresa, l_num_aviso_rec, l_num_seq, l_num_pedido, l_num_oc)
#-------------------------------#
	define l_cod_empresa    like ar_ped.cod_empresa,
	l_num_aviso_rec  like ar_ped.num_aviso_rec,
	l_num_seq        like ar_ped.num_seq,
	l_num_oc         like ar_ped.num_oc,
	l_num_pedido     like ar_ped.num_pedido,
	l_num_prog_entrega like ar_ped.num_prog_entrega

	whenever error continue
	declare cq_ar cursor for
	select num_prog_entrega
	from ar_ped
	where cod_empresa   = l_cod_empresa
	and num_aviso_rec = l_num_aviso_rec
	and num_seq       = l_num_seq
	and num_pedido    = l_num_pedido
	and num_oc        = l_num_oc
	whenever error stop

	initialize l_num_prog_entrega to null
	whenever error continue
	foreach cq_ar into l_num_prog_entrega
	if l_num_prog_entrega is not null then
		exit foreach
	end if
end foreach
whenever error stop

return l_num_prog_entrega
end function

#---------------------------------------------------------------#
function sup3760_save_cur_field_name(l_field_name)
#---------------------------------------------------------------#
	define l_field_name  varchar(50)
	if log_qamodeenabled() then
		call auto_savecurrentfieldname(l_field_name)
	end if
end function

#---------------------------------------------#
function sup376_inicializa_variaveis_globais()
#---------------------------------------------#
	call sup3760_initialize_ar()

	call log_consoledebugmessage("[sup3760] inicializacao variaveis globais e modulares inicio "||current)

	initialize p_num_ar376,p_ies_fornec_ativo                           to null
	initialize p_ies_tip_entrada,p_conta                                to null
	initialize p_tmp_transpor,p_item1,p_cod_uni_feder_f                 to null
	initialize p_val_base,p_sequencia,p_cod_fornec144                   to null
	initialize p_ind,p_ind1,p_ind2,p_ind3,p_ind5,p_ind8,p_ind9          to null
	initialize p_cod_pais_emp,p_status,p_quantos                        to null
	initialize p_ies_obj_entrada_fisc,p_cod_item_oc                     to null
	initialize m_num_nf_cap,p_cancel,p_ies_pagamento,p_msg_qtd          to null
	initialize p_ies_cons                                               to null
	initialize p_sup_mes,p_sup_cap,p_sup449_cap,p_sup449_mes            to null
	initialize p_sup_mes,p_sup_cap,p_pedidos,p_pedidos_p1               to null
	initialize p_pedidos_p2,p_pedidos_p3,p_inclu_item,p_val_tot_liq     to null
	initialize p_pedidos_p4,p_pedidos_p5,p_pedidos_p6                   to null
	initialize p_ordens,p_ordens_p1,p_ordens_p2,p_ordens_p3             to null
	initialize p_ordens_p4,p_prog_ordem,p_prog_ordem1,p_prog_ordem2     to null
	initialize p_ordens_p5, p_ordens_p6, p_ordens_p7, p_ordens_p8       to null

	initialize p_pedidos_p7                                              to null
	initialize p_pedidos_p8                                              to null
	initialize p_pedidos_p9                                              to null
	initialize p_pedidos_p10                                             to null
	initialize p_pedidos_p11                                             to null
	initialize p_pedidos_p12                                             to null
	initialize p_ordens_p9                                               to null
	initialize p_ordens_p10                                              to null
	initialize p_ordens_p11                                              to null
	initialize p_ordens_p12                                              to null
	initialize p_ordens_p13                                              to null
	initialize p_ordens_p14                                              to null
	initialize p_ordens_p15                                              to null
	initialize p_ordens_p16                                              to null
	initialize p_prog_ordem5                                            to null
	initialize p_prog_ordem6                                            to null
	initialize p_prog_ordem7                                            to null
	initialize p_prog_ordem8                                            to null
	initialize p_retorno_3760,p_houve_erro                              to null
	initialize p_entra_array,p_houve_erro                               to null
	initialize p_saldo_frete,p_saldo_icms,p_saldo_icms_c,p_entra_tot    to null
	initialize p_pedido_sele,p_pedido_sele1,p_pedido_sele2              to null
	initialize p_pedido_sele3,p_ordem_sele,p_ordem_sele1                to null
	initialize p_pedido_sele4, p_pedido_sele5, p_pedido_sele6           to null
	initialize p_pedido_sele7                                           to null
	initialize p_pedido_sele8                                           to null
	initialize p_pedido_sele9                                           to null
	initialize p_pedido_sele10                                          to null
	initialize p_pedido_sele11                                          to null
	initialize p_pedido_sele12                                          to null
	initialize p_ordem_sele9                                            to null
	initialize p_ordem_sele10                                           to null
	initialize p_ordem_sele11                                           to null
	initialize p_ordem_sele12                                           to null
	initialize p_ordem_sele13                                           to null
	initialize p_ordem_sele14                                           to null
	initialize p_ordem_sele15                                           to null
	initialize p_ordem_sele16                                           to null
	initialize p_ordem_sele2,p_ordem_sele3,p_ordem_sele4                to null
	initialize p_ordem_sele5, p_ordem_sele6, p_ordem_sele7, p_ordem_sele8 to null
	initialize p_declarad_sele,p_ies_reservou                           to null
	initialize p_tot_itens                                              to null
	initialize p_cod_item_pop,p_num_conhec,p_ser_conhec                 to null
	initialize p_ssr_conhec,p_cod_transpor,p_fornec_incl_item           to null
	initialize p_ies_informou_ped,p_qtd_array                           to null
	initialize p_ind_tela, p_ies_incl_cap                               to null
	initialize p_nom_resp_aceite_er                                     to null
	initialize p_diferenca_f,p_diferenca_p                              to null
	initialize p_frete_sup                 to null
	initialize p_plano_contas              to null
	initialize p_des_pendencia             to null
	initialize p_it_prg_entr               to null
	initialize p_it_prg_entr_reser         to null
	initialize p_item_sup                  to null
	initialize p_par_estoque               to null
	initialize p_ies_contrib_ipi           to null
	initialize p_soma_reserva2,p_soma_reserva3                         to null
	initialize p_prx_seq,p_num_seq,p_cod_fiscal_forma                  to null
	initialize p_qtd_declarad_nf, p_primeira_vez                       to null
	initialize comando3                                             to null
	initialize p_aviso_rec.*               to null
	initialize p_nf_sup.*                  to null
	initialize p_par_con.*                 to null
	initialize p_par_sup.*                 to null
	initialize p_par_sup_compl.*           to null
	initialize p_ar_ped.*                  to null
	initialize p_ar_diverg.*               to null
	initialize p_prog_ordem_sup.*          to null
	initialize p_empresa.*                 to null
	initialize p_ordem_sup.*               to null
	initialize p_cod_fiscal_item           to null
	initialize p_pre_unit_nf               to null
	initialize p_prim_digito,p_ult_digitos,p_cod_uni_feder            to null
	initialize p_dest_aviso_rec.*          to null
	initialize p_fat_conver_unid,p_num_conta_sal                      to null
	initialize p_fornecedor.*              to null
	initialize p_maior_data,p_menor_data,p_ies_tem_inspecao           to null
	initialize p_pedido_sup.*              to null
	initialize p_dados_tela.*              to null
	initialize p_dados_tela_f.*            to null
	initialize p_dados_telar.*             to null
	initialize p_dados_telar_f.*           to null
	initialize p_formonly.*                to null
	initialize p_formonlyr.*               to null
	initialize p_funcao_menu               to null
	initialize p_cod_item,p_dif_aceita     to null
	initialize p_sub                       to null
	initialize p_nota.*                    to null
	initialize p_array_pedidos             to null
	initialize p_cod_ret_imp               to null

	call log_consoledebugmessage("[sup3760] inicializacao variaveis globais e modulares fim "||current)
end function

#--------------------------------------------#
function sup3760_initialize_ar()
#--------------------------------------------#
	let p_ind = 0

	let p_formonlyr.*   = p_formonly.*
	let p_dados_telar.* = p_dados_tela.*
	let m_num_nfe_r     = m_num_nfe

	initialize p_nf_sup.*, p_aviso_rec.* to null
	initialize p_aviso_rec_compl.*, g_cod_forn_sup3850 to null
	initialize p_dados_tela.*, p_cod_ret_imp to null
	initialize m_dat_entrada_ant             to null
	initialize m_num_nfe to null
	initialize p_formonly.* to null
	initialize m_num_nf_eletronica to null
	initialize p_codigos to null

	call arraydeleteitem(ma_nf_erro)
	call arraydeleteitem(ma_aviso_rec)
	call arraydeleteitem(ma_tela_relac_nf_rem_retorno)
	call arraydeleteitem(ma_tela_relac_nf_compl)
	call arraydeleteitem(ga_man_moviment)

	call sup3760_checkarrayadditem_ar(1,1)

	call sup3760_initialize_itens_nf()

	call sup3762_inicializa_variaveis()

	display "                                                                               " at 20,01
	display "                                                                               " at 10,01
end function

#--------------------------------------------#
function sup3760_initialize_itens_nf()
#--------------------------------------------#
	call arraydeleteitem(p_array)
	call arraydeleteitem(p_array_compl)
	call arraydeleteitem(p_array_pedidos)
	call arraydeleteitem(p_array_ped_itens)
	call arraydeleteitem(p_array_ped_aux)
	call arraydeleteitem(p_array_wms)
	call arraydeleteitem(ga_nf_item_fiscal)

	###problemas para aplicar em arrays bidimensionais. temporariamente est� sendo feito apenas initialize
	initialize p_array_it_prg_entr to null
	#call arraydeleteitem(p_array_it_prg_entr)

	call arraydeleteitem(p_array_volta)
	call arraydeleteitem(p_array_dev_trans)
	call arraydeleteitem(p_array_imp)
	call arraydeleteitem(p_array_compl1)
	call arraydeleteitem(p_base_ipi)
	call arraydeleteitem(ma_inf_ar)
	call arraydeleteitem(mr_array_transito)

	call sup3760_checkarrayadditem_itens_nf(1,1)
end function

#--------------------------------------------#
function sup3760_checkarrayadditem_ar(l_currentline,l_linesadd)
#--------------------------------------------#
	define l_currentline,l_linesadd smallint

	if l_currentline > arraylength(ma_aviso_rec) or l_currentline = 0 then
		call arrayadditem(ma_nf_erro,l_linesadd)
		call arrayadditem(ma_aviso_rec,l_linesadd)
		call arrayadditem(ma_tela_relac_nf_rem_retorno,l_linesadd)
		call arrayadditem(ma_tela_relac_nf_compl,l_linesadd)
		call arrayadditem(ga_man_moviment,l_linesadd)
	end if
end function

#--------------------------------------------#
function sup3760_checkarrayadditem_itens_nf(l_currentline,l_linesadd)
#--------------------------------------------#
	define l_currentline,l_linesadd smallint

	if l_currentline > arraylength(p_array) or l_currentline = 0 then
		call arrayadditem(p_array,l_linesadd)
		call arrayadditem(p_array,l_linesadd)
		call arrayadditem(p_array_compl,l_linesadd)
		call arrayadditem(p_array_pedidos,l_linesadd)
		call arrayadditem(p_array_ped_itens,l_linesadd)
		call arrayadditem(p_array_ped_aux,l_linesadd)
		call arrayadditem(p_array_wms,l_linesadd)
		call arrayadditem(ga_nf_item_fiscal,l_linesadd)
		#call arrayadditem(p_array_it_prg_entr,l_linesadd)   ###problemas para aplicar em arrays bidimensionais.
		call arrayadditem(p_array_volta,l_linesadd)
		call arrayadditem(p_array_dev_trans,l_linesadd)
		call arrayadditem(p_array_imp,l_linesadd)
		call arrayadditem(p_array_compl1,l_linesadd)
		call arrayadditem(p_base_ipi,l_linesadd)
		call arrayadditem(ma_inf_ar,l_linesadd)
		call arrayadditem(mr_array_transito,l_linesadd)
	end if
end function

#-------------------------------#
function sup3760_version_info()
#-------------------------------#
return "$archive: /logix/fontes_doc/sustentacao/v12/v12/suprimentos/suprimentos/programas/sup3760.4gl $|$revision: 664 $|$date: 31/01/20 16:02 $|$modtime: 31/01/20 16:02 $" # informa��es do controle de vers�o do sourcesafe - n�o remover esta linha (framework)
end function
