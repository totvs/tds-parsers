// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PRW: Token CFGA030.PRW 1`] = `
#include "Protheus.ch"

Function CFGA030()
	Return Apcfg030()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-4:19] {C:1} {A:{}}
| directive: - [1:1-1:24] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: "Protheus.ch" [1:10-1:22] {C:0} {A:{}}
| -endLine: - [1:23-1:24] {C:0} {A:{}}
| --newLine: \\n\\n [1:23-1:24] {C:0} {A:{}}
| block:  [3:1-4:19] {C:3} {A:{}}
| | beginBlock:  [3:1-3:19] {C:1} {A:{}}
| | | keyword: Function [3:1-3:8] {C:0} {A:{"command":"function"}}
| | | whiteSpace: ?b [3:9-3:9] {C:0} {A:{}}
| | | identifier: CFGA030 [3:10-3:16] {C:0} {A:{}}
| | | argumentList:  [3:17-3:18] {C:3} {A:{}}
| | | | operatorParenthesis: ( [3:17-3:17] {C:0} {A:{}}
| | | | operatorParenthesis: ) [3:18-3:18] {C:0} {A:{}}
| | | endLine: - [3:19-3:19] {C:0} {A:{}}
| | | -newLine: \\n [3:19-3:19] {C:0} {A:{}}
| | bodyBlock:  [3:1-4:19] {C:1} {A:{}}
| | | whiteSpace: \\t [4:1-4:1] {C:0} {A:{}}
| | | keyword: Return [4:2-4:7] {C:0} {A:{"command":"return"}}
| | | whiteSpace: ?b [4:8-4:8] {C:0} {A:{}}
| | | identifier: Apcfg030 [4:9-4:16] {C:0} {A:{}}
| | | operatorParenthesis: ( [4:17-4:17] {C:0} {A:{}}
| | | operatorParenthesis: ) [4:18-4:18] {C:0} {A:{}}
| | | newLine: \\n [4:19-4:19] {C:0} {A:{}}
| | endBlock:  [3:1--Infinity:-Infinity] {C:1} {A:{}}

`;

exports[`PRW: Token CFGX011.PRW 1`] = `
#include "protheus.Ch"
#include "cfgx011.ch"
/*/
�����������������������������������������������������������������������������
�����������������������������������������������������������������������������
�������������������������������������������������������������������������Ŀ��
���Fun��o    � CFGx011  � Autor � Vinicius Barreira     � Data �14.02.96  ���
�������������������������������������������������������������������������Ĵ��
���Descri��o � Tabela de IRRF                                             ���
�������������������������������������������������������������������������Ĵ��
���Sintaxe e � CFGx011(void)                                              ���
�������������������������������������������������������������������������Ĵ��
���Parametros� Sem Argumentos                                             ���
�������������������������������������������������������������������������Ĵ��
��� Uso      � Configurador   � Fun��o Relacionada � Entrada Dados (Todos)���
��������������������������������������������������������������������������ٱ�
�����������������������������������������������������������������������������
�����������������������������������������������������������������������������
Last change:  VSB  14 Feb 96    5:16 pm
*/







FuncTion Cfgx011(lWizard, oWizard, aArray, lEdit, oBtnWiz, oSayWiz)
	Local oDlg,oLbx
	Local cVar:=""
	Local nOpc := 0
	Local aCampos := {}
	Local cArqTmp := ""
	Local nX := 0
	Local nY := 0
	Local nDiffWiz := 0

	DEFAULT lWizard := .F.
	DEFAULT aArray := {}
	DEFAULT lEdit := .F.

	aCampos := IRFStruArq()

	cArqTmp := CriaTrab( aCampos , .T.)
	dbUseArea( .T.,, cArqTmp, "cArqTmp", if(.F. .OR. .F., !.F., NIL), .F. )
	//����������������������������������������������������Ŀ
	//� "Importa" o arquivo TXT com a tabela do I.R.       �
	//������������������������������������������������������
	dbSelectArea( "cArqTmp" )
	If File( "SIGAADV.IRF" )
		APPEND FROM SIGAADV.IRF SDF
		nX := cArqTmp->(RecCount())
		If nX < 5
			For nY := nX+1 to 5
				RecLock( "cArqTmp" , .T. )
			Next
		Endif
	Else
		For nX := 1 to 5
			RecLock( "cArqTmp" , .T. )
		Next
	Endif
	dbGoTop()

	If lWizard
		While !Eof()
			Aadd(aArray, {LIMITE, ALIQUOTA, DEDUZIR})
			DbSkip()
		End
		DbGoTop()
		nDiffWiz := 10
	EndIf

	If !lWizard
		DEFINE MSDIALOG oDlg FROM  70,1 TO 231,400 TITLE STR0001 PIXEL  // "Tabela do Imposto de Renda"

		@ 5,5 LISTBOX oLbx  Var cVar FIELDS LIMITE, ALIQUOTA, DEDUZIR;
			HEADER OemToAnsi(STR0002),OemToAnsi(STR0003),OemToAnsi(STR0004) ;  // "Valor Limite"  ### "Al�quota" ### "Valor a Deduzir"
		SIZE (oDlg:nClientWidth / 2)- 38 - nDiffWiz,(oDlg:nClientHeight / 2) - 20 OF oDlg PIXEL  ;
			ON DBLCLICK Edita( oLbx , lWizard )

		DEFINE SBUTTON FROM 3,(oDlg:nRight / 2) - 33 TYPE 1 ENABLE OF oDlg Action (nOpc:=1,oDlg:End())
		DEFINE SBUTTON FROM 18,(oDlg:nRight / 2) - 33 TYPE 2 ENABLE OF oDlg Action (nOpc:=0,oDlg:End())

		ACTIVATE MSDIALOG oDlg Centered

		If nOpc == 1
			Copy to SIGAADV.IRF SDF
		ENdif

		dbSelectArea( "cArqTmp" )
		cArqTmp->(DbCloseArea())
		//FErase(cArqTmp+GetDBExtension())
	Else
		@ 5,5 LISTBOX oLbx FIELDS HEADER OemToAnsi(STR0002),OemToAnsi(STR0003),OemToAnsi(STR0004) ;
			SIZE (oWizard:nClientWidth / 2)- 38 - nDiffWiz,(oWizard:nClientHeight / 2) - 10 PIXEL OF oWizard ;
			ON DBLCLICK Edita( oLbx , lWizard, aArray, @lEdit )
		oLbx:SetArray(aArray)
		oLbx:bLine := { || {aArray[oLbx:nAt,1], aArray[oLbx:nAt,2], aArray[oLbx:nAt,3] }}
	EndIf

	Return nil

	/*/
	�����������������������������������������������������������������������������
	�����������������������������������������������������������������������������
	�������������������������������������������������������������������������Ŀ��
	���Fun��o    � EDITA    � Autor � Vinicius Barreira     � Data � 14/02/96 ���
	�������������������������������������������������������������������������Ĵ��
	���Descri��o � Edita os campos do arquivo temporario                      ���
	�������������������������������������������������������������������������Ĵ��
	���Sintaxe   � EDITA()                                                    ���
	�������������������������������������������������������������������������Ĵ��
	�����������������������������������������������������������������������������
	�����������������������������������������������������������������������������
	*/
Static Function EDITA( oLbx, lWizard, aArray, lEdit, oBtnWiz, oSayWiz )
	Local oDlg
	Local nLimIRF	 := 0
	Local nAliquota := 0
	Local nDeduzir := 0
	Local nOpc := 0

	If !lWizard
		nLimIRF	 := Val( Field->Limite )
		nAliquota := Val( Field->Aliquota )
		nDeduzir := Val( Field->deduzir )
	Else
		nLimIRF	 := Val( aArray[oLbx:nAt][1] )
		nAliquota := Val( aArray[oLbx:nAt][2] )
		nDeduzir := Val( aArray[oLbx:nAt][3] )
	EndIf

	DEFINE MSDIALOG oDlg FROM  86,1 TO 267,361 TITLE STR0005 PIXEL  // "Edi��o da Faixa de Imposto"

	@ 07, 04 TO 62, 154 LABEL STR0006 OF oDlg  PIXEL  // "Faixa de Imposto"
	@ 16, 08 SAY STR0007			SIZE 53, 07 OF oDlg PIXEL  // "Valor Limite"
	@ 29, 08 SAY STR0008			SIZE 53, 07 OF oDlg PIXEL  // "Al�quota"
	@ 42, 08 SAY STR0009  		SIZE 53, 07 OF oDlg PIXEL  // "Valor a Deduzir"
	@ 14, 68 MSGET nLimIRF		SIZE 51, 10 OF oDlg PIXEL Picture "@E 999,999,999.99"
	@ 27, 68 MSGET nAliquota	SIZE 24, 10 OF oDlg PIXEL Picture "@R 999.99%"
	@ 40, 68 MSGET nDeduzir		SIZE 51, 10 OF oDlg PIXEL Picture "@E 999,999,999.99"
	DEFINE SBUTTON FROM 70, 16 TYPE 1 ENABLE OF oDlg Action (nOpc:=1,oDlg:End())
	DEFINE SBUTTON FROM 70, 47 TYPE 2 ENABLE OF oDlg Action (nOpc:=0,oDlg:End())

	IF !lWizard
		ACTIVATE MSDIALOG oDlg
	Else
		ACTIVATE MSDIALOG oDlg CENTERED
	EndIf

	If nOpc == 1
		IF !lWizard
			RecLock( "cArqTmp" )
			Field->LIMITE   := Spac( 15 - Len( Alltrim(Str( nLimIRF,15,2) ) )) + Alltrim(Str(nLimIRF,15,2))
			Field->ALIQUOTA := Spac(  7 - Len( Alltrim(Str( nAliquota,5,2) ))) + Alltrim(Str(nAliquota,5,2))
			Field->DEDUZIR  := Spac( 16 - Len( Alltrim( Str( nDeduzir,16,2)))) + Alltrim(Str(nDeduzir,16,2))
			oLbx:Refresh()
		Else
			lEdit := .T.

			aArray[oLbx:nAt] := {Spac( 15 - Len( Alltrim(Str( nLimIRF,15,2) ) )) + Alltrim(Str(nLimIRF,15,2)),;
				Spac(  7 - Len( Alltrim(Str( nAliquota,5,2) ))) + Alltrim(Str(nAliquota,5,2)),;
				Spac( 16 - Len( Alltrim( Str( nDeduzir,16,2)))) + Alltrim(Str(nDeduzir,16,2))}

			oLbx:SetArray(aArray)
			oLbx:bLine := { || {aArray[oLbx:nAt,1], aArray[oLbx:nAt,2], aArray[oLbx:nAt,3] }}

			oLbx:Refresh()

			If oWiz3Btn12:cResName != "SALVAR"
				oWiz3Btn12:SetEmpty()
				oWiz3Btn12:SetBMP("SALVAR")
				oWiz3Say12:SetText("Salvar")
			EndIf

		EndIF
	Endif

	Return Nil

Function IRFStruArq()
	Local aRet

	aRet := { {"LIMITE"     , "C" , 15,0},;
		{"ALIQUOTA"   , "C" , 07,0},;
		{"DEDUZIR"    , "C" , 16,0} }
	//TESTE RPO PDV.

	Return aRet
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`;

exports[`PRW: Token CFGX022.PRW 1`] = `
#include "fivewin.ch"
#include "cfgx022.ch"
#include "dbtree.ch"

/*/
�����������������������������������������������������������������������������
�����������������������������������������������������������������������������
�������������������������������������������������������������������������Ŀ��
���Fun��o    � CFGx022  � Autor � Cristiane Maeda       � Data �          ���
�������������������������������������������������������������������������Ĵ��
���Descri��o � Inclui Autorizacao para Empresa e para Modulos             ���
�������������������������������������������������������������������������Ĵ��
���Sintaxe e � CFGX022                                                    ���
�������������������������������������������������������������������������Ĵ��
��� Uso      � Configurador   � Fun��o Relacionada � Entrada Dados (Todos)���
��������������������������������������������������������������������������ٱ�
�����������������������������������������������������������������������������
�����������������������������������������������������������������������������
/*/
Function CFGx022()
	Return CfgLibEmp()


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-21:22] {C:1} {A:{}}
| directive: - [1:1-1:22] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: "fivewin.ch" [1:10-1:21] {C:0} {A:{}}
| -endLine: - [1:22-1:22] {C:0} {A:{}}
| --newLine: \\n [1:22-1:22] {C:0} {A:{}}
| directive: - [2:1-2:22] {C:0} {A:{}}
| -operator: # [2:1-2:1] {C:0} {A:{}}
| -keyword: include [2:2-2:8] {C:0} {A:{}}
| -whiteSpace: ?b [2:9-2:9] {C:0} {A:{}}
| -string: "cfgx022.ch" [2:10-2:21] {C:0} {A:{}}
| -endLine: - [2:22-2:22] {C:0} {A:{}}
| --newLine: \\n [2:22-2:22] {C:0} {A:{}}
| directive: - [3:1-3:22] {C:0} {A:{}}
| -operator: # [3:1-3:1] {C:0} {A:{}}
| -keyword: include [3:2-3:8] {C:0} {A:{}}
| -whiteSpace: ?b [3:9-3:9] {C:0} {A:{}}
| -string: "dbtree.ch" [3:10-3:20] {C:0} {A:{}}
| -endLine: - [3:21-3:22] {C:0} {A:{}}
| --newLine: \\n\\n [3:21-3:22] {C:0} {A:{}}
| blockComment: /*/\\n�����������������������������������������������������������������������������\\n�����������������������������������������������������������������������������\\n�������������������������������������������������������������������������Ŀ��\\n���Fun��o?b?b?b?b�?bCFGx022?b?b�?bAutor?b�?bCristiane?bMaeda?b?b?b?b?b?b?b�?bData?b�?b?b?b?b?b?b?b?b?b?b���\\n�������������������������������������������������������������������������Ĵ��\\n���Descri��o?b�?bInclui?bAutorizacao?bpara?bEmpresa?be?bpara?bModulos?b?b?b?b?b?b?b?b?b?b?b?b?b���\\n�������������������������������������������������������������������������Ĵ��\\n���Sintaxe?be?b�?bCFGX022?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b?b���\\n�������������������������������������������������������������������������Ĵ��\\n���?bUso?b?b?b?b?b?b�?bConfigurador?b?b?b�?bFun��o?bRelacionada?b�?bEntrada?bDados?b(Todos)���\\n��������������������������������������������������������������������������ٱ�\\n�����������������������������������������������������������������������������\\n�����������������������������������������������������������������������������\\n/*/ [5:1-5:1016] {C:0} {A:{}}
| newLine: \\n [19:4-19:4] {C:0} {A:{}}
| block:  [20:1-21:22] {C:3} {A:{}}
| | beginBlock:  [20:1-20:19] {C:1} {A:{}}
| | | keyword: Function [20:1-20:8] {C:0} {A:{"command":"function"}}
| | | whiteSpace: ?b [20:9-20:9] {C:0} {A:{}}
| | | identifier: CFGx022 [20:10-20:16] {C:0} {A:{}}
| | | argumentList:  [20:17-20:18] {C:3} {A:{}}
| | | | operatorParenthesis: ( [20:17-20:17] {C:0} {A:{}}
| | | | operatorParenthesis: ) [20:18-20:18] {C:0} {A:{}}
| | | endLine: - [20:19-20:19] {C:0} {A:{}}
| | | -newLine: \\n [20:19-20:19] {C:0} {A:{}}
| | bodyBlock:  [20:1-21:22] {C:1} {A:{}}
| | | whiteSpace: \\t [21:1-21:1] {C:0} {A:{}}
| | | keyword: Return [21:2-21:7] {C:0} {A:{"command":"return"}}
| | | whiteSpace: ?b [21:8-21:8] {C:0} {A:{}}
| | | identifier: CfgLibEmp [21:9-21:17] {C:0} {A:{}}
| | | operatorParenthesis: ( [21:18-21:18] {C:0} {A:{}}
| | | operatorParenthesis: ) [21:19-21:19] {C:0} {A:{}}
| | | newLine: \\n\\n\\n [21:20-21:22] {C:0} {A:{}}
| | endBlock:  [20:1--Infinity:-Infinity] {C:1} {A:{}}

`;

exports[`ch: Token fivewin.ch 1`] = `
#include "PROTHEUS.CH"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-1:23] {C:1} {A:{}}
| directive: - [1:1-1:23] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: "PROTHEUS.CH" [1:10-1:22] {C:0} {A:{}}
| -endLine: - [1:23-1:23] {C:0} {A:{}}
| --newLine: \\n [1:23-1:23] {C:0} {A:{}}

`;

exports[`ch: Token fw192.ch 1`] = `
#include 'protheus.ch'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-1:23] {C:1} {A:{}}
| directive: - [1:1-1:23] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: 'protheus.ch' [1:10-1:22] {C:0} {A:{}}
| -endLine: - [1:23-1:23] {C:0} {A:{}}
| --newLine: \\n [1:23-1:23] {C:0} {A:{}}

`;

exports[`ch: Token inkey.ch 1`] = `
#include 'vkey.ch'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-1:19] {C:1} {A:{}}
| directive: - [1:1-1:19] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: 'vkey.ch' [1:10-1:18] {C:0} {A:{}}
| -endLine: - [1:19-1:19] {C:0} {A:{}}
| --newLine: \\n [1:19-1:19] {C:0} {A:{}}

`;

exports[`ch: Token setcurs.ch 1`] = `
// Cursor types

#define SC_NONE           0      // No cursor
#define SC_NORMAL         1      // Normal cursor (underline)
#define SC_INSERT         2      // Insert cursor (lower half block)
#define SC_SPECIAL1       3      // Special cursor (full block)
#define SC_SPECIAL2       4      // Special cursor (upper half block)

#define _SETCURS_CH

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-1:17] {C:1} {A:{}}
| comment: //?bCursor?btypes\\n\\n [1:1-1:17] {C:0} {A:{}}
| directive: - [3:1-3:NaN] {C:0} {A:{}}
| -operator: # [3:1-3:1] {C:0} {A:{}}

`;

exports[`ch: Token siga.ch 1`] = `

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-1:1] {C:1} {A:{}}
| newLine: \\n [1:1-1:1] {C:0} {A:{}}

`;

exports[`prw: Token cfga010.prw 1`] = `
#include "Protheus.ch"

Function CFGA010()
Return Apcfg010()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-4:18] {C:1} {A:{}}
| directive: - [1:1-1:24] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: "Protheus.ch" [1:10-1:22] {C:0} {A:{}}
| -endLine: - [1:23-1:24] {C:0} {A:{}}
| --newLine: \\n\\n [1:23-1:24] {C:0} {A:{}}
| block:  [3:1-4:18] {C:3} {A:{}}
| | beginBlock:  [3:1-3:19] {C:1} {A:{}}
| | | keyword: Function [3:1-3:8] {C:0} {A:{"command":"function"}}
| | | whiteSpace: ?b [3:9-3:9] {C:0} {A:{}}
| | | identifier: CFGA010 [3:10-3:16] {C:0} {A:{}}
| | | argumentList:  [3:17-3:18] {C:3} {A:{}}
| | | | operatorParenthesis: ( [3:17-3:17] {C:0} {A:{}}
| | | | operatorParenthesis: ) [3:18-3:18] {C:0} {A:{}}
| | | endLine: - [3:19-3:19] {C:0} {A:{}}
| | | -newLine: \\n [3:19-3:19] {C:0} {A:{}}
| | bodyBlock:  [3:1-4:18] {C:1} {A:{}}
| | | keyword: Return [4:1-4:6] {C:0} {A:{"command":"return"}}
| | | whiteSpace: ?b [4:7-4:7] {C:0} {A:{}}
| | | identifier: Apcfg010 [4:8-4:15] {C:0} {A:{}}
| | | operatorParenthesis: ( [4:16-4:16] {C:0} {A:{}}
| | | operatorParenthesis: ) [4:17-4:17] {C:0} {A:{}}
| | | newLine: \\n [4:18-4:18] {C:0} {A:{}}
| | endBlock:  [3:1--Infinity:-Infinity] {C:1} {A:{}}

`;

exports[`prw: Token cfga020.prw 1`] = `
#include "Protheus.ch"

Function CFGA020()
Return Apcfg020()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-4:18] {C:1} {A:{}}
| directive: - [1:1-1:24] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: "Protheus.ch" [1:10-1:22] {C:0} {A:{}}
| -endLine: - [1:23-1:24] {C:0} {A:{}}
| --newLine: \\n\\n [1:23-1:24] {C:0} {A:{}}
| block:  [3:1-4:18] {C:3} {A:{}}
| | beginBlock:  [3:1-3:19] {C:1} {A:{}}
| | | keyword: Function [3:1-3:8] {C:0} {A:{"command":"function"}}
| | | whiteSpace: ?b [3:9-3:9] {C:0} {A:{}}
| | | identifier: CFGA020 [3:10-3:16] {C:0} {A:{}}
| | | argumentList:  [3:17-3:18] {C:3} {A:{}}
| | | | operatorParenthesis: ( [3:17-3:17] {C:0} {A:{}}
| | | | operatorParenthesis: ) [3:18-3:18] {C:0} {A:{}}
| | | endLine: - [3:19-3:19] {C:0} {A:{}}
| | | -newLine: \\n [3:19-3:19] {C:0} {A:{}}
| | bodyBlock:  [3:1-4:18] {C:1} {A:{}}
| | | keyword: Return [4:1-4:6] {C:0} {A:{"command":"return"}}
| | | whiteSpace: ?b [4:7-4:7] {C:0} {A:{}}
| | | identifier: Apcfg020 [4:8-4:15] {C:0} {A:{}}
| | | operatorParenthesis: ( [4:16-4:16] {C:0} {A:{}}
| | | operatorParenthesis: ) [4:17-4:17] {C:0} {A:{}}
| | | newLine: \\n [4:18-4:18] {C:0} {A:{}}
| | endBlock:  [3:1--Infinity:-Infinity] {C:1} {A:{}}

`;

exports[`prw: Token cfga040.prw 1`] = `
#include "Protheus.ch"

Function CFGA040()
Return Apcfg040()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program:  [1:1-4:18] {C:1} {A:{}}
| directive: - [1:1-1:24] {C:0} {A:{}}
| -operator: # [1:1-1:1] {C:0} {A:{}}
| -keyword: include [1:2-1:8] {C:0} {A:{}}
| -whiteSpace: ?b [1:9-1:9] {C:0} {A:{}}
| -string: "Protheus.ch" [1:10-1:22] {C:0} {A:{}}
| -endLine: - [1:23-1:24] {C:0} {A:{}}
| --newLine: \\n\\n [1:23-1:24] {C:0} {A:{}}
| block:  [3:1-4:18] {C:3} {A:{}}
| | beginBlock:  [3:1-3:19] {C:1} {A:{}}
| | | keyword: Function [3:1-3:8] {C:0} {A:{"command":"function"}}
| | | whiteSpace: ?b [3:9-3:9] {C:0} {A:{}}
| | | identifier: CFGA040 [3:10-3:16] {C:0} {A:{}}
| | | argumentList:  [3:17-3:18] {C:3} {A:{}}
| | | | operatorParenthesis: ( [3:17-3:17] {C:0} {A:{}}
| | | | operatorParenthesis: ) [3:18-3:18] {C:0} {A:{}}
| | | endLine: - [3:19-3:19] {C:0} {A:{}}
| | | -newLine: \\n [3:19-3:19] {C:0} {A:{}}
| | bodyBlock:  [3:1-4:18] {C:1} {A:{}}
| | | keyword: Return [4:1-4:6] {C:0} {A:{"command":"return"}}
| | | whiteSpace: ?b [4:7-4:7] {C:0} {A:{}}
| | | identifier: Apcfg040 [4:8-4:15] {C:0} {A:{}}
| | | operatorParenthesis: ( [4:16-4:16] {C:0} {A:{}}
| | | operatorParenthesis: ) [4:17-4:17] {C:0} {A:{}}
| | | newLine: \\n [4:18-4:18] {C:0} {A:{}}
| | endBlock:  [3:1--Infinity:-Infinity] {C:1} {A:{}}

`;
