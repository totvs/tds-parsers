#INCLUDE "ERROR.CH"
#INCLUDE "FWADAPTEREAI.CH"

#DEFINE PESQ_SAY  10
#DEFINE PESQ_GET  70
#DEFINE PESQ_TOP  5
#DEFINE PESQ_SKIP 15
#DEFINE PDABOTTOM 234
#DEFINE PDARIGHT  234

Static __lPointSB6
Static oGets,__cLineOK, oGetDados, nCount, __nOpcx
Static __lFirstXE
Static __aKeys
//Statics da AtuSalDup
Static nMCusto
Static cTiposLC
Static __lSemServer
Static __lCleaned := .f.

Static __SpecialKey	:= NIL
Static __HasFunType

Static __HasSNPrvt	:= NIL

Static lFWCodFil := FindFunction("FWCodFil")

#include "protheus.ch"
#include "MATXATU.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ AxVisual ³ Autor ³ Jorge Queiroz         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa generico para visualizacao 		                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ AxVisual(ExpC1,ExpN1,ExpN2,ExpA1,ExpN3,ExpC1)              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³			 ³ ExpN2 = Numero do registro                                 ³±±
±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
±±³			 ³ ExpA4 = Array com os campos a serem mostrados              ³±±
±±³			 ³ ExpN5 = Coluna a ser impressa uma determinada mensagem	  ³±±
±±³			 ³ ExpC6 = Mensagem a ser impressa                            ³±±
±±³			 ³ ExpC7 = Funcao a ser executada antes de entrar na tela	  ³±±
±±³			 ³ ExpA8 = Array com os botoes da EnchoiceBar            	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
FUNCTION AxVisual(cAlias,nReg,nOpc,aAcho,nColMens,cMensagem,cFunc,aButtons,lMaximized,cTela,;
		lPanelFin,oFather,oEnc01,lCriaBut,aDim,cStack,aCpos)

	Local aArea    := GetArea()
	Local aPosEnch := {}
	Local nOpcA    := 3
	Local cCpoFil  := PrefixoCpo(cAlias)+"_FILIAL"
	Local cMemo    := ""
	LOcal nX       := 0
	Local oDlg
	Local lVirtual:=.F. // Qdo .F. carrega inicializador padrao nos campos virtuais
	Local nTop
	Local nLeft
	Local nBottom
	Local nRight
	Local oSize

	Private Altera :=.F.
	Private Inclui :=.F.
	Private aTELA[0][0]
	Private aGETS[0]

	//verifica a criacao ou nao da barra de botoes (enchoicebar) quando chamado do Gestor Financeiro
	DEFAULT lCriaBut := .F.
	DEFAULT lPanelFin := .F.
	DEFAULT oFather:= If(lPanelFin,FinWindow:GetVisPanel(),NIL)
	DEFAULT aCpos :={}

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento efetuado na variavel "cFilDep", utilizada na consulta padrao "QDD". ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("cFilDep") ==  "U"
		cFilDep := xFilial("QAD") // Utilizada no SXB
	Endif


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³VerIfica se esta' vizualizando um registro da mesma filial            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea(cAlias)

	If (cAlias)->(FieldPos(cCpoFil))==0 .Or. (If (!lPanelFin,(cAlias)->(FieldGet(FieldPos(cCpoFil))) == xFilial(cAlias),.T.))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta a entrada de dados do arquivo						     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RegToMemory(cAlias, .F., If(lPanelFin,.T., .F.),,cStack )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa variaveis para campos Memos Virtuais						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Type("aMemos")=="A"
			For nX := 1 To Len(aMemos)
				cMemo := aMemos[nX][2]
				If ExistIni(cMemo)
					&cMemo := InitPad(SX3->X3_RELACAO)
				Else
					&cMemo := ""
				EndIf
			Next nX
		EndIf
		If cFunc != NIL
			lVirtual:=.T.
			&cFunc.()
		EndIf

		If !lPanelFin

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Calcula as dimensoes dos objetos                                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oSize := FwDefSize():New( .T. ) // Com enchoicebar

			oSize:lLateral     := .F.  // Calculo vertical

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria Enchoice                                                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oSize:AddObject( "ENCHOICE", 100, 60, .T., .T. ) // Adiciona enchoice

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Dispara o calculo                                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oSize:Process()

			nTop    := oSize:aWindSize[1]
			nLeft   := oSize:aWindSize[2]
			nBottom := oSize:aWindSize[3]
			nRight  := oSize:aWindSize[4]

			If FindFunction("ISPDA") .and. IsPDA()
				nTop := 0
				nLeft := 0
				nBottom := PDABOTTOM
				nRight  := PDARIGHT
			EndIf

			DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd

			If lMaximized <> NIL
				oDlg:lMaximized := lMaximized
			EndIf

			If FindFunction("ISPDA") .and. IsPDA()
				aPosEnch := {,,(oDlg:nClientHeight - 4)/2,}  // ocupa todo o  espaço da janela
				oEnc01:= MsMGet():New( cAlias, nReg, nOpc ,,,,aAcho,aPosEnch,,,nColMens,cMensagem,,,,lVirtual,.t.,,,,,,,, cTela )
				oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
			Else

				aPosEnch := {oSize:GetDimension("ENCHOICE","LININI"),;
					oSize:GetDimension("ENCHOICE","COLINI"),;
					oSize:GetDimension("ENCHOICE","LINEND"),;
					oSize:GetDimension("ENCHOICE","COLEND")}

				If nColMens != NIL
					oEnc01:= MsMGet():New( cAlias, nReg, nOpc ,,,,aAcho,aPosEnch,aCpos,,nColMens,cMensagem,,,,lVirtual,,,,,,,,, cTela)
					oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
				Else
					oEnc01:= MsMGet():New( cAlias, nReg, nOpc ,,,,aAcho,aPosEnch,aCpos,,,,,,,lVirtual,,,,,,,,, cTela)
					oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
				EndIf
			EndIf
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpcA := 1,oDlg:End()},{|| nOpcA := 2,oDlg:End()},,aButtons)

		Else

			If lCriaBut

				//dimensoes do painel visual contido no Gestor Financeiro
				//aDim := FinWindow:DimObj("panel_visual")

				//Visualizacao no Gestor Financeiro com enchoicebar
				DEFINE MSDIALOG ___oDlg OF oFather:oWnd FROM 0, 0 TO 0, 0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )

				aPosEnch := {,,,}
				oEnc01:= MsMGet():New( cAlias, nReg, nOpc,,,,aAcho,aPosEnch,,,,,,___oDlg,,lVirtual,,,,,,,,,cTela)
				oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT

				// posiciona dialogo sobre a celula
				___oDlg:nWidth := aDim[4]-aDim[2]

				ACTIVATE MSDIALOG ___oDlg ON INIT (FaMyBar(___oDlg,{|| nOpcA := 1,___oDlg:End(),},	{|| nOpcA := 2,___oDlg:End()},aButtons), ___oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]) )

				If Type("FinWindow") <> "U"
					FinVisual(cAlias,FinWindow,(cAlias)->(Recno()))
				EndIf
			Else
				//Visualizacao no Gestor Financeiro sem enchoicebar
				aPosEnch := {,,,}
				oEnc01:= MsMGet():New( cAlias, nReg, 1,,,,aAcho,aPosEnch,,,,,,oFather,,lVirtual,,,,,,,,,cTela)
				oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
			Endif
		Endif

	Else
		Help(" ",1,"A000FI")
		nOpcA := 3
	EndIf

	RestArea(aArea)
	Return(nOpcA)

	/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o	 ³ AxAltera ³ Autor ³ Jorge Queiroz 	     ³ Data ³	        ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Programa generico para alteracao 						  		  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe	 ³ ExpN1 := AxAltera(ExpC1,ExpN2,ExpN3,ExpA1,ExpA2)			  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
	±±³			 ³ ExpN2 = Numero do registro                                 ³±±
	±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
	±±³			 ³ ExpA4 = Array com os campos a serem mostrados              ³±±
	±±³			 ³ ExpN5 = Coluna a ser impressa uma determinada mensagem	  ³±±
	±±³			 ³ ExpC6 = Mensagem a ser impressa                            ³±±
	±±³			 ³ ExpC7 = Funcao de validacao para confirmacao dos dados	  ³±±
	±±³			 ³ ExpC8 = Funcao a ser chamada durante a transacao           ³±±
	±±³			 ³ ExpC9 = Funcao a ser chamada antes da interface            ³±±
	±±³			 ³ ExpAA = Array com os botoes da EnchoiceBar            	  ³±±
	±±³			 ³ ExpAB = Array de codeblock de execucao                	  ³±±
	±±³			 ³ ExpAC = Array da rotina automatica                    	  ³±±
	±±³			 ³ ExpLD = Carrega os campos virtuais? (.T.=Sim/.F.=Nao		  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso		 ³ Generico 												  				  ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
	/*/
FUNCTION AxAltera(cAlias,nReg,nOpc,aAcho,aCpos,nColMens,cMensagem,cTudoOk,cTransact,cFunc,;
		aButtons,aParam,aAuto,lVirtual,lMaximized,cTela,lPanelFin,oFather,aDim,uArea,lFlat)

	Local aArea    := GetArea(cAlias)
	Local aPosEnch := {}
	Local bCampo   := {|nCPO| Field(nCPO) }
	Local bOk      := Nil
	Local bOk2     := {|| .T.}
	Local cCpoFil  := PrefixoCpo(cAlias)+"_FILIAL"
	Local cMemo    := ""
	Local nOpcA    := 0
	Local nX       := 0
	Local oDlg
	Local nTop
	Local nLeft
	Local nBottom
	Local nRight
	Local cAliasMemo
	Local bEndDlg := {|lOk| lOk:=oDlg:End(), nOpcA:=1, lOk}
	Local oEnc01
	Local oSize

	Private aTELA[0][0]
	Private aGETS[0]

	DEFAULT lVirtual:= .F.
	DEFAULT cTudoOk := ".T."
	DEFAULT nReg    := (cAlias)->(RecNO())
	DEFAULT bOk := &("{|| "+cTudoOk+"}")
	DEFAULT lPanelFin := .F.
	DEFAULT lFlat := .F.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento de codeblock de validacao de confirmacao            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(aParam)
		bOk2 := aParam[2]
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³VerIfica se esta' alterando um registro da mesma filial               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea(cAlias)
	If (cAlias)->(FieldPos(cCpoFil))==0 .Or. (cAlias)->(FieldGet(FieldPos(cCpoFil))) == xFilial(cAlias)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta a entrada de dados do arquivo						     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SoftLock(cAlias)
			RegToMemory(cAlias,.F.,lVirtual)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa variaveis para campos Memos Virtuais		 			  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Type("aMemos")=="A"
				For nX:=1 to Len(aMemos)
					cMemo := aMemos[nX][2]
					If ExistIni(cMemo)
						&cMemo := InitPad(SX3->X3_RELACAO)
					Else
						&cMemo := ""
					EndIf
				Next nX
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa variaveis para campos Memos Virtuais		 			  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( ValType( cFunc ) == 'C' )
				If ( !("(" $ cFunc) )
					cFunc+= "()"
				EndIf
				&cFunc
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Processamento de codeblock de antes da interface                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(aParam)
				Eval(aParam[1],nOpc)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Envia para processamento dos Gets				   	 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If aAuto == Nil
				If !lPanelFin .AND. !lFlat

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Calcula as dimensoes dos objetos                                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					oSize := FwDefSize():New( .T. ) // Com enchoicebar

					oSize:lLateral     := .F.  // Calculo vertical

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria Enchoice                                                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					oSize:AddObject( "ENCHOICE", 100, 60, .T., .T. ) // Adiciona enchoice

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Dispara o calculo                                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					oSize:Process()

					nTop    := oSize:aWindSize[1]
					nLeft   := oSize:aWindSize[2]
					nBottom := oSize:aWindSize[3]
					nRight  := oSize:aWindSize[4]

					If FindFunction("ISPDA").and. IsPDA()
						nTop := 0
						nLeft := 0
						nBottom := PDABOTTOM
						nRight  := PDARIGHT
					EndIf
					// Build com correção no tratamento dos controles pendentes na dialog ao executar o método End()
					If GetBuild() >= "7.00.060302P"
						bEndDlg := {|lOk| If(lOk:=oDlg:End(),nOpcA:=1,nOpcA:=3), lOk}
					EndIf

					DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd

					If lMaximized <> NIL
						oDlg:lMaximized := lMaximized
					EndIf

					If FindFunction("ISPDA").and. IsPDA()
						oEnc01:= MsMGet():New( cAlias, nReg, nOpc,     ,"CRA",oemtoansi(STR0004),aAcho,  aPosEnch,aCpos, ,nColMens,If(nColMens != Nil,cMensagem,NIL),cTudoOk,,lVirtual,.t.,,,,,,,,, cTela) //"Quanto …s altera‡”es?"
						oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
					Else

						aPosEnch := {oSize:GetDimension("ENCHOICE","LININI"),;
							oSize:GetDimension("ENCHOICE","COLINI"),;
							oSize:GetDimension("ENCHOICE","LINEND"),;
							oSize:GetDimension("ENCHOICE","COLEND")}

						If nColMens != Nil
							oEnc01:= MsMGet():New( cAlias, nReg, nOpc, ,"CRA",oemtoansi(STR0004),aAcho,aPosEnch,aCpos,,nColMens,cMensagem,cTudoOk,,lVirtual,,,,,,,,,, cTela) //"Quanto …s altera‡”es?"
						Else
							oEnc01:= MsMGet():New( cAlias, nReg, nOpc, ,"CRA",oemtoansi(STR0004),aAcho,aPosEnch,aCpos,,,,cTudoOk,,lVirtual,,,,,,,,,, cTela) //"Quanto …s altera‡”es?"
						EndIf
						oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
					EndIf
					ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| IIf(Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc),Eval(bEndDlg),(nOpcA:=3,.F.))},{|| nOpcA := 3,oDlg:End()},,aButtons,nReg,cAlias)
				Else

					DEFINE MSDIALOG ___oDlg OF oFather:oWnd  FROM 0, 0 TO 0, 0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )

					aPosEnch := {,,,}
					oEnc01:= MsMGet():New( cAlias, nReg, nOpc,,"CRA",oemtoansi(STR0004),aAcho,aPosEnch,aCpos,,,,cTudoOk,___oDlg  ,,lVirtual,.F.,,,,,,,,cTela) //"Quanto …s altera‡”es?"
					oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT

					bEndDlg := {|lOk| If(lOk:=___oDlg:End(),nOpcA:=1,nOpcA:=3), lOk}

					// posiciona dialogo sobre a celula
					___oDlg:nWidth := aDim[4]-aDim[2]
					ACTIVATE MSDIALOG ___oDlg  ON INIT (FaMyBar(___oDlg,{|| If(Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc),Eval(bEndDlg),(nOpcA:=3,.f.))},{|| nOpcA := 3,___oDlg:End()},aButtons), ___oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]) )

				Endif
			Else
				If EnchAuto(cAlias,aAuto,{|| Obrigatorio(aGets,aTela) .And. Eval(bOk).And.Eval(bOk2,nOpc)},nOpc,aCpos)
					nOpcA := 1
				EndIf
			EndIf
			(cAlias)->(MsGoTo(nReg))
			If nOpcA == 1
				Begin Transaction
					RecLock(cAlias,.F.)
					For nX := 1 TO FCount()
						FieldPut(nX,M->&(EVAL(bCampo,nX)))
					Next nX
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Grava os campos Memos Virtuais					  				  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Type("aMemos") == "A"
						For nX := 1 to Len(aMemos)
							cVar := aMemos[nX][2]
							cVar1:= aMemos[nX][1]
							//Incluído parametro com o nome da tabela de memos => para módulo APT
							cAliasMemo := If(len(aMemos[nX]) == 3,aMemos[nX][3],Nil)
							MSMM(&cVar1,TamSx3(aMemos[nX][2])[1],,&cVar,1,,,cAlias,aMemos[nX][1],cAliasMemo)
						Next nX
					EndIf
					If cTransact != Nil
						If !("("$cTransact)
							cTransact+="()"
						EndIf
						&cTransact
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Processamento de codeblock dentro da transacao                    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !Empty(aParam)
						Eval(aParam[3],nOpc)
					EndIf
				End Transaction
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Processamento de codeblock fora da transacao                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty(aParam)
					Eval(aParam[4],nOpc)
				EndIf
			EndIf
		Else
			nOpcA := 3
		EndIf
	Else
		Help(" ",1,"A000FI")
		nOpcA := 3
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura a integridade dos dados                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MsUnLockAll()
	RestArea(aArea)

	If lPanelFin
		FinVisual(cAlias,uArea,(cAlias)->(Recno()))
	Endif

	Return(nOpcA)

	/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o	 ³ AxInclui ³ Autor ³ Jorge Queiroz			  ³ Data ³			  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Programa generico para iclusao									  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe e ³ Void AxInclui(ExpC1,ExpN1,ExpN2,ExpA1,ExpC2) 				  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
	±±³			 ³ ExpN2 = Numero do registro                                 ³±±
	±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
	±±³			 ³ ExpA4 = Array com os campos a serem mostrados              ³±±
	±±³			 ³ ExpC5 = Funcao de validacao para confirmacao dos dados	  ³±±
	±±³			 ³ ExpL6 = Controle da CondPad                                ³±±
	±±³			 ³ ExpC7 = Funcao a ser chamada durante a transacao           ³±±
	±±³			 ³ ExpA8 = Array com os botoes da EnchoiceBar            	  ³±±
	±±³			 ³ ExpA9 = Array de codeblock de execucao                	  ³±±
	±±³			 ³ ExpAA = Array da rotina automatica                    	  ³±±
	±±³			 ³ ExpAB = Inicializa os campos virtuais?                     ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso		 ³ Generico 																  ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
	/*/
Function AxInclui(cAlias,nReg,nOpc,aAcho,cFunc,aCpos,cTudoOk,lF3,cTransact,aButtons,;
		aParam,aAuto,lVirtual,lMaximized,cTela,lPanelFin,oFather,aDim,uArea, lFlat )

	Local aArea    := GetArea(cAlias)
	Local aCRA     := { oemtoansi(STR0001),oemtoansi(STR0002),oemtoansi(STR0003) }//"Confirma" ### "Redigita" ### "Abandona"
	Local aSvRot   := Nil
	Local aPosEnch := {}
	Local cMemo    := ""
	Local nX       := 0
	Local nOpcA    := 0
	Local nLenSX8  := GetSX8Len()
	Local bCampo   := {|nCPO| Field(nCPO) }
	Local bOk      := Nil
	Local bOk2     := {|| .T.}
	Local oDlg
	Local nTop
	Local nLeft
	Local nBottom
	Local nRight
	Local cAliasMemo
	Local bEndDlg := {|lOk| lOk:=oDlg:End(), nOpcA:=1, lOk}
	Local oEnc01
	Local oSize

	Private aTELA[0][0]
	Private aGETS[0]

	DEFAULT cTudoOk := ".T."
	DEFAULT bOk     := &("{|| "+cTudoOk+"}")
	DEFAULT lF3     := .F.
	DEFAULT lVirtual:= .F.
	DEFAULT lPanelFin := .F.
	DEFAULT lFlat		:= .F.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento de codeblock de validacao de confirmacao            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(aParam)
		bOk2 := aParam[2]
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta a entrada de dados do arquivo							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpc == Nil
		nOpc := 3
		If Type("aRotina") == "A"
			aSvRot := aClone(aRotina)
		EndIf
		Private aRotina := { { " "," ",0,1 } ,{ " "," ",0,2 },{ " "," ",0,3 } }
	EndIf
	RegToMemory(cAlias, .T., lVirtual )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa variaveis para campos Memos Virtuais (GILSON)			 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("aMemos")=="A"
		For nX :=1 To Len(aMemos)
			cMemo := aMemos[nX][2]
			If ExistIni(cMemo)
				&cMemo := InitPad(SX3->X3_RELACAO)
			Else
				&cMemo := ""
			EndIf
		Next nX
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Funcoes executadas antes da chamada da Enchoice      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cFunc != NIL
		&cFunc.()
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento de codeblock de antes da interface                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(aParam)
		Eval(aParam[1],nOpc)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia para processamento dos Gets		 			 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aAuto == Nil
		If !lPanelFin .AND. !lFlat

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Calcula as dimensoes dos objetos                                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oSize := FwDefSize():New( .T. ) // Com enchoicebar

			oSize:lLateral     := .F.  // Calculo vertical

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria Enchoice                                                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oSize:AddObject( "ENCHOICE", 100, 60, .T., .T. ) // Adiciona enchoice

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Dispara o calculo                                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oSize:Process()

			nTop    := oSize:aWindSize[1]
			nLeft   := oSize:aWindSize[2]
			nBottom := oSize:aWindSize[3]
			nRight  := oSize:aWindSize[4]

			If FindFunction("ISPDA") .and. IsPDA()
				nTop := 0
				nLeft := 0
				nBottom := PDABOTTOM
				nRight  := PDARIGHT
			EndIf

			// Build com correção no tratamento dos controles pendentes na dialog ao executar o método End()
			If GetBuild() >= "7.00.060302P"
				bEndDlg := {|lOk| If(lOk:=oDlg:End(),nOpcA:=1,nOpcA:=3), lOk}
			EndIf

			DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd
			If lMaximized <> NIL
				oDlg:lMaximized := lMaximized
			EndIf


			If FindFunction("ISPDA") .and. IsPDA()
				aPosEnch := {,,,}
				oEnc01:= MsMGet():New( cAlias, nReg, nOpc, aCRA,"CRA",oemtoansi(STR0005),aAcho, aPosEnch , aCpos, , , ,cTudoOk,,lF3,lVirtual,.t.,,,,,,,,cTela) //"Quanto … inclus„o?"
				oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
			Else
				aPosEnch := {oSize:GetDimension("ENCHOICE","LININI"),;
					oSize:GetDimension("ENCHOICE","COLINI"),;
					oSize:GetDimension("ENCHOICE","LINEND"),;
					oSize:GetDimension("ENCHOICE","COLEND")}

				oEnc01:= MsMGet():New( cAlias, nReg, nOpc, aCRA,"CRA",oemtoansi(STR0005),aAcho, aPosEnch , aCpos, , , ,cTudoOk,,lF3,lVirtual,,,,,,,,,cTela) //"Quanto … inclus„o?"
				oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
			Endif

			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| If(Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc),Eval(bEndDlg),(nOpcA:=3,.f.))},{|| nOpcA := 3,oDlg:End()},,aButtons)

		ElseIf lPanelFin .OR. lFlat

			DEFINE MSDIALOG ___oDlg OF oFather:oWnd FROM 0, 0 TO 0, 0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )

			aPosEnch := {,,,}
			oEnc01:= MsMGet():New( cAlias, nReg, nOpc, aCRA,"CRA",oemtoansi(STR0005),aAcho,aPosEnch,aCpos,,,,cTudoOk,___oDlg,lF3,lVirtual,.F.,,,,,,,,cTela) //"Quanto … inclus„o?"
			oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT

			bEndDlg := {|lOk| If(lOk:=___oDlg:End(),nOpcA:=1,nOpcA:=3), lOk}

			// define dimenção da dialog
			___oDlg:nWidth := aDim[4]-aDim[2]

			ACTIVATE MSDIALOG ___oDlg  ON INIT (FaMyBar(___oDlg,{|| If(Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc),Eval(bEndDlg),(nOpcA:=3,.f.))},{|| nOpcA := 3,___oDlg:End()},aButtons), ___oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]) )

			(cAlias)->(MsGoto( nReg ) )

		EndIf

		If lF3  // Esta na conpad, desabilita o trigger por execblock
			SetEntryPoint(.f.)
		EndIf
	Else
		If EnchAuto(cAlias,aAuto,{|| Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc)},nOpc,aCpos)
			nOpcA := 1
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravacao da enchoice                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcA == 1
		Begin Transaction
			RecLock(cAlias,.T.)
			For nX := 1 TO FCount()
				If "_FILIAL"$FieldName(nX)
					FieldPut(nX,xFilial(cAlias))
				Else
					FieldPut(nX,M->&(EVAL(bCampo,nX)))
				EndIf
			Next nX
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Grava os campos Memos Virtuais         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Type("aMemos") == "A"
				For nX := 1 to Len(aMemos)
					cVar := aMemos[nX][2]
					//Incluído parametro com o nome da tabela de memos => para módulo APT
					cAliasMemo := If(len(aMemos[nX]) == 3,aMemos[nX][3],Nil)
					MSMM(,TamSx3(aMemos[nX][2])[1],,&cVar,1,,,cAlias,aMemos[nX][1],cAliasMemo)
				Next nX
			EndIf
			While ( GetSX8Len() > nLenSX8 )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Confirma a numeracao com a verificacao do numero gravado ativado  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ConfirmSx8()
			EndDo
			If cTransact != Nil
				If !("("$cTransact)
					cTransact+="()"
				EndIf
				&cTransact
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Processamento de codeblock dentro da transacao                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(aParam)
				Eval(aParam[3],nOpc)
			EndIf
		End Transaction
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processamento de codeblock fora da transacao                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(aParam)
			Eval(aParam[4],nOpc)
		EndIf
	Else
		While ( GetSX8Len() > nLenSX8 )
			RollBackSX8()
		EndDo
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura a integridade dos dados                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aSvRot != Nil
		aRotina := aClone(aSvRot)
	EndIf
	RestArea(aArea)
	lRefresh := .T.

	If lPanelFin
		FinVisual(cAlias,uArea,(cAlias)->(Recno()))
	Endif

	Return(nOpcA)
	/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o	 ³Obrigatori³ Autor ³ Jorge Queiroz 		³ Data ³		  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ VerIfica se todos os campos obrigatorios foram digitados.  ³±±
	±±³			 ³ 															  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe	 ³ ExpL1 := Obrigatori(ExpA1,ExpA2) 						  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpL1 = Retorna .F. se algum campo obrigatorio esta vazio  ³±±
	±±³			 ³ ExpA1 = Array com os campos a serem verIficados 			  ³±±
	±±³			 ³ ExpA2 = Array com os titulos da tela						  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso		 ³ Generico 												  ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
	/*/
FUNCTION Obrigatorio(aGets,aTela,tObg,lShow)
	Local i,n,bCampo,x,y, cText := "", cByte
	#ifdef ENGLISH
		Local aPos := {"First","Second","Third","Fourth","Fifth","Sixth","Seventh","Eighth","Ninth","Last"}
		Local cFold := "Folder"
	#else
		#ifdef SPANISH
			Local aPos := {"Primera","Segunda","Tercera","Cuarta","Quinta","Sexta","Septima","Octava","Novena","Ultima"}
			Local cFold := "Carpeta"
		#else
			Local aPos := {"Primeira","Segunda","Terceira","Quarta","Quinta","Sexta","Setima","Oitava","Nona","Ultima"}
			Local cFold := "Pasta"
		#endif
	#endif

	DEFAULT lShow := .T.

	bCampo := {|nCPO| Field(nCPO) }
	tObg:=""
	FOR i:=1 TO LEN(aGETS)
		If SubStr(aGETS[i],25,1) == "T" .AND. Empty(M->&(SubStr(aGETS[i],9,10)))
			AchaATELA(@x,@y,i,aTela)
			If x*y > 0
				tObg:=tObg+aTELA[x][y]
				If Empty(ctext)
					cByte := Subs(aGets[i],27,1)
					If cByte == " "
						cText := Subs(aTela[x,y],1,18)
					ElseIf cByte$"123456789"
						cText := Subs(aTela[x,y],1,18)+" -> "+aPos[Val(cByte)]+" "+cFold
					Else
						cText := Subs(aTela[x,y],1,18)+" -> "+aPos[10]+" "+cFold
					EndIf
				EndIf
			Else
				tObg := "VV"
			EndIf
		EndIf

	NEXT i

	cText := cText + Space(50-Len(cText))

	If LEN(tObg) > 0
		If lShow
			Help(1," ","OBRIGAT",,cText,3,0)
		EndIf
		Return .F.
	EndIf
	Return .T.

Static Function AchaAtela(x,y,i,aTELA)
	Local ni, nJ:= 0
	For ni:=1 to Len(aTela)
		If !Empty(aTela[ni,1])
			nJ++
		EndIf
		If nJ == i
			x := ni
			y := 1
			Return Nil
		EndIf
		If !Empty(aTela[ni,3])
			nJ++
		EndIf
		If nJ == i
			x := ni
			y := 3
			Return Nil
		EndIf
	Next
	Return Nil

	/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o	 ³AxPesqui	³ Autor ³ Jorge Queiroz 		³ Data ³          ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Pesquisas genericas										  ³±±
	±±³			 ³ 															  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe e ³ AxPesqui()												  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ 															  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso		 ³ Generico 												  ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
	/*/
Function AxPesqui()
	Local oDlg, oCbx, cOrd, oBigGet
	Local nSavReg, cAlias, ni, nj
	Local cCpofil, dCampo
	Local nOrd    := 1
	Local lSeek   := .F.
	Local aLista  := {}
	Local bSav12  := SetKey(VK_F12)
	Local cCampo  := Space(60)

	Local lDetail := .F.
	Local lUseDetail := .F.
	Local aAllLista
	Local oDetail
	Local aMyOrd	:= {}
	Local aScroll	:= {}
	Local lSeeAll   := GetBrwSeeMode()
	Local aPesqVar  := {}
	Local cVar
	Local bBloco
	Local cMsg := ""
	Local oPPreview
	Local oList
	Local aList    := {}
	Local lMenuDef := ( ProcName(1) == "MBRBLIND" ) .Or. RunInMenuDef()
	Local lPreview := .F.
	Local nRet     := 0

	Private aOrd     := {}

	/*/
	aLista
	[1] := F3
	[2] := tipo
	[3] := tamanho
	[4] := decimais
	[5] := titulo
	/*/

	SetKey(VK_F12,{|| NIL})

	cAlias := Alias()
	DbSelectArea(cAlias)
	cCpofil := PrefixoCpo(cAlias)+"_FILIAL"
	nSavReg := Recno()

	If At(cCpoFil,Indexkey())==1 .And. !lSeeAll
		If &cCpofil!=cFilial
			DbSeek(cFilial)
		Endif
	Else
		DbGoTop()
	EndIf

	If Eof()
		If lMenuDef
			Help(" ",1,"ARQVAZIO")
		Else
			Help(" ",1,"A000FI")
		EndIf
		SetKey(VK_F12,bSav12)
		Return 3
	EndIf

	If nSavReg!=Recno()
		DbGoTo(nSavReg)
	Endif

	AxPesqOrd(cAlias,@aMyOrd,@lUseDetail,lSeeAll)

	nOrd := 1
	cOrd := aOrd[1]
	For nI := 1 To Len(aOrd)
		aOrd[nI] := OemToAnsi(aOrd[nI])
	Next

	If IndexOrd() > Len(aOrd)
		cOrd := 1 //aOrd[Len(aOrd)]
		nOrd := 1 //Len(aOrd)
	ElseIf IndexOrd() <= 1
		cOrd := aOrd[1]
		nOrd := 1
	Else
		cOrd := aOrd[IndexOrd()]
		nOrd := IndexOrd()
	EndIf

	If lUseDetail .and. !PesqList(cAlias,lSeeAll,@aPesqVar,@aAllLista,@cMsg)
		Help(,,"PESQLIST",,STR0048+cMsg+STR0049,1,1)	//"O campo "###" não foi encontrado no Didionário de Campos (SX3)"
		Return 0
	EndIf

	DEFINE MSDIALOG oDlg FROM 00,00 TO 100,490 PIXEL TITLE OemToAnsi(STR0010) //"Pesquisa"

	@05,05 COMBOBOX oCBX VAR cOrd ITEMS aOrd SIZE 206,36 PIXEL OF oDlg FONT oDlg:oFont

	@22,05 MSGET oBigGet VAR cCampo SIZE 206,10 PIXEL

	If lMenuDef
		DEFINE SBUTTON FROM 05,215 TYPE 1 OF oDlg ENABLE ;
			ACTION If(lPreview,( DbGoto(aList[oList:nAt,Len(aList[oList:nAt])]), nRet := 1, oDlg:End() ),;
			(lPreview := AxPreview(cAlias,lDetail,cCampo,aLista,aMyOrd,nOrd,lSeeAll,aPesqVar,@oPPreview,oBigGet,aScroll,nOrd,@oList,@aList), ;
			If(!lPreview,oDlg:End(),(PesqDetail(.F.,oDlg,{},oBigGet),oCBX:Disable(),oDetail:Disable()))))

			DEFINE SBUTTON FROM 20,215 TYPE 2 OF oDlg ENABLE ACTION If(lPreview,(lPreview:= .F.,oPPreview:Hide(),PesqDetail(!lDetail,oDlg,aScroll,oBigGet,nOrd),;
				oCBX:Enable(),oDetail:Enable()),oDlg:End())
		Else
			DEFINE SBUTTON FROM 05,215 TYPE 1 OF oDlg ENABLE ACTION (lSeek := .T.,oDlg:End())
			DEFINE SBUTTON FROM 20,215 TYPE 2 OF oDlg ENABLE ACTION oDlg:End()
		EndIf

		If ( lUseDetail )
			@22,05 MSPANEL oPPreview SIZE 205,84 OF oDlg
			oPPreview:Hide()
			DEFINE SBUTTON oDetail FROM 35,215 TYPE 5 OF oDlg ENABLE ONSTOP STR0032 ACTION (lDetail := PesqDetail(lDetail,@oDlg,@aScroll,@oBigGet,nOrd,oPPreview),;
				If(lMenuDef,(lPreview:= .F.,oPPreview:Hide()),)) //"Detalhes"

				For ni := 1 To Len(aAllLista)
					Aadd(aScroll,NIL)
					@22,05 SCROLLBOX aScroll[ni] VERTICAL SIZE 84,205 BORDER
					aScroll[ni]:Hide()

					For nj := 1 To Len(aAllLista[ni])
						cVar := "aPesqVar["+StrZero(ni,2)+"]["+StrZero(nj,2)+"]"
						bBloco  := &("{ | u | If( PCount() == 0, "+cVar+","+cVar+" := u)}")
						PesqInit(aAllLista[ni],aScroll[ni],nj,bBloco,cVar)
					Next
				Next

				oCbx:bChange := {|| PesqChange(@nOrd,oCbx:nAt,@aLista,cAlias,@aAllLista,@aScroll,@lDetail,@oDetail,@oDlg,@oBigGet) }
				aLista := Aclone(aAllLista[nOrd])
			Else
				oCbx:bChange := {|| nOrd := oCbx:nAt}
			EndIf

			ACTIVATE MSDIALOG oDlg CENTERED

			If ( lSeek )
				nRet := 1
				AxPesqSeek(cAlias,lDetail,cCampo,aLista,aMyOrd,nOrd,lSeeAll,aPesqVar)
				SetKey(VK_F12,bSav12)
			Else
				SetKey(VK_F12,bSav12)
			EndIf

			Return nRet

		Function AxPesqSeek(cAlias,lDetail,cCampo,aLista,aMyOrd,nOrd,lSeeAll,aPesqVar,lPreview)
			Local nReg
			Local nChave  := 1
			Local cFil    := ""
			Local cCpofil := PrefixoCpo(cAlias)+"_FILIAL"
			Local aFils	  := {}
			Local nI
			Local aRet    := {}
			Local lRet    := .T.
			Local nRecno  := 0
			Local nSizeFil := 2
			Local nJ	  := 0
			Local lEOF	  := .F.
			Default lPreview := .F.

			//-- Atualiza o conteúdo da filial
			If FindFunction("FWSizeFilial")
				nSizeFil := FWSizeFilial()
			EndIf

			DbSelectArea(cAlias)
			If ( lDetail )
				cCampo := ""
				For nI := 1 To Len(aPesqVar[nOrd])
					If ( aLista[nI][2] == "C" .And. (Len(cCampo) <> aLista[nI][3]) )
						cCampo += Subs(aPesqVar[nOrd][nI],1,aLista[nI][3])
					ElseIf ( aLista[nI][2] == "D" )
						cCampo += Dtos(aPesqVar[nOrd][nI])
					ElseIf ( aLista[nI][2] == "N" )
						cCampo += Str(aPesqVar[nOrd][nI],aLista[nI][3],aLista[nI][4])
					Else
						cCampo += aPesqVar[nOrd][nI]
					EndIf
				Next
			EndIf
			cCampo := Trim(cCampo)
			nReg := Recno()
			SET SOFTSEEK ON
			DbSetOrder(aMyOrd[nOrd, 1])
			If At(cCpoFil,Indexkey())==1  //Procura pela filial
				cFil := cFilial
				nChave := 11
			EndIf

			If !lDetail .and. (("DTOS" $ Upper(IndexKey())) .Or. ("DTOC" $ Upper(IndexKey()))) .And. cAlias != "SM2"
				If ( lSeeAll )
					cCampo := Subs(cCampo,1,nSizeFil) + ConvData(IndexKey(), Subs(cCampo,nSizeFil+1))
				Else
					cCampo := ConvData(IndexKey(), cCampo)
				EndIf
			EndIf

			If Subs(cAlias,1,3) == "SM2"
				dCampo:=Ctod(AllTrim(cCampo))
				DbSeek(dCampo)
			ElseIf !(At(cCpoFil,Indexkey())==1) .or. !aMyOrd[nOrd, 2] .or. lSeeAll
				DbSeek(cCampo)
				If lPreview
					cIndexKey := IndexKey()
					Aadd( aRet, Recno() )
					DbSkip()
					While !Eof() .And. lRet .And. Len(aRet) <= 10
						If cCampo $ &(cIndexKey)
							Aadd( aRet, Recno() )
						Else
							lRet := .F.
						EndIf
						DbSkip()
					EndDo
					DbGoTo(aRet[1])
				ElseIf ( lSeeAll .And. At(cCpoFil,Indexkey())==1)
					aFils	:= GetBrwFils()
					cFil	:= &cCpoFil
					// Testa se o usuario pode ver a filial encontrada.
					// Se não puder posiciona na proxima filial valida para o usuário, se não puder vai para EOF
					If ( AScan(aFils, cFil ) == 0 )
						If ( (nI:=AScan(aFils, {|x| x > cFil} )) == 0 )
							DbSeek(chr(255))
							cFil	:= &cCpoFil
							If ( AScan(aFils, cFil ) == 0 )
								lEOF := .T.
							EndIf
						Else
							DbSeek(aFils[nI])
						EndIf
					EndIf
				EndIf
			Else
				DbSeek(cFilial+cCampo)
				If Subs(&(IndexKey()),1,nSizeFil) != cFilial	 // IR Para EOF
					DbSeek(chr(255))
				ElseIf lPreview
					Aadd( aRet, Recno() )
					DbSkip()
					While !Eof() .And. lRet .And. Len(aRet) <= 10
						If cFilial+cCampo $ &(Indexkey())
							Aadd( aRet, Recno() )
						Else
							lRet := .F.
						EndIf
						DbSkip()
					EndDo
					DbGoTo(aRet[1])
				EndIf
			EndIf

			If Eof() .Or. lEof
				DbGoTo(nReg)
				Help(" ",1,"PESQ01")
			EndIf
			SET SOFTSEEK OFF
			lRefresh := .t.
			Return aRet

		Function AxPesqOrd(cAlias,aMyOrd,lUseDetail,lSeeAll,aRetOrd)
			Local aTemp := {}
			Local cIndice
			Local nI

			If Type("aOrd") == "U"
				Private aOrd := {}
			EndIf

			If !(cAlias $ "SX6/SX9/SX7")
				PesqOrd(cAlias,@aMyOrd, lSeeAll)

				If ( !Empty(aMyOrd) .And. ValType(aMyOrd[1]) != 'A' )

					aTemp	:= AClone(aMyOrd)
					aMyOrd	:= {}

					For nI := 1 To Len(aTemp)
						Aadd( aMyOrd, { nI, aTemp [nI] } )
					Next

				EndIf

				lUseDetail := .T.
			ElseIf cAlias == "SX7"
				cIndice	:= OemToAnsi(STR0043) // " Campo+Sequencia"
				Aadd(aOrd," "+cIndice)
				AADD(aMyOrd, { 1, .T. } )
				lUseDetail := .F.
			ElseIf cAlias == "SX6"
				cIndice	:= OemToAnsi(STR0006) // " Filial+Parametro"
				Aadd(aOrd," "+cIndice)
				AADD(aMyOrd, { 1, .T. } )
				lUseDetail := .F.
			Else
				cIndice	 := OemToAnsi(STR0007) //" Dominio+C.Dominio"
				Aadd(aOrd," "+cIndice)
				AADD(aMyOrd, { 1, .T. } )
				lUseDetail := .F.
			EndIf

			aRetOrd := aOrd
			Return

		Function PesqChange(nOrd,nAt,aLista,cAlias,aAllLista,aScroll,lDetail,oDetail,oDlg,oBigGet)

			If nOrd <> nAt .and. aAllLista <> NIL
				aLista := Aclone(aAllLista[nAt])
				aScroll[nOrd]:Hide()

				If Empty(aLista)
					lDetail := .T.
					lDetail := PesqDetail(lDetail,@oDlg,@oScroll,@oBigGet)
					oDetail:Disable()
				Else
					oDetail:Enable()
				EndIf

				If lDetail
					aScroll[nAt]:Show()
				EndIf
				nOrd := nAt
			EndIf
			Return NIL

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ ExistIni ³ Autor ³ Ary Medeiros			³ Data ³		  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ VerIfica se campo tem inicializador padrao				  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe e ³ ExpL1 := ExistIni(ExpC2)									  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpL1 = Retorna .t. se existir							  ³±±
			±±³			 ³ ExpC2 = Campo a ser verIficado							  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 												  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function ExistIni(cCpo,lPosSX3)

			DEFAULT lPosSX3 := .T.

			If lPOSSX3
				SX3->(dbSetOrder(2))
				SX3->(MsSeek(cCpo))
				SX3->(dbSetOrder(1))
			EndIf

			Return(!Empty(GetSx3Cache(cCpo,"X3_RELACAO")))

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ InitPad	³ Autor ³ Ary Medeiros		    ³ Data ³		  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Inicializa campo de acordo com formula pre-definida		  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe e ³ InitPad(ExpC1) 											  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpC1 = Formula a ser executada							  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 												  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function InitPad(xForm,cTitulo)

			Local bBlock:=ErrorBlock()
			Local bErro := errorBlock( { |e| InitErr(e) } )
			Local xRet

			DEFAULT cTitulo := X3Titulo()

			If STR0011$xForm //"FORMULA"
				If !('"'$xForm)
					xForm := Substr(xForm,1,8)+'"'+Substr(xForm,9,3)+'")'
				EndIf
			EndIf

			BEGIN SEQUENCE
				xRet := &xForm
			End SEQUENCE
			ErrorBlock(bBlock)
			//If "FORMULA"$xForm
			If xRet == nil
				HELP(" ",1,"INITERR",, cTitulo,4,2)
			EndIf
			//EndIf
			Return xRet

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ InitErr	³ Autor ³ Ary Medeiros			  ³ Data ³			  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Controle de Erro no Inicializador padrao						  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe e ³ InitErr(ExpO1) 														  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpO1 = Objeto Error 												  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function InitErr(e)
			If ( e:genCode == EG_ZERODIV )
				Return (0)
			EndIf
			If (e:GenCode == EG_NOALIAS)
				#ifndef PROG
					Chkfile(e:Operation)
					Return
				#else
					Alert("Vou abrir o " +e:Operation )
					Chkfile(e:Operation)
					Return
				#endif
			EndIf
			If e:gencode > 0
				Tone(3000,1)
				HELP(" ",1,"INITERR",, X3Titulo(),4,2)
				BREAK
			EndIf

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ ProxReg	³ Autor ³ Ary Medeiros			  ³ Data ³		     ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Retorna ultimo registro incrementado						     ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ ExpC1 := ProxReg(ExpN2,ExpN3,ExpN4) 						     ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpC1 = Retorna Registro incrementado							  ³±±
			±±³			 ³ ExpN2 = Incremento													  ³±±
			±±³			 ³ ExpN3 = Posicoes utilizadas										  ³±±
			±±³			 ³ ExpN4 = Indice Utilizado											  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function ProxReg(nInc,nPos,nIndice)
			Local cSavAlias := Alias(), nSavRec
			Local cRet := ""
			Local nOrdem:=IndexOrd()
			Local nSizeFil := 2
			nIndice := Iif(nIndice==NIL,1,nIndice)
			//-- Atualiza o conteúdo da filial
			If FindFunction("FWSizeFilial")
				nSizeFil := FWSizeFilial()
			EndIf

			nSavRec := RecNo()
			DbSetOrder(nIndice)
			Set SoftSeek On
			DbSeek(SubStr(cFilial,1,nSizeFil-1)+Chr(ASC(Substr(cFilial,nSizeFil-1,1))+1))
			Set SoftSeek Off
			DbSkip(-1)
			cRet := &(SX3->X3_CAMPO)
			If SX3->X3_TIPO == "N" .or. SX3->X3_TIPO == "D"
				cRet += nInc
			ElseIf SX3->X3_TIPO == "C"
				cRet := StrZero(Val(cRet)+nInc,If(nPos > SX3->X3_TAMANHO,SX3->X3_TAMANHO,nPos))
				cRet := cRet+Space(SX3->X3_TAMANHO-Len(cRet))
			EndIf
			DbSetOrder(nOrdem)
			DbGoTo(nSavRec)
			Return cRet

			/*/
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³FuncAMoeda³ Autor ³ Wagner Xavier 	     ³ Data ³ 16/04/92 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³Devolve um array com o valor do titulo em ate 5 moedas.	  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ ExpA1 := FuncAMoeda(ExpD1,ExpN1,ExpN2) 						  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpA1 = Array que sera devolvido com os 5 valores			  ³±±
			±±³			 ³ ExpD1 = Data utilizada como referencia 						  ³±±
			±±³			 ³ ExpN1 = Valor utilizado como referencia					     ³±±
			±±³			 ³ ExpN2 = Moeda em que o titulo se encontra 					  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ FINA040																	  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		FuncTion FuncAMoeda(dData,nValor,nMoeda)
			Local cAlias:=ALIAS(),aValores[5],nBase:=0,cCampo
			nMoeda:=Iif((nMoeda=NIL .Or. nMoeda==0),1,nMoeda)

			DbSelectArea("SM2")
			Set SoftSeek On
			DbSeek(dData)
			Set SoftSeek Off
			AFILL(aValores,0)

			If nMoeda==1
				aValores[1]:=nValor
				aValores[2]:=nValor/SM2->M2_MOEDA2
				aValores[3]:=nValor/SM2->M2_MOEDA3
				aValores[4]:=nValor/SM2->M2_MOEDA4
				aValores[5]:=nValor/SM2->M2_MOEDA5
			Else
				cSuf :=Str(nMoeda,1)
				cCampo:= "M2_MOEDA"+cSuf
				//  nBase:=nValor*SM2->M2_MOEDA&cSuf
				nBase:= nValor * FieldGet( FieldPos( cCampo ) )
				aValores[1]:=nBase/1
				aValores[2]:=nBase/SM2->M2_MOEDA2
				aValores[3]:=nBase/SM2->M2_MOEDA3
				aValores[4]:=nBase/SM2->M2_MOEDA4
				aValores[5]:=nBase/SM2->M2_MOEDA5
			EndIf
			DbSelectArea(cAlias)
			Return aValores

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³RunTrigger³ Autor ³ Ary Medeiros			  ³ Data ³ 31/08/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Executa Gatilhos Primarios e Armazena Estrangeiros 		  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ RunTrigger(ExpN1) 													  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpN1 := Tipo (1-Enchoice 2-GetDados 3-F3						  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

			/*/
		Function RunTrigger(nTipo,nLin,cMacro,oObj,cField)
			Local cSavAlias := Alias()
			Local nSavRec
			Local cCpo := If(cField == NIL,SX3->X3_CAMPO,cField)
			Local cResult, nElem, nSavOrd, cSeek
			Local bErro
			Local nPos := 0,cCompVal:=""
			Local aGetsTrigger
			If Type("lNoDetect") == "L"
				bErro := ErrorBlock({ |e| TriggerErr(e,SX7->X7_CAMPO,SX7->X7_SEQUENC,lNoDetect)})
			Else
				bErro := ErrorBlock({ |e| TriggerErr(e,SX7->X7_CAMPO,SX7->X7_SEQUENC,.f.)})
			EndIf
			DbSelectArea("SX7")
			nSavRec := Recno()
			DbSeek(cCpo)
			BEGIN SEQUENCE
				While SX7->X7_CAMPO == cCpo
					If !Empty(SX7->X7_CONDIC)
						If !(&(SX7->X7_CONDIC))
							SX7->(DbSkip())
							Loop
						EndIf
					EndIf
					If SX7->X7_Tipo ==	"P"
						If SX7->X7_SEEK=="S"
							DbSelectArea(SX7->X7_ALIAS)
							nSavOrd := IndexOrd()
							DbSetOrder(SX7->X7_ORDEM)
							DbSeek(&(If(nTipo == 2,TriggerClear(SX7->X7_CHAVE,nLin,cSavAlias),SX7->X7_CHAVE)))
							DbSetOrder(nSavOrd)
							DbSelectArea("SX7")
						EndIf
						If nTipo == 1 .or. nTipo ==	3
							cResult := &(SX7->X7_REGRA)
							cMacro := "M->"+SX7->X7_CDOMIN
							If ValType(cResult) == "C"
								cResult	:= TriggerSize(SX7->X7_CDOMIN,cResult)
								&cMacro := cResult
							Else
								&cMacro := cResult
								cResult := TriggerPict(SX7->X7_CDOMIN,cResult)
							EndIf
							If nTipo == 1
								If Type("__cInternet") == "C" .and. __cInternet == "AUTOMATICO" .or. ValType(oObj) <> "O"
									If Type("aGets") <> "U"
										aGetsTrigger := aGets
									EndIf
									If Type("aTela") <> "U"
										aTelaTrigger := aTela
									EndIf
								Else
									aGetsTrigger := oObj:aGets
									aTelaTrigger := oObj:aTela
								EndIf
								If ((nElem := ASCAN(aGetsTrigger,{ |x| Substr(x,9,10) == Substr(cMacro,4)})) # 0)
									If ASC(SubStr(aGetsTrigger[nElem],1,1)) > 64
										cCompVal := Str(ASC(SubStr(aGetsTrigger[nElem],1,1))-55,2)+SubStr(aGetsTrigger[nElem],2,1)
										nPos := Val(cCompVal)
									Else
										nPos := Val(SubStr(aGetsTrigger[nElem],1,2))
									EndIf
									aTelaTrigger[nPos][Val(SubStr(aGetsTrigger[nElem],3,1))+If(Substr(aGetsTrigger[nElem],3,1)=="1",1,2)] := cResult
								EndIf
							Else
								If ((nElem := ASCAN(aGets2,{|x| Substr(x,9,10) == Substr(cMacro,4)})) # 0)
									aTela2[nElem,2] := cResult
								EndIf
							EndIf
						ElseIf nTipo == 2
							cResult := &(TriggerClear(SX7->X7_REGRA,nLin,cSavAlias))
							nElem := ASCAN(aHeader,{|x| PADR(x[2],10) == PADR(SX7->X7_CDOMIN,10)})
							If nElem > 0
								If ValType(cResult) == "C"
									If Type("aCols") # "U"
										aCols[nLin,nElem] := TriggerSize(SX7->X7_CDOMIN,cResult)
									Else
										// p/ GetDadDB
										nElem := (cSavAlias)->(FieldPos(SX7->X7_CDOMIN))
										If nElem > 0
											(cSavAlias)->( FieldPut( nElem,TriggerSize(SX7->X7_CDOMIN,cResult) ) )
										EndIf
									EndIf
								Else
									If Type("aCols") # "U"
										aCols[nLin,nElem] := cResult //TriggerPict(X7_CDOMIN,cResult)
									Else
										// p/ GetDadDB
										nElem := (cSavAlias)->(FieldPos(SX7->X7_CDOMIN))
										If nElem > 0
											(cSavAlias)->(FieldPut(nElem,cResult))
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf
						lRefresh := .t.
					ElseIf SX7->X7_TIPO == "X"
						DbSelectArea(SX7->X7_ALIAS)
						nSavOrd := IndexOrd()
						DbSetOrder(SX7->X7_ORDEM)
						DbSeek(&(SX7->X7_CHAVE))
						DbSetOrder(nSavOrd)
						DbSelectArea("SX7")
					Else
						nElem := ASCAN(aTrigger,{ |aX| aX[1] == SX7->X7_CAMPO .and. aX[2]==SX7->X7_SEQUENC .and.	aX[5] == nLin })
						If SX7->X7_SEEK=="S"
							DbSelectArea(SX7->X7_ALIAS)
							cSeek := &(If(nTipo == 2,TriggerClear(SX7->X7_CHAVE,nLin,cSavAlias),SX7->X7_CHAVE))
							DbSeek(cSeek)
							DbSelectArea("SX7")
						Else
							cSeek :=""
						EndIf
						If nTipo == 1
							cResult := &(SX7->X7_REGRA)
						Else
							cResult := &(TriggerClear(SX7->X7_REGRA,nLin,cSavAlias))
						EndIf
						If nElem == 0
							AADD(aTrigger,{SX7->X7_CAMPO,SX7->X7_SEQUENC,cResult,cSeek,nLin})
						Else
							aTrigger[nElem] := {SX7->X7_CAMPO,SX7->X7_SEQUENC,cResult,cSeek,nLin}
						EndIf
					EndIf
					SX7->(DbSkip())
				End
			End SEQUENCE
			DbGoTo(nSavRec)
			DbSelectArea(cSavAlias)
			ErrorBlock(bErro)

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ TriggerSize ³ Autor ³ Ary Medeiros		  ³ Data ³ 31/08/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Retorna Conteudo do campo com tamanho correto				  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ TriggerSize(ExpC1,ExpC2)											  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpC1 = Campo															  ³±±
			±±³			 ³ ExpC2 = Conteudo														  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function TriggerSize(cCpo,cContem)
			Local cSavAlias := Alias(), nSavRec,nSavOrd

			DbSelectArea("SX3")
			nSavRec := Recno()
			nSavOrd := IndexOrd()
			DbSetOrder(2)
			DbSeek(cCpo)
			cContem := RTrim(cContem) + Space(X3_TAMANHO-Len(RTrim(cContem)))
			DbSetOrder(nSavOrd)
			DbGoTo(nSavRec)
			DbSelectArea(cSavAlias)
			Return cContem

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ExistTrigger³ Autor ³ Ary Medeiros	     ³ Data ³ 01/09/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ VerIfica a existencia de gatilho para um campo				  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ ExistTrigger(ExpC1)													  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ Nome do Campo a VerIficar											  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function ExistTrigger(cCpo)
			Local cSavAlias:= Alias()
			Local nSavOrd , lRet := .f.
			IF Select("SX3") > 0
				DbSelectArea("SX3")
				nSavOrd := IndexOrd()
				DbSetOrder(2)
				DbSeek(cCpo)
				If X3_TRIGGER == "S"
					lRet := .t.
				EndIf
				DbSetOrder(nSavOrd)
				DbSelectArea(cSavAlias)
			Endif
			Return lRet

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ EvalTrigger³ Autor ³ Ary Medeiros		  ³ Data ³ 02/09/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Avalia Gatilhos Estrangeiros										  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ EvalTrigger()															  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function EvalTrigger()
			Local cSavAlias   := Alias()
			Local aAreaSX2    := GetArea()
			Local i           := 0
			Local cResult     := ""
			Local nSavOrd     := 0
			Local bErro       := ErrorBlock({ |e| TriggerErr(e,SX7->X7_CAMPO,SX7->X7_SEQUENC)})
			Local nInstanceId := 0
			Local cFilSeek    := ""
			//Default lDoEAI    := .T.
			EvalGeneric()
			DbSelectArea("SX7")
			For i := 1 to Len(aTrigger)
				DbSeek(aTrigger[i,1]+aTrigger[i,2])
				BEGIN SEQUENCE
					If SX7->X7_TIPO = "E"
						DbSelectArea(SX7->X7_ALIAS)
						If SX7->X7_SEEK=="S"
							nSavOrd := IndexOrd()
							DbSetOrder(SX7->X7_ORDEM)
							DbSeek(aTrigger[i,4])
							DbSetOrder(nSavOrd)
						EndIf
						RecLock(SX7->X7_ALIAS,.F.)
						Replace &(SX7->X7_CDOMIN) with aTrigger[i,3]
						//dbUnLock()
						DbSelectArea("SX7")
					EndIf
				End SEQUENCE
			Next i
			aTrigger := {}
			// ------------------------------------------------------
			// Verifica se há gatilho de WF a ser disparado
			// ------------------------------------------------------
			If FindFunction("FWOPENXXB")
				If Select("XXB") == 0
					FWOpenXXB()
				EndIf
				If Select("XXB") <> 0
					dbSelectArea("XXB")
					dbSetOrder(1)
					If !MsSeek(cFilAnt+PadR(FunName(),Len(XXB->XXB_ROTINA)))
						cFilSeek := Space(FwSizeFilial())
						MsSeek(cFilSeek+PadR(FunName(),Len(XXB->XXB_ROTINA)))
					Else
						cFilSeek := cFilAnt
					EndIf
					While !Eof() .And. ;
							XXB->XXB_FILIAL == cFilSeek .And.;
							XXB->XXB_ROTINA == PadR(FunName(),Len(XXB->XXB_ROTINA))
						If Empty(XXB->XXB_RULE) .Or. &(XXB->XXB_RULE)
							DbSelectARea("SX2")
							DbSetOrder(1)
							MsSeek(XXB->XXB_ALIAS)
							If !Empty(SX2->X2_UNICO)
								If XXB->XXB_START=="1"
									// ------------------------------------------------------
									// Verifica se o processo já existe para esta entidade
									// ------------------------------------------------------
									DbSelectArea("WFE")
									DbSetOrder(1)
									If !MsSeek(xFilial("WFE")+PadR("",Len(WFE->WFE_TPPROC))+(XXB->XXB_ALIAS)->(&(SX2->X2_UNICO)))
										nInstanceId := FWECMStartProcess(AllTrim(XXB->XXB_PROCID)/*cProcId*/,XXB->XXB_TASKID/*nNextTask*/,"It started by trigger ECM Microsiga Protheus"/*cComments*/,IIf(XXB->XXB_TYPE=="1",FWEcmXmlData(XXB->XXB_ALIAS),Nil)/*cXMLData*/,/*aAttach*/,/*cUserId*/,/*aColleagueIds*/,/*Complete*/)
										If nInstanceId <> 0
											Begin Transaction
												RecLock( "WFE" , .T. )
												WFE->WFE_FILIAL	:= xFilial("WFE")
												WFE->WFE_TPPROC	:= ""
												WFE->WFE_PRTID	:= (XXB->XXB_ALIAS)->(&(SX2->X2_UNICO))
												WFE->WFE_ECMID  := AllTrim(Str(nInstanceId,Len(WFE->WFE_ECMID)))
												MsUnLock()
											End Transaction
										EndIf
									Else
										// ------------------------------------------------------
										// Se o processo existir reinicia o fluxo
										// ------------------------------------------------------
										FWECMCancelProcess(Val(WFE->WFE_ECMID),,"Cancel by trigger ECM Microsiga Protheus")
										nInstanceId := FWECMStartProcess(AllTrim(XXB->XXB_PROCID)/*cProcId*/,XXB->XXB_TASKID/*nNextTask*/,"It started by trigger ECM Microsiga Protheus"/*cComments*/,IIf(XXB->XXB_TYPE=="1",FWEcmXmlData(XXB->XXB_ALIAS),Nil)/*cXMLData*/,/*aAttach*/,/*cUserId*/,/*aColleagueIds*/,/*Complete*/)
										If nInstanceId <> 0
											Begin Transaction
												RecLock("WFE")
												WFE->WFE_ECMID  := AllTrim(Str(nInstanceId,Len(WFE->WFE_ECMID)))
												MsUnLock()
											End Transaction
										EndIf
									EndIf
									If FWWFIsError()
										EventInsert( FW_EV_CHANEL_ENVIRONMENT, FW_EV_CATEGORY_TOTVSECM, FW_EV_FAILED, FW_EV_LEVEL_ERROR, "", "TOTVS ECM" ,FWWFGetError()[2],.T.)
									EndIf
								Else
									// ------------------------------------------------------
									// Movimentação de processo
									// ------------------------------------------------------
									DbSelectArea("SX2")
									DbSetOrder(1)
									MsSeek(XXB->XXB_SEEK)

									DbSelectArea("WFE")
									DbSetOrder(1)
									If MsSeek(xFilial("WFE")+PadR("",Len(WFE->WFE_TPPROC))+(XXB->XXB_SEEK)->(&(SX2->X2_UNICO)))
										FWECMMoveProcess(Val(WFE->WFE_ECMID),XXB->XXB_TASKID,"It moved by trigger ECM Microsiga Protheus"/*cComments*/,IIf(XXB->XXB_TYPE=="1",FWEcmXmlData(XXB->XXB_ALIAS),Nil)/*cXMLData*/,/*aAttach*/,/*cUserId*/,/*aColleagueIds*/,/*lComplete*/)
										If FWWFIsError()
											EventInsert( FW_EV_CHANEL_ENVIRONMENT, FW_EV_CATEGORY_TOTVSECM, FW_EV_FAILED, FW_EV_LEVEL_ERROR, "", "TOTVS ECM" ,FWWFGetError()[2],.T.)
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf
						dbSelectArea("XXB")
						dbSkip()
					EndDo
				EndIf
			EndIf
			ErrorBlock(bErro)

			//If lDoEAI
			//	DoEAI()
			//EndIf

			RestArea(aAreaSX2)
			If !Empty(cSavAlias)
				DbSelectArea(cSavAlias)
			Endif
			Return nil

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ TriggerErr ³ Autor ³ Ary Medeiros		  ³ Data ³ 02/09/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Tratamento de Erro para os Gatilhos 							  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ TriggerErr()								 						     ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Gatilhos 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function TriggerErr(e,cCampo,cSeq,lReturn)
			If e:gencode > 0
				If ( Type("__cInternet") == "C" .and. __cInternet == "AUTOMATICO" )
					AutoGRLog(oemtoansi(STR0030)+cCampo+chr(10)+chr(13)+e:Description,OemToAnsi(STR0013)) //"Erro no Gatilho : " ### "Inconsistˆncia"
				Else
					MSGSTOP(oemtoansi(STR0030)+cCampo+" "+OemToAnsi(STR0047)+cSeq+chr(10)+chr(13)+e:Description,OemToAnsi(STR0013)) //"Erro no Gatilho : " ### "Inconsistˆncia"
				EndIf
				BREAK
			EndIf

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ TriggerPict ³ Autor ³ Ary Medeiros	     ³ Data ³ 31/08/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Retorna Conteudo do campo transformado pela picure 		  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ TriggerPict(ExpC1)													  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpC1 = Campo															  ³±±
			±±³			 ³ ExpC2 = Conteudo														  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 										  	  					  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function TriggerPict(cCpo,cContem)
			Local cSavAlias := Alias(), nSavRec,nSavOrd

			DbSelectArea("SX3")
			nSavRec := Recno()
			nSavOrd := IndexOrd()
			DbSetOrder(2)
			DbSeek(cCpo)
			cContem := Transform(cContem,Trim(X3_PICTURE))
			DbSetOrder(nSavOrd)
			DbGoTo(nSavRec)
			DbSelectArea(cSavAlias)
			Return cContem

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³ TriggerClear³ Autor ³ Ary Medeiros	     ³ Data ³ 31/08/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Substitui "M->" por conteudo do array aTela                ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 																  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Static Function TriggerClear(cExpr,nLin,cAliasOld)

			Local cStr
			Local aPos
			Local nIni
			Local nEnd
			Local nElem
			Local xCampo
			Local cSub

			cExpr := UPPER(cExpr)
			While "M->"$cExpr
				nIni := At("M->",cExpr)+3
				cSub := Substr(cExpr,nIni,Len(cExpr))
				aPos := {}
				If ( "!" $ cSub )
					AADD(aPos,At("!",cSub))
				EndIf
				If ( "$" $ cSub )
					AADD(aPos,At("$",cSub))
				EndIf
				If ( "%" $ cSub )
					AADD(aPos,At("%",cSub))
				EndIf
				If ( "^" $ cSub )
					AADD(aPos,At("^",cSub))
				EndIf
				If ( ")" $ cSub )
					AADD(aPos,At(")",cSub))
				EndIf
				If ( "-" $ cSub )
					AADD(aPos,At("-",cSub))
				EndIf
				If ( "+" $ cSub )
					AADD(aPos,At("+",cSub))
				EndIf
				If ( "*" $ cSub )
					AADD(aPos,At("*",cSub))
				EndIf
				If ( "/" $ cSub )
					AADD(aPos,At("/",cSub))
				EndIf
				If ( " " $ cSub )
					AADD(aPos,At(" ",cSub))
				EndIf
				If ( "," $ cSub )
					AADD(aPos,At(",",cSub))
				EndIf
				If ( "<" $ cSub )
					AADD(aPos,At("<",cSub))
				EndIf
				If ( ">" $ cSub )
					AADD(aPos,At(">",cSub))
				EndIf
				If ( "=" $ cSub )
					AADD(aPos,At("=",cSub))
				EndIf
				If ( Len(aPos) == 0 )
					nEnd := Len(cSub)
				Else
					aPos := aSort(aPos)
					nEnd := aPos[1]
				EndIf
				cCpo	:= Substr(cExpr,nIni,nEnd-1)
				nElem := ASCAN(aHeader,{|x| AllTrim(x[2]) == AllTrim(Upper(cCpo))})
				If ( nElem == 0 )
					cExpr := Substr(cExpr,1,nIni-4)+"m"+Subs(cExpr,nIni-2)
				Else
					If ( Type("aCols") # "U" )
						cExpr := Substr(cExpr,1,nIni-4)+"aCols["+AllTrim(Str(nLin))+","+AllTrim(Str(nElem))+"]"+Substr(cSub,nEnd,Len(cSub))
					Else
						cExpr := Substr(cExpr,1,nIni-4)+cAliasOld+"->(FieldGet("+AllTrim(Str(nElem))+"))"+Substr(cSub,nEnd,Len(cSub))
					EndIf
				EndIf
			End
			Return( cExpr )

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡„o	 ³ CriaVar	³ Autor ³ Wagner Xavier         ³ Data ³ 03.02.94 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡„o ³ Cria uma variavel de acordo com Dicion rio de Dados.		  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ CriaVar( ExpC1,ExpC2 )					                  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ ExpC1 : Nome do campo dicion rio 						  ³±±
			±±³			 ³ ExpL1 : Se ser  considerado inicializador padr„o			  ³±±
			±±³			 ³ ExpC2 : Lado para inicializa‡„o padr„o                     ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Gen‚rico 												  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function CriaVar( cCampo, lInitPad, cLado, lCriaPub )

			Local aArea     := GetArea()
			Local aAreaSX3  := SX3->(GetArea())
			Local cTipo
			Local nTamanho
			Local xConteudo
			Local lInicializador

			DEFAULT lCriaPub := .T.
			DEFAULT cLado    := "L"
			DEFAULT lInitPad := .T.

			If At( ">", cCampo ) != 0
				cCampo := AllTrim(SubStr( cCampo, 1+At( ">", cCampo) , 10 ) )
			EndIf
			cCampo := PadR(cCampo,10)
			cTipo     := GetSx3Cache(cCampo,"X3_TIPO")
			nTamanho  := GetSx3Cache(cCampo,"X3_TAMANHO")

			If cTipo == Nil
				Help(" ", 1, "NOCPOSX3",,"Field -> "+cCampo,5,0)
				RestArea(aAreaSX3)
				RestArea(aArea)
				Return("")
			EndIf

			Do Case
			Case cTipo == "C"
				xConteudo := Space( nTamanho )
			Case cTipo == "N"
				xConteudo :=	0
			Case cTipo == "D"
				xConteudo := CtoD("  /  /  ")
			Case cTipo == "L"
				xConteudo := .F.
			Case cTipo == "M"
				xConteudo := ""
			EndCase
			If lInitPad
				lInicializador := ExistIni( cCampo , .F.)
				If lInicializador
					xConteudo := InitPad( GetSx3Cache(cCampo,"X3_RELACAO") , cCampo )
					If cTipo == "C"
						xConteudo += Space( nTamanho - Len ( xConteudo ) )
						Do Case
						Case cLado == "L"
							xConteudo := PadL( xConteudo, nTamanho )
						Case cLado == "C"
							xConteudo := PadC( xConteudo, nTamanho )
						OtherWise
							xConteudo := PadR( xConteudo, nTamanho )
						EndCase
					EndIf
				EndIf
			EndIf
			If GetSx3Cache(cCampo,"X3_CONTEXT") == "V"
				cVar := 'M->'+cCampo
				If lCriaPub
					Public &cVar := xConteudo
				EndIf
			EndIf
			RestArea(aAreaSX3)
			RestArea(aArea)
			Return(xConteudo)

			/*/
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³FA050TabIR³ Autor ³ Wagner Xavier 	     ³ Data ³ 05/03/93 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³Calcula valor do IRRF, se fornecedor for pessoa fisica 	  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³ FA050TabIr()															  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ FINA050																	  ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function Fa050TabIr( nValTitulo )
			Local nValor:=0,nHdlIrf,nBytes:=0,nTamArq,aTabela:={},lTabela:=.f.,i

			If SED->(FieldPos("ED_JURCAP")) >0 .And. SED->ED_JURCAP == "1" .And. SA2->A2_TIPO =="F"
				nValor:=(nValTitulo*(SED->ED_PERCIRF/100))
			eLSE
				nHdlIrf:=FOPEN("SIGAADV.IRF",64)
				If nHdlIrf<0
					Help(" ",1,"TABIRRF")
					Return 0
				EndIf

				nTamArq:=FSEEK(nHdlIrf,0,2)
				FSEEK(nHdlIrf,0,0)			 // Volta para inicio do arquivo

				While nBytes<nTamArq
					xBuffer:=Space(40)
					FREAD(nHdlIrf,@xBuffer,40)
					AADD(aTabela,{Val(SubStr(xBuffer,1,15)),Val(SubStr(xBuffer,17,6)),Val(SubStr(xBuffer,24,15))})
					nBytes+=40
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Este If Len(atabela) == 5 foi colocado pois o txt gravado pelo  ³
					//³ windows dava uma dIferen‡a no registro do End of file, gerando  ³
					//³ uma linha a mais no arquivo TXT.										  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Len( aTabela ) == 5
						Exit
					EndIf
				End

				nValor := 0

				For i = 1 to Len(aTabela)
					If !lTabela
						If nValTitulo<=aTabela[i][1] .or. i = Len(aTabela)
							nValor:=(nValTitulo*Iif(aTabela[i][2]>0,aTabela[i][2],0)/100)-aTabela[i][3]
							lTabela:=.T.
						EndIf
					EndIf
				Next

				FCLOSE(nHdlIrf)

			eNDIF
			nValor := IIF(nValor<0,0,nValor)
			Return(nValor)
			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³AtuaSB6	³ Autor ³ Gilson do Nascimento  ³ Data ³ 20/04/94 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³ Atualiza arquivo de Saldos De/Em Poder de Terceiros (SB6)  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parametros³ aArray := AtuaSB6(ExprC1,ExprC2,ExprA1,ExprA2) 		        ³±±
			±±³			 ³ ExprC1 := TES											              ³±±
			±±³			 ³ ExprC2 := Chave de Pesquisa no SB6						        ³±±
			±±³			 ³ ExprA1 := Array dos Campos Ref. ao SD1 ou SD2			     ³±±
			±±³			 ³ ExprA2 := Array dos Custos para Este Item 				     ³±±
			±±³			 ³ ExprC3 := Tipo da Nota									           ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico 												              ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function AtuaSB6(cTes,cChave,aCpoSD,aCustoSB6,cTipo)
			Local cAliasAnt:=alias(),nQTD,nTotQtd
			Local nSaldo := 0, aSaldo:= Array(2)
			Afill(aSaldo,0)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona no arquivo de TES para este item				 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SF4")
			DbSeek(xFilial()+cTes)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava arquivo de Saldo Em/De Poder de Terceiros			 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SF4->F4_PODER3 != "N"

				DbSelectArea("SB6")
				DbSetOrder(3)
				DbSeek(xFilial()+cChave)

				If SF4->F4_PODER3=="R"
					AGravaSB6(cTes,aCustoSB6,cTipo,aCpoSD)
					Replace B6_IDENT	With aCpoSD[17]
					Replace B6_SALDO	With aCpoSD[12]
					Replace B6_ESTOQUE	With SF4->F4_ESTOQUE
					If B6_SALDO <=0
						Replace B6_ATEnd With "S"
					EndIf
					cSB6Ant := B6_IDENT
					__lPointSB6 := Iif(__lPointSB6==Nil,(ExistBlock("SB6GRAVA")),__lPointSB6)
					If __lPointSB6
						ExecBlock("SB6GRAVA",.f.,.f.)
					EndIf
					MsUnlock()

				ElseIf SF4->F4_PODER3=="D"

					nQtd	  := 0
					nTotQtd := 0
					While !Eof() .And. ;
							xFilial()+cChave == B6_FILIAL+B6_IDENT+B6_PRODUTO
						nSaldo := B6_SALDO
						If nSaldo <= 0
							DbSkip()
							Loop
						EndIf

						If (aCpoSD[12] - nTotQtd) <= 0
							Exit
						EndIf

						If nSaldo <= (aCpoSD[12] - nTotQtd)
							nQtd := nSaldo
						Else
							nQtd := aCpoSD[12] - nQtd
						EndIf

						nTotQtd := nTotQtd +  nQtd

						RecLock("SB6",.F.)

						If B6_QULIB > 0				  // A Entrada nao pode estornar o B6_QULIB
							Replace		B6_QULIB 	With B6_QULIB - nQtd
						EndIf
						Replace B6_SALDO With B6_SALDO - nQtd
						Replace B6_UENT	With dDataBase

						If B6_SALDO <= 0
							Replace B6_ATEnd With "S"
						EndIf

						MsUnlock()

						If SF4->F4_ESTOQUE=="S"
							aCustoSB6[1] := B6_CUSTO1	* (nQtd / B6_QUANT)
							aCustoSB6[2] := B6_CUSTO2	* (nQtd / B6_QUANT)
							aCustoSB6[3] := B6_CUSTO3	* (nQtd / B6_QUANT)
							aCustoSB6[4] := B6_CUSTO4	* (nQtd / B6_QUANT)
							aCustoSB6[5] := B6_CUSTO5	* (nQtd / B6_QUANT)
						EndIf

						nRegSB6:= Recno()
						cSB6Ant	 := B6_IDENT
						aCpoSD[6] := B6_TIPO

						AGravaSB6(cTes,aCustoSB6,cTipo,aCpoSD)						// Grava Item Devolucao no SB6
						Replace B6_IDENT	With cSB6Ant
						__lPointSB6 := Iif(__lPointSB6==Nil,(ExistBlock("SB6GRAVA")),__lPointSB6)
						If __lPointSB6
							ExecBlock("SB6GRAVA",.f.,.f.)
						EndIf
						MsUnlock()

						DbGoTo(nRegSB6)

						DbSkip()
						Loop
					End
				EndIf
			EndIf
			DbSelectArea(cAliasAnt)
			Return(aCustoSB6)

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³A040DupRec³Autor  ³ Ary Medeiros			  ³ Data ³          ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³Atualizacao de titulos a receber, gerando todos os dados	  ³±±
			±±³			 ³complementares a uma implantacao de titulo.                 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³A040DupRec( cOrigem )                                       ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parƒmetros³ cOrigem := Programa que originou o titulo                  ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico                                                   ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ DATA     ³ BOPS ³Prograd.³ALTERACAO                                   ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³02/06/05  ³080020³Marcos  ³Os campos A1_VACUM e A1_NROCOM nao devem ser³±±
			±±³          ³      ³        ³gravados qdo o modulo for o loja e o        ³±±
			±±³          ³      ³        ³ cliente = cliente padrao.                  ³±±
			±±³01/06/06  ³100688³Norbert ³Os campos A1_VACUM e A1_NROCOM tambem nao   ³±±
			±±³          ³      ³        ³serao gravados se a rotina foi chamada pelo ³±±
			±±³          ³      ³        ³RPC do FrontLoja.                           ³±±
			±±³16/01/06  ³117063³Marcio  ³Correcao na busca da administradora         ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		Function A040DupRec( cOrigem,lUpDate, nValTot, lAbate, lGerAbtISS, lAtuSalDup, nTotISS, cRecIss, lFina040, aMedicao, nProp, lTitFim, lLojaDin, cRetCli, cTitpai )

			Local nOpca,nSavRec,nValForte:=0,nIss:=0,nIrrf:=0
			Local cParcela,cCliente,cLoja,dEmissao,dVencto,dVencRea,lDigita,i
			Local cPrefixo,cNum,cTipoE1,dVenISS,dVenFun,nMoeda:=SE1->E1_MOEDA
			Local nSalvCli 		:= 0,cNatur
			Local dNextDay
			Local nMCusto  		:= 0
			Local cNatureza 	:= ""
			Local nCntFor
			Local nInss 		:= 0
			Local nTamData 		:= 0
			Local nPis 			:= 0
			Local nCofins 		:= 0
			Local nCsll 		:= 0
			Local nDiaUtil    	:= 0
			Local nDia        	:= 0
			Local nVRetISS    	:= 0
			Local cLA         	:= SE1->E1_LA
			Local cFatura     	:= SE1->E1_FATURA
			Local lM040Se1    	:= Existblock("M040SE1")
			Local lM040CSSR   	:= ExistBlock("M040CSSR")
			Local cMunIss		:= ''
			Local lAbateuPIS  	:= .F.
			Local lAbateuCOF  	:= .F.
			Local lAbateuCSLL 	:= .F.
			Local lAbateuIRF  	:= .F.
			Local lContrAbat  	:= !Empty( SE1->( FieldPos( "E1_SABTPIS" ) ) ) .And. !Empty( SE1->( FieldPos( "E1_SABTCOF" ) ) ) .And. !Empty( SE1->( FieldPos( "E1_SABTCSL" ) ) )
			Local lCtrAbatIRF 	:= !Empty( SE1->( FieldPos( "E1_SABTIRF" ) ))
			LOCAL lAtuAcum    	:= .T.	// Verifica se deve alterar os campos A1_VACUM e A1_NROCOM qdo modulo for o loja
			Local nMinRetIR 	:= SuperGetMV("MV_VLRETIR")
			Local xMinRetIR 	:= 0
			Local cLojaIrf 		:= Padr( "00", Len( SE2->E2_LOJA ), "0" )
			Local cParcIRF 		:= ""
			Local cParcFet      := ""
			Local cParcFab      := ""
			Local cParcFac      := ""
			Local cParTPDP		:= ""
			Local nZ := 0
			Local lLojaCartao 	:= .F.	// Indica se eh rotina chamada pelo modulo sigaloja e se forma de pagamento eh cartao.
			Local lVcAntIss 	:= (SuperGetMV("MV_ANTVISS",.T.,"2") == "1")  //Antecipa ou nao o vencimento do ISS em caso de vencimento em dia nao util
			Local dVencRIss 	:= CTOD("//")
			Local nMinRetISS 	:= SuperGetMv("MV_VRETISS",.T.,0)
			Local nFetHab		:= 0
			Local nFabov		:= 0
			Local nFacs         := 0
			Local nTPDB			:= 0
			Local lFethab		:= (SE1->(FieldPos("E1_FETHAB")) > 0 .And. SE1->(FieldPos("E1_PARCFET")) > 0)
			Local lFabov    	:= (SE1->(FieldPos("E1_FABOV")) > 0 .And. SE1->(FieldPos("E1_PARCFAB")) > 0)
			Local lFacs     	:= (SE1->(FieldPos("E1_FACS")) > 0 .And. SE1->(FieldPos("E1_PARCFAC")) > 0)
			Local lTPDP     	:= (SE1->(FieldPos("E1_TPDP")) > 0 .And. SE1->(FieldPos("E1_PARTPDP")) > 0)
			Local lVretIrf 		:= !Empty( SE1->( FieldPos( "E1_VRETIRF" ) ) )
			Local lIrfRetAnt 	:= .F.
			Local nCalcIr 		:= 0
			Local aArea
			Local lOriFatura  	:= Iif("FINA280" $ SE1->E1_ORIGEM,.T.,.F.)
			Local cCliPad  		:= SuperGetMv("MV_CLIPAD",,"")			// Cliente Padrao
			Local cLojaPad  	:= SuperGetMv("MV_LOJAPAD",,"")			// Loja Padrao
			Local cNatImp		:= ""
			Local lF040GER   	:= ExistBlock("F040GER")
			Local aRecImpos		:= {}
			Local cNome			:= ""
			Local nTaxaTit		:= 0
			//Controle de abatimento
			Local lTitPai :=  (SE1->(FieldPos("E1_TITPAI")) > 0)
			//Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
			Local lPccBxCr		:= If (FindFunction("FPccBxCr"),FPccBxCr(),.F.)
			//Controla IRPJ na baixa
			Local lIrPjBxCr		:= If (FindFunction("FIrPjBxCr"),FIrPjBxCr(),.F.)
			Local nModOrig		:= IIF(FindFunction("LjGetModOr"), LjGetModOr(), 0)	// modulo origem quando recebimento de titulo do loja via web service
			Local cLojaImpos	:= PadR( "00", Len( SE2->E2_LOJA ), "0" )
			Local lAtuSldNat	:= FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
			Local aAreaSAE      := SAE->(GetArea())
			Local lLiquid 		:= FunName() == "FINA460"
			Local lFinVldIns  := Existblock("FinVldIns")
			Local cChaveSE1	:= ""
			Local lLojxRec		:= IIF(FindFunction("LjGetLjRec"), LjGetLjRec(), .F.) // Verifica se esta na rotina de recebimento de titulos
			//Controle FilOrig
			Local lFilorig      := SE2->(FieldPos("E2_FILORIG")) > 0
			Local cFilOrig      := SE2->E2_FILORIG

			DEFAULT lGerAbtISS := .T.
			DEFAULT lAbate     := .T.
			DEFAULT lAtuSalDup := .T.
			DEFAULT nTotISS    := SE1->E1_ISS
			DEFAULT cRecISS    := ""
			DEFAULT lFina040   := .F.
			DEFAULT aMedicao   := {}
			DEFAULT nProp      := 0
			DEFAULT lTitFim    := .F.
			DEFAULT lLojaDin   := .F. //Pagamento da loja em dinheiro
			DEFAULT cRetCli    := ""
			DEFAULT cTitPai    := ""

			cOrigem := Iif(cOrigem==NIL,Space(8),cOrigem)

			lAltera:=.F.
			lUpDate:=If( (lUpDate == NIL),.T.,lUpDate )

			If Upper(subs(cOrigem,1,3)) == "LOJ"
				If ALLTRIM( SE1->E1_TIPO)  $ "CC;VA;CO;CD;FI"		// Cartao Credito, Vales, Convenio, Cartao de Debito, Financiamento Proprio
					lLojaCartao := .T.
				Endif
			Endif

			DbSelectArea("SA1")
			DbSetOrder(1)
			Do Case
			Case lLojaCartao .AND. SL1->L1_TIPO <> "P"	.AND. SAE->AE_FINPRO == "N"	 .AND. nModOrig <> 23 .And. !lLojxRec
				DbSeek(cFilial + SE1->E1_CLIENTE + SE1->E1_LOJA)
			Case lLojaCartao .AND. SL1->L1_TIPO <> "P" .AND. nModOrig <> 23 .And. !lLojxRec
				DbSeek(cFilial + SF2->F2_CLIENTE + SF2->F2_LOJA)
			Case lLojaCartao .AND. nModOrig <> 23 .And. !lLojxRec
				DbSeek(cFilial + SL1->L1_CLIENTE + SL1->L1_LOJA)
			OtherWise
				DbSeek(cFilial + SE1->E1_CLIENTE + SE1->E1_LOJA)
			EndCase

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³No loja quando for cliente ADM Finan e o parametro ³
			//³estiver habilitado nao trava o registro do cliente ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aAreaSAE := SAE->(GetArea())
			SAE->(DbSetOrder(2))
			If SAE->(DbSeek(xFilial("SAE")+SA1->A1_COD))
				If SuperGetMv("MV_LJATUSA",,.F.)
					lAtuSalDup 	:= .F.
					lAtuAcum	:= .F.
				EndIf
			EndIf
			SAE->(RestArea(aAreaSAE))

			If Empty(cRecISS)
				cRecISS := SA1->A1_RECISS
			EndIf

			nSalvCli := RecNo()
			If SA1->(FieldPos("A1_MUNIC")) > 0 .And. !Empty(SA1->A1_MUNIC)
				cMunISS := SA1->A1_MUNIC
			Else
				cMunIss := SuperGetMV("MV_MUNIC")
			EndIf

			// Verifica se aplica-se o valor mínimo de retecao do Ir pode ser retido
			If	(!Empty(SA1->( FieldPos( "A1_MINIRF" ) ) ) .and. SA1->A1_MINIRF == "1")
				nMinRetIR := 0
			Endif

			If SA1->(FieldPos("A1_ABATIMP")) > 0 .And. cRetCli <> "2"
				cRetCli := IIf(Empty(SA1->A1_ABATIMP),"1",SA1->A1_ABATIMP)
			Endif

			If SE1->(FieldPos("E1_FORNISS"))<>0
				cMunISS := IIF(!Empty(SE1->E1_FORNISS),SE1->E1_FORNISS,cMunISS)
			EndIf

			//Ponto de entrada para tratamento do valor minimo para IRRF.
			If ExistBlock("F040MIRF")
				xMinRetIR := 0
				xMinRetIR := Execblock("F040MIRF",.F.,.F.,{SA2->A2_COD,SA2->A2_LOJA})
				nMinRetIR := If(ValType(xMinRetIR)=="N",xMinRetIR,nMinRetIR)
			EndIf

			// Verifica se o ambiente esta configurado com Multiplos Vinculos de ISS
			cNome := "MUNICIPIO"
			If AliasInDic( "FIM" ) .AND. SE1->( FieldPos( "E1_CODISS" ) ) > 0 .AND. Type( "SE1->E1_CODISS" ) <> "U"
				If !Empty( SE1->E1_CODISS )
					DbSelectArea( "FIM" )
					FIM->( DbSetOrder( 1 ) )
					If FIM->( DbSeek( xFilial( "FIM" ) + SE1->E1_CODISS ) )
						cMunIss := FIM->FIM_CODMUN
						cNome	+= "-" + AllTrim( FIM->FIM_MUN )
					EndIf
				EndIf
			EndIf

			If ExistBlock("F040MISS")
				nMinRetISS := Execblock("F040MISS",.F.,.F.,{cMunISS})
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza Contas a Receber 				   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aArea := SE1->(GetArea())

			If !(Upper(subs(cOrigem,1,3)) == "LOJ")
				If !lFina040
					If lVRetIrf
						nCalcIr := F040CalcIr(0,,.F.,SE1->E1_IRRF,@lIrfRetAnt)
					Endif
				Endif
			EndIf
			SE1->(RestArea(aArea))

			DbSelectArea("SE1")
			RecLock("SE1",.F.)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Avalia as medicoes de contrato - SIGAGCT   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If len(aMedicao) > 0
				CNTAvalSC5(aMedicao,nProp,lTitFim)
			EndIf


			If cPaisLoc == "BRA"
				//Verificacao do valor minimo de IRRF - Nao gerados pelo FINANCEIRO
				If !lFina040
					If lVRetIrf
						SE1->E1_IRRF := nCalcIr
					Endif
					// Verifica se o Ir pode ser retido. Valor menor que MV_VLRETIR e' dispensado de recolhimento
					If ( SE1->E1_IRRF <= nMinRetIR .and. !lIrfRetAnt .And. cRetCli <> "2") .And. Len(Alltrim(SA1->A1_CGC)) == 14
						SE1->E1_IRRF	:= 0
					EndIf
				Endif
				If ( SE1->E1_INSS < SuperGetMV("MV_VLRETIN") )  .AND. (IIF(lFinVldIns, Execblock("FinVldIns",.F.,.F., {} ), .T. )) 	// VerIfica se o Inss pode ser retido
					SE1->E1_INSS := 0								 		// Valor menor que MV_VLRETIN e' dispensado de recolhimento
				EndIf
				If ( SE1->E1_COFINS <= SuperGetMV("MV_VRETCOF") .And. cRetCli <> "2" ) // VerIfica se o Cofins pode ser retido
					SE1->E1_COFINS	:= 0							 // Valor menor que MV_VRETCOF e' dispensado de recolhimento.
				EndIf
				If ( SE1->E1_PIS <= SuperGetMV("MV_VRETPIS") .And. cRetCli <> "2" ) // VerIfica se o Pis pode ser retido
					SE1->E1_PIS	:= 0							 // Valor menor que MV_VRETPIS e' dispensado de recolhimento.
				EndIf
				If ( SE1->E1_CSLL <= SuperGetMV("MV_VRETCSL") .And. cRetCli <> "2" ) // VerIfica se o Csll pode ser retido
					SE1->E1_CSLL	:= 0							 // Valor menor que MV_VRETCSL e' dispensado de recolhimento.
				EndIf
				// Se o cliente abate o ISS, gera abatimento. Senao, gera titulo para pagamento do tributo.
				If cRecISS == "1" .And. GetNewPar("MV_DESCISS",.F.)
					If lGerAbtISS
						If SE1->(FieldPos("E1_VRETISS")) > 0
							SomaTitISS("SE1",SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_VENCREA,@nTotISS,@nVRetISS)
							If ((SE1->(FieldPos("E1_FRETISS"))>0 .And. SE1->E1_FRETISS=="1") .Or.;	//Se a opcao no cadastro de clientes existir e estiver como 1=Considera Valor Minimo, respeito o tratamento padrao.
								(SE1->(FieldPos("E1_FRETISS"))>0 .And. SE1->E1_FRETISS=="2" .And. SuperGetMv ("MV_MODRISS", "1")=="2") .Or.; //Se a opcao no cadastro de clientes existir, estiver como 2=Sempre reter e a Modalidade de retencao for 1=Por titulo, desconsidero o Valor minimo e gero o titulo normalmente.
								SE1->(FieldPos("E1_FRETISS"))==0) .And.;	//Se a opcao no cadastro de clientes nao existir, respeito o tratamento padrao para o valor minimo.
								(nTotISS > 0 .And. nTotISS <= nMinRetISS )
								If (SE1->(FieldPos("E1_VLMINIS"))>0 .And. SE1->E1_VLMINIS=="2") //Tratamento para a cidade de Cascavel-PR Decreto n.º 8.230
									If (SE1->E1_ISS+nVRetISS) > (SE1->E1_VALOR)-0.01
										SE1->E1_VRETISS := (SE1->E1_ISS+nVRetISS) - ((SE1->E1_VALOR)-0.01)
										SE1->E1_ISS := (SE1->E1_VALOR)-0.01
									Else
										SE1->E1_ISS := (SE1->E1_ISS+nVRetISS)
									EndIf
								Else
									If (nTotISS > 0 .And. nTotISS >= nMinRetISS )
										SE1->E1_VRETISS := SE1->E1_ISS
									Else
										SE1->E1_ISS := 0
									EndIf
								Endif
							Else
								If (SE1->E1_ISS+nVRetISS) > (SE1->E1_VALOR)-0.01
									SE1->E1_VRETISS := (SE1->E1_ISS+nVRetISS) - ((SE1->E1_VALOR)-0.01)
									SE1->E1_ISS := (SE1->E1_VALOR)-0.01
								Else
									SE1->E1_ISS := (SE1->E1_ISS+nVRetISS)
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
			SE1->E1_NOMCLI  := SA1->A1_NREDUZ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Se a origem for o LOJA e a carteira jah estiver definida, nao alterar.  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If AllTrim(Upper(cOrigem)) $ "LOJA010|LOJA701|FATA701"
				If Empty(SE1->E1_SITUACA) .AND. !Upper(AllTrim(SE1->E1_SITUACA)) $ "I|J"
					SE1->E1_SITUACA := "0"
				Endif
			Else
				SE1->E1_SITUACA := "0"
			Endif
			SE1->E1_EMIS1	 := dDataBase
			SE1->E1_BAIXA	 := CtoD("  /  /  ")
			SE1->E1_SALDO	 := SE1->E1_VALOR
			SE1->E1_STATUS  := Iif(E1_SALDO>0.01,"A","B")
			SE1->E1_ORIGEM  := UPPER(cOrigem)
			If SE1->E1_TIPO $ MVABATIM		 // Se for abatimento
				SE1->E1_OCORREN := "04"
				If lTitpai
					SE1->E1_TITPAI := cTitpai
				Endif
			EndIf
			If SE1->(FieldPos("E1_FILORIG")) > 0
				SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
			EndIf

			If lM040Se1
				Execblock("M040SE1",.F.,.F.)
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Não atualiza acumuladores quando operacao de adiantamento no mexico.    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cPaisLoc == "MEX" .AND. FunName() == "MATA467N" .AND. SF2->F2_TIPO == "A"
				lAtuAcum 		:= .F.
				lAtuSalDup 	:= .F.
			EndIf

			nSavRec:=RecNo()
			nMCusto:=Val(SuperGetMV("MV_MCUSTO"))
			nMCusto		:= If(SA1->A1_MOEDALC > 0,SA1->A1_MOEDALC, nMCusto)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza Acumulado de Clientes				  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !( SE1->E1_TIPO $ MVRECANT + "/"+MV_CRNEG)
				DbSelectArea("SA1")

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Nao atualizar os campos A1_VACUM e A1_NROCOM se o modulo for o loja ³
				//³ou frontloja (via RPC) e o cliente = cliente padrao.                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ((Upper(subs(cOrigem,1,3)) == "LOJ") .AND. (cCliPad + cLojaPad == SA1->A1_COD + SA1->A1_LOJA));
						.Or. (FunName() == "FINA074")
					lAtuAcum := .F.
				EndIf

				If lAtuAcum .And. !lOriFatura .and. !lLiquid
					Reclock("SA1",.F.)
					SA1->A1_PRICOM  := Iif(SE1->E1_EMISSAO<SA1->A1_PRICOM .Or. Empty(SA1->A1_PRICOM),SE1->E1_EMISSAO,SA1->A1_PRICOM)
					SA1->A1_ULTCOM  := Iif(SA1->A1_ULTCOM<SE1->E1_EMISSAO .And. SE1->E1_TIPO != "NDC",SE1->E1_EMISSAO,SA1->A1_ULTCOM)
					SA1->A1_NROCOM  := SA1->A1_NROCOM + If( lUpDate,1,0 )
					SA1->A1_VACUM	:= SA1->A1_VACUM + Round(NoRound(xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,nMCusto,SE1->E1_EMISSAO,3,SE1->E1_TXMOEDA),3),2)
					SA1->(MsUnlock())
				EndIf
			EndIf

			DbSelectArea("SE1")
			If !( SE1->E1_TIPO $ MVABATIM )

				cNatImp += "|" + If(!Empty(SuperGetMV("MV_ISS")),SuperGetMV("MV_ISS"),"")
				cNatImp += "|" + If(!Empty(SuperGetMV("MV_IRF")),SuperGetMV("MV_IRF"),"")
				cNatImp += "|" + If(!Empty(SuperGetMV("MV_INSS")),SuperGetMV("MV_INSS"),"")
				cNatImp += "|" + If(!Empty(SuperGetMV("MV_CSLL")),SuperGetMV("MV_CSLL"),"")
				cNatImp += "|" + If(!Empty(SuperGetMV("MV_PISNAT")),SuperGetMV("MV_PISNAT"),"")
				cNatImp += "|" + If(!Empty(SuperGetMV("MV_COFINS")),SuperGetMV("MV_COFINS"),"")

				If cPaisLoc<>"BRA".Or.!(Alltrim(SE1->E1_NATUREZ) $ cNatImp)

					cPrefixo  := E1_PREFIXO
					cNum		 := E1_NUM
					cTipoE1   := E1_TIPO
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ A variavel privada "cTipo" foi substituida pela variavel local "cTipoE1", ³
					//³ porque neste ponto seu conteudo estava sendo alterado, gravando assim,    ³
					//³ incorretamente os tipos das Notas de Debito/Credito.                      ³
					//³ Sergio Fuzinaka ( 22.10.01 )                                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza Acumulado Financeiros do Cliente  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nValTot == Nil
						nValTot := 0
						DbSelectArea("SE1")
						DbSetOrder(1)
						DbSeek(cFilial+cPrefixo+cNum)
						While ( !EOF() .And. E1_FILIAL+E1_PREFIXO+E1_NUM+E1_TIPO == ;
								cFilial+cPrefixo+cNum+cTipoE1 )
							nValTot := nValTot + MOEDA(SE1->E1_VALOR,1,"R")
							DbSkip()
						End
						DbGoTo( nSavRec )
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Nao Atualiza Caso seja um RA / NCC / PR    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ! ( SE1->E1_TIPO $ MVRECANT+"/"+MVPROVIS+"/"+MV_CRNEG ) .And. lAtuSalDup
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ No caso dos modulos Sigaloja e Front Loja na atualiza ³
						//³ os saldos de duplicatas para o cliente padrao		  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !( (Upper(subs(cOrigem,1,3)) == "LOJ") .AND. (cCliPad + cLojaPad == SE1->E1_ClIENTE + SE1->E1_LOJA) ) .And. FunName() <> "FINA074"
							nValForte := xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,SE1->E1_EMISSAO,3,SE1->E1_TXMOEDA)
							If !lLojaDin
								AtuSalDup("+",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
							EndIf
							nValForte := xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,nMCusto,SE1->E1_EMISSAO,3,SE1->E1_TXMOEDA)
							RecLock("SA1",.F.)
							SA1->A1_MSALDO :=Iif(SA1->A1_SALDUPM>SA1->A1_MSALDO,SA1->A1_SALDUPM,SA1->A1_MSALDO)
							If ( nValForte > SA1->A1_MAIDUPL )
								SA1->A1_MAIDUPL := nValForte
							EndIf
							DbSelectArea("SA1")
							If ( nValForte > SA1->A1_MCOMPRA )
								SA1->A1_MCOMPRA := nValForte
							EndIf
							MsUnlock()
						EndIf
					EndIf
					If cPaisLoc == "BRA"
						DbSelectArea( "SE1" )
						cParcela 	:= SE1->E1_PARCELA
						dEmissao 	:= SE1->E1_EMISSAO
						dVencto		:= SE1->E1_VENCTO
						dVencRea	:= SE1->E1_VENCREA
						nIrrf 		:= SE1->E1_IRRF
						nIss		:= SE1->E1_ISS
						nInss 		:= SE1->E1_INSS
						cNatur		:= SE1->E1_NATUREZ
						cCliente 	:= SE1->E1_CLIENTE
						cLoja 		:= SE1->E1_LOJA
						nCofins  	:= SE1->E1_COFINS
						nPis     	:= SE1->E1_PIS
						nCsll    	:= SE1->E1_CSLL
						cTitPai		:= SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA)

						// Gravação da taxa contratada para gravação no titulo de imposto (abatimento)
						// que poderá ser gerado futuramente na moeda 1
						If SE1->E1_MOEDA <> 1
							nTaxaTit := SE1->E1_TXMOEDA
						Endif
						If lFethab
							nFetHab  := SE1->E1_FETHAB
						Endif

						If lFabov
							nFabov  := SE1->E1_FABOV
						Endif

						If lTPDP
							nTPDP  := SE1->E1_TPDP
						Endif

						If lFacs
							nFacs  := SE1->E1_FACS
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de IRRF 							  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nIrrf > 0 .And. !lIrPjBxCr)
							If SA1->(FieldPos("A1_RECIRRF"))>0 .And. SA1->A1_RECIRRF=="2"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 		  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								DbSeek(cFilial+GetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMV("MV_UNIAO")))+cLojaIRF)
								If ( EOF() )
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMV("MV_UNIAO")
									SA2->A2_LOJA	:= cLojaIRF
									SA2->A2_NOME	:= "UNIAO"
									SA2->A2_NREDUZ := "UNIAO"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
								EndIf
								cParcIRF := ParcImposto(cPrefixo,cNum,MVTAXA)
								dNextDay := F050vImp("IRRF",dEmissao,dDataBase,dVencrea)
								dVencRea := dNextDay
								RecLock("SE2",.T.)
								SE2->E2_FILIAL	:= cFilial
								SE2->E2_PREFIXO	:= cPrefixo
								SE2->E2_NUM		:= cNum
								SE2->E2_PARCELA	:= cParcIRF
								SE2->E2_TIPO	:= MVTAXA
								SE2->E2_EMISSAO	:= dEmissao
								SE2->E2_VALOR	:= nIrrf
								SE2->E2_VENCREA	:= dVencrea
								SE2->E2_SALDO	:= nIrrf
								SE2->E2_VENCTO	:= dVencRea
								SE2->E2_VENCORI	:= dVencRea
								SE2->E2_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_EMIS1	:= dDataBase
								SE2->E2_FORNECE	:= GetMv("MV_UNIAO")
								SE2->E2_VLCRUZ	:= Round(nIrrf, MsDecimais(1) )
								SE2->E2_LOJA	:= SA2->A2_LOJA
								SE2->E2_NOMFOR	:= SA2->A2_NREDUZ
								SE2->E2_ORIGEM	:= Upper(cOrigem)
								cNatureza		:= &(GetMv("MV_IRF"))
								SE2->E2_NATUREZ	:= cNatureza
								SE2->E2_LA		:= cLA			// Herda do principal
								MsUnLock()

								AADD(aRecImpos,{"SE2",Recno()})

								//GRAVAR A PARCELA DO IRRF NO TITULO PRINCIPAL NO SE1
								DbSelectArea("SE1")
								If FieldPos("E1_PARCIRF")>0
									DbGoTo(nSavRec)
									RecLock("SE1",.F.)
									SE1->E1_PARCIRF	:= cParcIRF
									MsUnLock()
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza IRF caso nao exista		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								If ( !DbSeek(xFilial("SED")+cNatureza) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := xFilial("SED")
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
									SED->ED_TIPO	:= "2"
									MsUnlock()
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera lançamento do IRRF no SIGAPCO a partir do contas a pagar ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Upper(cOrigem) == "FINA040"
									PCODetLan("000001","12",Upper(cOrigem))
								EndIf

							Else
								If GetNewPar("MV_IRMP232","2")!= "1"
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza IRF caso nao exista		  ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									cNatureza	:= &(SuperGetMV("MV_IRF"))
									cNatureza	:= cNatureza+Space(10-Len(cNatureza))
									DbSelectArea("SED")
									DbSeek(cFilial+cNatureza)
									If EOF()
										RecLock("SED",.T.)
										SED->ED_FILIAL  := xFilial("SED")
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
										SED->ED_TIPO	:= "2"
										MsUnlock()
										FKCOMMIT()
									EndIf

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Busca a parcela IR de acordo com o titulo                                   ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									dbSelectArea("SE1")
									dbSetOrder(1)

									cParcela := SE1->E1_PARCELA
									nTamParc := Len(SE1->E1_PARCELA)
									While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+left(MVIRABT,3))
										cParcela := Soma1(cParcela,nTamParc)
									EndDo

									DbSelectArea("SE1")
									RecLock("SE1",.T.)
									SE1->E1_FILIAL  := cFilial
									SE1->E1_PREFIXO := cPrefixo
									SE1->E1_NUM 	 := cNum
									SE1->E1_PARCELA := cParcela
									SE1->E1_TIPO	 := MVIRABT
									SE1->E1_EMISSAO := dEmissao
									SE1->E1_VALOR	 := nIrrf
									SE1->E1_VENCREA := dVencRea
									SE1->E1_SALDO	 := nIrrf
									SE1->E1_VENCTO  := dVencto
									SE1->E1_VENCORI := dVencto
									SE1->E1_EMIS1	 := dDataBase
									SE1->E1_CLIENTE := cCliente
									SE1->E1_LOJA	 := cLoja
									SE1->E1_SITUACA := "0"
									SE1->E1_NOMCLI  := SA1->A1_NREDUZ
									SE1->E1_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE1->E1_VLCRUZ  := Round( nIrrf, MsDecimais(1) )
									SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
									SE1->E1_ORIGEM  := UPPER(cOrigem)
									SE1->E1_OCORREN := "04"
									SE1->E1_NATUREZ := cNatureza
									SE1->E1_LA      := cLa
									SE1->E1_FATURA	 := cFatura
									SE1->E1_TXMOEDA := nTaxaTit

									If SE1->(FieldPos("E1_FILORIG")) > 0
										SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
									EndIf

									If lTitpai
										SE1->E1_TITPAI := cTitpai
									Endif

									If lCtrAbatIRF
										lAbateuIRF	:=	.T.
									Endif

									AADD(aRecImpos,{"SE1",Recno()})

									If ExistBlock("F040IRF")
										Execblock("F040IRF",.F.,.F.,nSavRec)
									EndIf
									If lAtuSldNat
										AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
									Endif
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Baixa do Saldo do cliente o valor do IR.   ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SA1")
									If ( DbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
										If !lLojaDin
											AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
										EndIf
									EndIf

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Gera lançamento do IRRF no SIGAPCO a partir do contas a receber ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									If Upper(cOrigem) == "FINA040"
										PCODetLan("000001","06",Upper(cOrigem))
									EndIf

								Else
									If lCtrAbatIRF
										lAbateuIRF	:=	.F.
									Endif
								EndIf
							Endif
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de INSS 							  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nInss > 0 )
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza INSS caso nao exista		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cNatureza	:= &(SuperGetMV("MV_INSS"))
							cNatureza	:= cNatureza+Space(10-Len(cNatureza))
							DbSelectArea("SED")
							DbSeek(cFilial+cNatureza)
							If EOF()
								RecLock("SED",.T.)
								SED->ED_FILIAL  := xFilial()
								SED->ED_CODIGO  := cNatureza
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := "RETENCAO P/ SEGURIDADE SOCIAL"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Busca a parcela INSS de acordo com o titulo                                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea("SE1")
							dbSetOrder(1)

							cParcela := SE1->E1_PARCELA
							nTamParc := Len(SE1->E1_PARCELA)
							nRecSe1 := SE1->(Recno())
							While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+left(MVINABT,3))
								cParcela := Soma1(cParcela,nTamParc)
							EndDo

							If SE1->(Eof())
								SE1->(dbGoTo(nRecSE1))
							EndIf

							SA1->(DbSetOrder(1))
							cChaveSE1 := IIf(!Empty(SE1->(E1_CLIENTE+E1_LOJA)),SE1->(E1_CLIENTE+E1_LOJA),IIf(Type("M->E1_CLIENTE") != "U",M->(E1_CLIENTE+E1_LOJA),""))
							SA1->(DbSeek(xFilial("SA1")+cChaveSE1))

							If SA1->A1_RECINSS == "S" .Or. AllTrim(cOrigem) == "FINA040"
								RecLock("SE1",.T.)
								SE1->E1_FILIAL  := cFilial
								SE1->E1_PREFIXO := cPrefixo
								SE1->E1_NUM 	 := cNum
								SE1->E1_PARCELA := cParcela
								SE1->E1_TIPO	 := MVINABT
								SE1->E1_EMISSAO := dEmissao
								SE1->E1_VALOR	 := nInss
								SE1->E1_VENCREA := dVencRea
								SE1->E1_SALDO	 := nInss
								SE1->E1_VENCTO  := dVencto
								SE1->E1_VENCORI := dVencto
								SE1->E1_EMIS1	 := dDataBase
								SE1->E1_CLIENTE := cCliente
								SE1->E1_LOJA	 := cLoja
								SE1->E1_SITUACA := "0"
								SE1->E1_NOMCLI  := SA1->A1_NREDUZ
								SE1->E1_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE1->E1_VLCRUZ  := Round( nInss, MsDecimais(1) )
								SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
								SE1->E1_ORIGEM  := UPPER(cOrigem)
								SE1->E1_OCORREN := "04"
								SE1->E1_NATUREZ := cNatureza
								SE1->E1_LA      := cLa
								SE1->E1_FATURA	 := cFatura
								SE1->E1_TXMOEDA := nTaxaTit

								If SE1->(FieldPos("E1_FILORIG")) > 0
									SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
								EndIf

								If lTitpai
									SE1->E1_TITPAI := cTitpai
								Endif

								AADD(aRecImpos,{"SE1",Recno()})

								If ExistBlock("F040INS")
									Execblock("F040INS",.F.,.F.,nSavRec)
								EndIf

								MsUnlock()
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Baixa do Saldo do cliente o valor do Inss  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA1")
								If ( DbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
									If !lLojaDin
										AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
									EndIf
								EndIf

								If lAtuSldNat
									AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
								Endif
							Else
								//Cria o fornecedor caso não encontre
								DbSelectArea("SA2")
								If !(MsSeek(xFilial()+GetMv("MV_FORINSS")+Space(Len(A2_COD)-Len(GetMv("MV_FORINSS")))+cLojaImpos))
									Reclock("SA2",.T.)
									SA2->A2_FILIAL	:= xFilial("SA2")
									SA2->A2_COD		:= GetMv("MV_FORINSS")
									SA2->A2_LOJA	:= If(Alltrim(cLojaImpos)<>"",cLojaImpos,PadR("00",TamSX3("A2_LOJA")[1],"0"))
									SA2->A2_NOME	:= "Instituto Nacional de Previdencia Social"
									SA2->A2_NREDUZ	:= "INPS"
									SA2->A2_BAIRRO	:= "."
									SA2->A2_MUN		:= "."
									SA2->A2_EST		:= SuperGetMv("MV_ESTADO")
									SA2->A2_END		:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
									FKCOMMIT()
								EndIf

								cNatureza	:= &(GetMv("MV_INSS"))
								cNatureza	:= cNatureza+Space(10-Len(cNatureza))

								RecLock("SE2",.T.)
								SE2->E2_FILIAL  := xFilial("SE2")
								SE2->E2_PREFIXO := cPrefixo
								SE2->E2_NUM 	 := cNum
								SE2->E2_PARCELA := cParcela
								SE2->E2_TIPO	 := MVINSS
								SE2->E2_EMISSAO := dEmissao
								SE2->E2_VALOR	 := nInss
								SE2->E2_VENCREA := dVencrea
								SE2->E2_SALDO	 := nInss
								SE2->E2_VENCTO  := dVencRea
								SE2->E2_VENCORI := dVencRea
								SE2->E2_MOEDA	 := If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_EMIS1	 := dDataBase
								SE2->E2_FORNECE := GetMv("MV_FORINSS")
								SE2->E2_VLCRUZ  := nInss
								SE2->E2_LOJA	 := cLojaImpos
								SE2->E2_NOMFOR  := "INPS"
								SE2->E2_ORIGEM  := cOrigem
								SE2->E2_NATUREZ := cNatureza
								SE2->E2_LA      := cLA

								If lFilOrig
									SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
								EndIf

								If lTitpai
									SE1->E1_TITPAI := cTitpai
								Endif

								MsUnLock()

								AADD(aRecImpos,{"SE2",Recno()})

								If lAtuSldNat
									AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
								Endif
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera lançamento do INSS no SIGAPCO a partir do contas a receber ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If Upper(cOrigem) == "FINA040"
								PCODetLan("000001","07",Upper(cOrigem))
							EndIf

						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de ISS									  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nIss > 0 )
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria o fornecedor, caso nao exista 		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SA2")
							Dbsetorder (1)
							DbSeek(cFilial+cMunIss+Space(Len(A2_COD)-Len(cMunIss))+cLojaImpos)
							If ( EOF() )
								Reclock("SA2",.T.)
								SA2->A2_FILIAL := cFilial
								SA2->A2_COD 	:= cMunIss
								SA2->A2_LOJA	:= cLojaImpos
								SA2->A2_NOME	:= cNome // MUNICIPIO
								SA2->A2_NREDUZ := cNome // MUNICIPIO
								SA2->A2_BAIRRO := "."
								SA2->A2_MUN 	:= "."
								SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
								SA2->A2_End 	:= "."
								MsUnlock()
								FKCOMMIT()
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza ISS caso nao exista		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cNatureza	:= &(SuperGetMV("MV_ISS"))
							cNatureza	:= cNatureza+Space(10-Len(cNatureza))
							DbSelectArea("SED")
							If ( ! DbSeek( cFilial + cNatureza ) )
								RecLock("SED",.T.)
								SED->ED_FILIAL  := cFilial
								SED->ED_CODIGO  := cNatureza
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := "IMPOSTO SOBRE SERVICOS"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf
							// Se o cliente abate o ISS, gera abatimento. Senao, gera titulo para pagamento do tributo.
							If cRecISS == "1" .And. GetNewPar("MV_DESCISS",.F.)

								If lGerAbtISS
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Busca a parcela ISS de acordo com o titulo                                   ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									dbSelectArea("SE1")
									dbSetOrder(1)

									cParcela := SE1->E1_PARCELA
									nTamParc := Len(SE1->E1_PARCELA)
									While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+left(MVISABT,3))
										cParcela := Soma1(cParcela,nTamParc)
									EndDo

									RecLock("SE1",.T.)
									SE1->E1_FILIAL  := cFilial
									SE1->E1_PREFIXO := cPrefixo
									SE1->E1_NUM 	 := cNum
									SE1->E1_PARCELA := cParcela

									cNatureza:= &(SuperGetMV("MV_ISS"))
									SE1->E1_NATUREZ := cNatureza

									SE1->E1_TIPO	 := MVISABT
									SE1->E1_EMISSAO := dEmissao
									SE1->E1_VALOR	 := nIss
									SE1->E1_VENCREA := dVencRea
									SE1->E1_SALDO	 := nIss
									SE1->E1_VENCTO  := dVencto
									SE1->E1_VENCORI := dVencto
									SE1->E1_EMIS1	 := dDataBase
									SE1->E1_CLIENTE := cCliente
									SE1->E1_LOJA	 := cLoja
									SE1->E1_NOMCLI  := SA1->A1_NREDUZ
									SE1->E1_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE1->E1_VLCRUZ  := Round( nIss, MsDecimais(1) )
									SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
									SE1->E1_ORIGEM  := UPPER(cOrigem)
									SE1->E1_LA      := cLa
									SE1->E1_FATURA	 := cFatura
									SE1->E1_SITUACA := "0"
									SE1->E1_OCORREN := "04"
									SE1->E1_SITUACA := "0"
									SE1->E1_TXMOEDA := nTaxaTit

									If SE1->(FieldPos("E1_FILORIG")) > 0
										SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
									EndIf

									If lTitpai
										SE1->E1_TITPAI := cTitpai
									Endif

									AADD(aRecImpos,{"SE1",Recno()})

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Baixa do Saldo do cliente o valor do Iss  ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SA1")
									If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
										If !lLojaDin
											AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
										EndIf
									EndIf

									If lAtuSldNat
										AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
									Endif
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Gera lançamento do ISS no SIGAPCO a partir do contas a receber ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									If Upper(cOrigem) == "FINA040"
										PCODetLan("000001","08",Upper(cOrigem))
									EndIf
								Elseif !lGerAbtISS .and. nTotISS > 0 .And. nTotISS <= nMinRetISS
									SE1->E1_VALOR+= nTotISS
									SE1->E1_SALDO+= nTotISS
								EndIf

							Else
								If Funname()<> "FINA460" .And. !(cOrigem = "FINA460" .And. Funname()="FINA740")
									Do Case
									Case GetNewPar("MV_VENCISS","E")=="E"
										dVenISS := dEmissao
										dVenISS += 28
										If ( Month(dVenISS) == Month(dEmissao) )
											dVenISS := dVenISS+28
										EndIf
										nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
										dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
									Case GetNewPar("MV_VENCISS","E")=="Q" //Ultimo dia util da quinzena subsequente a dEmissao
										If Day(dEmissao) <= 15
											dVenISS	:= LastDay(dEmissao)
											dVenISS := DataValida(dVenISS,.F.)
										Else
											dVenISS := DataValida((LastDay(dEmissao)+1)+14,.F.)
										EndIf
									Case GetNewPar("MV_VENCISS","E")=="U" //Ultimo dia util do mes subsequente da dEmissao
										dVenISS := DataValida(LastDay(LastDay(dEmissao)+1),.F.)
									Case GetNewPar("MV_VENCISS","E")=="D"
										dVenISS := (LastDay(dEmissao)+1)
										nDiaUtil:= SuperGetMv("MV_DIAISS")
										For nDia := 1 To nDiaUtil-1
											If !(dVenISS == DataValida(dVenISS,.T.))
												nDia-=1
											EndIf
											dVenISS+=1
										Next nDia
									Case GetNewPar("MV_VENCISS","E")=="F" //Qtd de dia do parametro MV_DIAISS apos o fechamento da quinzena.
										If Day(dEmissao) <= 15
											dVenISS := CtoD("15"+SUBSTR(DtoC(dEmissao),3,Len(DtoC(dEmissao))))+SuperGetMv("MV_DIAISS")
										Else
											dVenISS := LastDay(dEmissao)+SuperGetMv("MV_DIAISS")
										EndIf
									OtherWise
										dVenISS := dVencto
										dVenISS += 28
										If ( Month(dVenISS) == Month(dVencto) )
											dVenISS := dVenISS+28
										EndIf
										nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
										dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
									EndCase

									dVencRIss := DataValida(dVenISS,IIF(lVcAntIss,.F.,.T.))
									dVenISS := IIF(dVenIss > dVencRIss, dVencRISS, dVenIss)

									RecLock("SE2",.T.)
									SE2->E2_FILIAL  := cFilial
									SE2->E2_PREFIXO := cPrefixo
									SE2->E2_NUM 	 := cNum
									SE2->E2_PARCELA := cParcela
									SE2->E2_TIPO	 := MVTAXA
									SE2->E2_EMISSAO := dEmissao
									SE2->E2_EMIS1	 := dDataBase
									SE2->E2_VALOR	 := nIss
									SE2->E2_VENCREA := dVencRIss
									SE2->E2_VENCTO  := dVenISS
									SE2->E2_SALDO	 := nIss
									SE2->E2_VENCORI := dVenISS
									SE2->E2_FORNECE := cMunIss
									SE2->E2_LOJA	 := cLojaImpos
									SE2->E2_NOMFOR  := SA2->A2_NREDUZ
									SE2->E2_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE2->E2_VLCRUZ	:= Round(SE2->E2_VALOR,MsDecimais(1))
									SE2->E2_ORIGEM  := Upper(cOrigem)
									SE2->E2_NATUREZ := cNatureza
									SE2->E2_LA      := cLA

									AADD(aRecImpos,{"SE2",Recno()})

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Gera lançamento do ISS no SIGAPCO a partir do contas a pagar ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									If Upper(cOrigem) == "FINA040"
										PCODetLan("000001","13",Upper(cOrigem))
									EndIf
								Endif
							Endif
							MsUnLock()

							If ExistBlock("F040ISS")
								Execblock("F040ISS",.F.,.F.,nSavRec)
							EndIf

						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo Funrural					   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nValFun := Iif(Type("nValFun")=="U",0,nValFun)
						If ( nValFun > 0 )

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza FUNRURAL caso nao exista   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cNatureza		:= SuperGetMv("MV_CSS")
							cNatureza		:= cNatureza+Space(10-Len(cNatureza))
							DbSelectArea("SED")
							DbSeek(cFilial+cNatureza)
							If EOF()
								RecLock("SED",.T.)
								SED->ED_FILIAL  := cFilial
								SED->ED_CODIGO  := SuperGetMV("MV_CSS")
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := "CONTRIBUICAO SEGURIDADE SOCIAL"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf

							dVenFun := dEmissao + 28
							If Month(dVenFun) == Month(dEmissao)
								dVenFun := dVenFun+28
							EndIf
							nTamData := If(Len(Dtoc(dVenFun)) == 10, 7, 5)
							dVenFun	:= Ctod(StrZero(SuperGetMV("MV_DIAFUN"),2)+"/"+Subs(Dtoc(dVenFun),4,nTamData))
							dVencRea := DataValida(dVenFun,.F.)
							DbSelectArea("SA1")
							DbGoTo(nSalvCli)
							If ( !SA1->A1_TIPO $ "L#F" )
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Busca a parcela Funrural de acordo com o titulo                                   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE1")
								dbSetOrder(1)

								cParcela := SE1->E1_PARCELA
								nTamParc := Len(SE1->E1_PARCELA)
								While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+left(MVFUABT,3))
									cParcela := Soma1(cParcela,nTamParc)
								EndDo
								RecLock("SE1",.T.)
								SE1->E1_FILIAL  := cFilial
								SE1->E1_PREFIXO := cPrefixo
								SE1->E1_NUM 	 := cNum
								SE1->E1_PARCELA := cParcela
								SE1->E1_NATUREZ := cNatureza
								SE1->E1_TIPO	 := MVFUABT
								SE1->E1_EMISSAO := dEmissao
								SE1->E1_VALOR	 := nValFun
								SE1->E1_VENCREA := dEmissao
								SE1->E1_SALDO	 := nValFun
								SE1->E1_VENCTO  := dEmissao
								SE1->E1_VENCORI := dEmissao
								SE1->E1_EMIS1	 := dDataBase
								SE1->E1_CLIENTE := SA1->A1_COD
								SE1->E1_LOJA	 := SA1->A1_LOJA
								SE1->E1_NOMCLI  := SA1->A1_NREDUZ
								SE1->E1_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE1->E1_VLCRUZ  := Round( nValFun, MsDecimais(1) )
								SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
								SE1->E1_ORIGEM  := UPPER(cOrigem)
								SE1->E1_LA      := cLa
								SE1->E1_FATURA	 := cFatura
								SE1->E1_SITUACA := "0"
								SE1->E1_TXMOEDA := nTaxaTit

								If SE1->(FieldPos("E1_FILORIG")) > 0
									SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
								EndIf

								If lTitpai
									SE1->E1_TITPAI := cTitpai
								Endif

								AADD(aRecImpos,{"SE1",Recno()})

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ  Ä¿
								//³ Baixa do Saldo do cliente o valor do Funrural³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ  ÄÙ
								DbSelectArea("SA1")
								If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
									If !lLojaDin
										AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
									EndIf
								EndIf

								If lAtuSldNat
									AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
								Endif

								MsUnLock()
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o cliente, caso nao exista 		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								DbSetOrder(1)
								If !(DbSeek(xFilial()+GetMv("MV_FORINSS")+Space(Len(A2_COD)-Len(GetMv("MV_FORINSS")))+cLojaImpos))
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMv("MV_FORINSS")
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:= "Instituto Nacional de Previdencia Social"
									SA2->A2_NREDUZ := "INPS"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
									FKCOMMIT()
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera titulo para uniao, pois quando a vEnda e'           ³
								//³ para pessoa fisica quem recolhe o funrural e' quem vEnde ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SE2")
								RecLock("SE2",.T.)
								SE2->E2_FILIAL  := cFilial
								SE2->E2_PREFIXO := cPrefixo
								SE2->E2_NUM 	 := cNum
								SE2->E2_PARCELA := cParcela
								SE2->E2_NATUREZ := cNatureza
								SE2->E2_TIPO	 := MVTAXA
								SE2->E2_EMISSAO := dEmissao
								SE2->E2_VALOR	 := nValFun
								SE2->E2_VENCTO  := dVenFun
								SE2->E2_SALDO	 := nValFun
								SE2->E2_VENCREA := dVencRea
								SE2->E2_VENCORI := dVenFun
								SE2->E2_EMIS1	 := dDataBase
								SE2->E2_FORNECE := SuperGetMV("MV_FORINSS")
								SE2->E2_LOJA	 := cLojaImpos
								SE2->E2_NOMFOR  := SA2->A2_NREDUZ
								SE2->E2_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_VLCRUZ	:= Round(SE2->E2_VALOR,MsDecimais(1))
								SE2->E2_ORIGEM  := Upper(cOrigem)
								SE2->E2_LA      := cLa

								AADD(aRecImpos,{"SE2",Recno()})

								If lM040CSSR
									ExecBlock("M040CSSR",.F.,.F.)
								Endif

								MsUnlock()
							EndIf
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de COFINS                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nCofins > 0 .And. !lPccBxCr ) // lPccBxCr(retem na Baixa)

							If lAbate

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza COFINS caso nao exista     ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								cNatureza	:= (SuperGetMV("MV_COFINS"))
								cNatureza	:= cNatureza+(Space(10-Len(cNatureza)))
								If ( ! DbSeek( cFilial + cNatureza ) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := xFilial()
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "COFINS"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Busca a parcela Cofins de acordo com o titulo                                   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE1")
								dbSetOrder(1)

								cParcela := SE1->E1_PARCELA
								nTamParc := Len(SE1->E1_PARCELA)
								While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+left(MVCFABT,3))
									cParcela := Soma1(cParcela,nTamParc)
								EndDo

								RecLock("SE1",.T.)
								SE1->E1_FILIAL  := cFilial
								SE1->E1_PREFIXO := cPrefixo
								SE1->E1_NUM     := cNum
								SE1->E1_PARCELA := cParcela
								SE1->E1_TIPO    := MVCFABT
								SE1->E1_EMISSAO := dEmissao
								SE1->E1_EMIS1   := dDataBase
								SE1->E1_VALOR   := nCofins
								SE1->E1_VENCTO  := dVencto
								SE1->E1_SALDO   := nCofins
								SE1->E1_VENCREA := dVencRea
								SE1->E1_VENCORI := dVencto
								SE1->E1_CLIENTE := cCliente
								SE1->E1_LOJA    := cLoja
								SE1->E1_NOMCLI  := SA1->A1_NREDUZ
								SE1->E1_MOEDA   := If(cPaisLoc=="BRA",1,nMoeda)
								SE1->E1_VLCRUZ  := Round(SE1->E1_VALOR,MsDecimais(1))
								SE1->E1_ORIGEM  := Upper(cOrigem)
								SE1->E1_NATUREZ := cNatureza
								SE1->E1_OCORREN := "04"
								SE1->E1_SITUACA := "0"
								SE1->E1_STATUS  := "A"
								SE1->E1_LA      := cLa
								SE1->E1_FATURA	 := cFatura
								SE1->E1_TXMOEDA := nTaxaTit

								If SE1->(FieldPos("E1_FILORIG")) > 0
									SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
								EndIf

								If lTitpai
									SE1->E1_TITPAI := cTitpai
								Endif

								AADD(aRecImpos,{"SE1",Recno()})

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Baixa do Saldo do cliente o valor do COFINS³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA1")
								If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
									If !lLojaDin
										AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
									EndIf
								EndIf

								If lAtuSldNat
									AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
								Endif
								lAbateuCOF := .T.

								If ExistBlock("F040COF")
									Execblock("F040COF",.F.,.F.,nSavRec)
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera lançamento do COFINS no SIGAPCO a partir do contas a receber ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Upper(cOrigem) == "FINA040"
									PCODetLan("000001","09",Upper(cOrigem))
								EndIf

							Else
								If lContrAbat
									lAbateuCOF := .F.
								EndIf
							EndIf

						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de PIS                         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nPis > 0 .And. !lPccBxCr ) // lPccBxCr(retem na Baixa)

							If lAbate

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza PIS caso nao exista        ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								cNatureza       := SuperGetMV("MV_PISNAT")
								cNatureza := cNatureza+(Space(10-Len(cNatureza)))
								If ( ! DbSeek( cFilial + cNatureza ) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "PIS"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Busca a parcela PIS de acordo com o titulo                                   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE1")
								dbSetOrder(1)

								cParcela := SE1->E1_PARCELA
								nTamParc := Len(SE1->E1_PARCELA)
								While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+left(MVPIABT,3))
									cParcela := Soma1(cParcela,nTamParc)
								EndDo

								RecLock("SE1",.T.)
								SE1->E1_FILIAL  := cFilial
								SE1->E1_PREFIXO := cPrefixo
								SE1->E1_NUM     := cNum
								SE1->E1_PARCELA := cParcela
								SE1->E1_TIPO    := MVPIABT
								SE1->E1_EMISSAO := dEmissao
								SE1->E1_EMIS1   := dDataBase
								SE1->E1_VALOR   := nPis
								SE1->E1_VENCTO  := dVencto
								SE1->E1_SALDO   := nPis
								SE1->E1_VENCREA := dVencRea
								SE1->E1_VENCORI := dVencto
								SE1->E1_CLIENTE := cCliente
								SE1->E1_LOJA    := cLoja
								SE1->E1_NOMCLI  := SA1->A1_NREDUZ
								SE1->E1_MOEDA   := If(cPaisLoc=="BRA",1,nMoeda)
								SE1->E1_VLCRUZ  := Round(SE1->E1_VALOR,MsDecimais(1))
								SE1->E1_ORIGEM  := Upper(cOrigem)
								SE1->E1_NATUREZ := cNatureza
								SE1->E1_STATUS  := "A"
								SE1->E1_SITUACA := "0"
								SE1->E1_OCORREN := "04"
								SE1->E1_LA      := cLa
								SE1->E1_FATURA	 := cFatura
								SE1->E1_TXMOEDA := nTaxaTit

								If SE1->(FieldPos("E1_FILORIG")) > 0
									SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
								EndIf

								If lTitpai
									SE1->E1_TITPAI := cTitpai
								Endif

								AADD(aRecImpos,{"SE1",Recno()})

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Baixa do Saldo do cliente o valor do PIS   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA1")
								If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
									If !lLojaDin
										AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
									EndIf
								EndIf

								If lAtuSldNat
									AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
								Endif

								lAbateuPIS := .T.

								If ExistBlock("F040PIS")
									Execblock("F040PIS",.F.,.F.,nSavRec)
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera lançamento do PIS no SIGAPCO a partir do contas a receber ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Upper(cOrigem) == "FINA040"
									PCODetLan("000001","10",Upper(cOrigem))
								EndIf

							Else
								If lContrAbat
									lAbateuPIS := .F.
								EndIf
							EndIf

						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de CSLL                        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nCsll > 0 .And. !lPccBxCr ) // lPccBxCr(retem na Baixa)

							If lAbate
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza CSLL caso nao exista       ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								cNatureza	:= SuperGetMV("MV_CSLL")
								cNatureza	:= cNatureza+(Space(10-Len(cNatureza)))
								If ( ! DbSeek( cFilial + cNatureza ) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "CONTRIB.S/LUCRO LIQUIDO"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Busca a parcela CSLL de acordo com o titulo                                   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE1")
								dbSetOrder(1)

								cParcela := SE1->E1_PARCELA
								nTamParc := Len(SE1->E1_PARCELA)
								While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+left(MVCSABT,3))
									cParcela := Soma1(cParcela,nTamParc)
								EndDo
								RecLock("SE1",.T.)
								SE1->E1_FILIAL  := cFilial
								SE1->E1_PREFIXO := cPrefixo
								SE1->E1_NUM     := cNum
								SE1->E1_PARCELA := cParcela
								SE1->E1_TIPO    := MVCSABT
								SE1->E1_EMISSAO := dEmissao
								SE1->E1_EMIS1   := dDataBase
								SE1->E1_VALOR   := nCsll
								SE1->E1_VENCTO  := dVencto
								SE1->E1_SALDO   := nCsll
								SE1->E1_VENCREA := dVencRea
								SE1->E1_VENCORI := dVencto
								SE1->E1_CLIENTE := cCliente
								SE1->E1_LOJA    := cLoja
								SE1->E1_NOMCLI  := SA1->A1_NREDUZ
								SE1->E1_MOEDA   := If(cPaisLoc=="BRA",1,nMoeda)
								SE1->E1_VLCRUZ  := Round(SE1->E1_VALOR,MsDecimais(1))
								SE1->E1_ORIGEM  := Upper(cOrigem)
								SE1->E1_NATUREZ := cNatureza
								SE1->E1_STATUS  := "A"
								SE1->E1_SITUACA := "0"
								SE1->E1_OCORREN := "04"
								SE1->E1_LA      := cLa
								SE1->E1_FATURA	 := cFatura
								SE1->E1_TXMOEDA := nTaxaTit

								If SE1->(FieldPos("E1_FILORIG")) > 0
									SE1->E1_FILORIG  := If(Empty(SE1->E1_FILORIG),cFilAnt,SE1->E1_FILORIG)
								EndIf

								If lTitpai
									SE1->E1_TITPAI := cTitpai
								Endif

								AADD(aRecImpos,{"SE1",Recno()})

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Baixa do Saldo do cliente o valor do csll  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA1")
								If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
									If !lLojaDin
										AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,SE1->E1_TXMOEDA,SE1->E1_EMISSAO)
									EndIf
								EndIf

								If lAtuSldNat
									AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
								Endif

								lAbateuCSLL := .T.

								If ExistBlock("F040CSL")
									Execblock("F040CSL",.F.,.F.,nSavRec)
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera lançamento do CSLL no SIGAPCO a partir do contas a receber ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Upper(cOrigem) == "FINA040"
									PCODetLan("000001","11",Upper(cOrigem))
								EndIf

							Else
								If lContrAbat
									lAbateuCSLL := .F.
								EndIf
							EndIf
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³titulo do FETHAB                     	   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If SuperGetMv("MV_AGFETHA",,.F.)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Aglutina titulos do FETHAB                     	   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lFethab .and. nFethab > 0
								If SA1->(FieldPos("A1_RECFET"))>0 .And. SA1->A1_RECFET=="2"
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria o Fornecedor, caso nao exista 		   ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SA2")
									SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
									If ( EOF() )
										Reclock("SA2",.T.)
										SA2->A2_FILIAL := cFilial
										SA2->A2_COD 	:= GetMV("MV_RECEST")
										SA2->A2_LOJA	:= cLojaImpos
										SA2->A2_NOME	:= "RECEITA ESTADUAL"
										SA2->A2_NREDUZ := "RECEITA"
										SA2->A2_BAIRRO := "."
										SA2->A2_MUN 	:= "."
										SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
										SA2->A2_End 	:= "."
										SA2->A2_TIPO	:= "J"
										MsUnlock()
									EndIf
									DbSelectArea("SE2")
									SE2->(DbSetOrder(1))
									aTamParcI := TamSx3("E2_PARCELA")
									cParcFet  := StrZero(1,aTamParcI[1])
									While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFet+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
										cParcFet := Soma1(cParcFet,aTamParcI[1])
									EndDo

									RecLock("SE2",.T.)
									SE2->E2_FILIAL 	:= cFilial
									SE2->E2_PREFIXO	:= cPrefixo
									SE2->E2_NUM    	:= cNum
									SE2->E2_PARCELA	:= cParcFet
									SE2->E2_TIPO 	:= MVTAXA
									SE2->E2_EMISSAO	:= dEmissao
									SE2->E2_EMIS1  	:= dDataBase
									SE2->E2_VALOR  	:= nFethab+nFabov+nFacs
									SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
									SE2->E2_SALDO  	:= nFethab+nFabov+nFacs
									SE2->E2_VENCREA	:= DTVenIcms()
									SE2->E2_VENCORI	:= dEmissao
									SE2->E2_FORNECE	:= GetMv("MV_RECEST")
									SE2->E2_LOJA   	:= cLojaImpos
									SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
									SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE2->E2_VLCRUZ 	:= Round(nFethab+nFabov+nFacs, MsDecimais(1) )
									SE2->E2_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FETNAT",.F.,"FETHAB")
									SE2->E2_NATUREZ	:= Alltrim(cNatureza)
									MsUnLock()
									AADD(aRecImpos,{"SE2",Recno()})

									//Gravar a parcela do Fethab no titulo principal
									DbSelectArea("SE1")
									If SE1->(FieldPos("E1_PARCFET")>0)
										SE1->(DbGoTo(nSavRec))
										RecLock("SE1",.F.)
										SE1->E1_PARCFET	:= cParcFet
										MsUnLock()
									Endif

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Fethab caso nao exista     ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FETHAB"
										SED->ED_TIPO	:= "2"
										MsUnlock()
									EndIf
								else
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Busca a parcela Fethab de acordo com o titulo                               ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									dbSelectArea("SE1")
									dbSetOrder(1)

									cParcela := SE1->E1_PARCELA
									nTamParc := Len(SE1->E1_PARCELA)
									While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+"FE-")
										cParcela := Soma1(cParcela,nTamParc)
									EndDo

									RecLock("SE1",.T.)
									SE1->E1_FILIAL	:= cFilial
									SE1->E1_PREFIXO	:= cPrefixo
									SE1->E1_NUM 	:= cNum
									SE1->E1_PARCELA	:= cParcela
									SE1->E1_TIPO   	:= "FE-"
									SE1->E1_EMISSAO	:= dEmissao
									SE1->E1_EMIS1  	:= dDataBase
									SE1->E1_VALOR  	:= nFetHab+nFabov+nFacs
									SE1->E1_VENCTO 	:= dVencto
									SE1->E1_SALDO  	:= nFethab+nFabov+nFacs
									SE1->E1_VENCREA	:= dVencRea
									SE1->E1_VENCORI	:= dVencto
									SE1->E1_CLIENTE	:= cCliente
									SE1->E1_LOJA   	:= cLoja
									SE1->E1_NOMCLI 	:= SA1->A1_NREDUZ
									SE1->E1_MOEDA  	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE1->E1_VLCRUZ 	:= Round(SE1->E1_VALOR,MsDecimais(1))
									SE1->E1_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FETNAT",.F.,"FETHAB")
									SE1->E1_NATUREZ	:= Alltrim(cNatureza)
									SE1->E1_STATUS 	:= "A"
									SE1->E1_SITUACA	:= "0"
									SE1->E1_OCORREN	:= "04"
									SE1->E1_LA     	:= cLa
									SE1->E1_FATURA	:= cFatura

									If lAtuSldNat
										AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
									Endif

									AADD(aRecImpos,{"SE1",Recno()})

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Fethab caso nao exista     ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									cNatureza := AllTrim(cNatureza)
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FETHAB"
										SED->ED_TIPO	:= "2"
									EndIf
									If ExistBlock("F040FET")
										Execblock("F040FET",.F.,.F.,nSavRec)
									Endif
								Endif
							EndIf
						Else
							If lFethab .and. nFethab > 0
								If SA1->(FieldPos("A1_RECFET"))>0 .And. SA1->A1_RECFET=="2"
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria o Fornecedor, caso nao exista 		   ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SA2")
									SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
									If ( EOF() )
										Reclock("SA2",.T.)
										SA2->A2_FILIAL := cFilial
										SA2->A2_COD 	:= GetMV("MV_RECEST")
										SA2->A2_LOJA	:= cLojaImpos
										SA2->A2_NOME	:= "RECEITA ESTADUAL"
										SA2->A2_NREDUZ := "RECEITA"
										SA2->A2_BAIRRO := "."
										SA2->A2_MUN 	:= "."
										SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
										SA2->A2_End 	:= "."
										SA2->A2_TIPO	:= "J"
										MsUnlock()
									EndIf
									DbSelectArea("SE2")
									SE2->(DbSetOrder(1))
									aTamParcI := TamSx3("E2_PARCELA")
									cParcFet  := StrZero(1,aTamParcI[1])
									While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFet+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
										cParcFet := Soma1(cParcFet,aTamParcI[1])
									EndDo

									RecLock("SE2",.T.)
									SE2->E2_FILIAL 	:= cFilial
									SE2->E2_PREFIXO	:= cPrefixo
									SE2->E2_NUM    	:= cNum
									SE2->E2_PARCELA	:= cParcFet
									SE2->E2_TIPO 	:= MVTAXA
									SE2->E2_EMISSAO	:= dEmissao
									SE2->E2_EMIS1  	:= dDataBase
									SE2->E2_VALOR  	:= nFethab
									SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
									SE2->E2_SALDO  	:= nFethab
									SE2->E2_VENCREA	:= DTVenIcms()
									SE2->E2_VENCORI	:= dEmissao
									SE2->E2_FORNECE	:= GetMv("MV_RECEST")
									SE2->E2_LOJA   	:= cLojaImpos
									SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
									SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE2->E2_VLCRUZ 	:= Round(nFethab, MsDecimais(1) )
									SE2->E2_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FETNAT",.F.,"FETHAB")
									SE2->E2_NATUREZ	:= Alltrim(cNatureza)
									MsUnLock()
									AADD(aRecImpos,{"SE2",Recno()})

									//Gravar a parcela do Fethab no titulo principal
									DbSelectArea("SE1")
									If SE1->(FieldPos("E1_PARCFET")>0)
										SE1->(DbGoTo(nSavRec))
										RecLock("SE1",.F.)
										SE1->E1_PARCFET	:= cParcFet
										MsUnLock()
									Endif

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Fethab caso nao exista     ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FETHAB"
										SED->ED_TIPO	:= "2"
										MsUnlock()
									EndIf
								else
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Busca a parcela Fethab de acordo com o titulo                               ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									dbSelectArea("SE1")
									dbSetOrder(1)

									cParcela := SE1->E1_PARCELA
									nTamParc := Len(SE1->E1_PARCELA)
									While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+"FE-")
										cParcela := Soma1(cParcela,nTamParc)
									EndDo

									RecLock("SE1",.T.)
									SE1->E1_FILIAL	:= cFilial
									SE1->E1_PREFIXO	:= cPrefixo
									SE1->E1_NUM 	:= cNum
									SE1->E1_PARCELA	:= cParcela
									SE1->E1_TIPO   	:= "FE-"
									SE1->E1_EMISSAO	:= dEmissao
									SE1->E1_EMIS1  	:= dDataBase
									SE1->E1_VALOR  	:= nFetHab
									SE1->E1_VENCTO 	:= dVencto
									SE1->E1_SALDO  	:= nFethab
									SE1->E1_VENCREA	:= dVencRea
									SE1->E1_VENCORI	:= dVencto
									SE1->E1_CLIENTE	:= cCliente
									SE1->E1_LOJA   	:= cLoja
									SE1->E1_NOMCLI 	:= SA1->A1_NREDUZ
									SE1->E1_MOEDA  	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE1->E1_VLCRUZ 	:= Round(SE1->E1_VALOR,MsDecimais(1))
									SE1->E1_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FETNAT",.F.,"FETHAB")
									SE1->E1_NATUREZ	:= Alltrim(cNatureza)
									SE1->E1_STATUS 	:= "A"
									SE1->E1_SITUACA	:= "0"
									SE1->E1_OCORREN	:= "04"
									SE1->E1_LA     	:= cLa
									SE1->E1_FATURA	:= cFatura

									If lAtuSldNat
										AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, "2", "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO $ MVABATIM,"-","+"))
									Endif

									AADD(aRecImpos,{"SE1",Recno()})

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Fethab caso nao exista     ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									cNatureza := AllTrim(cNatureza)
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FETHAB"
										SED->ED_TIPO	:= "2"
									EndIf
									If ExistBlock("F040FET")
										Execblock("F040FET",.F.,.F.,nSavRec)
									Endif
								Endif
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³titulo do FABOV                        	   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lFabov .and. nFabov > 0
								If SA1->(FieldPos("A1_RFABOV"))>0 .And. SA1->A1_RFABOV=="2"
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria o Fornecedor, caso nao exista 		  ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SA2")
									SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
									If ( EOF() )
										Reclock("SA2",.T.)
										SA2->A2_FILIAL := cFilial
										SA2->A2_COD 	:= GetMV("MV_RECEST")
										SA2->A2_LOJA	:= cLojaImpos
										SA2->A2_NOME	:= "RECEITA ESTADUAL"
										SA2->A2_NREDUZ := "RECEITA"
										SA2->A2_BAIRRO := "."
										SA2->A2_MUN 	:= "."
										SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
										SA2->A2_End 	:= "."
										SA2->A2_TIPO	:= "J"
										MsUnlock()
									EndIf

									DbSelectArea("SE2")
									SE2->(DbSetOrder(1))
									aTamParcI := TamSx3("E2_PARCELA")
									cParcFab  := StrZero(1,aTamParcI[1])
									While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFab+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
										cParcFab := Soma1(cParcFab,aTamParcI[1])
									EndDo

									RecLock("SE2",.T.)
									SE2->E2_FILIAL 	:= cFilial
									SE2->E2_PREFIXO	:= cPrefixo
									SE2->E2_NUM    	:= cNum
									SE2->E2_PARCELA	:= cParcFab
									SE2->E2_TIPO 	:= MVTAXA
									SE2->E2_EMISSAO	:= dEmissao
									SE2->E2_EMIS1  	:= dDataBase
									SE2->E2_VALOR  	:= nFabov
									SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
									SE2->E2_SALDO  	:= nFabov
									SE2->E2_VENCREA	:= DTVenIcms()
									SE2->E2_VENCORI	:= dEmissao
									SE2->E2_FORNECE	:= GetMv("MV_RECEST")
									SE2->E2_LOJA   	:= cLojaImpos
									SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
									SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE2->E2_VLCRUZ 	:= Round(nFabov, MsDecimais(1) )
									SE2->E2_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FABNAT",.F.,"FABOV")
									SE2->E2_NATUREZ	:= Alltrim(cNatureza)
									MsUnLock()
									AADD(aRecImpos,{"SE2",Recno()})

									//Gravar a parcela do Fabov no titulo principal
									DbSelectArea("SE1")
									If SE1->(FieldPos("E1_PARCFAB")>0)
										SE1->(DbGoTo(nSavRec))
										RecLock("SE1",.F.)
										SE1->E1_PARCFAB	:= cParcFab
										MsUnLock()
									Endif

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Fabov caso nao exista     ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FABOV"
										SED->ED_TIPO	:= "2"
										MsUnlock()
									EndIf
								else
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Busca a parcela Fabov de acordo com o titulo                               ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									dbSelectArea("SE1")
									dbSetOrder(1)

									cParcela := SE1->E1_PARCELA
									nTamParc := Len(SE1->E1_PARCELA)
									While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+"FB-")
										cParcela := Soma1(cParcela,nTamParc)
									EndDo

									RecLock("SE1",.T.)
									SE1->E1_FILIAL	:= cFilial
									SE1->E1_PREFIXO	:= cPrefixo
									SE1->E1_NUM 	:= cNum
									SE1->E1_PARCELA	:= cParcela
									SE1->E1_TIPO   	:= "FB-"
									SE1->E1_EMISSAO	:= dEmissao
									SE1->E1_EMIS1  	:= dDataBase
									SE1->E1_VALOR  	:= nFabov
									SE1->E1_VENCTO 	:= dVencto
									SE1->E1_SALDO  	:= nFabov
									SE1->E1_VENCREA	:= dVencRea
									SE1->E1_VENCORI	:= dVencto
									SE1->E1_CLIENTE	:= cCliente
									SE1->E1_LOJA   	:= cLoja
									SE1->E1_NOMCLI 	:= SA1->A1_NREDUZ
									SE1->E1_MOEDA  	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE1->E1_VLCRUZ 	:= Round(SE1->E1_VALOR,MsDecimais(1))
									SE1->E1_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FABNAT",.F.,"FABOV")
									SE1->E1_NATUREZ	:= Alltrim(cNatureza)
									SE1->E1_STATUS 	:= "A"
									SE1->E1_SITUACA	:= "0"
									SE1->E1_OCORREN	:= "04"
									SE1->E1_LA     	:= cLa
									SE1->E1_FATURA	:= cFatura

									AADD(aRecImpos,{"SE1",Recno()})

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Fabov caso nao exista      ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									cNatureza := AllTrim(cNatureza)
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FABOV"
										SED->ED_TIPO	:= "2"
									EndIf
									If ExistBlock("F040FAB")
										Execblock("F040FAB",.F.,.F.,nSavRec)
									Endif
								Endif
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³titulo do FACS                        	   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lFacs .and. nFacs > 0
								If SA1->(FieldPos("A1_RFACS"))>0 .And. SA1->A1_RFACS=="2"
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria o Fornecedor, caso nao exista 		  ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SA2")
									SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
									If ( EOF() )
										Reclock("SA2",.T.)
										SA2->A2_FILIAL := cFilial
										SA2->A2_COD 	:= GetMV("MV_RECEST")
										SA2->A2_LOJA	:= cLojaImpos
										SA2->A2_NOME	:= "RECEITA ESTADUAL"
										SA2->A2_NREDUZ := "RECEITA"
										SA2->A2_BAIRRO := "."
										SA2->A2_MUN 	:= "."
										SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
										SA2->A2_End 	:= "."
										SA2->A2_TIPO	:= "J"
										MsUnlock()
									EndIf

									DbSelectArea("SE2")
									SE2->(DbSetOrder(1))
									aTamParcI := TamSx3("E2_PARCELA")
									cParcFac  := StrZero(1,aTamParcI[1])
									While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFac+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
										cParcFac := Soma1(cParcFac,aTamParcI[1])
									EndDo

									RecLock("SE2",.T.)
									SE2->E2_FILIAL 	:= cFilial
									SE2->E2_PREFIXO	:= cPrefixo
									SE2->E2_NUM    	:= cNum
									SE2->E2_PARCELA	:= cParcFac
									SE2->E2_TIPO 	:= MVTAXA
									SE2->E2_EMISSAO	:= dEmissao
									SE2->E2_EMIS1  	:= dDataBase
									SE2->E2_VALOR  	:= nFacs
									SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
									SE2->E2_SALDO  	:= nFacs
									SE2->E2_VENCREA	:= DTVenIcms()
									SE2->E2_VENCORI	:= dEmissao
									SE2->E2_FORNECE	:= GetMv("MV_RECEST")
									SE2->E2_LOJA   	:= cLojaImpos
									SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
									SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE2->E2_VLCRUZ 	:= Round(nFacs, MsDecimais(1) )
									SE2->E2_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FACNAT",.F.,"FACS")
									SE2->E2_NATUREZ	:= Alltrim(cNatureza)
									MsUnLock()
									AADD(aRecImpos,{"SE2",Recno()})

									//Gravar a parcela do Facs no titulo principal
									DbSelectArea("SE1")
									If SE1->(FieldPos("E1_PARCFAC")>0)
										SE1->(DbGoTo(nSavRec))
										RecLock("SE1",.F.)
										SE1->E1_PARCFAC	:= cParcFac
										MsUnLock()
									Endif

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Facs caso nao exista     ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FACS"
										SED->ED_TIPO	:= "2"
										MsUnlock()
									EndIf
								else
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Busca a parcela Fabov de acordo com o titulo                               ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									dbSelectArea("SE1")
									dbSetOrder(1)

									cParcela := SE1->E1_PARCELA
									nTamParc := Len(SE1->E1_PARCELA)
									While MSSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+"FC-")
										cParcela := Soma1(cParcela,nTamParc)
									EndDo

									RecLock("SE1",.T.)
									SE1->E1_FILIAL	:= cFilial
									SE1->E1_PREFIXO	:= cPrefixo
									SE1->E1_NUM 	:= cNum
									SE1->E1_PARCELA	:= cParcela
									SE1->E1_TIPO   	:= "FC-"
									SE1->E1_EMISSAO	:= dEmissao
									SE1->E1_EMIS1  	:= dDataBase
									SE1->E1_VALOR  	:= nFacs
									SE1->E1_VENCTO 	:= dVencto
									SE1->E1_SALDO  	:= nFacs
									SE1->E1_VENCREA	:= dVencRea
									SE1->E1_VENCORI	:= dVencto
									SE1->E1_CLIENTE	:= cCliente
									SE1->E1_LOJA   	:= cLoja
									SE1->E1_NOMCLI 	:= SA1->A1_NREDUZ
									SE1->E1_MOEDA  	:= If(cPaisLoc=="BRA",1,nMoeda)
									SE1->E1_VLCRUZ 	:= Round(SE1->E1_VALOR,MsDecimais(1))
									SE1->E1_ORIGEM 	:= Upper(cOrigem)
									cNatureza      	:= SuperGetMV("MV_FACNAT",.F.,"FACS")
									SE1->E1_NATUREZ	:= Alltrim(cNatureza)
									SE1->E1_STATUS 	:= "A"
									SE1->E1_SITUACA	:= "0"
									SE1->E1_OCORREN	:= "04"
									SE1->E1_LA     	:= cLa
									SE1->E1_FATURA	:= cFatura

									AADD(aRecImpos,{"SE1",Recno()})

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Cria a natureza Facs caso nao exista       ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SED")
									cNatureza := AllTrim(cNatureza)
									If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
										RecLock("SED",.T.)
										SED->ED_FILIAL  := cFilial
										SED->ED_CODIGO  := cNatureza
										SED->ED_CALCIRF := "N"
										SED->ED_CALCISS := "N"
										SED->ED_CALCINS := "N"
										SED->ED_CALCCSL := "N"
										SED->ED_CALCCOF := "N"
										SED->ED_CALCPIS := "N"
										SED->ED_DESCRIC := "FACS"
										SED->ED_TIPO	:= "2"
									EndIf
									If ExistBlock("F040FAC")
										Execblock("F040FAC",.F.,.F.,nSavRec)
									Endif
								Endif
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³titulo do TPDP                        	   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lTPDP .and. nTPDP > 0 .And. SE1->E1_VALOR >= 100
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 		  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
								If ( EOF() )
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMV("MV_RECEST")
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:= "RECEITA ESTADUAL"
									SA2->A2_NREDUZ := "RECEITA"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
								EndIf

								DbSelectArea("SE2")
								SE2->(DbSetOrder(1))
								aTamParcI := TamSx3("E2_PARCELA")
								cParTPDP  := StrZero(1,aTamParcI[1])
								While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParTPDP+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
									cParTPDP := Soma1(cParTPDP,aTamParcI[1])
								EndDo

								RecLock("SE2",.T.)
								SE2->E2_FILIAL 	:= cFilial
								SE2->E2_PREFIXO	:= cPrefixo
								SE2->E2_NUM    	:= cNum
								SE2->E2_PARCELA	:= cParTPDP
								SE2->E2_TIPO 	:= MVTAXA
								SE2->E2_EMISSAO	:= dEmissao
								SE2->E2_EMIS1  	:= dDataBase
								SE2->E2_VALOR  	:= nTPDP
								SE2->E2_VENCTO 	:= DataValida(IIF(SE1->E1_VENCTO > dDataBase+3,SE1->E1_VENCTO-3,SE1->E1_VENCTO),.t.)
								SE2->E2_SALDO  	:= nTPDP
								SE2->E2_VENCREA	:= DataValida(IIF(SE1->E1_VENCTO > dDataBase+3,SE1->E1_VENCTO-3,SE1->E1_VENCTO),.t.)
								SE2->E2_VENCORI	:= DataValida(IIF(SE1->E1_VENCTO > dDataBase+3,SE1->E1_VENCTO-3,SE1->E1_VENCTO),.t.)
								SE2->E2_FORNECE	:= GetMv("MV_RECEST")
								SE2->E2_LOJA   	:= cLojaImpos
								SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
								SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_VLCRUZ 	:= Round(nTPDP, MsDecimais(1) )
								SE2->E2_ORIGEM 	:= Upper(cOrigem)
								cNatureza      	:= SuperGetMV("MV_APTPDP",.F.,"TPDP")
								SE2->E2_NATUREZ	:= Alltrim(cNatureza)
								MsUnLock()
								AADD(aRecImpos,{"SE2",Recno()})

								//Gravar a parcela da TPDP no titulo principal
								DbSelectArea("SE1")
								If SE1->(FieldPos("E1_PARTPDP")>0)
									SE1->(DbGoTo(nSavRec))
									RecLock("SE1",.F.)
									SE1->E1_PARTPDP	:= cParTPDP
									MsUnLock()
								Endif

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza TPDP caso nao exista     ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "TPDP"
									SED->ED_TIPO	:= "2"
									MsUnlock()
								EndIf
							EndIf
						EndIf  // cPaisLoc
					EndIf //Aglutinacao
					//Ponto se entrada para gravacoes genericas a todos os titulos de impostos
					If lF040GER
						ExecBlock("F040GER",.F.,.F.,aRecImpos)
					Endif
				EndIf
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Caso nao tenha efetuado os abatimentos, grava os campos de saldo a abater ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If lPccBxCr .or. ((lContrAbat .Or. lCtrAbatIRF) .And. ( lAbateuPIS .Or. lAbateuCOF .Or. lAbateuCSLL .Or. lAbateuIRF))

				SE1->( MsGoto( nSavREC ) )
				RecLock( "SE1", .F. )

				If lAbateuPIS .or. lPccBxCr
					SE1->E1_SABTPIS := 0
				EndIf

				If lAbateuCOF .or. lPccBxCr
					SE1->E1_SABTCOF := 0
				EndIf

				If lAbateuCSLL .or. lPccBxCr
					SE1->E1_SABTCSL := 0
				EndIf

				If lAbateuIRF
					SE1->E1_SABTIRF := 0
				EndIf
				SE1->( MsUnlock() )
			ElseIf lIrPjBxCr

				SE1->( MsGoto( nSavREC ) )
				RecLock( "SE1", .F. )

				SE1->E1_SABTIRF := 0
				SE1->( MsUnlock() )

			EndIf

			DbSelectArea( "SA1" )
			DbGoTo( nSalvCli )
			DbSelectArea( "SE1" )
			DbGoTo( nSavRec )
			Return(.T.)

			/*/
			ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
			±±³Fun‡…o	 ³A050DupPag³Autor  ³ Wagner Xavier         ³ Data ³ 28.02.94 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Descri‡…o ³Atualizacao de titulos a pagar, gerando todos os dados      ³±±
			±±³			 ³complementares a uma implantacao de titulo.                 ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Sintaxe	 ³A050DupPag()                                                ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³Parƒmetros³ cOrigem := Programa que originou o t¡tulo                  ³±±
			±±³          ³ nTotIrrf:= Valor total do IRRF ( MATA100 ).                ³±±
			±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
			±±³ Uso		 ³ Generico                                                   ³±±
			±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
			±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
			ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
			/*/
		FuncTion A050DupPag( cOrigem,lUpDate,nTotIrrf,nTotINSS,lRtPICFCS,nTotISS,nBasISS,lRatImp,lFina050,cRecIss )

			Local nValForte:=0,nIrrf:=0,nIss:=0, nInss := 0, nSEST := 0
			Local cParcela,dEmissao,dVencto,dVencRea
			Local cPrefixo,cNum,cTipoE2,nMOeda:=SE2->E2_MOEDA
			Local dNextDay,nRegSe2,nRegSA2,nRegSED
			Local cNatureza,lCond,lSa2:=.T.
			Local nTamData	 := 0
			Local lZeraIrrf  := .F.
			Local lAtuSA2    := .T.
			Local cLa := SE2->E2_LA
			Local nDiaUtil    := 0
			Local nDia        := 0
			Local nMCusto   := 0
			Local nOrdSe2 := SE2->(IndexOrd())
			Local nVRetISS := 0
			Local cSEST    := GetMv("MV_SEST",,"")
			Local cCIDE    := GetMv("MV_CIDE",,"")
			Local cForSEST := PadR( GetMv("MV_FORSEST",,""), Len( SE2->E2_FORNECE ) )
			Local cForCIDE := PadR( GetMv("MV_FORCIDE",,""), Len( SE2->E2_FORNECE ) )
			Local aTamParc := TamSx3("E2_PARCELA")
			Local lM050CSSP := ExistBlock("M050CSSP")
			Local cMunIss   := GetMv("MV_MUNIC")
			Local cNome		:= ""
			Local cForLojISS:= ""
			Local dVenISS   := CtoD("")
			Local dEmis1	:= SE2->E2_EMIS1
			Local dVctoReal:= SE2->E2_VENCREA
			Local cFornSe2 := SE2->E2_FORNECE
			Local cLojaSe2	:= SE2->E2_LOJA
			Local cFilDeb  := SE2->E2_FILDEB
			Local cGeraDirf := If(cPaisLoc=="BRA",SE2->E2_DIRF,"")
			Local cCodRetIr := If(cPaisLoc=="BRA",SE2->E2_CODRET,"")
			Local cMultNat  := SE2->E2_MULTNAT
			Local cFornUni   := ""
			Local cLojaUni   := ""
			Local cLojaImpos := PadR( "00", Len( SE2->E2_LOJA ), "0" )
			Local	nCofins  := 0
			Local	nPis     := 0
			Local	nCsll    := 0
			Local bCondicao  := ""
			Local nTotBasISS := 0
			Local lProcessa  := .T.
			Local nFethab		:= 0
			Local nFabov		:= 0
			Local nFacs         := 0
			Local lFethab		:= (SE2->(FieldPos("E2_FETHAB")) > 0 .And. SE2->(FieldPos("E2_PARCFET")) > 0)
			Local lFabov    	:= (SE2->(FieldPos("E2_FABOV")) > 0 .And. SE2->(FieldPos("E2_PARCFAB")) > 0)
			Local lFacs     	:= (SE2->(FieldPos("E2_FACS")) > 0 .And. SE2->(FieldPos("E2_PARCFAC")) > 0)
			Local cParcFet      := ""
			Local cParcFab      := ""
			Local cParcFac      := ""
			Local aTamParcI     := {}
			Local cRecFet 		:= ""
			Local cRecFab 		:= ""
			Local cRecFac 		:= ""

			Local lContrRet := !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ;
				!Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				!Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )

			Local nCntFor

			Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ;
				!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				!Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

			Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				!Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				!Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) )

			// Carrega variavel de verificacao de consideracao de valor minimo de retencao de IR.
			Local lDesMinIR := !Empty( SA2->( FieldPos( "A2_MINIRF" ) ) ) .and. SA2->A2_MINIRF == "1"

			Local nMinRetIR := GetMv("MV_VLRETIR")
			Local xMinRetIR := 0

			Local lCalcIssBx :=	IIf( ! Empty( SA2->( FieldPos( "A2_TIPO" ) ) ),SA2->A2_TIPO == "J", .F.) .And.;
				!Empty( SE5->( FieldPos( "E5_VRETISS" ) ) ) .and. !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. ;
				!Empty( SE2->( FieldPos( "E2_TRETISS" ) ) ) .and. GetNewPar("MV_MRETISS","1") == "2" //Retencao do ISS pela emissao (1) ou baixa (2)

			Local aRatSev	  := {}
			Local aRatSez	  := {}
			Local aRetorno    := {}
			Local nImpostos  := 0

			Local lVcAntIss := (SuperGetMV("MV_ANTVISS",.T.,"2") == "1")  //Antecipa ou nao o vencimento do ISS em caso de vencimento em dia nao util
			Local dVencRIss := CTOD("//")
			// Verifica se a retencao minima de ISS por base de calculo devera ser calculada pela emissao e nao vencimento - Municipio de Itabira - MG
			Local lRetISSEmi	:= GetNewPar("MV_RISSEMI",.F.)
			Local cFornCD := GetNewPar("MV_FORNCD","  ")
			Local cForMinISS := GetNewPar("MV_FMINISS","1")
			Local cTipoFor   := ""

			Local lVretIrf   := !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) )
			Local lIrfRetAnt := .F.
			Local lRetBISS   := GetNewPar("MV_RETBISS",.F.)	//Retencao Minima de ISS pela Base de Calculo - Municipio de SBC - Sao Paulo
			Local lTitPai    := !Empty( SE2->( FieldPos( "E2_TITPAI" ) ) )
			Local cTitPai    := SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
			Local lFilOrig   := SE2->(FieldPos("E2_FILORIG")) > 0
			Local cFilOrig   := SE2->E2_FILORIG

			//Verifica se os campos utilizados para o imposto CIDE.
			Local lCIDE		:= SE2->(FieldPos('E2_CIDE')) > 0 .And. SE2->(FieldPos('E2_PARCCID')) > 0 .And.;
				SED->(FieldPos('ED_CALCCID')) > 0 .And. SED->(FieldPos('ED_BASECID')) > 0 .AND.;
				SED->(FieldPos('ED_PERCCID')) > 0 .AND. SA2->(FieldPos('A2_RECCIDE')) > 0

			Local lF050GER    := ExistBlock("F050GER")
			Local lMT103TRV   := ExistBlock("MT103TRV")
			Local aRecImpos	  := {}
			Local lAtuSldNat  := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
			Local lFinVldIns  := Existblock("FinVldIns")

			cOrigem := If(cOrigem==NIL,Space(8),Upper(cOrigem))
			lUpDate := If( (lUpDate == NIL),.T.,lUpDate )
			DEFAULT nTotINSS := 0
			DEFAULT lRtPICFCS:= .T.
			DEFAULT nTotISS  := SE2->E2_ISS
			DEFAULT nBasISS  := IIf(nTotISS>0,SE2->E2_VALOR+nTotISS,0)
			DEFAULT lRatImp  := .F.
			DEFAULT lFina050  := .F.
			DEFAULT nTotIrrf  := SE2->E2_IRRF
			DEFAULT cRecIss	  := ""

			DbSelectArea("SA2")
			nRegSA2 := RecNo()
			DbSelectArea("SE2")
			nRegSE2 := RecNo()

			// Verifica se o ambiente esta configurado com Multiplos Vinculos de ISS
			cNome := "MUNICIPIO"
			If AliasInDic( "FIM" ) .AND. !Empty( SE2->E2_CODISS )
				DbSelectArea( "FIM" )
				FIM->( DbSetOrder( 1 ) )
				If FIM->( DbSeek( xFilial( "FIM" ) + SE2->E2_CODISS ) )
					cMunIss 	:= FIM->FIM_CODFOR
					cLojaImpos	:= FIM->FIM_FORLOJ
					cNome	+= "-" + AllTrim( FIM->FIM_MUN )
				EndIf
			EndIf

			// Se o titulo estiver rateado em multiplas naturezas,
			If lRatImp .And. MV_MULNATP .And. SE2->E2_MULTNAT == "1"

				nImpostos := If(lIRPFBaixa,0,SE2->E2_IRRF)+;
					If(!lCalcIssBx,SE2->E2_ISS,0)+;
						SE2->E2_INSS+;
						If(lPccBaixa,0,SE2->(E2_PIS+E2_COFINS+E2_CSLL))+SE2->E2_RETENC+SE2->E2_SEST
						// Carrega os rateios do titulo principal, para repassar aos titulos de impostos
						SEV->(DbSetOrder(2))
						SEZ->(DbSetOrder(1))
						SEV->(MsSeek(xFilial("SEV")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+"1")))		//1=Inclusao
						While SEV->(EV_FILIAL+EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA+EV_IDENT) ==;
								xFilial("SEV")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+"1")	//1 = Inclusao

							// Recalcula os rateios, desconsiderando os impostos
							RecLock("SEV", .F.)
							SEV->EV_VALOR := SEV->EV_VALOR - (nImpostos*SEV->EV_PERC)
							msUnlock()

							// Adiciona todos os campos do SEV
							AAdd(aRatSev, {} )
							Aeval(SEV->(DbStruct()), { |e,i| Aadd(aRatSev[Len(aRatSev)], { e[1], SEV->(FieldGet(i)) } ) } )

							SEZ->(MsSeek(xFilial("SEZ")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+SEV->EV_NATUREZ)))
							While SEZ->(EZ_FILIAL+EZ_PREFIXO+EZ_NUM+EZ_PARCELA+EZ_TIPO+EZ_CLIFOR+EZ_LOJA+EZ_NATUREZ) ==;
									xFilial("SEZ")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+SEV->EV_NATUREZ)
								// Recalcula os rateios, desconsiderando os impostos
								RecLock("SEZ", .F.)
								SEZ->EZ_VALOR := (SEV->EV_VALOR * SEZ->EZ_PERC)
								msUnlock()
								AAdd(aRatSez, {} )
								Aeval(SEZ->(DbStruct()), { |e,i| Aadd(aRatSez[Len(aRatSez)], { e[1], SEZ->(FieldGet(i)) } ) } )
								SEZ->(DbSkip())
							End
							SEV->(DbSkip())
						End
					Endif
					DbSelectArea("SED")
					nRegSED := RecNo()

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verificar o Municipio de ISS deste Fornecedor   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SA2->(FieldPos("A2_MUNIC")) > 0 .And. !Empty(SA2->A2_MUNIC)
						cMvMunic := SA2->A2_MUNIC
						cForLojISS := Pad(cMvMunic,Len(SA2->A2_COD))+cLojaImpos
					Else
						cForLojISS := Pad(cMunIss,Len(SA2->A2_COD))+cLojaImpos
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Transfere titulo de ISS para fornecedor de origem ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SE2->(FieldPos("E2_FORNISS")) > 0 .And. SE2->(FieldPos("E2_LOJAISS")) > 0
						If !Empty(SE2->E2_FORNISS) .And. !Empty(SE2->E2_LOJAISS)
							cForLojISS := SE2->E2_FORNISS+SE2->E2_LOJAISS
							IF !Empty(cForLojISS)
								aArea:=GetArea()
								DbSelectArea("SA2")
								DbSetOrder(1)
								If DbSeek(xFilial("SA2")+SE2->E2_FORNISS+SE2->E2_LOJAISS)
									cNome := SA2->A2_NREDUZ
								EndIF
								RestArea(aArea)
							ENDIF

						EndIf
					Endif

					If SE2->(FieldPos("E2_VENCISS")) > 0
						If !Empty(SE2->E2_VENCISS)
							dVenISS := SE2->E2_VENCISS
						EndIf
					EndIf

					If Empty(cRecIss)
						cRecIss	:=	SA2->A2_RECISS
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza dados do Fornecedor 			   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SE2")
					lCond := .F.

					If ( cRecIss$"1S" .And. lSA2)     // Fornecedor recolhe ISS
						If !E2_NATUREZ$&(GetMv("MV_ISS")) .Or. !E2_NATUREZ$&(GetMv("MV_IRF")) .or.;
								!E2_NATUREZ$&(GetMv("MV_INSS")) .or. !E2_NATUREZ$AllTrim(cSEST)
							lCond := .T.
						EndIf
					ElseIf SA2->A2_RECINSS == "S"      // Fornecedor recolhe INSS
						If !E2_NATUREZ$&(GetMv("MV_ISS")) .Or. !E2_NATUREZ$&(GetMv("MV_IRF")) .or.;
								!E2_NATUREZ$&(GetMv("MV_INSS"))
							lCond := .T.
						EndIf
					ElseIf SA2->(FieldPos("A2_RECSEST")) > 0 .And. SA2->A2_RECSEST $ "S1"      // Fornecedor recolhe SEST
						If !E2_NATUREZ$&(GetMv("MV_ISS")) .Or. !E2_NATUREZ$&(GetMv("MV_IRF")) .or.;
								!E2_NATUREZ$AllTrim(cSEST)
							lCond := .T.
						EndIf
					ElseIf ( !E2_NATUREZ$&(GetMv("MV_IRF")) )
						lCond := .T.
					EndIf

					cTipoFor := SA2->A2_TIPO

					If ( lCond )
						//Ponto de entrada para tratamento do valor minimo para IRRF.
						If ExistBlock("F040MIRF")
							xMinRetIR := 0
							xMinRetIR := Execblock("F040MIRF",.F.,.F.,{SA2->A2_COD,SA2->A2_LOJA})
							nMinRetIR := If(ValType(xMinRetIR)=="N",xMinRetIR,nMinRetIR)
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza dados do Cta Pagar					  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If cPaisLoc == "BRA"
							//Verificacao do valor minimo de IRRF - Nao gerados pelo FINANCEIRO
							If !lFina050

								If lVRetIrf
									nTotIrrf := FCalcIr(0,cTipoFor,.F.,@lIrfRetAnt,.F.)
								Endif

								If ( cOrigem == "MATA100" ) .And. nTotIrrf != Nil .And. GetMv("MV_VENCIRF") == "E"
									// Verifica se o fornecedor trata o valor minimo de retencao e se a regra se aplica.
									If !lDesMinIR .And. (nTotIrrf <= nMinRetIR .and. !lIrfRetAnt)
										lZeraIrrf	:= .T.
									EndIf
								Else
									// Verifica se o fornecedor trata o valor minimo de retencao , se a regra se aplica e se o titulo nao foi gerado pelo fina050
									If !lDesMinIR .And. ( nTotIrrf <= nMinRetIR .and. !lIrfRetAnt)
										lZeraIrrf	:= .T.
									EndIf
								EndIf
								If lZeraIrrf .and. !lIRPFBaixa
									DbSelectArea("SE2")
									RecLock("SE2",.F.)
									SE2->E2_VALOR	+= SE2->E2_IRRF
									SE2->E2_SALDO	+= SE2->E2_IRRF
									SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
									If lVRetIrf
										SE2->E2_VRETIRF := SE2->E2_IRRF
									Endif
									SE2->E2_IRRF	:= 0
								ElseIf lVRetIrf .and. !lFina050 .and. nTotIrrf > SE2->E2_IRRF
									//Recompoem o valor do IRRF no saldo e desconta o valor acumulado
									DbSelectArea("SE2")
									RecLock("SE2",.F.)
									SE2->E2_VALOR	+= SE2->E2_IRRF - nTotIrrf
									SE2->E2_SALDO	+= SE2->E2_IRRF - nTotIrrf
									SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
									If lVRetIrf
										SE2->E2_VRETIRF := SE2->E2_IRRF
									Endif
									SE2->E2_IRRF	:= nTotIrrf
								ElseIf lIRPFBaixa
									RecLock("SE2",.F.)
									SE2->E2_PRETIRF := '1'
								Else
									If lVRetIrf
										DbSelectArea("SE2")
										RecLock("SE2",.F.)
										SE2->E2_VRETIRF := SE2->E2_IRRF
									Endif
								EndIf
							Endif

							If ( SE2->E2_INSS < SuperGetMv("MV_VLRETIN") .And. nTotINSS < SuperGetMv("MV_VLRETIN") ) .And.;
									SA2->A2_TIPO <> "F"  .AND. (IIF(lFinVldIns, Execblock("FinVldIns",.F.,.F., {} ), .T. ))
								DbSelectArea("SE2")
								RecLock("SE2",.F.)
								SE2->E2_VALOR	+= SE2->E2_INSS
								SE2->E2_SALDO	+= SE2->E2_INSS
								SE2->E2_VLCRUZ	:= Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
								SE2->E2_INSS	:= 0
							EndIf
							If SE2->(FieldPos("E2_VRETIRF")) > 0 .And. lIRPFBaixa
								RecLock("SE2",.F.)
								SE2->E2_PRETIRF	:= "1"
							EndIf
							If SE2->(FieldPos("E2_VRETISS")) > 0 .and. !lCalcIssBx
								If lRetBISS .And. SE2->(FieldPos("E2_VBASISS")) > 0 .And. SE2->(FieldPos("E2_MDRTISS")) > 0 .And. nBasISS > 0 .And. !lRetISSEmi
									If SE2->E2_MDRTISS == "2"
										bCondicao := {|| nTotBasISS <= SuperGetMv("MV_VBASISS",.T.,0) }
									Else
										If cForMinISS == "1"
											lProcessa := .F.
										Else
											// Retencao pelo minimo em apenas alguns produtos
											If !Empty( SE2->( FieldPos( "E2_FRETISS" ) ) ) .And. SE2->E2_FRETISS == "1"
												bCondicao := {|| nBasISS > 0 .And. nBasISS <= SuperGetMv("MV_VBASISS",.T.,0) }
											Else
												lProcessa := .F.
											Endif
										Endif
									Endif
								Else
									If cForMinISS == "1"
										bCondicao := {|| nTotISS > 0 .And. nTotISS <= SuperGetMv("MV_VRETISS",.T.,0) }
									Else
										// Retencao pelo minimo em apenas alguns produtos
										If !Empty( SE2->( FieldPos( "E2_FRETISS" ) ) ) .And. SE2->E2_FRETISS == "1"
											bCondicao := {|| nBasISS > 0 .And. nBasISS <= SuperGetMv("MV_VBASISS",.T.,0) }
										Else
											lProcessa := .F.
										Endif
									Endif
								Endif

								If lProcessa
									If !lRetISSEmi
										SomaTitISS("SE2",SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_VENCREA,@nTotISS,@nVRetISS,@nTotBasISS,nBasISS)
									Else
										SomaTitISS("SE2",SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_EMISSAO,@nTotISS,@nVRetISS,@nTotBasISS,nBasISS,lRetISSEmi)
									Endif
									DbSelectArea("SE2")
									RecLock("SE2",.F.)

									If lRetBISS .And. SE2->(FieldPos("E2_VBASISS")) > 0
										SE2->E2_VBASISS	:= nBasISS
									Endif
									If ((SE2->(FieldPos("E2_FRETISS"))>0 .And. SE2->E2_FRETISS=="1") .Or.;	//Se a opcao no cadastro de clientes existir e estiver como 1=Considera Valor Minimo, respeito o tratamento padrao.
										(SE2->(FieldPos("E2_FRETISS"))>0 .And. SE2->E2_FRETISS=="2" .And. SuperGetMv ("MV_MODRISS", "1")=="2") .Or.; //Se a opcao no cadastro de clientes existir, estiver como 2=Sempre reter e a Modalidade de retencao for 1=Por titulo, desconsidero o Valor minimo e gero o titulo normalmente.
										SE2->(FieldPos("E2_FRETISS"))==0) .And. (  SF4->(FieldPos("F4_FRETISS"))>0 .AND. SF4->F4_FRETISS$"1"  ) .And. ;	//Se a opcao no cadastro de clientes nao existir, respeito o tratamento padrao para o valor minimo.
										Eval(bCondicao)

										SE2->E2_VRETISS := SE2->E2_ISS
										SE2->E2_VALOR	+= SE2->E2_ISS
										SE2->E2_SALDO	+= SE2->E2_ISS
										SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
										SE2->E2_ISS	:= 0
									Else
										SE2->E2_VALOR	+= SE2->E2_ISS
										SE2->E2_SALDO	+= SE2->E2_ISS
										SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
										If (SE2->E2_ISS+nVRetISS) > (SE2->E2_VALOR)-0.01
											SE2->E2_VRETISS := (SE2->E2_ISS+nVRetISS) - ((SE2->E2_VALOR)-0.01)
											SE2->E2_ISS := (SE2->E2_VALOR)-0.01
										Else
											SE2->E2_ISS := (SE2->E2_ISS+nVRetISS)
										EndIf
										SE2->E2_VALOR	-= SE2->E2_ISS
										SE2->E2_SALDO	-= SE2->E2_ISS
										SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
									Endif
								Endif
							EndIf
						Else
							DbSelectArea("SE2")
							RecLock("SE2",.F.)
							SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
						EndIf
						If ExistBlock("ATUDPPAG")
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Ponto de Entrada para Atualiza‡”es no SE2   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							ExecBlock("ATUDPPAG",.f.,.f.,cOrigem)
						EndIf
						nRegSe2	  := RecNo()
						cPrefixo  := SE2->E2_PREFIXO
						cNum	  := SE2->E2_NUM
						cTipoE2	  := SE2->E2_TIPO
						nValForte := ConvMoeda(SE2->E2_EMISSAO,SE2->E2_VENCTO,SE2->E2_VALOR,GetMv("MV_MCUSTO"))

						// Ponto de Entrada MT103TRV utilizado para desligar a atualizacao da tabela SA2
						If lMT103TRV
							aRetorno:= ExecBlock("MT103TRV",.F.,.F.,{SE2->E2_FORNECE,SE2->E2_LOJA,"F"})
							If ValType(aRetorno)=="A" .And. Len(aRetorno)>=4
								lAtuSA2 := IIf(ValType(aRetorno[4])=="L",aRetorno[4],lAtuSA2)
							EndIf
						EndIf

						// Criado o parametro MV_FORNCD para possibilitar um grande volume de notas SEM LOCK do SA2 para definir, por exemplo, notas de um centro de
						// distruicao (ponto de gargalo)
						If !SE2->E2_TIPO $ MVABATIM .And. cFORNCD != SE2->E2_FORNECE + SE2->E2_LOJA .And. lAtuSA2
							RecLock(If(lSA2,"SA2","SA1"))
							If ! ( SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG )
								If lSA2 .and. SA2->(!Eof())
									SA2->A2_SALDUP +=Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,3),3),2)
									SA2->A2_SALDUPM+=Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,3),3),2)
								EndIf
							Else
								If ( !lSA2 ) .and. SA2->(!Eof())
									AtuSalDup("-",SE2->E2_VALOR,SE2->E2_MOEDA,SE2->E2_TIPO,,SE2->E2_EMISSAO)
								EndIf
							EndIf
							nValForte:=ConvMoeda(SE2->E2_EMISSAO,SE2->E2_VENCTO,If(lSA2,A2_SALDUP,A1_SALDUP),GetMv("mv_mcusto"))
							nMCusto:=Val(GetMV("MV_MCUSTO"))
							If ( lSA2 ) .AND. SA2->(!Eof())
								DbSelectArea( "SA2" )
								If ( SA2->A2_SALDUPM > A2_MSALDO )
									SA2->A2_MSALDO := SA2->A2_SALDUPM
								EndIf
								SA2->A2_PRICOM  := Iif(SE2->E2_EMISSAO<A2_PRICOM .Or. Empty(SA2->A2_PRICOM),SE2->E2_EMISSAO,SA2->A2_PRICOM)
								SA2->A2_ULTCOM  := Iif(SA2->A2_ULTCOM<SE2->E2_EMISSAO,SE2->E2_EMISSAO,SA2->A2_ULTCOM)
								SA2->A2_NROCOM  := SA2->A2_NROCOM + If( lUpDate,1,0 )
								If ( SA2->A2_MCOMPRA < Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,nMCusto,SE2->E2_EMISSAO,3),3),2) )
									SA2->A2_MCOMPRA := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,nMCusto,SE2->E2_EMISSAO,3),3),2)
								EndIf
								If FieldPos("A2_MNOTA") != 0
									If SubStr(SE2->E2_ORIGEM,1,3) == "FIN"
										SA2->A2_MNOTA   := Max(SA2->A2_MNOTA,Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,nMCusto,SE2->E2_EMISSAO,3),3),2) )
									ElseIf SubStr(cOrigem,1,7) $ "MATA100"
										aArea := SF1->(GetArea())
										DbSelectArea("SF1")
										DbSetOrder(1)
										DbSeek(xFilial("SF1")+SE2->E2_NUM+SE2->E2_PREFIXO+SE2->E2_FORNECE+SE2->E2_LOJA)
										SA2->A2_MNOTA   := Max(SA2->A2_MNOTA,Round(NoRound(xMoeda(SF1->F1_VALBRUT,SE2->E2_MOEDA,nMCusto,SF1->F1_EMISSAO,3),3),2) )
										RestArea(aArea)
									EndIf
								EndIf
							EndIf
							If lSA2
								If lAtuSA2
									SA2->(MsUnlock())
								EndIf
							Else
								SA1->(MsUnlock())
							EndIf
						EndIf

						DbSelectArea( "SE2" )
						cParcela := E2_PARCELA
						dEmissao := E2_EMISSAO
						dVencto	 := E2_VENCREA
						nIrrf 	 := E2_IRRF
						nIss	 := E2_ISS
						nInss 	 := E2_INSS
						nSEST 	 := E2_SEST
						If lCIDE
							nCIDE 	 := E2_CIDE
						EndIf
						nCofins  := SE2->E2_COFINS
						nPis     := SE2->E2_PIS
						nCsll    := SE2->E2_CSLL

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de IRRF para PAs 				  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nIrrf > 0 ) .and. (!lIRPFBaixa .or. (lIRPFBaixa .And. SE2->E2_TIPO $ MVPAGANT))

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Calculo do vencimento do imposto³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

							dVencRea := F050VIMP("IRRF",dEmissao,dEmis1,dVctoReal,cCodRetIr,cTipoFor,lIRPFBaixa)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Grava título do IRRF e informações relacionadas ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							FGrvIRRF(cOrigem,dVencRea,dEmissao,cPrefixo,cNum,cTipoE2,nIRRF,nMoeda,cLa,cGeraDIRF,cCodRetIR,lRatImp,;
								aRatSEV,aRatSEZ,nRegSE2,'SE2',lIRPFBaixa,aRecImpos)

						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de INSS 							  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nInss > 0
							//Forcar o posicionamento do fornecedor para evitar que o tipo de fornecedor que a funcao fGrvINSS passara para determinar o vencimento do imposto (MP447)
							//seja determinado incorretamente.
							SA2->(dbGoto(nRegSA2))
							FGrvINSS(cPrefixo,cNum,cParcela,cLojaImpos,cOrigem,nMoeda,nRegSED,nRegSE2,dEmissao,dEmis1,dVctoReal,nInss,;
								lRatImp,aRatSev,aRatSez,cGeraDIRF,cCodRetIR,,,aRecImpos)
						ElseIf nInss = 0
							SA2->(dbGoto(nRegSA2))
							SED->(dbGoto(nRegSED))
							If  !Empty(SE2->E2_CODRET) .And. SE2->E2_DIRF = "1" .And. SA2->A2_RECINSS = "S" .And. SA2->A2_TIPO="F" .And. SED->ED_CALCINS="S"
								E2_DIRF := "2"
							Endif
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de SEST 					   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nSEST > 0
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria o Fornecedor, caso nao exista 	       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SA2")
							If !(DbSeek(xFilial() + cForSEST + cLojaImpos ))
								Reclock("SA2",.T.)
								SA2->A2_FILIAL := cFilial
								SA2->A2_COD 	:= cForSEST
								SA2->A2_LOJA	:= cLojaImpos


								SA2->A2_NOME	:= STR0046  //Servico Social do Transporte
								SA2->A2_NREDUZ :=  "SEST"
								SA2->A2_BAIRRO := "."
								SA2->A2_MUN 	:= "."
								SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
								SA2->A2_End 	:= "."
								SA2->A2_TIPO	:= "J"
								MsUnlock()
								FKCOMMIT()
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza SEST caso nao exista		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cNatureza		:= cSEST
							cNatureza		:= cNatureza+Space(10-Len(cNatureza))
							DbSelectArea("SED")
							If !DbSeek(cFilial+cNatureza)
								RecLock("SED",.T.)
								SED->ED_FILIAL  := cFilial
								SED->ED_CODIGO  := cNatureza
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := STR0046 //Servico Social do Transporte
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf
							DbGoTo(nRegSED)

							cParcela := STRZERO(1,aTamParc[1])
							While .T.
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ VerIfica se ja' ha' titulo de SEST com esta numera‡„o ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SE2")
								DbSetOrder(1)
								If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"SES"+cForSEST))
									cParcela := Soma1( cParcela,,.t. )
									Loop
								EndIf
								Exit
							End
							DbGoTo( nRegSe2 )

							// Calcula o vencto do imposto
							// Na mesma data do titulo de INSS
							dVencRea := F050VIMP("INSS",dEmissao,dEmis1,dVctoReal,,cTipoFor)

							RecLock("SE2",.T.)
							SE2->E2_FILIAL  := xFilial()
							SE2->E2_PREFIXO := cPrefixo
							SE2->E2_NUM 	 := cNum
							SE2->E2_PARCELA := cParcela
							SE2->E2_TIPO	 := "SES"
							SE2->E2_EMISSAO := dEmissao
							SE2->E2_VALOR	 := nSEST
							SE2->E2_VENCREA := dVencrea
							SE2->E2_SALDO	 := nSEST
							SE2->E2_VENCTO  := dVencRea
							SE2->E2_VENCORI := dVencRea
							SE2->E2_MOEDA	 := If(cPaisLoc=="BRA",1,nMoeda)
							SE2->E2_EMIS1	 := dDataBase
							SE2->E2_FORNECE := cForSEST
							SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
							SE2->E2_LOJA	 := SA2->A2_LOJA
							SE2->E2_NOMFOR  := SA2->A2_NREDUZ
							SE2->E2_ORIGEM  := cOrigem
							SE2->E2_NATUREZ := cNatureza
							SE2->E2_LA      := "S"
							If !Empty(cFilDeb)
								SE2->E2_FILDEB := cFilDeb
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava a filial de origem quando existir o campo no SE2            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lFilOrig
								SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
							EndIf

							SE2->E2_MULTNAT  := cMultNat
							MsUnlock()
							FKCOMMIT()

							AADD(aRecImpos,{"SE2",Recno()})

							If ExistBlock("F050SES")
								Execblock("F050SES",.F.,.F.,nRegSE2)
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava lançamento do imposto SEST/SENAT no SIGAPCO se a rotina foi chamada do contas a pagar ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If "FINA050" $ cOrigem
								PCODetLan("000002","08","FINA050")
							EndIf
							// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
							If lRatImp
								// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
								GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
							Else
								If lAtuSldNat
									AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
								Endif
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava parcela do SEST na parcela do titulo ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea( "SE2" )
							DbGoTo( nRegSe2 )
							Reclock( "SE2" ,.F.)
							SE2->E2_PARCSES := cParcela
							MsUnlock()

						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de CIDE 					   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lCIDE
							If nCIDE > 0
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 	       ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								If !(DbSeek(xFilial() + cForCIDE + cLojaImpos ))
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= cForCIDE
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:=  "CIDE"
									SA2->A2_NREDUZ :=  "CIDE"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
									FKCOMMIT()
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza CIDE caso nao exista		  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								cNatureza		:= cCIDE
								cNatureza		:= cNatureza+Space(10-Len(cNatureza))
								DbSelectArea("SED")
								If !DbSeek(cFilial+cNatureza)
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "CIDE"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								DbGoTo(nRegSED)

								cParcela := STRZERO(1,aTamParc[1])
								While .T.
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ VerIfica se ja' ha' titulo de CIDE com esta numera‡„o ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									DbSelectArea("SE2")
									DbSetOrder(1)
									If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"CID"+cForCIDE))
										cParcela := Soma1( cParcela,,.t. )
										Loop
									EndIf
									Exit
								End
								DbGoTo( nRegSe2 )


								// Calcula o vencto do imposto
								// Na mesma data de vencto do INSS
								dVencRea := F050VIMP("CIDE",dEmissao,dEmis1,dVctoReal)

								RecLock("SE2",.T.)
								SE2->E2_FILIAL  := xFilial()
								SE2->E2_PREFIXO := cPrefixo
								SE2->E2_NUM 	 := cNum
								SE2->E2_PARCELA := cParcela
								SE2->E2_TIPO	 := "CID"
								SE2->E2_EMISSAO := dEmissao
								SE2->E2_VALOR	 := nCIDE
								SE2->E2_VENCREA := dVencrea
								SE2->E2_SALDO	 := nCIDE
								SE2->E2_VENCTO  := dVencRea
								SE2->E2_VENCORI := dVencRea
								SE2->E2_MOEDA	 := If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_EMIS1	 := dDataBase
								SE2->E2_FORNECE := cForCIDE
								SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
								SE2->E2_LOJA	 := SA2->A2_LOJA
								SE2->E2_NOMFOR  := SA2->A2_NREDUZ
								SE2->E2_ORIGEM  := cOrigem
								SE2->E2_NATUREZ := cNatureza
								SE2->E2_LA      := "S"
								If !Empty(cFilDeb)
									SE2->E2_FILDEB := cFilDeb
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava a filial de origem quando existir o campo no SE2            ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lFilOrig
									SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
								EndIf
								SE2->E2_MULTNAT  := cMultNat
								MsUnlock()
								FKCOMMIT()

								AADD(aRecImpos,{"SE2",Recno()})

								// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
								If lRatImp
									// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
									GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
								Else
									If lAtuSldNat
										AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
									Endif
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava parcela do SEST na parcela do titulo ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea( "SE2" )
								DbGoTo( nRegSe2 )
								Reclock( "SE2" , .F. )
								SE2->E2_PARCCID := cParcela
								MsUnlock()

							EndIf
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de ISS						   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nIss > 0 ) .And. (!lCalcIssBx .or. (lCalcIssBx .And. SE2->E2_TIPO $ MVPAGANT))
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria o fornecedor, caso nao exista 		   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SA2")
							MsSeek(cFilial+cForLojISS)
							If ( EOF() )
								Reclock("SA2",.T.)
								SA2->A2_FILIAL   := cFilial
								SA2->A2_COD 	  := Left(cForLojISS,Len(SA2->A2_COD))
								SA2->A2_LOJA	  := Right(cForLojISS,Len(SA2->A2_LOJA))
								SA2->A2_NOME	  := cNome //"MUNICIPIO"
								SA2->A2_NREDUZ   := cNome //"MUNICIPIO"
								SA2->A2_BAIRRO   := "."
								SA2->A2_MUN 	  := "."
								SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
								SA2->A2_End 	  := "."
								MsUnlock()
								FKCOMMIT()
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza ISS caso nao exista		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cNatureza		:= &(GetMv("MV_ISS"))
							cNatureza		:= cNatureza+Space(10-Len(cNatureza))
							DbSelectArea("SED")
							If ( !DbSeek( cFilial + cNatureza ) )
								RecLock("SED",.T.)
								SED->ED_FILIAL  := cFilial
								SED->ED_CODIGO  := cNatureza
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := "IMPOSTO SOBRE SERVICOS"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf

							cParcela := STRZERO(1,aTamParc[1])
							While ( .T. )
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ VerIfica se ja' ha' titulo de ISS com esta numera‡„o ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SE2")
								DbSetOrder(1)
								If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"ISS"+cForLojISS))
									cParcela := Soma1( cParcela,,.t.)
									Loop
								EndIf
								Exit
							End
							If Empty(dVenISS)
								Do Case
								Case GetNewPar("MV_VENCISS","E")=="E"
									dVenISS := dEmissao
									dVenISS += 28
									If ( Month(dVenISS) == Month(dEmissao) )
										dVenISS := dVenISS+28
									EndIf
									nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
									If Month(dVenISS) == 2 .And. StrZero(SuperGetMv("MV_DIAISS"),2) $ "30/31" //Caso o mes do vcto seja Fevereiro e o parametro MV_DIAISS estiver 30 ou 31
										dVenISS := LastDay(dVenISS)
									Else
										dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
									Endif
								Case GetNewPar("MV_VENCISS","E")=="Q" //Ultimo dia util da quinzena subsequente a dEmissao
									If Day(dEmissao) <= 15
										dVenISS	:= LastDay(dEmissao)
										dVenISS := DataValida(dVenISS,.F.)
									Else
										dVenISS := DataValida((LastDay(dEmissao)+1)+14,.F.)
									EndIf
								Case GetNewPar("MV_VENCISS","E")=="U" //Ultimo dia util do mes subsequente da dEmissao
									dVenISS := DataValida(LastDay(LastDay(dEmissao)+1),.F.)
								Case GetNewPar("MV_VENCISS","E")=="D"
									dVenISS := (LastDay(dEmissao)+1)
									nDiaUtil:= SuperGetMv("MV_DIAISS")
									For nDia := 1 To nDiaUtil-1
										If !(dVenISS == DataValida(dVenISS,.T.))
											nDia-=1
										EndIf
										dVenISS+=1
									Next nDia
								Case GetNewPar("MV_VENCISS","E")=="F" //Qtd de dia do parametro MV_DIAISS apos o fechamento da quinzena.
									If Day(dEmissao) <= 15
										dVenISS := CtoD("15"+SUBSTR(DtoC(dEmissao),3,Len(DtoC(dEmissao))))+SuperGetMv("MV_DIAISS")
									Else
										dVenISS := LastDay(dEmissao)+SuperGetMv("MV_DIAISS")
									EndIf
								OtherWise
									dVenISS := dVencto
									dVenISS += 28
									If ( Month(dVenISS) == Month(dVencto) )
										dVenISS := dVenISS+28
									EndIf
									nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
									dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
								EndCase
							EndIf

							dVencRIss := DataValida(dVenISS,IIF(lVcAntIss,.F.,.T.))
							dVenISS := IIF(dVenIss > dVencRIss, dVencRISS, dVenIss)

							dVencRea := DataValida(dVenISS,.T.)
							RecLock("SE2",.T.)
							SE2->E2_FILIAL  := cFilial
							SE2->E2_PREFIXO := cPrefixo
							SE2->E2_NUM 	 := cNum
							SE2->E2_PARCELA := cParcela
							SE2->E2_TIPO	 := MVISS
							SE2->E2_EMISSAO := dEmissao
							SE2->E2_EMIS1	 := dDataBase
							SE2->E2_VALOR	 := nIss
							SE2->E2_VENCTO  := dVenISS
							SE2->E2_SALDO	 := nIss
							SE2->E2_VENCREA := dVencRIss
							SE2->E2_VENCORI := dVenISS
							SE2->E2_FORNECE := Left(cForLojISS,Len(SE2->E2_FORNECE))
							SE2->E2_LOJA    := Right(cForLojISS,Len(SE2->E2_LOJA))
							SE2->E2_NOMFOR  := SA2->A2_NREDUZ
							SE2->E2_MOEDA	 := If(cPaisLoc=="BRA",1,nMoeda)
							SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
							SE2->E2_ORIGEM  := cOrigem
							SE2->E2_NATUREZ := cNatureza
							SE2->E2_LA      := cLA			// Herda do principal
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava a filial de origem quando existir o campo no SE2            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lFilOrig
								SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava o fornecedor de origem quando existir o campo no SE2        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lTitPai
								SE2->E2_TITPAI := cTitPai
							EndIf
							SE2->E2_MULTNAT  := cMultNat
							MsUnlock()
							FKCOMMIT()

							AADD(aRecImpos,{"SE2",Recno()})

							If ExistBlock("F050ISS")
								Execblock("F050ISS",.F.,.F.,nRegSE2)
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava lançamento do imposto ISS no SIGAPCO se a rotina foi chamada do contas a pagar ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If "FINA050" $ cOrigem
								PCODetLan("000002","09","FINA050")
							EndIf
							// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
							If lRatImp
								// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
								GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
							Else
								If lAtuSldNat
									AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
								Endif
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava parcela do IRF na parcela do titulo  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea( "SE2" )
							DbGoTo( nRegSe2 )
							Reclock( "SE2" , .F. )
							SE2->E2_PARCISS := cParcela
							MsUnlock()

						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo Funrural					   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nValFun := Iif(Type("nValFun")=="U",0,nValFun)

						If ( nValFun > 0 )
							cParcela := STRZERO(1,aTamParc[1])
							While .T.
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ VerIfica se ja' ha' titulo de FunRural com esta numera‡„o ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SE2")
								DbSetOrder(1)
								If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"TX "+PadR(GetMv("MV_FORINSS"),6)))
									cParcela := Soma1( cParcela,,.t. )
									Loop
								EndIf
								Exit
							End
							dVenFun := dEmissao + 28
							If Month(dVenFun) == Month(dEmissao)
								dVenFun := dVenFun+28
							EndIf
							nTamData := Iif(Len(Dtoc(dVenFun)) == 10, 7, 5)
							dVenFun	:= Ctod(StrZero(GetMv("mv_DiaFun"),2)+"/"+Subs(Dtoc(dVenFun),4,nTamData))
							dVencRea := DataValida(dVenFun,.F.)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria o Fornecedor, caso nao exista 		   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SA2")
							If !(MsSeek(xFilial()+GetMv("MV_FORINSS")+Space(Len(A2_COD)-Len(GetMv("MV_FORINSS")))+cLojaImpos))
								Reclock("SA2",.T.)
								SA2->A2_FILIAL := cFilial
								SA2->A2_COD 	:= GetMv("MV_FORINSS")
								SA2->A2_LOJA	:= cLojaImpos
								SA2->A2_NOME	:= "Instituto Nacional de Previdencia Social"
								SA2->A2_NREDUZ := "INPS"
								SA2->A2_BAIRRO := "."
								SA2->A2_MUN 	:= "."
								SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
								SA2->A2_End 	:= "."
								SA2->A2_TIPO	:= "J"
								MsUnlock()
								FKCOMMIT()
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza CSS caso nao exista		   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cNatureza		:= GetMv("MV_CSS")
							cNatureza		:= cNatureza+Space(10-Len(cNatureza))
							DbSelectArea("SED")
							DbSeek(cFilial+cNatureza)
							If ( EOF() )
								RecLock("SED",.T.)
								SED->ED_FILIAL 	:= cFilial
								SED->ED_CODIGO 	:= cNatureza
								SED->ED_CALCIRF	:= "N"
								SED->ED_CALCISS	:= "N"
								SED->ED_CALCINS	:= "N"
								SED->ED_CALCCSL	:= "N"
								SED->ED_CALCCOF	:= "N"
								SED->ED_CALCPIS	:= "N"
								SED->ED_DESCRIC	:= "CONTRIBUICAO SEGURIDADE SOCIAL"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf

							DbSelectArea("SE2")
							RecLock("SE2",.T.)
							SE2->E2_FILIAL 	:= cFilial
							SE2->E2_PREFIXO  := cPrefixo
							SE2->E2_NUM 	  := cNum
							SE2->E2_PARCELA  := cParcela
							SE2->E2_TIPO	  := MVTAXA
							SE2->E2_EMISSAO  := dEmissao
							SE2->E2_VALOR	  := nValFun
							SE2->E2_VENCREA  := dVencrea
							SE2->E2_SALDO	  := nValFun
							SE2->E2_VENCTO   := dVencRea
							SE2->E2_VENCORI  := dVencRea
							SE2->E2_MOEDA	  := If(cPaisLoc=="BRA",1,nMoeda)
							SE2->E2_EMIS1	  := dDataBase
							SE2->E2_FORNECE  := GetMv("MV_FORINSS")
							SE2->E2_VLCRUZ   := Round( SE2->E2_VALOR, MsDecimais(1) )
							SE2->E2_LOJA	  := SA2->A2_LOJA
							SE2->E2_NOMFOR   := SA2->A2_NREDUZ
							SE2->E2_ORIGEM   := cOrigem
							SE2->E2_NATUREZ  := cNatureza
							SE2->E2_LA       := cLA			// Herda do principal
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava a filial de origem quando existir o campo no SE2            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lFilOrig
								SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
							EndIf
							SE2->E2_MULTNAT  := cMultNat
							MsUnlock()
							FKCOMMIT()

							AADD(aRecImpos,{"SE2",Recno()})

							If lM050CSSP
								ExecBlock("M050CSSP",.F.,.F.,nRegSe2)
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava parcela do CSS na parcela do titulo  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea( "SE2" )
							DbGoTo( nRegSe2 )
							Reclock( "SE2" , .F. )
							SE2->E2_PARCCSS := cParcela
							MsUnlock()
						EndIf

						// Posiciono novamente no fornecedor do título principal
						DbSelectArea("SA2")
						DbGoTo( nRegSA2 )

						//Gravacao dos titulos de Pis, Cofins e Csll
						If !lPccBaixa
							FGrvImpPcc(nPis,nCofins,nCsll,nRegSe2,.T.,lRtPICFCS,"",cOrigem,nMoeda,cGeraDirf,nIrrf,,lRatImp,aRatSev,aRatSez)
						Endif

					EndIf

					DbSelectArea("SA2")
					DbGoTo( nRegSA2 )

					If lFethab
						nFethab := SE2->E2_FETHAB
						cRecFet := If(SA2->(FieldPos("A2_RECFET"))>0,SA2->A2_RECFET,"")
					EndIf

					If lFabov
						nFabov  := SE2->E2_FABOV
						cRecFab := If(SA2->(FieldPos("A2_RFABOV"))>0,SA2->A2_RFABOV,"")
					EndIf

					If lFacs
						nFacs   := SE2->E2_FACS
						cRecFac := If(SA2->(FieldPos("A2_RFACS"))>0,SA2->A2_RFACS,"")
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera titulo de FETHAB                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SuperGetMv("MV_AGFETHA",,.F.)
						If lFethab .and. nFethab > 0
							If SA2->(FieldPos("A2_RECFET"))>0 .And. cRecFet=="2"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
								If ( EOF() )
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMV("MV_RECEST")
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:= "RECEITA ESTADUAL"
									SA2->A2_NREDUZ := "RECEITA"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
								EndIf

								cFornUni  := SA2->A2_COD
								cLojaUni  := SA2->A2_LOJA
								cPrefixo  := SE2->E2_PREFIXO
								cNum	  := SE2->E2_NUM
								cTipoE2   := SE2->E2_TIPO
								dEmissao  := SE2->E2_EMISSAO
								dEmis1	  := SE2->E2_EMIS1
								dVctoReal := SE2->E2_VENCREA

								DbSelectArea("SE2")
								SE2->(DbSetOrder(1))
								aTamParcI := TamSx3("E2_PARCELA")
								cParcFet  := StrZero(1,aTamParcI[1])
								While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFet+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
									cParcFet := Soma1(cParcFet,aTamParcI[1])
								EndDo

								RecLock("SE2",.T.)
								SE2->E2_FILIAL 	:= cFilial
								SE2->E2_PREFIXO	:= cPrefixo
								SE2->E2_NUM    	:= cNum
								SE2->E2_PARCELA	:= cParcFet
								SE2->E2_TIPO 	:= MVTAXA
								SE2->E2_EMISSAO	:= dEmissao
								SE2->E2_EMIS1  	:= dDataBase
								SE2->E2_VALOR  	:= nFethab+nFabov+nFacs
								SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
								SE2->E2_SALDO  	:= nFethab+nFabov+nFacs
								SE2->E2_VENCREA	:= DTVenIcms()
								SE2->E2_VENCORI	:= dEmissao
								SE2->E2_FORNECE	:= GetMv("MV_RECEST")
								SE2->E2_LOJA   	:= cLojaImpos
								SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
								SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_VLCRUZ 	:= Round(nFethab+nFabov+nFacs, MsDecimais(1) )
								SE2->E2_ORIGEM 	:= Upper(cOrigem)
								cNatureza      	:= SuperGetMV("MV_FETNAT",.F.,"FETHAB")
								SE2->E2_NATUREZ	:= Alltrim(cNatureza)
								MsUnLock()
								If lAtuSldNat
									AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
								Endif
								AADD(aRecImpos,{"SE2",Recno()})

								//Gravar a parcela do Fethab no titulo principal
								DbSelectArea("SE2")
								If SE2->(FieldPos("E2_PARCFET")>0)
									DbGoTo( nRegSe2 )
									Reclock( "SE2" , .F. )
									SE2->E2_PARCFET := cParcFet
									MsUnlock()
								Endif

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza Fethab caso nao exista     ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "FETHAB"
									SED->ED_TIPO	:= "2"
									MsUnlock()
								EndIf
							EndIf
						EndIf
					Else
						If lFethab .and. nFethab > 0
							If SA2->(FieldPos("A2_RECFET"))>0 .And. cRecFet=="2"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
								If ( EOF() )
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMV("MV_RECEST")
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:= "RECEITA ESTADUAL"
									SA2->A2_NREDUZ := "RECEITA"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
								EndIf

								cFornUni  := SA2->A2_COD
								cLojaUni  := SA2->A2_LOJA
								cPrefixo  := SE2->E2_PREFIXO
								cNum	  := SE2->E2_NUM
								cTipoE2   := SE2->E2_TIPO
								dEmissao  := SE2->E2_EMISSAO
								dEmis1	  := SE2->E2_EMIS1
								dVctoReal := SE2->E2_VENCREA

								DbSelectArea("SE2")
								SE2->(DbSetOrder(1))
								aTamParcI := TamSx3("E2_PARCELA")
								cParcFet  := StrZero(1,aTamParcI[1])
								While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFet+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
									cParcFet := Soma1(cParcFet,aTamParcI[1])
								EndDo

								RecLock("SE2",.T.)
								SE2->E2_FILIAL 	:= cFilial
								SE2->E2_PREFIXO	:= cPrefixo
								SE2->E2_NUM    	:= cNum
								SE2->E2_PARCELA	:= cParcFet
								SE2->E2_TIPO 	:= MVTAXA
								SE2->E2_EMISSAO	:= dEmissao
								SE2->E2_EMIS1  	:= dDataBase
								SE2->E2_VALOR  	:= nFethab
								SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
								SE2->E2_SALDO  	:= nFethab
								SE2->E2_VENCREA	:= DTVenIcms()
								SE2->E2_VENCORI	:= dEmissao
								SE2->E2_FORNECE	:= GetMv("MV_RECEST")
								SE2->E2_LOJA   	:= cLojaImpos
								SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
								SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_VLCRUZ 	:= Round(nFethab, MsDecimais(1) )
								SE2->E2_ORIGEM 	:= Upper(cOrigem)
								cNatureza      	:= SuperGetMV("MV_FETNAT",.F.,"FETHAB")
								SE2->E2_NATUREZ	:= Alltrim(cNatureza)
								MsUnLock()
								If lAtuSldNat
									AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
								Endif
								AADD(aRecImpos,{"SE2",Recno()})

								//Gravar a parcela do Fethab no titulo principal
								DbSelectArea("SE2")
								If SE2->(FieldPos("E2_PARCFET")>0)
									DbGoTo( nRegSe2 )
									Reclock( "SE2" , .F. )
									SE2->E2_PARCFET := cParcFet
									MsUnlock()
								Endif

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza Fethab caso nao exista     ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "FETHAB"
									SED->ED_TIPO	:= "2"
									MsUnlock()
								EndIf
							EndIf
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de FABOV                       ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lFabov .and. nFabov > 0
							If SA2->(FieldPos("A2_RFABOV"))>0 .And. cRecFab =="2"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
								If ( EOF() )
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMV("MV_RECEST")
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:= "RECEITA ESTADUAL"
									SA2->A2_NREDUZ := "RECEITA"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
								EndIf

								cFornUni  := SA2->A2_COD
								cLojaUni  := SA2->A2_LOJA
								cPrefixo  := SE2->E2_PREFIXO
								cNum	  := SE2->E2_NUM
								cTipoE2   := SE2->E2_TIPO
								dEmissao  := SE2->E2_EMISSAO
								dEmis1	  := SE2->E2_EMIS1
								dVctoReal := SE2->E2_VENCREA

								DbSelectArea("SE2")
								SE2->(DbSetOrder(1))
								aTamParcI := TamSx3("E2_PARCELA")
								cParcFab  := StrZero(1,aTamParcI[1])
								While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFab+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
									cParcFab := Soma1(cParcFab,aTamParcI[1])
								EndDo

								RecLock("SE2",.T.)
								SE2->E2_FILIAL 	:= cFilial
								SE2->E2_PREFIXO	:= cPrefixo
								SE2->E2_NUM    	:= cNum
								SE2->E2_PARCELA	:= cParcFab
								SE2->E2_TIPO 	:= MVTAXA
								SE2->E2_EMISSAO	:= dEmissao
								SE2->E2_EMIS1  	:= dDataBase
								SE2->E2_VALOR  	:= nFabov
								SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
								SE2->E2_SALDO  	:= nFabov
								SE2->E2_VENCREA	:= DTVenIcms()
								SE2->E2_VENCORI	:= dEmissao
								SE2->E2_FORNECE	:= GetMv("MV_RECEST")
								SE2->E2_LOJA   	:= cLojaImpos
								SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
								SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_VLCRUZ 	:= Round(nFabov, MsDecimais(1) )
								SE2->E2_ORIGEM 	:= Upper(cOrigem)
								cNatureza      	:= SuperGetMV("MV_FABNAT",.F.,"FABOV")
								SE2->E2_NATUREZ	:= Alltrim(cNatureza)
								MsUnLock()
								AADD(aRecImpos,{"SE2",Recno()})

								//Gravar a parcela do FABOV no titulo principal
								DbSelectArea("SE2")
								If SE2->(FieldPos("E2_PARCFAB")>0)
									DbGoTo( nRegSe2 )
									Reclock( "SE2" , .F. )
									SE2->E2_PARCFAB := cParcFab
									MsUnlock()
								Endif

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza FABOV caso nao exista      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "FABOV"
									SED->ED_TIPO	:= "2"
									MsUnlock()
								EndIf
							EndIf
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de FACS                        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lFacs .and. nFacs > 0
							If SA2->(FieldPos("A2_RFACS"))>0 .And. cRecFac=="2"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")
								SA2->(DbSeek(xFilial("SA2")+GetMV("MV_RECEST")+Space(Len(A2_COD)-Len(GetMV("MV_RECEST")))+cLojaImpos))
								If ( EOF() )
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMV("MV_RECEST")
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:= "RECEITA ESTADUAL"
									SA2->A2_NREDUZ := "RECEITA"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
								EndIf

								cFornUni  := SA2->A2_COD
								cLojaUni  := SA2->A2_LOJA
								cPrefixo  := SE2->E2_PREFIXO
								cNum	  := SE2->E2_NUM
								cTipoE2   := SE2->E2_TIPO
								dEmissao  := SE2->E2_EMISSAO
								dEmis1	  := SE2->E2_EMIS1
								dVctoReal := SE2->E2_VENCREA

								DbSelectArea("SE2")
								SE2->(DbSetOrder(1))
								aTamParcI := TamSx3("E2_PARCELA")
								cParcFac  := StrZero(1,aTamParcI[1])
								While MSSeek(xFilial("SE2")+cPrefixo+cNum+cParcFac+MVTAXA+PadR(GetMv("MV_RECEST"),6)+cLojaImpos)
									cParcFac := Soma1(cParcFac,aTamParcI[1])
								EndDo

								RecLock("SE2",.T.)
								SE2->E2_FILIAL 	:= cFilial
								SE2->E2_PREFIXO	:= cPrefixo
								SE2->E2_NUM    	:= cNum
								SE2->E2_PARCELA	:= cParcFac
								SE2->E2_TIPO 	:= MVTAXA
								SE2->E2_EMISSAO	:= dEmissao
								SE2->E2_EMIS1  	:= dDataBase
								SE2->E2_VALOR  	:= nFacs
								SE2->E2_VENCTO 	:= DTVenIcms(.T.) //Vencimento do FETHAB, FACS e FABOV, coincidem com o vencimento do ICMS
								SE2->E2_SALDO  	:= nFacs
								SE2->E2_VENCREA	:= DTVenIcms()
								SE2->E2_VENCORI	:= dEmissao
								SE2->E2_FORNECE	:= GetMv("MV_RECEST")
								SE2->E2_LOJA   	:= cLojaImpos
								SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
								SE2->E2_MOEDA 	:= If(cPaisLoc=="BRA",1,nMoeda)
								SE2->E2_VLCRUZ 	:= Round(nFacs, MsDecimais(1) )
								SE2->E2_ORIGEM 	:= Upper(cOrigem)
								cNatureza      	:= SuperGetMV("MV_FACNAT",.F.,"FACS")
								SE2->E2_NATUREZ	:= Alltrim(cNatureza)
								MsUnLock()
								AADD(aRecImpos,{"SE2",Recno()})

								//Gravar a parcela do FACS no titulo principal
								DbSelectArea("SE2")
								If SE2->(FieldPos("E2_PARCFAC")>0)
									DbGoTo( nRegSe2 )
									Reclock( "SE2" , .F. )
									SE2->E2_PARCFAC := cParcFac
									MsUnlock()
								Endif

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza FACS caso nao exista       ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								If !SED->(DbSeek(cFilial+avKey(cNatureza,"ED_CODIGO")))
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "FACS"
									SED->ED_TIPO	:= "2"
									MsUnlock()
								EndIf
							EndIf
						EndIf
					EndIf
					//Ponto se entrada para gravacoes genericas a todos os titulos de impostos
					If lF050GER
						ExecBlock("F050GER",.F.,.F.,aRecImpos)
					Endif


					If lContrRet .and. !lPccBaixa

						SE2->( MsGoto( nRegSE2 ) )
						Reclock( "SE2" , .F. )

						If lRtPICFCS
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava os campos de valor retido              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							SE2->E2_VRETPIS := SE2->E2_PIS
							SE2->E2_VRETCOF := SE2->E2_COFINS
							SE2->E2_VRETCSL := SE2->E2_CSLL

							SE2->E2_PRETPIS := " "
							SE2->E2_PRETCOF := " "
							SE2->E2_PRETCSL := " "

						EndIf

						MsUnlock()

					EndIf

					DbSelectArea("SA2")
					DbGoTo( nRegSA2 )
					DbSelectArea("SED")
					DbGoTo( nRegSED )
					DbSelectArea("SE2")
					DbSetOrder(nOrdSe2)
					DbGoTo(nRegSE2)
					RecLock("SE2")
					SE2->E2_ORIGEM := cOrigem
					Return


					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³AxCadastro³Autor  ³ Ary Medeiros	        ³ Data ³ 28.02.94 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Geracao de modelo 1                                         ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³AxCadastro(ExpC1,ExpC2,ExpC3,ExpC4,[ExpA1])                 ³±±
					±±³ ExpC1	 ³Alias do arquivo                                            ³±±
					±±³ ExpC2	 ³Titulo da Janela                                            ³±±
					±±³ ExpC3	 ³Nome de funcao para validacao da exclusao                   ³±±
					±±³ ExpC4	 ³Nome de funcao para validacao da tela	                      ³±±
					±±³ ExpA5	 ³Array de funcoes adicionais          	                      ³±±
					±±³ ExpB6	 ³CodeBlock Executado antes da Interface                      ³±±
					±±³ ExpB7	 ³CodeBlock Executado na validacao da Interface               ³±±
					±±³ ExpB8	 ³CodeBlock Executado na validacao da Interface               ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico                                                   ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AxCadastro(cAlias,cTitle,cDel,cOk,aRotAdic,bPre,bOK,bTTS,bNoTTS,aAuto,nOpcAuto,aButtons,aACS,cTela)

					Local nX := 1
					DEFAULT cTitle   := "AX_CADASTRO()"
					DEFAULT bPre     := {|| .T.}
					DEFAULT bOk      := {|| .T.}
					DEFAULT bTTS     := {|| .T.}
					DEFAULT bNoTTS   := {|| .T.}
					DEFAULT nOpcAuto := 3
					DEFAULT aACS     := {}

					Private cOkFunc := cOk
					Private cDelFunc:= cDel
					Private aParam  := {bPre,bOK,bTTS,bNoTTS}
					Private xAuto   := aAuto
					Private aNewBtn := aButtons
					Private aRotina := { { oemtoansi(STR0014),"AxPesqui", 0 , 1},; // "Pesquisar"
					{ oemtoansi(STR0015),"AxCadVis", 0 , 2},; // "Visualizar"
					{ oemtoansi(STR0016),"AxCadInc", 0 , 3},; //"Incluir"
					{ oemtoansi(STR0017),"AxCadAlt", 0 , 4},; //"Alterar"
					{ oemtoansi(STR0018),"AxCadDel", 0 , 5}}  //"Excluir"

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Adiciona o array de rotinas adicioniais   				     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ValType( aRotAdic ) == "A"
						AEval( aRotAdic, { |x| AAdd( aRotina, x ) } )
					EndIf
					For nX := 1 To Len(aACS)
						If aACS[nX] <> Nil
							aadd(aRotina[nX],aACS[nX])
						EndIf
					Next nX
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Define o cabecalho da tela de atualizacoes				     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					Private cCadastro := OemToAnsi(cTitle)

					If aAuto==Nil
						mBrowse( 6, 1,22,75,cAlias,,,,,,,,,,,,,,,,, cTela)
					Else
						MBrowseAuto(nOpcAuto,Aclone(aAuto),cAlias)
					EndIf

					Return

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³AxCadInc	³Autor  ³ Ary Medeiros		    ³ Data ³ 28.02.94 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Chamada da funcao AxInclui pela AxCadastro				  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ AxCadastro												  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/

				Function AxCadInc(cAlias,nReg,nOpc,aAcho,cFunc,aCpos)

					Return(AxInclui(cAlias,nReg,nOpc,aAcho,cFunc,aCpos,cOkFunc,/*lF3*/,/*cTransact*/,aNewBtn,aParam,xAuto))
					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³AxCadAlt	³Autor  ³ Ary Medeiros			³ Data ³ 28.02.94 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Chamada da funcao AxAltera pela AxCadastro		          ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ AxCadastro												  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AxCadAlt(cAlias,nReg,nOpc,aAcho,aCpos,nColMens,cMensagem,cTudoOk)

					AxAltera(cAlias,nReg,nOpc,aAcho,aCpos,nColMens,cMensagem,cOkFunc,/*cTransact*/,/*cFunc*/,aNewBtn,aParam,xAuto)

					Return Nil

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³AxCadDel	³Autor  ³ Eduardo Riera         ³ Data ³10.09.2003³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Chamada da funcao AxDeleta pela AxCadastro		          ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ AxCadastro												  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AxCadDel(cAlias,nReg,nOpc,aCpos)

					AxDeleta(cAlias,nReg,nOpc,/*cTransact*/,aCpos,aNewBtn,aParam,xAuto)

					Return nil

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³AxCadVis	³Autor  ³ Eduardo Riera         ³ Data ³25.02.2004³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Chamada da funcao AxVisual pela AxCadastro		          ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ AxCadastro												  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AxCadVis(cAlias,nReg,nOpc,aCpos)

					AxVisual(cAlias,nReg,nOpc,/*aAcho*/,/*nColMens*/,/*cMensagem*/,/*cFunc*/,aNewBtn,/*lMaximized*/)

					Return nil

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ AxDeleta ³ Autor ³ Jorge Queiroz         ³ Data ³          ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Programa generico para exclusao     		                  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ AxDeleta(ExpC1,ExpN1,ExpN2,ExpA1,ExpN3,ExpC1)              ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
					±±³			 ³ ExpN2 = Numero do registro                                 ³±±
					±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
					±±³			 ³ ExpC4 = Funcao a ser executada durante a transacao    	  ³±±
					±±³			 ³ ExpA5 = Array com os campos a serem mostrados              ³±±
					±±³			 ³ ExpA6 = Array com os botoes da EnchoiceBar            	  ³±±
					±±³			 ³ ExpA7 = Array de codeblock de execucao                	  ³±±
					±±³			 ³ ExpA8 = Array da rotina automatica                    	  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico                                                   ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AxDeleta(cAlias,nReg,nOpc,cTransact,aCpos,aButtons,aParam,aAuto,lMaximized,cTela,aAcho,lPanelFin,oFather,aDim, lFlat)

					Local aArea    := GetArea()
					Local aPosEnch := {}
					Local nOpcA    := 0
					Local nX       := 0
					Local oDlg
					Local nTop
					Local nLeft
					Local nBottom
					Local nRight
					Local cMsgError:= ""
					Local oEnc01
					Local lVirtual:=.F. // Qdo .F. carrega inicializador padrao nos campos virtuais
					Local oSize

					Private aTELA[0][0]
					Private aGETS[0]

					DEFAULT lPanelFin := .F.
					DEFAULT lFlat		:= .F.

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Monta a entrada de dados do arquivo                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea(cAlias)
					If SoftLock( cAlias )
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Processamento de codeblock de antes da interface                  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !Empty(aParam)
							Eval(aParam[1],nOpc)
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Controle de Interface                                             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						Do Case
						Case ( Type("__cInternet") # "C" .Or. __cInternet # 'AUTOMATICO' ) .And. aAuto == Nil

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Calcula as dimensoes dos objetos                                          ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							oSize := FwDefSize():New( .T. ) // Com enchoicebar

							oSize:lLateral     := .F.  // Calculo vertical

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria Enchoice                                                          ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							oSize:AddObject( "ENCHOICE", 100, 60, .T., .T. ) // Adiciona enchoice

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Dispara o calculo                                                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							oSize:Process()

							nTop    := oSize:aWindSize[1]
							nLeft   := oSize:aWindSize[2]
							nBottom := oSize:aWindSize[3]
							nRight  := oSize:aWindSize[4]

							If FindFunction("ISPDA") .and. IsPDA()
								nTop := 0
								nLeft := 0
								nBottom := PDABOTTOM
								nRight  := PDARIGHT
							EndIf

							If !lPanelFin .AND. !lFlat
								DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd

								If lMaximized <> NIL
									oDlg:lMaximized := lMaximized
								EndIf
								If FindFunction("ISPDA") .and. IsPDA()
									aPosEnch := {,,,}  // ocupa todo o  espaço da janela
									oEnc01:= MsMGet():New( cAlias, nReg, nOpc,,,,aCpos,aPosEnch,,,,,,,,.t.,,,,,,,,,cTela )
									oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
								Else

									aPosEnch := {oSize:GetDimension("ENCHOICE","LININI"),;
										oSize:GetDimension("ENCHOICE","COLINI"),;
										oSize:GetDimension("ENCHOICE","LINEND"),;
										oSize:GetDimension("ENCHOICE","COLEND")}

									oEnc01:= MsMGet():New( cAlias, nReg, nOpc,,,,aCpos,aPosEnch,,,,,,,,,,,,,,,,,cTela)
									oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT
								EndIf
								ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()},,aButtons)
							Else

								DEFINE MSDIALOG ___oDlg OF oFather:oWnd FROM 0, 0 TO 0, 0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )

								aPosEnch := {,,,}
								oEnc01:= MsMGet():New( cAlias, nReg, nOpc,,,,aAcho,aPosEnch,,,,,,___oDlg,,lVirtual,,,,,,,,,cTela)
								oEnc01:oBox:align := CONTROL_ALIGN_ALLCLIENT

								// posiciona dialogo sobre a celula
								___oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])

								ACTIVATE MSDIALOG ___oDlg  ON INIT (FaMyBar(___oDlg,{|| If(Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc),Eval(bEndDlg),(nOpcA:=3,.f.))},{|| nOpcA := 3,___oDlg:End()},aButtons), ___oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]) )

								If Type("FinWindow") <> "U"
									FinVisual(cAlias,FinWindow,(cAlias)->(Recno()))
								EndIf
							Endif

						Case aAuto <> Nil
							RegToMemory(cAlias,.F.,.F.)
							If EnchAuto(cAlias,aAuto,{|| Obrigatorio(aGets,aTela)},nOpc,aCpos)
								nOpcA := 2
							EndIf
						OtherWise
							nOpcA := 2
						EndCase
						If nOpcA == 2
							dbSelectArea(cAlias)
							If Type("cDelFunc") != "U" .and. cDelFunc != Nil
								If !&(cDelFunc)
									nOpcA := 0
								EndIf
							EndIf
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Processamento de codeblock de validacao de confirmacao            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nOpcA == 2 .And. !Empty(aParam)
							If !Eval(aParam[2],nOpc)
								nOpcA := 0
							EndIf
						EndIf
						If nOpcA == 2
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualizacao da tabela                                             ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							Begin Transaction
								DbSelectArea(cAlias)
								If cTransact != Nil .And. ValType(cTransact) == "C"
									If !("("$cTransact)
										cTransact+="()"
									EndIf
									&cTransact
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Processamento de codeblock dentro da transacao                    ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If !Empty(aParam)
									Eval(aParam[3],nOpc)
								EndIf

								If Type("aMemos")=="A"
									For nX := 1 To Len(aMemos)
										//Incluído parametro com o nome da tabela de memos => para módulo APT
										cAliasMemo := If(len(aMemos[nX]) == 3,aMemos[nX][3],Nil)
										MSMM(&(aMemos[nX][1]),,,,2,,,,,cAliasMemo)
									Next nX
								EndIf

								RecLock(cAlias,.F.,.T.)
								IF !FKDelete(@cMsgError)
									RollBackDelTran(cMsgError)
								EndIf
								MsUnLock()

							End Transaction
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Processamento de codeblock fora da transacao                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If !Empty(aParam)
								Eval(aParam[4],nOpc)
							EndIf
						EndIf
					EndIf
					MsUnLockAll()
					RestArea(aArea)
					Return(nOpcA)

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ClearTitle³Autor  ³ Ary Medeiros			³ Data ³		  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Limpa string com titulo do campo 						  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ AS400 													  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function ClearTitle(cTitle)
					Local i,cChar, cOut := ""

					For i:= 1 to Len(cTitle)
						cChar := Substr(cTitle,i,1)
						cOut  += If(LetterOrNum(cChar),cChar," ")
					Next
					Return cChar


					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³LetterOrNum³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ VerIfica se caracter e uma letra ou um numero				  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ AS400 													 				  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function LetterOrNum(cChar)
					Local nChar := ASC(cChar)

					Return ((nChar >= 48 .and. nChar <= 57) .or. (nChar >= 65 .and. nChar <= 90) .or. (nChar >= 97 .and. nChar <= 122 ))

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ADupCred	³Autor  ³ Rosane L. Chene		³ Data ³01.06.95  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Gera titulo de Credito para fornecedor no caso de nota 	  ³±±
					±±³			 ³fiscal de devolucao de compras 							  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ADupCred()												  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ ExpC1 = Valor do Titulo 									  ³±±
					±±³			 ³ ExpC2 = Codigo do TES									  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 												  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function ADupCred(nValtot,cTes,nMoeda,cNatureza,nTaxa,dVencNCC,cOrigem)
					Local cSaveAlias := Alias()
					Local nSaveOrd   := IndexOrd()
					Local cSerie     := ""
					Local nRecCred   := 0
					Local cPrefixo   := ""
					Local cParcela   := ""
					Local nTamParc   := 0

					#ifdef SHELL
						Local nSaveOrdSF2, nSaveRecSF2
						Local nPosSer, nPosNfOr, nElem
					#endif

					DEFAULT nMoeda     	:= 1
					DEFAULT nTaxa   	:= 0
					DEFAULT dVencNCC	:= dDataBase
					DEFAULT cOrigem		:= "MATA460"

					If cTes > "500"
						cArqSA := "SA2"
						cSeek  := SF2->F2_CLIENTE+SF2->F2_LOJA
						cArqSE := "SE2"
						cSerie := SF2->F2_SERIE
						*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						*³ Desposiciona o SA1                                           ³
						*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						SA1->(MsGoto(0))
					Else
						cArqSA := "SA1"
						cSeek  := SF1->F1_FORNECE+SF1->F1_LOJA
						cArqSE := "SE1"
						cSerie := SF1->F1_SERIE
						*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						*³ Desposiciona o SA2                                           ³
						*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						SA2->(MsGoto(0))
						#ifdef SHELL
							*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							*³ Posiciona a Capa de Nota de Saida para obter o VEndedor      ³
							*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SF2")
							nSvOrdSF2 :=IndexOrd()
							nSvRecSF2 := Recno()
							nPosSer := Ascan(aHeader,{|x|Trim(x[2])=="D1_SERIORI"})
							nPosNfOr := Ascan(aHeader,{|x|Trim(x[2])=="D1_NFORI"})
							DbSetOrder(1)
							For nElem :=1 to Len(Acols)
								If ! aCols[nElem][Len(aHeader)+1]
									dbSeek(cFilial+aCols[nElem][nPosNfOr]+aCols[nElem][nPosSer])
									Exit
								EndIf
							Next
						#endif
					EndIf

					DbSelectArea(cArqSA) 	 // Posiciona o arquivo de cliente/fornecedor
					dbSetOrder(1)
					DbSeek(cFilial+cSeek)

					If cArqSE == "SE2"
						DEFAULT cNatureza := IIF("D" $ SF2->F2_TIPO,&(GetMV("mv_2dupnat")),&(GetMV("mv_1dupnat")))
						RecLock(cArqSE,.T.)
						Replace E2_NOMFOR	With SA2->A2_NREDUZ
						Replace E2_EMIS1   With dDataBase
						Replace E2_BAIXA   With CtoD("  /  /  ")
						Replace E2_SALDO   With nValTot
						Replace E2_FILIAL  With cFilial
						Replace E2_PREFIXO With &(GetMV("mv_1dupref"))
						Replace E2_NUM	  With SF2->F2_DOC
						Replace E2_PARCELA With GetMV("mv_1dup")
						Replace E2_NATUREZ With cNatureza
						If cPaisLoc$"ARG|POR|EUA"
							Replace E2_TIPO	With SC5->C5_TIPOTIT
							Replace E2_VALOR	With If(SC5->C5_TIPOTIT $ MVABATIM,nValTot*-1,nValTot )
						Else
							Replace E2_TIPO	With left(MV_CPNEG,3)
							Replace E2_VALOR	With nValTot
						EndIf
						Replace E2_EMISSAO	With dDataBase
						Replace E2_VALOR		With nValTot
						Replace E2_VENCTO		With dDataBase
						Replace E2_VENCREA	With dDatabase
						Replace E2_VENCORI	With dDatabase
						Replace E2_FORNECE	With SF2->F2_CLIENTE
						Replace E2_LOJA		With SF2->F2_LOJA
						Replace E2_NOMFOR		With SA2->A2_NREDUZ
						Replace E2_MOEDA		With nMoeda
						Replace E2_VLCRUZ		With Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1,nTaxa),MsDecimais(1)+1),MsDecimais(1))
						Replace E2_ORIGEM		With cOrigem
						Replace E2_LA			With "S"
						Replace E2_FILORIG	With cFilAnt
						fkCommit(.T.)
						nRecCred := Recno()
						DbSelectArea( "SA2" )
						RecLock("SA2")
						Replace A2_SALDUP With A2_SALDUP	- Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,3),3),2)
						Replace A2_SALDUPM With A2_SALDUPM - Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,3),3),2)

						If SA2->A2_SALDUPM > SA2->A2_MSALDO
							Replace SA2->A2_MSALDO With SA2->A2_SALDUPM
						EndIf
					ElseIf cArqSe == "SE1"
						DEFAULT cNatureza := IIF("D" $ SF1->F1_TIPO,&(GetMV("mv_1dupnat")),&(GetMV("mv_2dupnat")))
						dbSelectArea("SE1")
						dbSetOrder(1)
						cPrefixo := &(GetMV("mv_2dupref"))
						cParcela := (GetMV("mv_1dup"))
						nTamParc := Len(SE1->E1_PARCELA)
						While MSSeek(xFilial("SE1")+cPrefixo+SF1->F1_DOC+cParcela)
							cParcela := Soma1(cParcela,nTamParc)
						EndDo
						RecLock(cArqSE,.T.)
						Replace E1_FILIAL with cFilial
						Replace E1_PREFIXO with cPrefixo
						Replace E1_SERIE   with cSerie
						Replace E1_NUM	  with SF1->F1_DOC
						Replace E1_PARCELA with cParcela
						Replace E1_NATUREZ with cNatureza
						Replace E1_TIPO	 with left(MV_CRNEG,3)
						Replace E1_EMISSAO with dDataBase
						Replace E1_VALOR   with nValTot
						If FunName() == "MATA103"
							Replace E1_VENCREA with DataValida(dVencNCC,.T.)
						Else
							Replace E1_VENCREA with dVencNCC
						EndIf
						Replace E1_SALDO   with nValTot
						Replace E1_VENCTO  with dVencNCC
						Replace E1_VENCORI with ddataBase
						Replace E1_EMIS1   with dDataBase
						Replace E1_CLIENTE with SF1->F1_FORNECE
						Replace E1_LOJA	  with SF1->F1_LOJA
						Replace E1_NOMCLI  with SA1->A1_NREDUZ
						Replace E1_MOEDA   with nMoeda
						Replace E1_VLCRUZ  with Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,3,nTaxa),MsDecimais(1)+1),MsDecimais(1))
						Replace E1_STATUS  with Iif(SE1->E1_SALDO>0.01,"A","B")
						Replace E1_SITUACA With "0"
						Replace E1_ORIGEM  With "MATA100"
						Replace E1_LA      With "S"

						If SE1->(FieldPos("E1_FILORIG")) > 0
							SE1->E1_FILORIG := cFilAnt
						EndIf

						#ifdef SHELL
							Replace E1_VEnd1   With SF2->F2_VEnd1
						#endif
						fkCommit(.T.)
						nRecCred := Recno()
						DbSelectArea( "SA1" )
						AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
					EndIf
					#ifdef SHELL
						If Val(cTes) < 500
							DbSelectArea("SF2")
							DbSetOrder(nSvOrdSF2)
							DbGoTo(nSvRecSF2)
						EndIf
					#endif

					If ExistBlock( "M461DUPCR" )
						ExecBlock( "M461DUPCR", .f., .f. )
					EndIf

					DbSelectArea(cSaveAlias)
					DbSetOrder(nSaveOrd)
					Return nRecCred


					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³AGravaSB6 ³Autor  ³ Rosane / Cristina	  ³ Data ³ 01.06.95 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Grava item de poder de terceiros 								  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ AGravaSB6(ExprC1,ExprA1,ExprC2)									  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ ExprC1 := Codigo da Tes 											  ³±±
					±±³			 ³ ExprA2 := Array dos Campos com os valores dos Custos		  ³±±
					±±³			 ³ ExprC2 := Tipo da Nota												  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AGRAVASb6(cTes,aCustoSB6,cTipo,aCpoSD)

					DbSelectArea("SF4")
					DbSetOrder(1)
					DbSeek(xFilial()+cTes)

					RecLock("SB6",.T.)

					Replace B6_FILIAL 	With xFilial()
					Replace B6_CLIfOR 	With aCpoSD[1]
					Replace B6_LOJA		With aCpoSD[2]
					Replace B6_PRODUTO	With aCpoSD[3]
					Replace B6_Local		With aCpoSD[4]
					Replace B6_PRUNIT 	With aCpoSD[5]
					Replace B6_TIPO		With aCpoSd[6]
					Replace B6_DOC 		With aCpoSD[7]
					Replace B6_SERIE		With aCpoSD[8]
					Replace B6_EMISSAO	With aCpoSD[9]
					Replace B6_DTDIGIT	With aCpoSD[10]
					Replace B6_TES 		With cTes
					Replace B6_QUANT		With aCpoSD[12]
					Replace B6_UM			With aCpoSD[13]
					Replace B6_QTSEGUM	With aCpoSD[14]
					Replace B6_SEGUM		With aCpoSD[15]
					Replace B6_PODER3 	With SF4->F4_PODER3

					If cTes <= "500"
						If cTipo == "B"
							Replace B6_TPCF with "C"
						ElseIf cTipo == "N"
							Replace B6_TPCF with "F"
						EndIf
					Else
						If cTipo == "B"
							Replace B6_TPCF with "F"
						ElseIf cTipo == "N"
							Replace B6_TPCF with "C"
						EndIf
					EndIf

					If SF4->F4_ESTOQUE=="S"
						Replace B6_CUSTO1 With aCustoSB6[1]
						Replace B6_CUSTO2 With aCustoSB6[2]
						Replace B6_CUSTO3 With aCustoSB6[3]
						Replace B6_CUSTO4 With aCustoSB6[4]
						Replace B6_CUSTO5 With aCustoSB6[5]
					EndIf

					Return

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o    ³ CalcTerc ³ Autor ³ Rosane L Chene        ³ Data ³ 23.05.95 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Retorna um Array onde:                                     ³±±
					±±³          ³ aSaldo[1] := Saldo de Poder Terceiro                       ³±±
					±±³          ³ aSaldo[2] := Quantidade Poder Terceiro Liberada(ainda nao  ³±±
					±±³          ³                               faturada)                    ³±±
					±±³          ³ aSaldo[3] := Saldo total do poder de terceiro ( Valor)     ³±±
					±±³          ³ aSaldo[4] := Soma do total de devolucoes do Poder Terceiros³±±
					±±³          ³ aSaldo[5] := Valor Total em Poder Terceiros				  ³±±
					±±³          ³ aSaldo[6] := Quantidade Total em Poder Terceiros			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe   ³ ExpA1(ExpC1,ExpC2,ExpC3,ExpC4,ExpC5,ExpC6)                 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ ExpC1 = Codigo do Produto                                  ³±±
					±±³          ³ ExpC2 = Codigo do Cliente/Fornecedor                       ³±±
					±±³          ³ ExpC3 = Codigo da Loja                                     ³±±
					±±³          ³ ExpC4 = Codigo do identIficador do SB6                     ³±±
					±±³          ³ ExpC5 = Codigo da Tes                                      ³±±
					±±³          ³ ExpC6 = Tipo da Nota                                       ³±±
					±±³			 ³ ExpD1 = Dt Inicial a ser Considerada na Composi‡Æo do Saldo³±±
					±±³			 ³ ExpD2 = Dt Final a ser Considedara na Composi‡Æo do Saldo  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso      ³ Generico                                                   ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function CalcTerc(cCod,cClIfor,cLoja,cIdentB6,cTesB6,cTipo,dDtIni,dDtFim)

					Local aArq       := GetArea()
					Local aArqSF4    := SF4->(GetArea())
					Local aArqSB6    := SB6->(GetArea())
					Local aStruSB6   := {}
					Local aSaldo     := {0,0,0,0,0,0}
					Local lConsIni   := (ValType(dDtIni)=='D'.And.!Empty(dDtIni))
					Local lConsFim   := (ValType(dDtFim)=='D'.And.!Empty(dDtFim))
					Local lQuery     := .F.
					Local cAliasSB6  := "SB6"
					Local cAliasSF4  := "SF4"
					Local aNF        := {}
					Local cNF        := ""
					Local l103       := IsInCallStack("MATA103")

					#IFDEF TOP
						Local cQuery     := ""
						Local nX         := 0
					#ELSE
						Local cCompB6    := ""
						Local nRegSB6    := 0
						Local cFilterB6  := SB6->(dbFilter())
					#ENDIF

					dbSelectArea("SB6")
					If !Empty(cIdentB6)
						DbSetOrder(3)
						#IFDEF TOP
							lQuery     := .T.
							aStruSB6   := SB6->(dbStruct())
							cAliasSB6  := "CALCTERC"
							cAliasSF4  := "CALCTERC"

							cQuery := "SELECT "+SqlOrder(SB6->(IndexKey()))+","
							For nX := 1 To Len(aStruSB6)
								If !aStruSB6[nX][1]$cQuery
									cQuery += aStruSB6[nX][1]+","
								EndIf
							Next nX
							cQuery += "SF4.F4_PODER3 "
							cQuery += " FROM "+RetSqlName("SB6")+" SB6,"+RetSqlName("SF4")+" SF4 "
							cQuery += "WHERE SB6.B6_FILIAL='"+xFilial("SB6")+"' AND "
							cQuery += "SB6.B6_IDENT='"+cIdentB6+"' AND "
							cQuery += "SB6.B6_PRODUTO='"+cCod+"' AND "
							cQuery += "SB6.D_E_L_E_T_=' ' AND "
							If cTesB6 <= "500"
								If cTipo == "B"
									cQuery += "SB6.B6_TPCF='C' AND "
								ElseIf cTipo == "N"
									cQuery += "SB6.B6_TPCF='F' AND "
								EndIf
							Else
								If cTipo == "B"
									cQuery += "SB6.B6_TPCF='F' AND "
								ElseIf cTipo == "N"
									cQuery += "SB6.B6_TPCF='C' AND "
								EndIf
							EndIf
							If ( lConsIni )
								cQuery += "SB6.B6_DTDIGIT>='"+Dtos(dDtIni)+"' AND "
							EndIf
							If ( lConsFim )
								cQuery += "SB6.B6_DTDIGIT<='"+Dtos(dDtFim)+"' AND "
							EndIf
							cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
							cQuery += "SF4.F4_CODIGO=SB6.B6_TES AND "
							cQuery += "SF4.D_E_L_E_T_=' ' "
							If SB6->(FieldPos("B6_IDENTB6"))<>0
								cQuery += "UNION ALL "+StrTran(cQuery,"B6_IDENT=","B6_IDENTB6=")+" "
							EndIf
							cQuery += "ORDER BY 1,2,3,4"

							cQuery := ChangeQuery(cQuery)

							dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSB6,.T.,.T.)

							For nX := 1 To Len(aStruSB6)
								If ( aStruSB6[nX][2] <> "C" )
									TcSetField(cAliasSB6,aStruSB6[nX][1],aStruSB6[nX][2],aStruSB6[nX][3],aStruSB6[nX][4])
								EndIf
							Next nX
						#ELSE
							If !Empty(cFilterB6)
								DbClearFilter()
							EndIf
							DbSeek(xFilial("SB6")+cIdentB6+cCod)
						#ENDIF
						While !Eof() .And. xFilial("SB6") == (cAliasSB6)->B6_FILIAL .And.;
								(IIf(SB6->(FieldPos("B6_IDENTB6"))<>0,cIdentB6==(cAliasSB6)->B6_IDENTB6,.F.) .Or.;
								cIdentB6==(cAliasSB6)->B6_IDENT ) .And.;
								cCod == (cAliasSB6)->B6_PRODUTO

							If  !lQuery
								If (cAliasSB6)->(FieldPos("B6_IDENTB6"))<>0 .And. !Empty((cAliasSB6)->B6_IDENTB6)
									DbSelectArea(cAliasSB6)
									DbSkip()
									Loop
								EndIf
								DbSelectArea("SF4")
								dbSetOrder(1)
								DbSeek(xFilial()+(cAliasSB6)->B6_TES)
								//-- Condicao para DBFCDX deve ser o inverso do SQL, ja que indica registros a serem
								//-- desconsiderados, ao contrario do SQL que indica registros a serem considerados
								If cTesB6 <= "500"
									If (cTipo == "B" .And. (cAliasSB6)->B6_TPCF != "C") .Or. (cTipo == "N" .And. (cAliasSB6)->B6_TPCF != "F")
										DbSelectArea(cAliasSB6)
										DbSkip()
										Loop
									EndIf
								Else
									If (cTipo == "B" .And. (cAliasSB6)->B6_TPCF != "F") .Or. (cTipo == "N" .And. (cAliasSB6)->B6_TPCF != "C")
										DbSelectArea(cAliasSB6)
										DbSkip()
										Loop
									EndIf
								EndIf
								//-- Condicao para DBF deve ser o inverso do SQL, ja que indica registros a serem
								//-- desconsiderados, ao contrario do SQL que indica registros a serem considerados
								//-- Consiste Data Inicial e Final na Composi‡Æo do Saldo
								If (lConsIni.And.(cAliasSB6)->B6_DTDIGIT<dDtIni).Or.(lConsFim.And.(cAliasSB6)->B6_DTDIGIT>dDtFim)
									DbSelectArea(cAliasSB6)
									DbSkip()
									Loop
								EndIf
							EndIf
							If (cAliasSF4)->F4_PODER3 == "R"
								aSaldo[1]+= (cAliasSB6)->B6_QUANT
								aSaldo[2]+= (cAliasSB6)->B6_QULIB

								If l103
									aSaldo[3]+= ((cAliasSB6)->B6_PRUNIT*(cAliasSB6)->B6_QUANT)-aSaldo[4]
								Else
									aSaldo[3]+= ((cAliasSB6)->B6_PRUNIT*IIF((cAliasSB6)->B6_QUANT==0,1,aSaldo[1]))
								EndIf

								#IFNDEF TOP
									If (cAliasSB6)->(FieldPos("B6_IDENTB6"))<>0
										nRegSB6 := (cAliasSB6)->(RecNo())
										cCompB6 := (cAliasSB6)->B6_IDENT
										If (cAliasSB6)->B6_QUANT == 0
											aSaldo[5]+= (cAliasSB6)->B6_PRUNIT
										Else
											aSaldo[5]+= (cAliasSB6)->B6_PRUNIT * (cAliasSB6)->B6_QUANT
											aSaldo[6]= (cAliasSB6)->B6_QUANT
										EndIf

										(cAliasSB6)->(dbSetOrder(4))
										If (cAliasSB6)->(MsSeek(xFilial("SB6")+cCompB6+cCod+"R"))
											While !Eof() .And. xFilial("SB6") == (cAliasSB6)->B6_FILIAL .And.;
													cCompB6 == (cAliasSB6)->B6_IDENTB6 .And.;
													"R" == (cAliasSB6)->B6_PODER3

												aSaldo[3]+= (cAliasSB6)->B6_PRUNIT
												dbSelectArea(cAliasSB6)
												dbSkip()
											EndDo
										EndIf
										(cAliasSB6)->(MsGoto(nRegSB6))
									EndIf
								#ELSE
									If (cAliasSB6)->B6_QUANT == 0
										aSaldo[5]+= (cAliasSB6)->B6_PRUNIT
									Else
										aSaldo[5]+= (cAliasSB6)->B6_PRUNIT * (cAliasSB6)->B6_QUANT
										aSaldo[6]= (cAliasSB6)->B6_QUANT
									EndIf
								#ENDIF
							ElseIf (cAliasSF4)->F4_PODER3 == "D"
								aSaldo[1]-= (cAliasSB6)->B6_QUANT

								SD1->(dbSetOrder(1))
								SD1->(dbSeek(xFilial("SD1")+(cAliasSB6)->B6_DOC+(cAliasSB6)->B6_SERIE+(cAliasSB6)->B6_CLIFOR+(cAliasSB6)->B6_LOJA+(cAliasSB6)->B6_PRODUTO))
								While !Eof() .And. xFilial("SD1") == SD1->D1_FILIAL .And.;
										(cAliasSB6)->B6_DOC == SD1->D1_DOC .And.;
										(cAliasSB6)->B6_SERIE == SD1->D1_SERIE .And.;
										(cAliasSB6)->B6_CLIFOR == SD1->D1_FORNECE .And.;
										(cAliasSB6)->B6_LOJA == SD1->D1_LOJA .And.;
										(cAliasSB6)->B6_PRODUTO == SD1->D1_COD

									// Verifica se o Item já não está somado para não duplicar a soma //
									cNF:= SD1->D1_FILIAL+SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA+SD1->D1_COD+SD1->D1_ITEM
									If (cAliasSB6)->B6_IDENT==SD1->D1_IDENTB6
										If Ascan(aNF,cNF) = 0
											aSaldo[4]+= (SD1->D1_TOTAL - SD1->D1_VALDESC)
											aadd(aNF,cNF)
										EndIf
									EndIf

									SD1->(dbSkip())
								EndDo
							EndIf
							DbSelectArea(cAliasSB6)
							DbSkip()
						EndDo
						#IFDEF TOP
							dbSelectArea(cAliasSB6)
							dbCloseArea()
							dbSelectArea("SB6")
						#ELSE
							dbSelectArea("SB6")
							If !Empty(cFilterB6)
								Set Filter to &(cFilterB6)
							EndIf
						#ENDIF
					EndIf
					//
					// Calculo do valor unitario
					//
					aSaldo[3] := A410Arred(If(aSaldo[1]==0,aSaldo[3],Round(aSaldo[3]/aSaldo[1],TamSX3("D2_PRCVEN")[2])),"D2_PRCVEN")

					RestArea(aArqSF4)
					RestArea(aArqSB6)
					RestArea(aArq)
					Return(aSaldo)

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ ConvData ³ Autor ³ Cristiane Maed	     ³ Data ³ 19.06.95 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Transforma chave lida em formato caracter (	/	/ ),		  ³±±
					±±³			 ³ para data e em seguida para formato string "aaaa/mm/dd"    ³±±
					±±³			 ³ em casos em que o indice do arquivo utiliza a funcao DTOS()³±±
					±±³			 ³ ou DTOC().																  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ ExpA1(ExpC1)															  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ ExpC1 = Indice do arquivo											  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ AXPESQ																	  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function ConvData(cKey,cConteudo)
					Local nPos,cStr,nTam, nTamFil
					Local aKey:= {},i,cConteudo1:=""

					cKey := Upper(AllTrim(cKey))
					cStr := Iif("DTOS" $ Upper(cKey),"DTOS","DTOC")
					If "_FILIAL" == Subs(cKey,3,7)
						cKey := AllTrim(Subs(cKey,10))
					ElseIf  "_FILIAL" == Subs(cKey,4,7)
						cKey := AllTrim(Subs(cKey,11))
					EndIf
					If Subs(cKey,1,1) == "+"
						cKey := Subs(cKey,2)
					EndIf

					While !Empty(cKey)
						nPos :=	AT("+",cKey)
						AADD(aKey,SubStr(cKey,1,Iif(nPos>0,nPos-1,Len(cKey))))
						cKey := Iif(nPos>0,SubStr(cKey,nPos+1),"")
					End

					For i:= 1 to Len(aKey)
						nTam := Len(&(aKey[i]))
						If cStr $ aKey[i]
							nTam := Len( Dtoc( MsDate() ) )
							cConteudo1 += DTOS(CTOD(SubStr(cConteudo,1,nTam)))
						Else
							cConteudo1 += Substr(cConteudo,1,nTam)
						End
						cConteudo	:= Substr(cConteudo,nTam+1)
					Next i

					Return cConteudo1

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³Aleatorio ³ Autor ³ Jorge Queiroz  	     ³ Data ³			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Gera um numero aleatorio de acordo com a semente passada   ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ ExpN1:=Aleatorio(ExpN2,ExpN3) 									  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ ExpN1 = Numero aleatorio (entre 0 e ExpN2)					  ³±±
					±±³			 ³ ExpN2 = Numero maximo a ser devolvido							  ³±±
					±±³			 ³ ExpN2 = Semente de geracao do numero aleatorio. E' alta-   ³±±
					±±³			 ³ mente recomEndavel que seja o proprio numero devolvido	  ³±±
					±±³			 ³ anteriormente pela funcao. 										  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				function aleatorio(nMax,nSeed)
					Local nRand:=0
					While .T.
						nRand := (nSeed+(seconds()-int(seconds())))/.717171717
						nRand := nRand*log(ABS(nRand))
						nRand := ABS(nRand)+sqrt(nRand)
						nRand := nRand-Int(nRand)
						nRand := INT(nRand*(nMax+1))
						If (nRand!=nSeed)   //.AND.at(str(nRand,4),cString)==0
							exit
						EndIf
					End
					Return nRand

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ AtuSalBco³ Autor ³ Wagner Xavier 		  ³ Data ³ 16/04/92 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Func„o para atualiza‡„o do saldo bancario						  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ AtuSalBco() 															  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ SIGAFIN													 				  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AtuSalBco( cBanco, cAgencia, cConta, dData, nValor, cSinal,lReconc , lSalatu)
					Local cAlias := Alias()
					Local nRecNo := 0
					Local lAppEnd:=.f.
					Local nSalIni:=0
					Local cMoeda := "  "
					Local nRecBco := SA6->(Recno())
					Local nSalIniRec :=0
					Local lFINMod9710 := FindFunction("FINMod9710")

					Default lReconc := .F.  //Atualiza saldo concilialdo
					Default lSalAtu  := .T. //Atualiza saldo principal Atual

					If Empty(cBanco)
						Return
					EndIf

					DbSelectArea( "SA6" )
					DbSetOrder(1)
					If !(DbSeek( cFilial+cBanco+cAgencia+cConta ) )
						Reclock( "SA6", .T. )
						SA6 -> A6_FILIAL := cFilial
						SA6 -> A6_COD	  := cBanco
						SA6 -> A6_AGENCIA:= cAgencia
						SA6 -> A6_NUMCON := cConta
						SA6 -> A6_NOME   := "."
						SA6 -> A6_NREDUZ := "."
						SA6 -> A6_MOEDA  := 1
						IF SA6 -> (FIELDPOS("A6_DV")) > 0
							SA6 -> A6_DV := IIF(lFINMod9710,FINMod9710( cBanco + cAgencia + cConta ),"")
						ENDIF

						MsUnlock()
					Endif

					cMoeda := STR(MAX(SA6->A6_MOEDA,1),2)

					DbSelectArea("SE8")
					DbSetOrder(1)
					DbSeek(cFilial+cBanco+cAgencia+cConta+DtoS(dData),.t.)
					If E8_DTSALAT != dData .or. Eof() .or. E8_BANCO+E8_AGENCIA+E8_CONTA != cBanco+cAgencia+cConta
						lAppEnd := .t.
						DbSkip(-1)
						If E8_FILIAL+E8_BANCO+E8_AGENCIA+E8_CONTA == xFIlial()+cBanco+cAgencia+cConta .and. dData >= SE8->E8_DTSALAT
							nSalIni := E8_SALATUA
							nSalIniRec := E8_SALRECO
						Else
							nSalIni := 0
							nSalIniRec := 0
						EndIf
					Else
						nSalIni := E8_SALATUA
						nSalIniRec := E8_SALRECO
					EndIf
					RecLock("SE8",lAppEnd)
					If lAppEnd
						SE8 -> E8_FILIAL := cFilial
						SE8 -> E8_BANCO	:= cBanco
						SE8 -> E8_AGENCIA:= cAgencia
						SE8 -> E8_CONTA	:= cConta
						SE8 -> E8_DTSALAT:= dData
					EndIf
					If lSalAtu
						SE8->E8_SALATUA := nSalini + (Iif(cSinal=="+",nValor,nValor*-1))
					Endif
					If lReconc
						SE8->E8_SALRECO := nSaliniRec + (Iif(cSinal=="+",nValor,nValor*-1))
					ElseIf SE8->E8_SALRECO == 0
						SE8->E8_SALRECO := nSaliniRec
					Endif

					SE8 -> E8_MOEDA  := cMoeda

					MsUnlock()
					nRecNo := RecNo()
					DbSkip()

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Recalcula os saldos do diante em diante, se necess rio. 	  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					While !Eof().and.E8_FILIAL==xFilial("SE8").and.E8_BANCO+E8_AGENCIA+E8_CONTA==cBanco+cAgencia+cConta
						Reclock("SE8")
						nRecNo := RecNo()
						If cSinal == "+"
							If lSalAtu  //Atualizo todos os saldos
								SE8->E8_SALATUA += nValor
							Endif
							If lReconc
								SE8->E8_SALRECO += nValor
							Endif
						Else
							If lSalAtu  //Atualizo todos os saldos
								SE8->E8_SALATUA -= nValor
							Endif
							If lReconc
								SE8->E8_SALRECO -= nValor
							Endif
						Endif
						MsUnlock()
						DbSkip()
					End
					DbGoTo(nRecNo)
					Reclock("SA6")
					SA6->A6_SALATU  := SE8->E8_SALATUA
					MsUnlock()

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Ponto de Entrada para Reconciliacao Bancaria					  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (ExistBlock( "FAATUBCO" ) )
						ExecBlock("FAATUBCO",.F.,.F.)
					EndIf

					SA6->(DbGoTo(nRecBco))   // Reposiciona no Banco da entrada da funcao
					DbSelectArea( cAlias )
					Return

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ EvalGeneric³ Autor ³ Wagner Xavier	     ³ Data ³ 16/04/92 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ 																			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ EvalGeneric()						 				 				     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ SIGAFIN																	  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function EvalGeneric()

					DEFAULT __HasFunType := FindFunction("FunType")

					If GetStartMod1()
						If !__HasFunType .or. FunType() <> 3
							If ExistBlock(FunName())
								ExecBlock(FunName(),.F.,.F.)
								GetStartMod1(.f.)
							EndIf
						EndIf
					EndIf
					Return Nil

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ GetSX8Num³Autor  ³ Ary Medeiros		     ³ Data ³			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Obtem numero sequencial do arquivo de semaforo				  ³±±
					±±³Descri‡…o ³Existe apenas para compatibilizar a Nova GetSxeNum()        ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³GetSX8Num( ) 												 			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function GetSX8Num(cAlias,cCpoSx8,cAliasSX8,nOrdSX8)
					Return GetSxeNum(cAlias,cCpoSx8,cAliasSX8,nOrdSX8)

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³RollBackSX8³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Retorna numero no semafor como pEndente 						  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³RollBackSX8()															  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 												 				  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function RollBackSX8()
					Return RollBackSE()
					Return nil

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ConfirmSX8 ³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Confirma numero sugerido pelo semaforo					 		  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ConfirmSX8() 															  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ExpL1 : Ativa a verificacao do numero gravado. Quando ligado³±±
					±±³          ³a confirmacao do numero eh executada apenas se o usuario nao³±±
					±±³          ³alterou o numero sugerido. Exemplo : O sistema sugeriu      ³±±
					±±³          ³000015 para um Pedido, o usuario alterou para 000040 e      ³±±
					±±³          ³gravou. No momento da ConfirmSX8, o numero gravado sera     ³±±
					±±³          ³comparado com o sugerido, e o mesmo apenas sera confirmado  ³±±
					±±³          ³caso nao tenha sido alterado.                               ³±±
					±±³          ³ATENCAO : O PADRAO DESTE PARAMETRO E FALSO, E O MESMO SO    ³±±
					±±³          ³          PODERA SER UTILIZADO CASO O REGISTRO GRAVADO PELO ³±±
					±±³          ³          USUARIO ESTEJA POSICIONADO.                       ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function ConfirmSX8(lPosConf)
					Return ConFirmSXE(lPosConf)
					/*
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	  ³ Modelo2  ³ Autor ³ Juan Jose Pereira	  ³ Data ³ 18/09/96 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o  ³ Exibe Formulario Modelo 2 										  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros ³ cTitulo=Titulo da Janela								 			  ³±±
					±±³			  ³ aC=Array com campos do cabecalho								  ³±±
					±±³			  ³ aR=Array com campos do rodape							  		  ³±±
					±±³			  ³ aCGD=Array com coordenadas da GetDados	 			   	  ³±±
					±±³			  ³ nOpcx=Modo de operacao 									        ³±±
					±±³			  ³ cLineOk=Validacao de linha da GetDados					     ³±±
					±±³			  ³ cAllOkk=Validacao de toda GetDados 						 	  ³±±
					±±³			  ³ aGetsD=Array com gets editaveis 								  ³±±
					±±³			  ³ bF4=bloco de codigo para tecla F4								  ³±±
					±±³			  ³ cIniCpos=string com nome dos campos que devem ser inicia- ³±±
					±±³			  ³			 lizados ao teclar seta para baixo. 				  ³±±
					±±³			  ³ lDelGetD=determina se as linhas da Getdados podem ser de- ³±±
					±±³			  ³			 letadas ou nao.											  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		  ³ Generico																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/

				FUNCTION Modelo2(cTitulo,aC,aR,aCGD,nOpcx,cLineOk,cAllOk,aGetsGD,bF4,cIniCpos,nMax,aCordW,lDelGetD,lMaximized, aButtons)

					Local nOpca:=0, i,lAllOk
					Local oDlg, cCampo, nX, nY, cCaption, cPict, cValid, cF3, cWhen, nLargSay, nLargGet, uConteudo, oSay, oGet
					Local cBlkGet,cBlkWhen,cBlkVld, oSaveGetdad := Nil, aSvRot := Nil
					Local oTop
					Local oBottom
					Local aObject := {}
					Local aSize := {}
					Local nObject
					Local nAuxWidth := 0

					DEFAULT cLineOk := "AllwaysTrue()"
					DEFAULT cAllOk  := "AllwaysTrue()"
					DEFAULT nCOunt := 0
					DEFAULT nOpcx	:= 3
					DEFAULT aCGD	:= {}
					DEFAULT lDelGetD := .T.
					DEFAULT aButtons := {}

					nOpcX := Iif(nOpcX<1,3,nOpcX)
					cIniCpos := Iif(cIniCpos==Nil,"",cIniCpos)
					nCount++
					__cLineOk := cLineOK
					__nOpcx	 := nOpcx
					If nCount > 1
						oSaveGetdad := oGetDados
						oSaveGetdad:oBrowse:lDisablePaint := .t.
					EndIf
					oGets := {}
					If Type("aRotina") == "A"
						aSvRot := aClone(aRotina)
					EndIf
					aRotina := {}
					For nX := 1 to nOpcX
						AADD(aRotina,{"","",0,nOpcx})
					Next

					aCGD:=Iif(Len(aCGD)==0,{34,5,128,315},aCGD)

					If !Empty(bF4)
						SetKey(VK_F4,bF4)
					EndIf
					aCordW :=Iif(aCordW==Nil,{125,0,400,635},aCordW)

					DEFINE MSDIALOG oDlg TITLE OemToAnsi(cTitulo) FROM aCordW[1],aCordW[2] TO aCordW[3],aCordW[4] PIXEL OF oMainWnd

					If ValType(lMaximized) == "L"
						oDlg:lMaximized := lMaximized
					EndIf

					If Len(aC) > 0

						@00,00 SCROLLBOX oTop
						Aadd(aSize,aCGD[1]+13)
						Aadd(aObject,oTop)
						nObject := 2

						For i:=1 to Len(aC)
							If Len(aC[i])==7 .Or. Len(aC[i])==8
								cCampo:=aC[i,1]
								nX:=aC[i,2,1]-13
								nY:=aC[i,2,2]
								cCaption:=Iif(Empty(aC[i,3])," ",aC[i,3])
								cPict:=Iif(Empty(aC[i,4]),Nil,aC[i,4])
								cValid:=Iif(Empty(aC[i,5]),".t.",aC[i,5])
								cF3:=Iif(Empty(aC[i,6]),NIL,aC[i,6])
								cWhen:=Iif(aC[i,7]==NIL,".t.",Iif(aC[i,7],".t.",".f."))
								cWhen := Iif(!(Str(nOpcx,1,0)$"346"),".f.",cWhen)
								cBlKSay := "{|| OemToAnsi('"+cCaption+"')}"
								oSay := TSay():New( nX+1, nY, &cBlkSay,oTop,,, .F., .F., .F., .T.,,,,, .F., .F., .F., .F., .F. )
								nLargSay := GetTextWidth(0,cCaption) / 1.8  // estava 2.2
								cCaption := oSay:cCaption

								cBlkGet := "{ | u | If( PCount() == 0, "+cCampo+","+cCampo+":= u ) }"
								cBlKVld := "{|| "+cValid+"}"
								cBlKWhen := "{|| "+cWhen+"}"

								If Len(aC[i])==8 .And. ValType(aC[i,8]) == "L" .And. aC[i,8]
									nAuxWidth  := CalcMemoSize(80)
									oGet := TMultiGet():New(nX,nY+nLargSay,&cBlKGet,oTop,nAuxWidth,27,,.F.,,,,.T.,,.F.,&(cBlkWhen),.F.,.F.,.F.,&(cBlkVld),,.F.,.F.,.T.)
								Else
									oGet := TGet():New( nX, nY+nLargSay,&cBlKGet,oTop,,,cPict, &(cBlkVld),,,, .F.,, .T.,, .F., &(cBlkWhen), .F., .F.,, .F., .F. ,cF3,(cCampo))
								EndIf
								AADD(oGets,oGet)
							EndIf
						Next
					EndIf

					// 	  oGetDados:=MSGetDados():New(aCGD[1],aCGD[2],aCGD[3],aCGD[4],1,"__MOD2LineOK()","AllwaysTrue()","",.T.,aGetsGD, , , ,"__FieldOk()")
					oGetDados:=MSGetDados():New(aCGD[1],aCGD[2],aCGD[3],aCGD[4],nOpcX,"__MOD2LineOK()","AllwaysTrue()",cIniCpos,lDelGetD,aGetsGD, , ,nMax ,"__FieldOk()")
					Aadd(aObject,oGetDados:oBrowse)
					Aadd(aSize,NIL)

					If Len(aR) > 0

						@00,00 SCROLLBOX oBottom
						Aadd(aSize,aCordW[3]/2-aCGD[1]-aCGD[3])
						Aadd(aObject,oBottom)
						nObject := 2

						For i:=1 to Len(aR)
							If Len(aR[i])==7 .Or. Len(aR[i])==8
								cCampo:=aR[i,1]
								nX:=aR[i,2,1]-aCGD[3]
								nY:=aR[i,2,2]
								cCaption:=Iif(Empty(aR[i,3])," ",aR[i,3])
								cPict:=Iif(Empty(aR[i,4]),NIL,aR[i,4])
								cValid:=Iif(Empty(aR[i,5]),".t.",aR[i,5])
								cF3:=Iif(Empty(aR[i,6]),NIL,aR[i,6])
								cWhen:=Iif(aR[i,7]==NIL,".t.",Iif(aR[i,7],".t.",".f."))
								cWhen := Iif(!(Str(nOpcx,1,0)$"346"),".f.",cWhen)
								cBlKSay := "{|| OemToAnsi('"+cCaption+"')}"
								oSay := TSay():New( nX+1, nY, &cBlkSay,oBottom,,, .F., .F., .F., .T.,,,,, .F., .F., .F., .F., .F. )
								nLargSay := GetTextWidth(0,cCaption) / 1.8
								cCaption := oSay:cCaption

								cBlkGet := "{ | u | If( PCount() == 0, "+cCampo+","+cCampo+":= u ) }"
								cBlKVld := "{|| "+cValid+"}"
								cBlKWhen := "{|| "+cWhen+"}"

								If Len(aR[i])==8 .And. ValType(aR[i,8]) == "L" .And. aR[i,8]
									nAuxWidth  := CalcMemoSize(80)
									oGet := TMultiGet():New(nX,nY+nLargSay,&cBlKGet,oBottom,nAuxWidth,27,,.F.,,,,.T.,,.F.,&(cBlkWhen),.F.,.F.,.F.,&(cBlkVld),,.F.,.F.,.T.)
								Else
									oGet := TGet():New( nX, nY+nLargSay,&cBlKGet,oBottom,,,cPict, &(cBlkVld),,,, .F.,, .T.,, .F., &(cBlkWhen), .F., .F.,, .F., .F. ,cF3,(cCampo))
								EndIf
								AADD(oGets,oGet)
							EndIf
						Next
					EndIf

					ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg,{||nOpca:=1,lAllOk:=__Mod2OK(cAllOk),Iif(lAllOk,oDlg:End(),nOpca:=0)},{||oDlg:End()},,aButtons),;
						AlignObject(oDlg,aObject,1,nObject,aSize),oGetDados:oBrowse:Refresh())

					nCount--
					If nCount > 0
						oGetDados := oSaveGetDad
						oGetDados:oBrowse:lDisablePaint := .f.
					EndIf
					If ValType(aSvRot) == "A"
						aRotina := aClone(aSvRot)
					EndIf

					SetKey(VK_F4,{||Nil})

					Return (nOpca==1)

				Function __Mod2LineOk()
					Local lRet:=.t. , ni
					If Str(__nOpcx,1,0)$"346"
						lRet := &__cLineOK
						For ni:= 1 to Len(oGets)
							oGets[ni]:Refresh()
						Next
					EndIf
					Return lRet

				Static Function __Mod2Ok(cAllOK)
					Local lRet
					lRet := __Mod2LineOk()
					If lRet
						lRet := &cAllOk
					EndIf
					Return lRet

				Function CallMod2Obj()
					Return oGetDados

				Function __FieldOk()
					Local ni
					For ni:= 1 to Len(oGets)
						oGets[ni]:Refresh()
					Next
					Return .t.

					/*
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³Modelo3	  ³ Autor ³ Wilson				  ³ Data ³ 17/03/97 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Enchoice e GetDados													  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³lRet:=Modelo3(cTitulo,cAlias1,cAlias2,aMyEncho,cLinOk, 	  ³±±
					±±³			 ³ cTudoOk,nOpcE,nOpcG,cFieldOk,lVirtual,nLinhas,aAltEnchoice)³±±
					±±³			 ³lRet=Retorno .T. Confirma / .F. Abandona						  ³±±
					±±³			 ³cTitulo=Titulo da Janela 											  ³±±
					±±³			 ³cAlias1=Alias da Enchoice									 		  ³±±
					±±³			 ³cAlias2=Alias da GetDados											  ³±±
					±±³			 ³aMyEncho=Array com campos da Enchoice							  ³±±
					±±³			 ³cLinOk=LinOk 															  ³±±
					±±³			 ³cTudOk=TudOk 															  ³±±
					±±³			 ³nOpcE=nOpc da Enchoice												  ³±±
					±±³			 ³nOpcG=nOpc da GetDados												  ³±±
					±±³			 ³cFieldOk=validacao para todos os campos da GetDados 		  ³±±
					±±³			 ³lVirtual=Permite visualizar campos virtuais na enchoice	  ³±±
					±±³			 ³nLinhas=Numero Maximo de linhas na getdados				  	  ³±±
					±±³			 ³aAltEnchoice=Array com campos da Enchoice Alteraveis		  ³±±
					±±³			 ³nFreeze=Congelamento das colunas.                           ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³RdMake 																	  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/
				Function Modelo3(cTitulo,cAlias1,cAlias2,aMyEncho,cLinOk,cTudoOk,nOpcE,nOpcG,cFieldOk,lVirtual,nLinhas,aAltEnchoice,nFreeze,aButtons,aCordW,nSizeHeader)
					Local lRet, nOpca := 0,cSaveMenuh,nReg:=(cAlias1)->(Recno()),oDlg
					Local oEnchoice
					Local nDlgHeight
					Local nDlgWidth
					Local nDiffWidth := 0
					Local nDiffHeight := 0
					Local lMDI := .F.
					Local lPlugin := .F.
					Local nTop := 32
					Local aSize := {}

					Private Altera:=.t.,Inclui:=.t.,lRefresh:=.t.,aTELA:=Array(0,0),aGets:=Array(0),;
						bCampo:={|nCPO|Field(nCPO)},nPosAnt:=9999,nColAnt:=9999
					Private cSavScrVT,cSavScrVP,cSavScrHT,cSavScrHP,CurLen,nPosAtu:=0

					If IsPlugin()
						lPlugin := .T.
					EndIf

					nOpcE := If(nOpcE==Nil,3,nOpcE)
					nOpcG := If(nOpcG==Nil,3,nOpcG)
					lVirtual := Iif(lVirtual==Nil,.F.,lVirtual)
					nLinhas:=Iif(nLinhas==Nil,99,nLinhas)

					If SetMDIChild()
						oMainWnd:ReadClientCoors()
						nDlgHeight := oMainWnd:nHeight
						nDlgWidth := oMainWnd:nWidth
						lMdi := .T.
						nDiffWidth := 2
						If lPlugin
							nDiffHeight := 25
						EndIf
					Else
						If lPlugin
							nDlgHeight := oMainWnd:nHeight-55
							nDlgWidth	:= oMainWnd:nWidth-12
							nDiffHeight := 80
							nTop := 10
						Else
							nDlgHeight := oMainWnd:nHeight-50
							nDlgWidth	:= oMainWnd:nWidth-27
						Endif
						nDiffWidth := 7
					EndIf

					Default aCordW := {nTop,000,nDlgHeight,nDlgWidth}
					Default nSizeHeader := 110

					Aadd(aSize,nSizeHeader)

					DEFINE MSDIALOG oDlg TITLE cTitulo From aCordW[1],aCordW[2] to aCordW[3],aCordW[4] Pixel of oMainWnd
					If lMdi
						oDlg:lMaximized := .T.
					EndIf

					oEnchoice := Msmget():New(cAlias1,nReg,nOpcE,,,,aMyEncho,{13,1,(nSizeHeader/2)+13,If(lMdi, (oMainWnd:nWidth/2)-2,__DlgWidth(oDlg)-nDiffWidth)},aAltEnchoice,3,,,,oDlg,,lVirtual,,,,,,,,.F.)

					oGetDados := MsGetDados():New((nSizeHeader/2)+13+2,1,(oMainWnd:nHeight/2)-nDiffHeight,oMainWnd:nWidth/2-nDiffWidth,nOpcG,cLinOk,cTudoOk,"",.T.,,nFreeze,,nLinhas,cFieldOk,,,,oDlg)

					ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg,{||nOpca:=1,If(oGetDados:TudoOk(),If(!obrigatorio(aGets,aTela),nOpca := 0,oDlg:End()),nOpca := 0)},{||oDlg:End()},,aButtons),AlignObject(oDlg,{oEnchoice:oBox,oGetDados:oBrowse},1,,aSize))

					lRet:=(nOpca==1)
					Return lRet

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³RegToMemory ³ Autor ³ Wilson			     ³ Data ³ 17/03/97 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Cria variaveis M-> para uso na modelo3()						  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³Modelo3																	  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function RegToMemory(cAlias,lInc,lDic,lInitPad, cStack)

					Local aArea    := GetArea()
					Local aAreaSX3 := SX3->(GetArea())
					Local nX    := 0
					Local cCpo  := ""

					DEFAULT lInc := .F.
					DEFAULT lDic := .T.
					DEFAULT lInitPad := .T.
					DEFAULT __HasSNPrvt := FindFunction('_SETNAMEDPRVT')

					If ( cStack != NIL ) .And. ( ! __HasSNPrvt )
						UserException( 'Cannot find function _SetNamedPrvt' )
					EndIf

					If lDic
						DbSelectArea("SX3")
						DbSetOrder(1)
						DbSeek(cAlias)
						While !Eof() .and. SX3->X3_ARQUIVO == cAlias
							DbSelectArea(cAlias)
							If SX3->X3_CONTEXT == "V" .or. lInc
								If ( cStack == NIL )
									_SetOwnerPrvt(Trim(SX3->X3_CAMPO),CriaVar(Trim(SX3->X3_CAMPO),lInitPad))
								Else
									_SetNamedPrvt(Trim(SX3->X3_CAMPO),CriaVar(Trim(SX3->X3_CAMPO),lInitPad), cStack)
								EndIf
							Else
								cCpo := (cAlias+"->"+Trim(SX3->X3_CAMPO))
								If ( cStack == NIL )
									_SetOwnerPrvt(Trim(SX3->X3_CAMPO),&cCpo)
								Else
									_SetNamedPrvt(Trim(SX3->X3_CAMPO),&cCpo, cStack)
								EndIf
							EndIf
							DbSelectArea("SX3")
							DbSkip()
						EndDo
					Else
						dbSelectArea(cAlias)
						For nX := 1 To FCount()
							If ( lInc )
								cCpo := CriaVar(Trim(FieldName(nX)),lInitPad)
							Else
								cCpo := &(cAlias+"->"+Trim(FieldName(nX)))
							EndIf

							If ( cStack == NIL )
								_SetOwnerPrvt(Trim(FieldName(nX)),cCpo)
							Else
								_SetNamedPrvt(Trim(FieldName(nX)),cCpo, cStack)
							EndIf
						Next nX
					EndIf
					RestArea(aAreaSX3)
					RestArea(aArea)
					Return(Nil)


					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³ Fun‡„o	  ³ xCxLoja  ³ Autor ³ Fernando Godoy		   ³Data  ³ 27/02/97 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Descri‡„o ³ Retorna o Caixa/Agencia/Conta geral da Loja 	 			   ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Sintaxe   ³ xCxLoja()																   ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function xCxLoja()
					Local cCaixa
					Local aCaixaRet := {}
					Local cAlias 	:= Alias()
					Local nReg	 	:= Recno()
					Local cOrder 	:= IndexOrd()
					Local nTam1		:= TamSX3("A6_COD")[1]
					Local nTam2		:= TamSX3("A6_AGENCIA")[1]
					Local nTam3		:= TamSX3("A6_NUMCON")[1]
					Local nSizeFil  := 2
					Local lFINMod9710 := FindFunction("FINMod9710")
					Local cBcoCx 	:= ""
					Local cAgeCx 	:= ""
					Local cCtaCx 	:= ""

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ VeIfica a existencia do parametro ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !GetMv("MV_CXLOJA", .T.)
						GetMv("MV_CXLOJA")
						cCaixa	 := " "
					Else
						cCaixa	 := GetMv("MV_CXLOJA")
					EndIf

					//-- Atualiza o conteúdo da filial
					If FindFunction("FWSizeFilial")
						nSizeFil := FWSizeFilial()
					EndIf
					If Substr(cCaixa,nTam1 + 1,1) != "/" .or.;
							Substr(cCaixa,((nTam1 + 1) + (nTam2 + 1)) ,1) != "/" .or.;
							Empty(Substr(cCaixa,1,nTam1)) .or.;
							Empty(Substr(cCaixa,nTam1 + 2 , nTam2)) .or.;
							Empty(Substr(cCaixa,((nTam1 + 1) + (nTam2 + 1) + 1),(nTam1 + 1) + (nTam2 + 1)))
						If GetMv("MV_CXLOJA", .T.)
							RecLock("SX6",.F.)
						Else
							RecLock("SX6", .T.)
							SX6->X6_FIL      := Space(nSizeFil)
							SX6->X6_VAR      := "MV_CXLOJA"
							SX6->X6_TIPO     := "C"
						EndIf
						SX6->X6_CONTEUD := Padr("CL1",nTam1) + "/" + PadL("1",nTam2,"0") + "/" + PadL("1",IIF(nTam3>10,10,nTam3),"0")
						SX6->(MsUnlock())
					EndIf

					cCaixa := GetMv("MV_CXLOJA")

					cBcoCx := Substr(cCaixa,1,At("/",cCaixa) - 1)

					cAgeCx := Substr(cCaixa,At("/",cCaixa) +1 ,(Rat("/",cCaixa)-At("/",cCaixa)-1))
					cAgeCx := StrZero(Val(cAgeCx),nTam2)

					cCtaCx := Substr(cCaixa,Rat("/",cCaixa) +1,Len(SE1->E1_CONTA))
					cCtaCx := StrZero(Val(cCtaCx),nTam3)

					Aadd(aCaixaRet, cBcoCx)
					Aadd(aCaixaRet, cAgeCx)
					Aadd(aCaixaRet, cCtaCx)

					DbSelectArea("SA6")
					DbSetOrder(1)
					If !DbSeek(xFilial()+aCaixaRet[1]+aCaixaRet[2]+aCaixaRet[3])
						RecLock("SA6",.T.)
						SA6->A6_FILIAL	:= xFilial()
						SA6->A6_COD		:= aCaixaRet[1]
						SA6->A6_AGENCIA	:= aCaixaRet[2]
						SA6->A6_NUMCON	:= aCaixaRet[3]
						SA6->A6_NOME	:= STR0041 // CAIXA GERAL DA LOJA
						SA6->A6_NREDUZ	:= STR0042 // CAIXA GERAL LJ
						IF SA6 -> (FIELDPOS("A6_DV")) > 0
							SA6 -> A6_DV := IIF(lFINMod9710,FINMod9710( aCaixaRet[1] + aCaixaRet[2] + aCaixaRet[3] ),"")
						ENDIF
						MsUnLock()
					EndIf

					DbSelectArea("SX5")
					DbSetOrder(1)
					If ! DbSeek(xFilial()+"23"+aCaixaRet[1])
						RecLock("SX5",.T.)
						SX5->X5_FILIAL	:= 	xFilial("SX5")
						SX5->X5_TABELA	:= "23"
						SX5->X5_CHAVE	:= aCaixaRet[1]
						SX5->X5_DESCRI	:= STR0041 // CAIXA GERAL DA LOJA
						SX5->X5_DESCSPA	:= STR0041 // CAIXA GERAL DA LOJA
						SX5->X5_DESCENG	:= STR0041 // CAIXA GERAL DA LOJA
						MsUnLock()
					EndIf
					DbSelectArea(cAlias)
					DbSetOrder(cOrder)
					DbGoTo(nReg)

					Return aCaixaRet

					/*
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³NetCancel   ³ Autor ³ Alessandro B. Freire³ Data ³ 19/05/97 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Envia mensagem ao usuario									 		  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³Generico													  				  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/
				FUNCTION NetCancel()
					Return (APMsgYesNo(OemToAnsi(STR0022),OemToAnsi(STR0023))) //"H  outro usu rio utilizando o SX8. Deseja Cancelar ?" ### "Aten‡„o"


					/*/
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ ArrayTP8 ³ Autor ³ Rogerio F. Guimaraes  ³ Data ³ 31.10.97  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Rotina para trazer array com os itens da cond pagto tipo 9  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ ExpA1 := ArrayTP8(ExpN1)									  			³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ ExpA1 = Array contEndo os dias e percentuais de cada parcel ³±±
					±±³			 ³ ExpN1 = E4_COND														   ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Uso		 ³ Generico 																   ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL. 						   ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³	MOTIVO DA ALTERACAO						   ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Rogerio F.G. ³24/11/97³B.HUR ³Alt Cond Pagto Tipo 8 - validacao		   ³±±
					±±³ Rogerio/Edson³09/12/97³12551 ³Alt Validacao para o Percent. Digitado   ³±±
					±±³ Edson  M.	  ³25/02/98³XXXXX ³Acerto da validacao da cond. Tipo 8.	   ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				FUNCTION ArrayTP8(cCond)
					Local cString,cPercent,cDias
					Local nPos1:=nPos2:=nx:=0
					Local aTp8:={},aDias:={},aPercent:={},i:=0
					Local nPerc:=0

					cString:=cCond
					nPos1:=Rat("[",cString)
					nPos2:=Rat("]",cString)

					cPercent := Substr(cString,nPos1+1,nPos2-(nPos1+1))
					cString:=Stuff(cString,nPos1-1,(nPos2+1)-(nPos1-1),"")

					nPos1:=Rat("[",cString)
					nPos2:=Rat("]",cString)
					cDias := Substr(cString,nPos1+1,nPos2-(nPos1+1))

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ VeIfica nro de parcelas e percentuais ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					While Len(cDias) > 0
						AAdd(aDias,Val(Parse(@cDias)))			// Adiciona os dias para pagamento
					End

					While Len(cPercent) > 0
						AAdd(aPercent,Val(Parse(@cPercent)))	// Adiciona os percentuais de pagamento
						If aPercent[Len(aPercent)] == 0
							Return aTp8 := {}
						EndIf
					End

					If Len(aDias) == 0 .Or. Len(aPercent) == 0
						Return aTp8:={}
					EndIf

					If Len(aDias) != Len(aPercent)					// VerIfica discrepancia
						Return aTP8:={}
					EndIf

					For i := 1 to Len(aDias)
						AAdd(aTp8,{aDias[i],aPercent[i]})			// Atualiza Retorno, acumula percentuais
						nPerc += aTp8[i][2]
					Next

					If nPerc < 100 .Or. nPerc > 100
						aTp8 := {}
					EndIf
					Return aTp8

				Function x2Path(cAlias)
					Local cSavAlias := Alias(),nRecSx2,cRet:=""
					Local cFilter

					DbSelectArea("SX2")
					cFilter := dbFilter()
					nRecSx2 := Recno()
					DbClearFilter()
					If DbSeek(cAlias)
						cRet := PADR(AllTrim(x2_path)+AllTrim(x2_arquivo),50)
					EndIf
					Set Filter to &cFilter
					DbGoTo(nRecSx2)

					If ( ! Empty(cSavAlias) )
						DbSelectArea(cSavAlias)
					EndIf
					Return cRet

				Function SuperVal(cVar)
					Local xVar:="",ni, cByte

					If ValType( cVar ) == "N"
						Return( cVar )
					EndIf

					For ni:= 1 to Len(cVar)
						cByte := Subs(cVar,ni,1)
						If cByte == ","
							cByte := "."
						endif
						If cByte $"1234567890.-"
							xVar+= cByte
						EndIf
					Next
					Return (Val(xVar))

					/*
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ Final 	³ Autor ³ Ary Medeiros	  	     ³ Data ³		     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Finaliza Aplicativo com janela propria 					     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 												              ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

					//REMOVIDA PARA LIB
				Function Final(cStr,cStr1)
					*/

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ As fun‡”es Posicione e RetField       ³
					//³ fazem exatamente a mesma coisa        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				function RetField(cAlias,nOrder,cChave,cCampo)
					Return Posicione(cAlias,nOrder,cChave,cCampo)

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³AxPesqInd	³ Autor ³ Bruno Sobieski		  ³ Data ³ 23.03.99 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Pesquisas genericas em arquivos com Indice cond. ativo.    ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe e ³ AxPesqInd(cTxtInd,cArqInd)											  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ cTxtInd = Texto exibido no ComboBox com a chave do indice. ³±±
					±±³          ³ cArqInd = Nome de arquivo de indice temporario.            ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 											      			  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				FUNCTION axPesqInd(cTxtInd,cArqInd)
					Local cAlias,cCampo,nReg,oDlg,nOpca:=0,bSav12 := SetKey(VK_F12,Nil)
					Local cFil:="",nChave:=1,dCampo,cOrd,oCbx,nOpt1,nI, nSavReg
					Local	nOrder	:=	IndexOrd(), aOrd	:=	{}
					Local nSizeFil := 2
					*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					*³Salva a Integridade dos Dados														³
					*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If cTxtInd==Nil .Or. cArqInd==Nil
						Return
					EndIf
					cAlias  := ALIAS()
					DbSelectArea(cAlias)
					cCpofil := PrefixoCpo(cAlias)+"_FILIAL"
					nSavReg := Recno()
					If At(cCpoFil,Indexkey())==1 //TYPE(cCpoFil) != "U"
						DbSeek(cFilial)
					Else
						DbGoTop()
					EndIf
					If Eof()
						Help(" ",1,"A000FI")
						SetKey(VK_F12,bSav12)
						Return 3
					EndIf
					DbGoTo(nSavReg)

					Aadd(aOrd,OemToAnsi(" "+cTxtInd))
					cOrd := cTxtInd
					cCampo:=SPACE(40)
					DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 50 TITLE OemToAnsi(STR0010) //"Pesquisa"

					@ 0.6,1.3 COMBOBOX oCBX VAR cOrd ITEMS aOrd  SIZE 165,44 OF oDlg FONT oDlg:oFont
					@ 2.1,1.3 MSGET cCampo SIZE 165,10
					DEFINE SBUTTON FROM 055,122	TYPE 1 ACTION (nOpca := 1,oDlg:End()) ENABLE OF oDlg
					DEFINE SBUTTON FROM 055,149.1 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

					ACTIVATE MSDIALOG oDlg CENTERED
					If nOpca == 0
						SetKey(VK_F12,bSav12)
						Return 0
					EndIf
					nReg := RecNo()
					Set Softseek On
					#ifndef TOP
						DbSetIndex(cArqInd+OrdBagExt())
						DbSetOrder(nOrder)
					#else
						DbSetOrder(0)
					#endif

					If At(PrefixoCpo(cAlias)+"_FILIAL",Indexkey())==1 //Procura pela filial
						cFil:=cFilial
						nChave:=11
					EndIf

					If ("DTOS" $ Upper(IndexKey(nOrder))) .or. ("DTOC" $ Upper(IndexKey(nOrder)))
						cCampo := ConvData(IndexKey(nOrder),cCampo)
					EndIf

					If SubStr(cAlias,1,3) == "SM2"
						dCampo:=Ctod(AllTrim(cCampo))
						DbSeek(dCampo)
					EndIf
					If !(At(PrefixoCpo(cAlias)+"_FILIAL",Indexkey())==1) .And. !("SM2" $ cAlias)  //cAlias $ "SX6/SX9"
						DbSeek(Trim(ccampo))
					ElseIf cAlias != "SM2"
						//-- Atualiza o conteúdo da filial
						If FindFunction("FWSizeFilial")
							nSizeFil := FWSizeFilial()
						EndIf
						DbSeek(cFilial+Trim(cCampo))
						If Subs(&(IndexKey()),1,nSizeFil) != cFilial	 // IR Para EOF
							DbSeek(chr(255))
						EndIf
					EndIf
					Set SoftSeek Off
					lRefresh := .t.
					SetKey(VK_F12,bSav12)
					Return


					/*
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡„o	 ³ MaParcela  ³ Autor ³ Ben-Hur M Castilho  ³ Data ³ 14/02/97 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡„o ³ Calcula o Numero da Proxima Parcela 			 		 	     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ MATA460													  				  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/
				Function MaParcela( cParcela )
					Local cBack    := ""
					Local nTamParc := Len(SE1->E1_PARCELA)
					If nTamParc == 1
						Do Case
						Case (cParcela >= "0" .And. cParcela <= "8")
							cBack := Str( (Val( cParcela )+1),1 )
						Case (cParcela >= "A" .And. cParcela <= "Y")
							cBack := Chr( (Asc( cParcela )+1) )
						Case (cParcela >= "a" .And. cParcela <= "y")
							cBack := Chr( (Asc( cParcela )+1) )
						Case cParcela = "Z"
							cBack := "a"
						OtherWise
							cBack := "A"
						EndCase
					Else
						cBack := Soma1(cParcela,nTamParc)
					EndIf
					Return( cBack )

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ GetSXENum³Autor  ³ Ary Medeiros			  ³ Data ³	   	  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Obtem numero sequencial do arquivo de semaforo			     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³GetSXENum( ) 												           ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 												              ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function GetSXENum(cAlias,cCpoSx8,cAliasSX8,nOrdem)
					Local cSavAlias := Alias(), cRet, nSize, lFound, lNetErr := .t.
					Local nRegX6 := SX6->(Recno()), nTimes := 0,nExist, nHdl, aCampos, nTrys := 0
					Local nSizeFil := 2

					IF __lSemServer == Nil
						IF GetCountLicense()	 .or. nModulo == 99
							__lSemServer :=  ( LS_GetLicense(10000) >= 0)
						Else
							__lSemServer := .f.
						Endif
					Endif

					IF __lSemServer
						IF !__lCleaned
							FERASE("SXE.DBF")
							FERASE("SXF.DBF")
							__lCleaned := .t.
						Endif
						Return GetLSNum(cAlias,cCpoSx8,cAliasSX8,nOrdem)
					Endif

					//-- Atualiza o conteúdo da filial
					If FindFunction("FWSizeFilial")
						nSizeFil := FWSizeFilial()
					EndIf

					DEFAULT __lFirstXE := .t.

					If __lFirstXE
						__lFirstXE := .f.
						If !File("SXE" + GetDBExtension()) .Or. ! File( "SXF" + GetDBExtension() )
							nTrys := 0
							While !LockByName("SOEUSXE")
								Inkey(5)
								nTrys++
								If nTrys > 20
									Final("Probs.Criacao SOEUSXE")
								EndIf
							End

							If ! File( 'SXE' + GetDBExtension() )
								aCampos := {}
								AADD(aCampos,{"XE_FILIAL","C",48+nSizeFil,0})
								AADD(aCampos,{"XE_ALIAS","C",3,0})
								AADD(aCampos,{"XE_TAMANHO","N",2,0})
								AADD(aCampos,{"XE_NUMERO","C",20,0})
								dbCreate("SXE",aCampos,__LocalDriver)
								If NetERR()
									Final("Probs.Criacao SXE")
								EndIf
							EndIf

							If ! File( 'SXF' + GetDBExtension() )
								aCampos := {}
								AADD(aCampos,{"XF_FILIAL","C",48+nSizeFil,0})
								AADD(aCampos,{"XF_ALIAS","C",3,0})
								AADD(aCampos,{"XF_TAMANHO","N",2,0})
								AADD(aCampos,{"XF_NUMERO","C",20,0})
								dbCreate("SXF",aCampos,__LocalDriver)
								If NetERR()
									Final("Probs.Criacao SXF")
								EndIf
							EndIf

							UnLockByName("SOEUSXE")
							DbCommitAll()
						EndIf
					EndIf
					If Select("SXE") <= 0
						USE SXE ALIAS SXE SHARED NEW VIA __LocalDriver
						If NetERR()
							Final("Probs.Abertura SXE")
						EndIf
						USE SXF ALIAS SXF SHARED NEW VIA __LocalDriver
						If NetERR()
							Final("Probs.Abertura SXF")
						EndIf
					EndIf

					nOrdem := Iif(nOrdem == Nil,1,nOrdem)

					If cAliasSX8 == Nil
						//-----------------------------------------------------------
						// Tratamento para numeração de TRB sem informação de filial.
						//-----------------------------------------------------------
						If ( cAlias == "TRB" )
							cAliasSx8	:= Padr("", Len(SXE->XE_FILIAL))
						Else
							cAliasSx8	:= Padr(xFilial(cAlias)+x2path(cAlias),Len(SXE->XE_FILIAL))
						EndIf
					Else
						cAliasSx8 := Padr(cAliasSx8,Len(SXE->XE_FILIAL))
					EndIf

					DbSelectArea("SXF")     //Olhar as Sobras
					DbGoTop()
					lFound := .f.
					While !Eof()  //.and. (X8_FILIAL+X8_ALIAS+X8_STATUS) == (cAliasSx8+cAlias+"0")
						If XF_FILIAL+XF_ALIAS != cAliasSX8+cAlias
							DbSkip()
							Loop
						EndIf
						IF Ascan(aSx8,{|x| x[1]==SXF->(Recno())}) > 0
							dbSkip()
							Loop
						Endif
						If MSRLock(Recno())
							dbCommit()
							dbGoto(Recno())
							IF MsRLock(Recno())     //Nao Mexer WIlson
								dbGoto(Recno())       //Nao Mexer Wilson
								If !Deleted()
									lFound  := .t.
									cRet            := Substr(XF_NUMERO,1,XF_TAMANHO)
									Exit
								Else
									MSRUnlock(Recno())
								EndIf
							Else
								MsRUnlock(Recno())
							Endif
						EndIf
						DbSkip()
					End
					If !lFound
						DbSelectArea("SXE")    //Olhar o Proximo
						DbGoTop()
						While !Eof()
							If XE_FILIAL+XE_ALIAS == cAliasSX8+cAlias
								Exit
							EndIf
							DbSkip()
						End
						If Eof()
							CriaSXE(cAlias,cCpoSx8,cAliasSx8,nOrdem)
							DbSelectArea("SXE")
							dbCommit()
						EndIf
						nTrys := 0
						While .t.
							DbGoTo(Recno())
							If MSRLock(Recno())
								dbCommit()
								DbGoTo(Recno())
								If MsRLock(RecNo())   //Nao Mexer (Wilson)
									Exit
								EndIf
							EndIf
							nTrys++
							Sleep(15*nTrys)
							If nTrys > 50
								Final("Nao Consegui SXE")
							EndIf
						End
						cRet := Substr(XE_NUMERO,1,XE_TAMANHO)
						nSize := XE_TAMANHO
						If ( cAlias == 'CPR' ) .And. ( cRet == 'ZZZZ' )
							Replace XE_NUMERO WITH '0001'
						Else
							Replace XE_NUMERO with SOMA1(Substr(XE_NUMERO,1,XE_TAMANHO))
						EndIf
						DbCommit()
						MsRUnLock(Recno())
						DbCommit()


						While lNetErr
							DbSelectArea("SXF")
							Set DELE OFF
							DbGoTop()
							While !Eof()
								If Deleted()
									Exit
								EndIf
								DbSkip()
							End
							If Eof()
								dbAppEnd(.f.)
								lNetErr := NetErr()
							Else
								If ( MsrLock(RecNo()) )
									dbCommit()
									dbGoto(Recno())
									IF MsRLock(Recno())
										If !Deleted()
											MsRUnlock(RecNo())
											Loop
										EndIf
									Else
										MsRUnLock(Recno())
										Loop
									Endif
								Else
									Loop
								EndIf
								lNetErr := .f.
							EndIf
							Set DELE ON
							nTimes ++
							If nTimes > 20
								If NetCancel()
									Final( oemtoansi("PROBS.GRV.SXF") ) //"Problema de GRAVACAO NO SX8"
								Else
									nTimes := 0
								EndIf
							EndIf
							If ( lNetErr )
								Inkey( nTimes/24 )
							EndIf
						End
						DbSelectArea("SXF")
						MSRLock(Recno())
						DbReCall()
						Replace XF_FILIAL with cAliasSx8
						Replace XF_ALIAS with cAlias
						Replace XF_TAMANHO with nSize
						Replace XF_NUMERO with cRet
						DbCommit()
					EndIf

					__lSX8 := .t.

					//If Ascan(aSx8,{|x| x[1]==SXF->(Recno())}) == 0
					AADD(aSx8,{SXF->(Recno()),"E",cCpoSX8,cAlias})
					//Endif


					If !Empty(cSavAlias)
						DbSelectArea(cSavAlias)
					EndIf


					Return cRet

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³RollBackSXE³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Retorna numero no semafor como pEndente 						  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³RollBackSXE()															  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Static Function RollBackSE()
					Local cALias := Alias()

					IF __lSemServer == Nil
						IF GetCountLicense()
							__lSemServer :=  ( LS_GetLicense(10000) >= 0)
						Else
							__lSemServer := .f.
						Endif
					Endif

					IF __lSemServer
						Return RollBackLS()
					Endif


					If Len(aSX8) < 1
						__lSx8 := .f.
					EndIf

					If !__lSx8
						Return Nil
					EndIf

					DbSelectArea("SXF")
					DbGoTo(aSx8[len(aSx8),1])
					aDel(aSX8,len(aSX8))
					aSize(aSX8,len(aSX8)-1)
					__lSx8 := Iif(Len(aSx8) == 0,.f.,.T.)

					MsRUnLock(Recno())
					dbCommit()
					If !Empty(cAlias)
						DbSelectArea(cAlias)
					EndIf
					Return nil

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ConfirmSXE ³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Confirma numero sugerido pelo semaforo							  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ConfirmSXE() 															  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ExpL1 : Ativa a verificacao do numero gravado. Quando ligado³±±
					±±³          ³a confirmacao do numero eh executada apenas se o usuario nao³±±
					±±³          ³alterou o numero sugerido. Exemplo : O sistema sugeriu      ³±±
					±±³          ³000015 para um Pedido, o usuario alterou para 000040 e      ³±±
					±±³          ³gravou. No momento da ConfirmSX8, o numero gravado sera     ³±±
					±±³          ³comparado com o sugerido, e o mesmo apenas sera confirmado  ³±±
					±±³          ³caso nao tenha sido alterado.                               ³±±
					±±³          ³ATENCAO : O PADRAO DESTE PARAMETRO E FALSO, E O MESMO SO    ³±±
					±±³          ³          PODERA SER UTILIZADO CASO O REGISTRO GRAVADO PELO ³±±
					±±³          ³          USUARIO ESTEJA POSICIONADO.                       ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Static Function ConfirmSXE(lPosConf)
					Local cAlias := Alias(), nReg
					Local nTimes := 0
					Local cAliasSXE
					Local cSeqSXE

					DEFAULT lPosConf := .F.

					lPosConf := If(ValType(lPosConf) == "L",lPosConf,.F.)

					IF __lSemServer == Nil
						IF GetCountLicense()
							__lSemServer :=  ( LS_GetLicense(10000) >= 0)
						Else
							__lSemServer := .f.
						Endif
					Endif

					IF __lSemServer
						Return ConFirmLS(lPosConf)
					Endif


					If Len(aSX8) < 1
						__lSx8 := .f.
					EndIf

					If !__lSx8
						Return Nil
					EndIf

					nReg := aSx8[len(aSx8),1]
					If lPosConf
						If aSX8[len(aSx8),4] <> Nil .And. aSX8[len(aSx8),3] <> Nil  .And. Select(cAlias) > 0 .And. (cAlias)->(FieldPos(aSX8[len(aSx8),3]))> 0
							cAliasSXE := cAlias
							cSeqSXE := (cAliasSXE)->(&(aSX8[len(aSx8),3]))
						Else
							lPosConf := .F.
						EndIf
					EndIf

					DbSelectArea("SXF")
					DbGoTo(nReg)
					aDel(aSX8,len(aSX8))
					aSize(aSX8,len(aSX8)-1)
					If !lPosConf .Or. ( XF_ALIAS == cAliasSXE .And. Substr(XF_NUMERO,1,XF_TAMANHO) == cSeqSXE)
						nTimes := 0
						While !MsRLock(RecNo())
							nTimes++
							If nTimes > 20
								If NetCancel()
									Final( "Probs.Lock SXF" ) //"Problemas de Lock no SX8"
								Else
									nTimes := 0
								EndIf
							EndIf
							Inkey( ntimes/24 )
						End
						dbDelete()
						dbCommit()
						MsRUnLock(nReg)
						DbCommit()
					EndIf

					DbSelectArea(cAlias)
					Return nil

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ CriaSXE	 ³Autor	 ³ Ary Medeiros 	    ³ Data ³		  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Cria registro no SX8 para alias nao Localizado			  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³CriaSXE() 																  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ Generico 																  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Static Function CriaSXE(cAlias,cCpoSx8,cAliasSx8,nOrdSX8,lInServer)
					Local cSavAlias := Alias(), nRecno, nOrdem, cNum, cFilCpo
					Local lCampo := .t., cProva, aArquivos, nTamanho, lNetErr := .T., nTimes := 0
					Local nHdl := -1, nTrys := 0, lFound, cCampo,cFilter, cSerie, nOrd, nNum, uRet
					Local cMvUniao, cMvMunic, cMvRecEst
					Local nSizeFil := 2
					Local cQuery 	:= ""
					Local cAliasSE5 := ""
					Local aArea_SE5	:= {}
					Local cFilterSE5 := ""
					Local nTamSeq	:= 1

					DEFAULT lInServer := .f.

					cNum := Nil

					If ( ExistBlock("CRIASXE") )
						uRet := ExecBlock("CRIASXE",.f.,.f.,{cAlias,cCpoSx8,cAliasSx8,nOrdSX8})
						If ( ValType(uRet) == 'C' )
							cNum 	:= uRet
							nTamanho:=Len(cNum)
						EndIf
					EndIf

					IF cNum == Nil
						nOrdSX8 := Iif(nOrdSX8 == Nil,1,nOrdSX8)
						Do Case
						Case cAlias == "SA1"
							cCampo := "A1_COD"
						Case cAlias == "SA2"
							cCampo := "A2_COD"
						Case cAlias == "SB1"
							cCampo := "B1_COD"
						Case cAlias == "SC1"
							cCampo := "C1_NUM"
						Case cAlias == "SC2"
							cCampo := "C2_NUM"
						Case cAlias == "SC5"
							cCampo := "C5_NUM"
						Case cAlias == "SC7"
							cCampo := "C7_NUM"
						Case cAlias == "SC8"
							cCampo := "C8_NUM"
						Case cAlias == "SI2"
							cCampo := "I2_NUM"
						Case cAlias == "SL1"
							cCampo := "L1_NUM"
						Case cAlias == "NFF"
							IF cAliasSX8 == Nil
								UserException("Invalid Use OF GetSXENum With NFF Alias")
							Endif
							lCampo := .f.
							cSerie := Subs(cAliasSX8,1,3)
							nTamanho := Len(SF2->F2_DOC)
							nOrd := SF2->(IndexOrd())
							SF2->(dbSetOrder(4))
							SF2->(DbGoTop())	// Nao tirar -> Ramalho
							SF2->(dbSeek(xFilial("SF2")+cSerie+"zzzzzz",.t.))
							SF2->(dbSkip(-1))
							IF SF2->(Bof()) .Or. SF2->F2_FILIAL+SF2->F2_SERIE != xFilial("SF2")+cSerie
								nNum := 1
							Else
								nNum := Val(SF2->F2_DOC) + 1
							Endif
							cNum := StrZero(nNum,nTamanho,0)
							SF2->(dbSetOrder(nOrd))
						Case cAlias == "PLS"

							If cAliasSX8 == Nil
								UserException("Invalid Use OF GetSXENum With PLS Alias")
							EndIf

							lCampo 	 := .f.
							cSerie 	 := Subs(cAliasSX8,1,3)
							nTamanho := Len(SE1->E1_NUM)
							nOrd 	 := SE1->( IndexOrd() )

							SE1->( DbSetorder(01) )//E1_FILIAL + E1_PREFIXO + E1_NUM + E1_PARCELA + E1_TIPO
							SE1->( DbGoTop() )
							SE1->( MsSeek( xFilial("SE1") + cSerie + Replicate( "z",nTamanho ),.T. ) )
							SE1->( DbSkip(-1) )

							If SE1->( Bof() ) .Or. SE1->E1_FILIAL+SE1->E1_PREFIXO != xFilial("SE1")+cSerie
								nNum := 1
							Else
								nNum := Val(SE1->E1_NUM) + 1
							EndIf

							cNum := StrZero(nNum,nTamanho,0)

							SE1->( DbSetOrder(nOrd) )

						Case cAlias == "CPR"
							lCampo := .f.
							cProva	 := GetMv("MV_PROVA")
							aArquivos := DIRECTORY(cProva+"SP*.*")
							If Len(aArquivos) == 0
								cNum := "0001"
							Else
								aArquivos:=ASORT(aArquivos,,, { | x ,y| x[1] < y[1] } )
								cNum := StrZero(Val(Substr(aArquivos[Len(aArquivos)][1],5,4))+1,4)
							EndIf
							nTamanho := 4
						Case cAlias == "_CT"    //Numeador do CTK
							lCampo := .f.
							nRec := SM0->(Recno())
							nOrd := CTK->(IndexOrd())
							nRecno := CTK->(Recno())
							SM0->(dbSeek(cEmpAnt))
							cNum := " "
							While !SM0->(Eof()) .and. SM0->M0_CODIGO == cEmpAnt
								cFilTrb := xFilial("CTK")
								dbSelectArea("CTK")
								dbSetOrder(1)
								dbSeek(cFilTrb+"zzzzzzzzzz",.t.)
								dbSkip(-1)
								IF CTK_FILIAL != cFilTrb .and. Empty(cNum)
									cNum := "0000000001"
								ElseIF cNum <= CTK->CTK_SEQUEN
									cNum := SOMA1(CTK_SEQUEN)
								Endif
								nTamanho := 10
								IF Empty(cFilTrb)
									Exit
								Endif
								SM0->(dbSkip())
							End
							SM0->(dbGoto(nRec))
							CTK->(dbSetOrder(nOrd))
							CTK->(dbGoto(nRecno))
						Case cAlias == "TRB"
							lCampo := .f.
							cNum := "00001"
							nTamanho := 5
						Case cAlias == "SSC"
							cCampo := "SC_VIAGEM"
						Case cAlias == "SS2"
							cCampo := "S2_CODIGO"
						Case cAlias == "ACF"
							cCampo := "ACF_CODIGO"
						Case cAlias == "SUA"
							cCampo := "UA_NUM"
						Case cAlias == "SUC"
							cCampo := "UC_CODIGO"
						Case cAlias == "SY6"
							cCampo := "Y6_CODLEIT"
						Case cAlias == "SY4"
							cCampo := "Y4_CODEMP"
						Case cAlias == "SY8"
							cCampo := "Y8_CODREV"
						Case cAlias == "SYA"
							cCampo := "YA_CODPECA"
						Case cAlias == "SYE"
							cCampo := "YE_CODPEnd"
						Case cAlias == "SYR"
							cCampo := "YR_CODHIST"
						Case cAlias == "SYI"
							cCampo := "YI_CODAL"
						Case cAlias == "SYC"
							cCampo := "YC_CODPLAN"
						Case cAlias == "SGJ"         //GUTEMBERG
							cCampo := "GJ_FICHA"
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Arquivos do modulo de Administracao de Oficina e Veiculos	  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						Case cAlias == "SO8"
							cCampo := "O8_NUM"
						Case cAlias == "SO1"
							cCampo := "O1_CODIGO"
						Case cAlias == "SO2"
							cCampo := "O2_CODIGO"
						Case cAlias == "SO3"
							cCampo := "O3_CODIGO"
						Case cAlias == "SO5"
							cCampo := "O5_CODIGO"
						Case cAlias == "SV1"
							cCampo := "V1_CODIGO"
						Case cAlias == "CE5"
							cCampo := "CE5_CODIGO"
						Case cAlias == "CF8"
							cCampo := "CF8_CODIGO"
						Case cAlias == "CCE"
							cCampo := "CCE_COD"
						Case cAlias == "SE5"
							//------------------------------------------------------------
							// E5_PROCTRA será sempre incrementado independente de filial.
							//------------------------------------------------------------
							If ( cCpoSX8 == "E5_PROCTRA" )
								lCampo 	 	:= .F.
								nTamanho	:= Len( SE5->E5_PROCTRA )
								#IFDEF TOP
									aArea_SE5 := GetArea()
									cAliasSE5 	:= GetNextAlias()

									//--------------------------------------------
									// Recupera o MAX do campo.
									//--------------------------------------------
									cQuery := " SELECT MAX(E5_PROCTRA) E5_PROCTRA "
									cQuery += " FROM "
									cQuery += RetSqlName("SE5")
									cQuery += " WHERE "
									cQuery += " D_E_L_E_T_ = '' "

									DBUseArea( .T., "TOPCONN", TcGenQry(,, ChangeQuery( cQuery ) ), cAliasSE5, .T., .T. )

									//--------------------------------------------
									// Incrementa 1 ao valor do campo.
									//--------------------------------------------
									cNum := (cAliasSE5)->E5_PROCTRA
									cNum := Soma1( cNum )

									(cAliasSE5)->( DBCloseArea() )
									RestArea(aArea_SE5)
								#ELSE
									nTamSeq	:= TamSX3("E5_PROCTRA")[1]
									cNum 	:= StrZero(1,nTamSeq)
									dbSelectArea("SE5")
									cFilterSE5:= SE5->(DBFilter())
									SE5->(DBSetOrder(1)) // E5_FILIAL+DTOS(E5_DATA)+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ
									SE5->(DBSetFilter({|| !Empty(E5_PROCTRA)}, "!Empty(E5_PROCTRA)"))

									// Pega o proximo numero disponivel
									SE5->(DBGoTop())
									cNum := If(SE5->(Eof()), cNum, E5_PROCTRA)
									While !SE5->(Eof())
										If (E5_PROCTRA <> cNum) .and. MayIUseCode(cNum+cEmpAnt)
											Exit
										Else
											While !SE5->(Eof()) .and. (E5_PROCTRA == cNum)
												SE5->(DBSKIP())
											EndDo
											cNum := Soma1(cNum,nTamSeq)
										EndIf
									EndDo
									If !Empty(cFilterSE5)
										SE5->(DBSetFilter({|| &cFilterSE5}, cFilterSE5))
									Else
										SE5->(DBClearFilter())
									Endif

								#ENDIF

							EndIf
						EndCase
						If cCpoSX8 != Nil
							cCampo := cCpoSX8
						EndIf

						If lCampo
							cFilCpo := PrefixoCpo(cAlias)+"_FILIAL"
							DbSelectArea("SX3")
							DbSetOrder(2)
							DbSeek(cCampo)
							DbSetOrder(1)
							DbSelectArea(cAlias)
							nRecno := Recno()
							nOrdem := IndexOrd()
							DbSetOrder(nOrdSX8)
							cFilter := dbFilter()
							IF cAlias == "SA1"
								cMvUniao := Padr(GetMV("MV_UNIAO"),Len(SA1->A1_COD))
								cMvMunic := Padr(GetMV("MV_MUNIC"),Len(SA1->A1_COD))
								cMvRecEst:=	Padr(GetNewPar("MV_RECEST",""),Len(SA1->A1_COD))
								DbSelectArea(cAlias)
								Set Filter to ( A1_COD != cMvUniao .and. A1_COD != cMvMunic .And. A1_COD != cMvRecEst)
							ElseIf ( cAlias == 'SA2' )
								cMvUniao := Padr(GetMV("MV_UNIAO"),Len(SA2->A2_COD))
								cMvMunic := Padr(GetMV("MV_MUNIC"),Len(SA2->A2_COD))
								cMvRecEst:=	Padr(GetNewPar("MV_RECEST",""),Len(SA2->A2_COD))
								DbSelectArea(cAlias)
								SET FILTER TO ( A2_COD != cMvUniao .And. A2_COD != cMvMunic .And. A2_COD != cMvRecEst)
							ElseIF cAlias == "SB1"
								Set Filter to Subs(B1_COD,1,3) != "MOD"
							Else
								DbClearFilter()
							Endif
							DbGoTop()		// Nao tirar !!!!!!!! - Eh usado para resolver problema quando o SXE eh chamado apos o SetDummy
							DbSeek(xFilial(cAlias)+'z',.t.)
							DbSkip(-1)
							DbSetOrder(nOrdem)
							//-- Atualiza o conteúdo da filial
							If FindFunction("FWSizeFilial")
								nSizeFil := FWSizeFilial()
							EndIf
							If (Substr(&(cFilCpo),1,nSizeFil) != xFilial(cAlias)) .or. (LastRec()==0)
								cNum := Replicate("0",SX3->X3_TAMANHO)
							Else
								cNum := &(cCampo)
							EndIf
							DbGoTo(nRecno)
							If !Empty(cFilter)
								Set Filter to &cFilter
							Else
								DbClearFilter()
							EndIf
							cNum := Soma1(cNum)
							nTamanho := SX3->X3_TAMANHO

						EndIf

					EndIf

					IF lInServer
						Return cNum
					Endif

					nTrys := 0
					While !LockByName("SOSXE"+cAlias)
						Inkey(3)
						nTrys++
						If nTrys > 20
							FINAL("PROBS.CRIASXE")
						EndIf
					End

					DbSelectArea("SXE")   //Garantir que nao existe o Registro
					DbGoTop()
					lFound := .f.

					While !Eof()
						If XE_FILIAL+XE_ALIAS == cAliasSX8+cAlias
							lFound := .t.
							Exit
						EndIf
						DbSkip()
					End

					If !lFound
						While lNetErr
							dbAppEnd(.f.)
							lNetErr := NetErr()
							nTimes ++
							If nTimes > 20
								If NetCancel()
									Final( oemtoansi(STR0021) ) //"Problema de GRAVACAO NO SX8"
								Else
									nTimes := 0
								EndIf
							EndIf
							If ( lNetErr )
								Inkey( nTimes/24 )
							EndIf
						End
						MSRLock(Recno())
						Replace XE_ALIAS with cAlias, XE_TAMANHO with nTamanho,XE_FILIAL with cAliasSx8
						Replace XE_NUMERO with cNum
						dbCommit()
						MsRUnLock(Recno())
					EndIf
					UnLockByName("SOSXE"+cAlias)
					Return cNum

				Function PesqInit(aLista,oFather,nAtu,bGet,cVar)
					Local oGet
					Local nWidth
					Local nTop
					Local cPict
					Local cF3
					Local bSay

					nTop := PESQ_TOP+((nAtu-1)*PESQ_SKIP)
					If aLista[nAtu][2] == "D"
						cPict := "@D"
						nWidth := 40
					Else
						cPict := If(Empty(aLista[nAtu][6]),NIL,AllTrim(aLista[nAtu][6]))
						nWidth := CalcFieldSize(aLista[nAtu][2],aLista[nAtu][3],0,," ")
					EndIf

					If '"'$aLista[nAtu][5]
						bSay := &("{|| '"+OemToAnsi(aLista[nAtu][5])+"'}")
					Else
						bSay := &('{|| "'+OemToAnsi(aLista[nAtu][5])+'"}')
					EndIf

					nWidth += 10
					nWidth := Iif(nWidth > 130,130,nWidth)
					cF3 := If(Empty(aLista[nAtu][1]),NIL,aLista[nAtu][1])
					If Empty(cF3) .And. "_FILIAL" $ aLista[nAtu][7]
						cF3 := "SM0"
					EndIf
					TSay():New(nTop,10,bSay,oFather,,,.F.,.F.,.F.,.T.,,,(Len(Trim(aLista [nAtu][5]))*8),15,.F.,.F.,.F.,.F.,.F.)
					oGet := TGet():New(nTop,70,bGet,oFather,nWidth,10,cPict,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F.,cF3,cVar,,,,.T.)
					oGet:cSX1Hlp := aLista[nAtu][7]
					Return

				Function PesqList(cAlias,lSeeAll,aPesqVar,aReturn,cMsg)
					Local cSvAlias := Alias()
					Local nI := 1
					Local cChave, nAt1
					Local cF3 := ""
					Local nPos := 0
					Local nSx3Ord := SX3->(IndexOrd())
					Local nJ	:= 1
					Local aKey	:= {}
					Local lSixFilter	:= ( SIX->(FieldPos('SHOWPESQ')) > 0 )
					Local lOK := .T.
					Local lFilial

					DEFAULT lSeeALL := .f.

					aReturn := {}

					DbSelectArea("SIX")
					If DbSeek(cAlias)
						While !Eof() .And. SIX->INDICE == cAlias

							If ( lSixFilter ) .And. ( SIX->SHOWPESQ == 'N' )
								DbSkip()
								Loop
							EndIf

							nPos++
							Aadd(aReturn,{})
							Aadd(aPesqVar,{})

							nI 	:= 0
							aKey:= StrTokArr( Upper(SIX->CHAVE), '+' )
							nAt1:= 1
							lFilial := ( '_FILIAL+' $ SIX->CHAVE )

							For nJ := 1 To Len( aKey )

								cChave := AllTrim(aKey [nJ])

								If ( '(' $ cChave )

									nAt1 := At('(', cChave )
									While ( nAt1 > 0 )
										cChave	:= Subs( cChave, nAt1 + 1 )
										nAt1	:= At('(', cChave )
									End

									nAt1 := At(',', cChave )

									If ( nAt1 > 0 )
										cChave := Subs( cChave, 1, nAt1 - 1 )
									EndIf

									nAt1 := At(')', cChave )

									If ( nAt1 > 0 )
										cChave := Subs( cChave, 1, nAt1 - 1 )
									EndIf

								EndIf

								If ( '->' $ cChave )
									cChave := Subs(cChave,At('->',cChave)+2)
								EndIf

								If !( 'FILIAL' $ cChave) .or. lSeeALL
									nI++
									Aadd(aPesqVar[nPos],NIL)

									If ('_FILIAL|' $ cChave+"|" )
										cF3 := ""
									Else
										cF3 := PesqF3(SIX->F3,nI-If(lFilial .And. lSeeAll,1,0))
									EndIf
									DbSelectArea("SX3")
									DbSetOrder(2)
									If DbSeek(cChave)
										Aadd(aReturn[nPos],{cF3,SX3->X3_TIPO,SX3->X3_TAMANHO,SX3->X3_DECIMAL,X3Titulo(),SX3->X3_PICTURE,SX3->X3_CAMPO})
										If SX3->X3_TIPO == "D"
											aPesqVar[nPos][ni] := Ctod("")
										ElseIf SX3->X3_TIPO == "C"
											aPesqVar[nPos][ni] := Space(SX3->X3_TAMANHO)
										ElseIf SX3->X3_TIPO == "N"
											aPesqVar[nPos][ni] := 0
										EndIf
									Else
										lOK := .F.
										Exit
									EndIf
								EndIf
							Next

							If !lOK
								Exit
							EndIf

							DbSelectArea("SIX")
							DbSkip()
						End
					EndIf

					SX3->(DbSetOrder(nSx3Ord))
					DbSelectArea(cSvAlias)
					Return lOK

				Static Function PesqF3(cString,nPos)
					Local cReturn := ""
					Local i := 0, nAt

					If !Empty(cString)
						While ( i <= nPos )
							i++
							nAt := At("+",cString)
							If ( nAt == 0 )
								cReturn := Trim(cString)
								cString := ""
							Else
								cReturn := Trim(Subs(cString,1,nAt-1))
								cString := Subs(cString,nAt+1)
							EndIf

							If i == nPos
								If cReturn == "XXX"
									cReturn := ""
								EndIf
								Exit
							EndIf
						End
					EndIf
					Return cReturn

				Function PesqDetail(lDetail,oDlg,aScroll,oBigGet,nOrd,oPPreview)

					lDetail := !lDetail
					If lDetail
						If oPPreview <> NIL
							oPPreview:Hide()
						EndIf
						oBigGet:Hide()
						If !Empty(aScroll)
							aScroll[nOrd]:Show()
						EndIf
						If oDlg <> NIL
							oDlg:ReadClientCoors(.T.)
							oDlg:Move(oDlg:nTop,oDlg:nLeft,498,250,,.T.)
						EndIf
					Else
						If oPPreview <> NIL
							oPPreview:Hide()
						EndIf
						aScroll[nOrd]:Hide()
						oBigGet:Show()
						If oDlg <> NIL
							oDlg:ReadClientCoors(.T.)
							oDlg:Move(oDlg:nTop,oDlg:nLeft,498,127,,.T.)
						EndIf
					EndIf
					Return lDetail
					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Funcao    ³ MoedFin   ³Autor  ³ Bruno Sobieski       ³ Data 17.07.2000 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descricao ³Retorna a quantidade de moedas usadas pelo modulo financeiro³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Uso		 ³                   											   	  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function MoedFin
					Static  nCnt

					If ( nCnt == Nil )
						nCnt := 1
						While SM2->(FieldPos("M2_MOEDA"+Alltrim(Str(nCnt)))) <> 0
							nCnt++
						EndDo
					EndIf
					Return( nCnt - 1)

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Funcao    ³ ap5TObtv()³Autor  ³ Marcelo Abe          ³ Data 16.08.2000 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descricao ³Funcao que transforma o File.AP5(Btrieve) para File.DDF.
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descricao ³Programa chamado pelo menu do configurador
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³
					±±³          ³
					±±³          ³
					±±³          ³
					±±³          ³
					±±³          ³
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Uso		 ³                   											   	  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function ap5TObtv()
					Local aRet:={},i,cTodas := "",oDlg,oPath,cPath:=Space(120)
					Local oTables,aTables:={},oPathTab,cPathTab:=SPACE(120),cDest:=SPACE(120)
					Local oOk := LoadBitmap( GetResources(), "LBOK" )
					Local oNo := LoadBitmap( GetResources(), "LBNO" )
					Private cDir := ""

					//Pego as tabelas contidas no File.AP5
					aRet := BTVTables()
					aSort(aRet)

					DEFINE MSDIALOG oDlg TITLE STR0034 From 9,0 To 30,62  //"Gerar DDF Padrao""AgEndamento"
					@ 0.5, 0.9  SAY STR0035 of oDlg   //"Informe o diretorio Default dos Arquivos(*.dat)"
					@ 1.1, 0.9  MSGET oPath VAR cPath Picture "@!"  SIZE 150,10 OF oDlg
					For i:=1 To Len(aRet)
						aadd(aTables,{.T.,aRet[i],""})
					Next
					oPath:bLostFocus := { || cPathTab:=Ap5ToDDFDir(aTables,cPath,oTables),oPathTab:Refresh() }
					@ 2.5, 0.9  SAY STR0036 of oDlg   //"Escolha os Arquivos:"
					@ 42,07 LISTBOX oTables FIELDS HEADER " ",STR0037;  //"Arquivo"
					FIELDSIZES 14, 50 SIZE 70, 70 PIXEL OF oDlg
					oTables:bChange := { || cPathTab:=Ap5ToDDFBO(oTables,aTables),oPathTab:Refresh() }
					oTables:SetArray(aTables)
					oTables:bLine := {|| {Iif(aTables[oTables:nAt,1],oOK,oNo),aTables[oTables:nAt,2]} }
					oTables:bLDblClick := { |nRowPix, nColPix, nKeyFlags| If(oTables:nAtCol(nColPix)==1,(aTables[oTables:nAt,1] := !aTables[oTables:nAt,1],oTables:DrawSelect()),)}
					oTables:lhScroll := .F.

					@ 3.1, 11  SAY STR0038 of oDlg   //"Diretorio do Arquivo Selecionado"
					@ 3.7, 11  MSGET oPathTab VAR cPathTab SIZE 100,10 Picture "@!" OF oDlg
					oPathTab:bLostFocus := { || Ap5ToDDFTb(aTables,cPathTab,oTables) }

					@ 9.0, 0.9  SAY STR0039 of oDlg   //"Diretorio da Geracao deste DDF(Abaixo do RootPath)"
					@ 9.6, 0.9  MSGET oDest VAR cDest SIZE 150,10 Picture "@!" OF oDlg

					DEFINE SBUTTON FROM 145,90 TYPE 1 ENABLE OF oDlg ACTION ap5toddfOK(aTables,cDest) //Iif((lInclui==.T. .or. lAltera==.T.),Grava(lInclui),Iif(lDeleta,Deleta(),oDlg:End()))
					DEFINE SBUTTON FROM 145,120 TYPE 2 ENABLE OF oDlg ACTION (oDlg:End())

					ACTIVATE MSDIALOG oDlg CENTERED
					Return .T.

				Static Function ap5toddfOK(aTables,cDest)
					Local aRet1:={}
					Local i
					For i:=1 to Len(aTables)
						If aTables[i][1] = .T.
							aadd(aRet1,{aTables[i][2],aTables[i][3]})
						EndIf
					Next
					BTVCreateDDFs(aRet1,cDest)
					MessageBox(STR0040,"AP5",0) //"DDF Gerado"
					Return .T.

				Static Function Ap5ToDDFDir(aTables,cPath,oTables)
					Local i
					If cDir <> cPath
						For i:=1 to Len(aTables)
							If aTables[i][3] = cDir
								aTables[i][3] := cPath
							EndIf
						Next
						cDir := cPath
					EndIf
					Return AP5TODDFBO(oTables,aTables)

				Static Function AP5TODDFBO(oTables,aTables)
					Return aTables[oTables:nAt,3]

				Static Function Ap5ToDDFTb(aTables,cPathTab,oTables)
					aTables[oTables:nAt,3] := cPathTab
					Return .T.

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Funcao    ³AtuSalDup()³Autor  ³ Gilson da Silva      ³ Data 09.04.2001     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descricao ³Funcao que grava os campos no SA1 para avaliaçao de credito     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe   ³ AtuSalDup(cOper,nValor,nMoeda,cTipoDoc,nTaxa,dData)            ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³cOper = Operando para calcular os campos de avliaçao do credito ³±±
					±±³          ³nValor = Valor do campo que será calculado                      ³±±
					±±³          ³nMoeda = Moeda Forte do Cliente                                 ³±±
					±±³          ³cTipoDoc = Tipo de Titulo(Docto)                                ³±±
					±±³          ³nTaxa  = Taxa de conversão do Valor do campo para a Moeda Forte ³±±
					±±³          ³dData  = Data de conversão do Valor do cmapo para a Moeda Forte ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Uso		 ³  Generico           										   	  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AtuSalDup(cOper,nValor,nMoeda,cTipoDoc,nTaxa,dData,nCm)

					Local cCampo	:= ""									// Campo que terá o saldo atualizado
					Local cCampo1	:= ""									// Campo que terá o saldo atualizado
					Local cTpNaoAtu	:= Nil									// Tipos que nao atualizam saldo algum no cadastro de clientes
					Local cFilSF2	:= xFilial("SF2")        				// Filial da tabela SF2
					Local lE1MsFil	:= SE1->(FieldPos("E1_MSFIL") > 0)		// Se existe o campo E1_MSFIL
					Local aAreaSA1	:= SA1->(GetArea()) 					// Salva a area do SA1
					Local aAreaSF2	:= SF2->(GetArea())						// Salva a area do SF2
					Local lAtuSaldo	:= .T.

					nTaxa	:=  If(nTaxa	==	Nil,0,nTaxa)
					nMoeda	:=	If(nMoeda	==	Nil,1,nMoeda)
					dData	:=	If(dData	==	Nil,dDataBase,dData)

					Default nCm := 0

					If !cOper $ "+-="
						MsgAlert(STR0044)  //"Operando incorreto, Verifique se é uma atribuição, soma ou subtração"
						Return
					Endif

					If cTiposLC == Nil
						cTiposLC := ""
						cTiposLC := GetSESTipos({ || ES_SALDUP == "2"},"1")
						nMCusto		:=	Val(GetMV("MV_MCUSTO"))
					Endif

					// Tipos que nao atualizam nenhum dos saldos
					If cTpNaoAtu == Nil
						cTpNaoAtu := ""
						cTpNaoAtu := GetSESTipos({ || ES_SALDUP == "3"},"1")
					Endif

					If !(cTipoDoc $ cTpNaoAtu)
						If cTipoDoc $ cTiposLC
							cCampo	:=	"SA1->A1_SALFIN"
							cCampo1	:=	"SA1->A1_SALFINM"
						Else
							cCampo	:=	"SA1->A1_SALDUP"
							cCampo1	:=	"SA1->A1_SALDUPM"
						Endif
					Else
						Return
					Endif

					If SA1->(Eof())		// garantir que estah posicionado em algum registro valido
						SF2->(RestArea(aAreaSF2))
						SA1->(RestArea(aAreaSA1))
						Return
					Endif

					nMoedaF		:= If(SA1->A1_MOEDALC > 0,SA1->A1_MOEDALC,nMCusto)

					nValorMoe1	:= Round(xMoeda(nValor-nCm,nMoeda,1,dData,MsDecimais(1)+1,nTaxa),MsDecimais(1))
					nValorMoeF  := Round(xMoeda(nValor,nMoeda,nMoedaF,dData,MsDecimais(nMoedaF)+1,nTaxa),MsDecimais(nMoedaF))

					IF ExistBlock("MATATUSL")
						lAtuSaldo := ExecBlock("MATATUSL",.F.,.F.)
					Endif

					If lAtuSaldo
						RecLock("SA1",.F.)
						If cOper=="+"
							&cCampo. 	+= nValorMoe1
							&cCampo1. 	+= nValorMoeF
						ElseIf cOper=="-"
							&cCampo. 	-= nValorMoe1
							&cCampo1. 	-= nValorMoeF
						Elseif cOper="="
							&cCampo. 	:= nValorMoe1
							&cCampo1.	:= nValorMoeF
						EndIf
						MsUnlock()
					EndIf
					MsUnlock()

					Return

					/*
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
					±±ºPrograma  ³SAPVALID()ºAutor  ³Denis Martins       º Data ³  06/29/01   º±±
					±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
					±±ºDesc.     ³Valida conversao de unidades de medidas.                    º±±
					±±º          ³                                                            º±±
					±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
					±±ºUso       ³ X3_VALID do campo AP_PARA                                  º±±
					±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/
				Function SapValid()

					Local aArea		:=GetArea()
					Local lRet		:=.T.
					Local nRec		:=SAP->(RecNo())

					If M->AP_DE == M->AP_PARA
						MsgInfo(OemToAnsi(STR0045)) //"Unidades de medidas nao poderao ser iguais !"
						lRet:=.F.
					EndIf

					If lRet
						If !empty(M->AP_PARA)
							If SAP->(DbSeek(xFilial("SAP")+M->AP_DE+M->AP_PARA))
								If Inclui .Or. nRec <> SAP->(RecNo())
									SAP->(DbGoTo(nRec))
									Help(" ",1,"JAGRAVADO")
									lRet:=.F.
								EndIf
							EndIf
						EndIf
					Endif

					SAP->(DbGoTo(nRec))
					RestArea(aArea)

					Return lRet


					//------------Semaforo Pelo License Server
					Static ;
					Function GetLSNum(cAlias,cCpoSx8,cAliasSX8,nOrdem)
					Local cRet, nRet
					Local nSizeFil := 2

					DEFAULT __SpecialKey := Upper(GetSrvProfString("SpecialKey", ""))
					DEFAULT __aKeys := {}
					nOrdem := Iif(nOrdem == Nil,1,nOrdem)

					//-- Atualiza o conteúdo da filial
					If FindFunction("FWSizeFilial")
						nSizeFil := FWSizeFilial()
					EndIf
					If cAliasSX8 == Nil
						cAliasSx8  :=   PADR(xFilial(cAlias)+Upper(x2path(cAlias)),48+nSizeFil)
					Else
						cAliasSx8  :=   Upper(Padr(cAliasSx8,48+nSizeFil))
					EndIf

					cRet := LS_GetNum(__SpecialKey+cAliasSX8+cAlias)

					If ( Empty(cRet) )
						cRet := CriaSXE(cAlias, cCpoSX8,cAliasSx8,nOrdem,.t.)
						nRet := LS_CreateNum(__SpecialKey+cAliasSx8+cAlias, cRet)
						IF nRet < 0 .and. nRet != -12    // Chave Duplicada eh -12
							UserException(" Error On LS_CreateNum : "+Str(nRet,4,0))
						Endif
						cRet := LS_GetNum(__SpecialKey+cAliasSX8+cAlias)
						IF Empty(cRet)
							UserException(" Error On GetLSNUM : Empty")
						Endif
					EndIf

					Aadd(__aKeys,{ __SpecialKey+cAliasSX8+cAlias,cret, cAlias,cCpoSX8})
					__lSX8 := .t.



					Return cRet

					// ------------------------------------------------------

					Static ;
					Function RollbackLS()
					Local nLen, nRet

					DEFAULT __aKeys := {}
					DEFAULT nLen 	:= Len(__aKeys)

					IF nLen > 0
						nRet := LS_RollBackNum(__aKeys[nLen,1], __aKeys[nLen,2])
						//    -11: cChave+ cValue não encontrada.
						//    0: OK
						//   -1: No Connection (é melhor abortar ou vc trata no programa?)
						//   -6: Erro inesperado (é melhor abortar ou vc trata no programa?)
						//   (os 3 últimos códigos são iguais aos retornos do License Server)
						IF nRet < 0
							UserException(" Error On RollBackLS : "+Str(nRet,4,0))
						Endif
						__aKeys := aDel(__aKeys,nLen)
						__aKeys := aSize(__aKeys,nLen-1)
						__lSX8 := (Len(__aKeys) > 0)
					Endif
					Return Nil

					// ------------------------------------------------------

					Static ;
					Function ConFirmLS(lPosConf)
					Local cAlias := Alias()
					Local nLen, nRet
					Local cAliasSXE
					Local cSeqSXE

					DEFAULT lPosConf := .F.
					DEFAULT __aKeys := {}

					nLen 	:= Len(__aKeys)

					IF nLen > 0
						If lPosConf
							If __aKeys[nLen,3]<> Nil .And. __aKeys[nLen,4] <> Nil .And. Select(cAlias) > 0 .And. (cAlias)->(FieldPos(__aKeys[nLen,4])) > 0
								cAliasSXE := cAlias
								cSeqSXE := (cAliasSXE)->(&(__aKeys[nLen,4]))
							Else
								lPosConf := .F.
							EndIf
						EndIf
						If !lPosConf .Or. ( __aKeys[nLen,3] == cAliasSXE .And. __aKeys[nLen,2] == cSeqSXE )
							nRet := LS_ConfirmNum(__aKeys[nLen,1], __aKeys[nLen,2])
							//    -11: cChave+ cValue não encontrada.
							//    0: OK
							//   -1: No Connection (é melhor abortar ou vc trata no programa?)
							//   -6: Erro inesperado (é melhor abortar ou vc trata no programa?)
							//   (os 3 últimos códigos são iguais aos retornos do License Server)
							IF nRet < 0
								UserException(" Error On ConfirmLS : "+Str(nRet,4,0))
							Endif
						Else
							nRet := LS_RollBackNum(__aKeys[nLen,1], __aKeys[nLen,2])
							//    -11: cChave+ cValue não encontrada.
							//    0: OK
							//   -1: No Connection (é melhor abortar ou vc trata no programa?)
							//   -6: Erro inesperado (é melhor abortar ou vc trata no programa?)
							//   (os 3 últimos códigos são iguais aos retornos do License Server)
							IF nRet < 0
								UserException(" Error On RollBackLS : "+Str(nRet,4,0))
							Endif
						EndIf
						__aKeys := aDel(__aKeys,nLen)
						__aKeys := aSize(__aKeys,nLen-1)
						__lSX8 := (Len(__aKeys) > 0)
					Endif
					If ! Empty( cAlias )
						DbSelectArea(cAlias)
					EndIf
					Return Nil

					// ------------------------------------------------------

				Function GetSX8Len()
					Local nMax
					DEFAULT __aKeys := {}
					nMax := Max(Len(aSX8),Len(__aKeys))
					Return(nMax)

					// ------------------------------------------------------

				Function GetLSKeys()
					DEFAULT __aKeys := {}
					Return __aKeys

					/*/
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ParcImpost³ Autor ³ Claudio D. de Souza   ³ Data ³ 11/12/03 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Calcula a parcela de titulos de impostos, IR, PIS, COFINS  ³±±
					±±³          ³ e CSLL                                                     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ ParcImposto(cPrefixo,cNum,cTipoE2,lIRPFBaixa)              ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ FINANCEIRO/COMPRAS  												     ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function ParcImposto(cPrefixo,cNum,cTipoE2,lIRPFBaixa,cForLojISS,lIR)
					Local aArea	:= GetArea()
					Local aAreaSE2 := SE2->(GetArea())
					Local cParcela
					Local cAlias
					Local cChave := ""
					Local aTamParc := TamSx3("E2_PARCELA")
					Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
						!Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

					Local cSavFilter // Declarar variavel para evitar problemas quando existir filtro
					Default lIRPFBaixa := .F.
					Default cForLojISS := Pad(GetMv("MV_MUNIC"),Len(SA2->A2_COD))+PadR( "00", Len( SE2->E2_LOJA ), "0" )
					Default lIR := .F.

					If Select("__SE2") == 0
						dbSelectArea("SE2")
						cSavFilter := dbFilter()
						dbClearFilter()
						cAlias := "SE2"
					Else
						cAlias := "__SE2"
					EndIf
					cParcela := STRZERO(1,aTamParc[1])
					While ( .T. )
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ VerIfica se ja' ha' titulo de IMPOSTO com esta numera‡„o ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						DbSelectArea(cAlias)
						DbSetOrder(1)
						If cTipoE2 == "ISS"
							cChave := xFilial("SE2")+cPrefixo+cNum+cParcela+"ISS"+cForLojISS
						ElseIf lIR
							cChave := xFilial("SE2")+cPrefixo+cNum+cParcela+Iif(cTipoE2 $ MVPAGANT+"#"+MV_CPNEG .And. (!lIRPFBaixa),MVTXA,MVTAXA)+PadR(GetMv("MV_UNIAO"),6)
						Else
							cChave := xFilial("SE2")+cPrefixo+cNum+cParcela+Iif(cTipoE2 $ MVPAGANT+"#"+MV_CPNEG .And. (! lPCCBaixa .And. !lIRPFBaixa),MVTXA,MVTAXA)+PadR(GetMv("MV_UNIAO"),6)
						Endif

						If DbSeek(cChave)
							cParcela := Soma1( cParcela,,.T.)
							Loop
						EndIf
						Exit
					Enddo

					If cAlias=="SE2" .And. !Empty( cSavFilter )
						dbSelectArea("SE2")
						DbSetFilter({||&(cSavFilter)},cSavFilter)
					EndIf

					RestArea(aArea)
					RestArea(aAreaSE2)
					Return cParcela

				Function HasCTKSXE()
					Return .t.


					/*/
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³FGrvImpPcc³ Autor ³ Mauricio Pequim Junior³ Data ³ 18/10/04 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Efetua a gravacao dos titulos de impostos PIS, COFINS      ³±±
					±±³          ³ e CSLL                                                     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ GrvImpPcc(cPrefixo,cNum,cTipoE2)                           ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ FINANCEIRO/COMPRAS  												     ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function FGrvImpPcc(nPis,nCofins,nCsll,nRegSe2,lInclusao,lRtPICFCS,cSeq,cOrigem,nMoeda,cGeraDirf,nIrrf,nIss,;
						lRatImp,aRatSev,aRatSez)

					Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
						!Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

					Local cFornUni	:= ""
					Local cLojaUni	:= ""
					Local cPrefixo	:= ""
					Local cNum		:= ""
					Local cTipoE2	:= ""
					Local cParcela	:= ""
					Local dEmissao	:= CTOD("//")
					Local dVencto	:= CTOD("//")
					Local dVencRea	:= CTOD("//")
					Local dEmis1	:= CTOD("//")
					Local cCodRetPis := ""
					Local cCodRetCof := ""
					Local cCodRetCsl := ""
					Local cLojaImpos := PadR( "00", Len( SE2->E2_LOJA ), "0" )

					Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
						!Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) )

					Local cTpPessoa := SA2->A2_TIPO

					Local cCodRetIr := SE2->(If(FieldPos("E2_CODRET")>0,E2_CODRET,""))

					Local lCalcIssBx :=	IIf( ! Empty( SA2->( FieldPos( "A2_TIPO" ) ) ),SA2->A2_TIPO == "J", .F.) .And.;
						!Empty( SE5->( FieldPos( "E5_VRETISS" ) ) ) .and. !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. ;
						!Empty( SE2->( FieldPos( "E2_TRETISS" ) ) ) .and. GetNewPar("MV_MRETISS","1") == "2" //Retencao do ISS pela emissao (1) ou baixa (2)

					Local cMunIss    := GetMv("MV_MUNIC")
					Local cNome		:= "MUNICIPIO"

					Local nDia := 0
					Local nDiaUtil := 0
					Local aTamParc := TamSx3("E2_PARCELA")

					Local cForLojISS:= ""
					Local dVenISS   := CtoD("")
					Local aFeriados:=RetFeriados()

					Local lCodRtPCC := !Empty( SE2->( FieldPos( "E2_CODRPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_CODRCOF" ) ) ) .And. ;
						!Empty( SE2->( FieldPos( "E2_CODRCSL" ) ) )

					Local lTitPai := !Empty( SE2->( FieldPos( "E2_TITPAI" ) ) )
					Local cTitPai := SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
					Local lFilOrig := SE2->(FieldPos("E2_FILORIG")) > 0
					Local cFilOrig := SE2->E2_FILORIG

					Local lF050GER 	:= ExistBlock("F050GER")
					Local aRecImpos := {}

					Local nRefCof := 0
					Local nRefCsl := 0
					Local aCRets  := {}
					Local lE2Iss  := .F.
					Local lFina050 := IsInCallStack("FINA050")
					Local lVcAntIss 	:= (SuperGetMV("MV_ANTVISS",.T.,"2") == "1")  //Antecipa ou nao o vencimento do ISS em caso de vencimento em dia nao util


					Static lAtuSldNat
					DEFAULT cOrigem 	:= Space(8)
					DEFAULT lRtPICFCS:= .T.
					DEFAULT nMoeda := 1
					DEFAULT lInclusao := .T.
					DEFAULT cGeraDirf := "1"
					DEFAULT nIrrf := 0
					DEFAULT nIss := 0
					DEFAULT aRatSev := {}
					DEFAULT aRatSez := {}
					DEFAULT lAtuSldNat := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")

					dBaixa := If(Type("dBaixa") != "D",dDataBase,dBaixa)

					If IsInCallStack("fa530Processa")	 .And. !Empty(cCodRetIr)
						cGeraDirf := "1"
					Endif

					cForLojISS := Pad(cMunIss,Len(SA2->A2_COD))+cLojaImpos
					nRecnoFor := SA2->(RECNO())
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Transfere titulo de ISS para fornecedor de origem ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SE2->(FieldPos("E2_FORNISS")) > 0 .And. SE2->(FieldPos("E2_LOJAISS")) > 0
						If !Empty(SE2->E2_FORNISS) .And. !Empty(SE2->E2_LOJAISS)
							cForLojISS := SE2->E2_FORNISS+SE2->E2_LOJAISS

							aArea:=GetArea()
							DbSelectArea("SA2")
							DbSetOrder(1)
							If DbSeek(xFilial("SA2")+SE2->E2_FORNISS+SE2->E2_LOJAISS)
								cNome := SA2->A2_NREDUZ
							EndIF


							lE2Iss := .T.
						EndIf
					Endif

					If SE2->(FieldPos("E2_VENCISS")) > 0
						If !Empty(SE2->E2_VENCISS)
							dVenISS := SE2->E2_VENCISS
						EndIf
					EndIf


					SE2->(dbGoto(nRegSe2))

					If lPccBaixa
						// Caso nao exista os tres impostos, o codigo de retencao sera diferenciado
						// para cada imposto
						If	(nPis <= 0 .Or. nCofins <= 0 .Or. nCsll <= 0 )
							cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5979")
							cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5960")
							cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5987")
						Else
							// Se os 3 impostos juntos for maior que a media de retencao, o codigo sera o mesmo
							// para os tres.
							If nPis+nCofins+nCsll > ((SuperGetMV("MV_VRETPIS")+SuperGetMV("MV_VRETCOF")+SuperGetMV("MV_VRETCSL")) / 3)
								If lIRPFBaixa .and. cTpPessoa == "F" .And. !Empty(SE2->E2_CODRET)
									cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,SE2->E2_CODRET)
									cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,SE2->E2_CODRET)
									cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,SE2->E2_CODRET)
								Else
									cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5952")
									cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5952")
									cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5952")
								Endif
							Endif
							If ExistBlock("FINCDRET")
								aCRets :=ExecBlock("FINCDRET")
								If aScan(aCRets,cCodRetIr) > 0
									cCodRetPis := cCodRetCof := cCodRetCsl := cCodRetIr
								EndIf
							End
						Endif
					Else
						// Caso nao exista os tres impostos, o codigo de retencao sera diferenciado
						// para cada imposto
						If	(SE2->E2_PIS <= 0 .Or. SE2->E2_COFINS <= 0 .Or. SE2->E2_CSLL <= 0 )
							cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5979")
							cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5960")
							cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5987")
						Else
							// Se os 3 impostos juntos for maior que a media de retencao, o codigo sera o mesmo
							// para os tres.
							If SE2->(E2_PIS+E2_COFINS+E2_CSLL) > ((SuperGetMV("MV_VRETPIS")+SuperGetMV("MV_VRETCOF")+SuperGetMV("MV_VRETCSL")) / 3)
								cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5952")
								cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5952")
								cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5952")
							Endif
						Endif
						If ExistBlock("FINCDRET")
							aCRets :=ExecBlock("FINCDRET")
							If aScan(aCRets,cCodRetIr) > 0
								cCodRetPis := cCodRetCof := cCodRetCsl := cCodRetIr
							EndIf
						Endif
					Endif

					If !( SE2->E2_TIPO $ MVABATIM )
						If cPaisLoc=="BRA".And.;
								(!SE2->E2_NATUREZ $ SuperGetMV("MV_CSLL")	 .And. ;
								!SE2->E2_NATUREZ $ SuperGetMV("MV_PISNAT")  	 .And. ;
								!SE2->E2_NATUREZ $ SuperGetMV("MV_COFINS"))

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria o Fornecedor, caso nao exista 		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SA2")
							MsSeek(xFilial("SA2")+SuperGetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(SuperGetMV("MV_UNIAO")))+cLojaImpos)
							If ( EOF() )
								Reclock("SA2",.T.)
								SA2->A2_FILIAL := cFilial
								SA2->A2_COD 	:= SuperGetMV("MV_UNIAO")
								SA2->A2_LOJA	:= cLojaImpos
								SA2->A2_NOME	:= "UNIAO"
								SA2->A2_NREDUZ := "UNIAO"
								SA2->A2_BAIRRO := "."
								SA2->A2_MUN 	:= "."
								SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
								SA2->A2_End 	  := "."
								SA2->A2_TIPO	  := "J"
								MsUnlock()
								FKCOMMIT()
							EndIf

							cFornUni := SA2->A2_COD
							cLojaUni := SA2->A2_LOJA
							cPrefixo  := SE2->E2_PREFIXO
							cNum	  := SE2->E2_NUM
							cTipoE2   := SE2->E2_TIPO

							DbSelectArea( "SE2" )
							DbGoTo( nRegSe2 )

							If lInclusao
								// Se existirem os 3 impostos e o valor dos 3 for menor que a media dos valores
								// minimos de retencao, zera o imposto gerado.
								If SE2->E2_PIS > 0 .And. SE2->E2_COFINS > 0 .And. SE2->E2_CSLL > 0 .And.;
										SE2->(E2_PIS+E2_COFINS+E2_CSLL) <= ((SuperGetMV("MV_VRETPIS")+SuperGetMV("MV_VRETCOF")+SuperGetMV("MV_VRETCSL")) / 3)
									DbSelectArea("SE2")
									RecLock("SE2",.F.)
									SE2->E2_VALOR	+= SE2->E2_PIS
									SE2->E2_SALDO	+= SE2->E2_PIS
									SE2->E2_PIS		:= 0
									nPis				:= 0

									SE2->E2_VALOR	+= SE2->E2_COFINS
									SE2->E2_SALDO	+= SE2->E2_COFINS
									SE2->E2_COFINS	:= 0
									nCofins			:= 0

									SE2->E2_VALOR	+= SE2->E2_CSLL
									SE2->E2_SALDO	+= SE2->E2_CSLL
									SE2->E2_VLCRUZ	:= Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
									SE2->E2_CSLL	:= 0
									nCSLL				:= 0
								ElseIf (SE2->E2_PIS <= 0 .Or. SE2->E2_COFINS <= 0 .Or. SE2->E2_CSLL <= 0)
									// Caso nao exista um dos impostos, o codigo de retencao e separado para
									//	cada um deles, entao zera o imposto caso ele seja menor que o valor minimo.
									If ( SE2->E2_PIS <= GetMv("MV_VRETPIS") )
										DbSelectArea("SE2")
										RecLock("SE2",.F.)
										SE2->E2_VALOR	+= SE2->E2_PIS
										SE2->E2_SALDO	+= SE2->E2_PIS
										SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
										SE2->E2_PIS	:= 0
										nPis			:= 0
									EndIf
									If ( SE2->E2_COFINS <= GetMv("MV_VRETCOF") )
										DbSelectArea("SE2")
										RecLock("SE2",.F.)
										SE2->E2_VALOR	+= SE2->E2_COFINS
										SE2->E2_SALDO	+= SE2->E2_COFINS
										SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
										SE2->E2_COFINS	:= 0
										nCofins			:= 0
									EndIf
									If ( SE2->E2_CSLL <= GetMv("MV_VRETCSL") )
										DbSelectArea("SE2")
										RecLock("SE2",.F.)
										SE2->E2_VALOR	+= SE2->E2_CSLL
										SE2->E2_SALDO	+= SE2->E2_CSLL
										SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
										SE2->E2_CSLL	:= 0
										nCsll				:= 0
									EndIf
								EndIf
							Endif
							cParcSe2 := SE2->E2_PARCELA
							dEmissao := SE2->E2_EMISSAO
							dEmis1	:= SE2->E2_EMIS1
							dVencto	:= SE2->E2_VENCTO
							dVctoReal:= SE2->E2_VENCREA
							cLa		:= SE2->E2_LA

							//Se for tratado o imposto pela baixa
							If lPccBaixa .and. !lInclusao
								dEmissao	:= dBaixa
								dEmis1	:= dDataBase
								dVctoReal := dBaixa
							Endif

							//Verifica se aglutina os impostos em apenas um titulo
							If lRtPICFCS .and. SuperGetMv("MV_AG10925",.F.,"2") == "1" .and. cCodRetPis == "5952"
								nRefCof := nCofins //Armazena o valor do Cofins, para recompor os valores apos a geracao dos titulos
								nRefCsl := nCsll   //Armazena o valor do Csll, para recompor os valores apos a geracao dos titulos

								nPis += nCofins + nCsll
								nCsll := 0
								nCofins := 0
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera titulo de IRRF 					   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( nIrrf > 0 ) .and. lIRPFBaixa .and. !lFina050 .And. cOrigem<>"MATA100"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria o Fornecedor, caso nao exista 		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SA2")

								MsSeek(cFilial+GetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMV("MV_UNIAO")))+cLojaImpos)
								If ( EOF() )
									Reclock("SA2",.T.)
									SA2->A2_FILIAL := cFilial
									SA2->A2_COD 	:= GetMV("MV_UNIAO")
									SA2->A2_LOJA	:= cLojaImpos
									SA2->A2_NOME	:= "UNIAO"
									SA2->A2_NREDUZ := "UNIAO"
									SA2->A2_BAIRRO := "."
									SA2->A2_MUN 	:= "."
									SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
									SA2->A2_End 	:= "."
									SA2->A2_TIPO	:= "J"
									MsUnlock()
									FKCOMMIT()
								EndIf

								cNatureza		:= &(GetMv("MV_IRF"))
								cNatureza		:= cNatureza+Space(10-Len(cNatureza))
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza IRF caso nao exista		   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								If ( !DbSeek(cFilial+cNatureza) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								cParcela := ParcImposto(cPrefixo,cNum,cTipoE2,,,.F.)

								SA2->(DBGOTO(nRecnoFor))
								//Se for tratado o imposto pela baixa
								If lIRPFBaixa .and. !lInclusao
									dEmissao	:= dBaixa
									dEmis1		:= dDataBase
									dVctoReal 	:= dBaixa
								Endif
								dVencRea := F050VIMP("IRRF",dEmissao,dEmis1,dVctoReal,cCodRetIr,cTpPessoa,lIRPFBaixa) // Calcula o vencto do imposto

								DbSelectArea("SA2")
								MsSeek(cFilial+GetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMV("MV_UNIAO")))+cLojaImpos)
								RecLock("SE2",.T.)
								SE2->E2_FILIAL  := cFilial
								SE2->E2_PREFIXO := cPrefixo
								SE2->E2_NUM 	 := cNum
								SE2->E2_PARCELA := cParcela
								SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
								SE2->E2_EMISSAO := dEmissao
								SE2->E2_VALOR	 := nIrrf
								SE2->E2_VENCREA := dVencrea
								SE2->E2_SALDO	 := nIrrf
								SE2->E2_VENCTO  := dVencRea
								SE2->E2_VENCORI := dVencRea
								SE2->E2_MOEDA	 := nMoeda
								SE2->E2_EMIS1	 := dDataBase
								SE2->E2_FORNECE := GetMV("MV_UNIAO")
								SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
								SE2->E2_LOJA	 := SA2->A2_LOJA
								SE2->E2_NOMFOR  := SA2->A2_NREDUZ
								SE2->E2_ORIGEM  := UPPER(cOrigem)
								SE2->E2_NATUREZ := cNatureza
								SE2->E2_LA      := cLA			// Herda do principal
								If cPaisLoc == "BRA"
									SE2->E2_DIRF    := cGeraDirf
									SE2->E2_CODRET  := cCodRetIr
								Endif
								If lPccBaixa
									SE2->E2_SEQBX  := cSeq
								Endif
								If lRatImp
									SE2->E2_MULTNAT  := "1"
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava a filial de origem quando existir o campo no SE2            ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lFilOrig
									SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lTitPai
									SE2->E2_TITPAI := cTitPai
								EndIf
								MsUnlock()
								FKCOMMIT()

								AADD(aRecImpos,{"SE2",Recno()})

								If ExistBlock("F050IRF")
									Execblock("F050IRF",.F.,.F.,nRegSE2)
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava lançamento do imposto IRRF no SIGAPCO se a rotina foi chamada do contas a pagar ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If "FINA050" $ Upper(cOrigem)
									PCODetLan("000002","06","FINA050")
								ElseIf Upper(cOrigem) == "FINA240"
									PCODetLan("000023","06",Upper(cOrigem))
								EndIf

								// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
								If lRatImp
									// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
									GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
								Else
									If lAtuSldNat
										AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
									Endif
								Endif

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava parcela do IRF na parcela do titulo  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea( "SE2" )
								DbGoTo( nRegSe2 )
								Reclock( "SE2" , .F. )
								SE2->E2_PARCIR := cParcela
								If cPaisLoc=="BRA"
									SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de
									// imposto var para DIRF
								Endif
								MsUnlock()

							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera titulo de PIS                         ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If nPis > 0 .And. lRtPICFCS
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza PIS caso nao exista        ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								cNatureza := Pad(SuperGetMV("MV_PISNAT"),10)
								If ( ! DbSeek( cFilial + cNatureza ) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "PIS"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								dVencRea := F050VIMP("PIS",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto
								cParcela := ParcImposto(cPrefixo,cNum,cTipoE2,,,.F.)
								RecLock("SE2",.T.)
								SE2->E2_FILIAL  := cFilial
								SE2->E2_PREFIXO := cPrefixo
								SE2->E2_NUM     := cNum
								SE2->E2_PARCELA := cParcela
								SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
								SE2->E2_EMISSAO := dEmissao
								SE2->E2_EMIS1   := dDataBase
								SE2->E2_VALOR   := nPis
								SE2->E2_VENCTO  := dVencRea
								SE2->E2_SALDO   := nPis
								SE2->E2_VENCREA := dVencRea
								SE2->E2_VENCORI := dVencRea
								SE2->E2_FORNECE := cFornUni
								SE2->E2_LOJA    := cLojaUni
								SE2->E2_NOMFOR  := SA2->A2_NREDUZ
								SE2->E2_MOEDA   := nMoeda
								SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
								SE2->E2_ORIGEM  := Upper(cOrigem)
								SE2->E2_NATUREZ := cNatureza
								SE2->E2_LA      := cLa
								If cPaisLoc == "BRA"
									SE2->E2_DIRF    := cGeraDirf
									SE2->E2_CODRET  := cCodRetPis
								Endif
								If lPccBaixa
									SE2->E2_SEQBX  := cSeq
								Endif
								If lRatImp
									SE2->E2_MULTNAT  := "1"
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava a filial de origem quando existir o campo no SE2            ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lFilOrig
									SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lTitPai
									SE2->E2_TITPAI := cTitPai
								EndIf
								MsUnlock()
								FKCOMMIT()

								AADD(aRecImpos,{"SE2",Recno()})

								If ExistBlock("F050PIS")
									Execblock("F050PIS",.F.,.F.,nRegSE2)
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava lançamento do imposto PIS no SIGAPCO se a rotina foi chamada do contas a pagar ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Upper(ALLTRIM(cOrigem)) $ "FINA050#FINA080"
									PCODetLan("000002","10","FINA050")
								ElseIf Upper(cOrigem) == "FINA240"
									PCODetLan("000023","03",Upper(cOrigem))
								EndIf
								// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
								If lRatImp
									// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
									GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
								Else
									If lAtuSldNat
										AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, "+")
									Endif
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava parcela do PIS na parcela do titulo  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea( "SE2" )
								DbGoTo( nRegSe2 )
								Reclock( "SE2" , .F. )
								SE2->E2_PARCPIS := cParcela
								If cPaisLoc=="BRA"
									SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de
									// imposto var para DIRF
								Endif
								MsUnlock()

							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera titulo de COFINS                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If nCofins > 0 .And. lRtPICFCS
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza COFINS caso nao exista     ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								cNatureza := Pad(SuperGetMV("MV_COFINS"),10)
								If ( ! DbSeek( cFilial + cNatureza ) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := xFilial()
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "COFINS"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								dVencRea := F050VIMP("COFINS",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto
								cParcela := ParcImposto(cPrefixo,cNum,cTipoE2,,,.F.)
								RecLock("SE2",.T.)
								SE2->E2_FILIAL  := cFilial
								SE2->E2_PREFIXO := cPrefixo
								SE2->E2_NUM     := cNum
								SE2->E2_PARCELA := cParcela
								SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
								SE2->E2_EMISSAO := dEmissao
								SE2->E2_EMIS1   := dDataBase
								SE2->E2_VALOR   := nCofins
								SE2->E2_VENCTO  := dVencRea
								SE2->E2_SALDO   := nCofins
								SE2->E2_VENCREA := dVencRea
								SE2->E2_VENCORI := dVencRea
								SE2->E2_FORNECE := cFornUni
								SE2->E2_LOJA    := cLojaUni
								SE2->E2_NOMFOR  := SA2->A2_NREDUZ
								SE2->E2_MOEDA   := nMoeda
								SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
								SE2->E2_ORIGEM  := Upper(cOrigem)
								SE2->E2_NATUREZ := cNatureza
								SE2->E2_LA      := cLa
								If cPaisLoc == "BRA"
									SE2->E2_DIRF    := cGeraDirf
									SE2->E2_CODRET  := cCodRetCof
								Endif
								If lPccBaixa
									SE2->E2_SEQBX  := cSeq
								Endif
								If lRatImp
									SE2->E2_MULTNAT  := "1"
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava a filial de origem quando existir o campo no SE2            ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lFilOrig
									SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lTitPai
									SE2->E2_TITPAI := cTitPai
								EndIf

								MsUnlock()
								FKCOMMIT()

								AADD(aRecImpos,{"SE2",Recno()})

								If ExistBlock("F050COF")
									Execblock("F050COF",.F.,.F.,nRegSE2)
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava lançamento do imposto COFINS no SIGAPCO se a rotina foi chamada do contas a pagar ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Upper(ALLTRIM(cOrigem)) $ "FINA050#FINA080"
									PCODetLan("000002","11","FINA050")
								ElseIf Upper(cOrigem) == "FINA240"
									PCODetLan("000023","04",Upper(cOrigem))
								EndIf
								// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
								If lRatImp
									// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
									GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
								Else
									If lAtuSldNat
										AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, "+")
									Endif
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava parcela do COFINS na parcela do titulo ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea( "SE2" )
								DbGoTo( nRegSe2 )
								Reclock( "SE2" , .F. )
								SE2->E2_PARCCOF := cParcela
								If cPaisLoc=="BRA"
									SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de
									// imposto var para DIRF
								Endif
								MsUnlock()

							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera titulo de CSLL                        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If nCsll > 0 .And. lRtPICFCS
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Cria a natureza CSLL caso nao exista       ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea("SED")
								cNatureza  := Pad(SuperGetMV("MV_CSLL"),10)
								If ( ! DbSeek( cFilial + cNatureza ) )
									RecLock("SED",.T.)
									SED->ED_FILIAL  := cFilial
									SED->ED_CODIGO  := cNatureza
									SED->ED_CALCIRF := "N"
									SED->ED_CALCISS := "N"
									SED->ED_CALCINS := "N"
									SED->ED_CALCCSL := "N"
									SED->ED_CALCCOF := "N"
									SED->ED_CALCPIS := "N"
									SED->ED_DESCRIC := "CONTRIB.S/LUCRO LIQUIDO"
									SED->ED_TIPO	:= "2"
									MsUnlock()
									FKCOMMIT()
								EndIf
								dVencRea := F050VIMP("CSLL",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto
								cParcela := ParcImposto(cPrefixo,cNum,cTipoE2,,,.F.)
								RecLock("SE2",.T.)
								SE2->E2_FILIAL  := cFilial
								SE2->E2_PREFIXO := cPrefixo
								SE2->E2_NUM     := cNum
								SE2->E2_PARCELA := cParcela
								SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
								SE2->E2_EMISSAO := dEmissao
								SE2->E2_EMIS1   := dDataBase
								SE2->E2_VALOR   := nCsll
								SE2->E2_VENCTO  := dVencRea
								SE2->E2_SALDO   := nCsll
								SE2->E2_VENCREA := dVencRea
								SE2->E2_VENCORI := dVencRea
								SE2->E2_FORNECE := cFornUni
								SE2->E2_LOJA    := cLojaUni
								SE2->E2_NOMFOR  := SA2->A2_NREDUZ
								SE2->E2_MOEDA   := nMoeda
								SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
								SE2->E2_ORIGEM  := Upper(cOrigem)
								SE2->E2_NATUREZ := cNatureza
								SE2->E2_LA      := cLa
								If cPaisLoc == "BRA"
									SE2->E2_DIRF    := cGeraDirf
									SE2->E2_CODRET  := cCodRetCsl
								Endif
								If lPccBaixa
									SE2->E2_SEQBX  := cSeq
								Endif
								If lRatImp
									SE2->E2_MULTNAT  := "1"
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava a filial de origem quando existir o campo no SE2            ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lFilOrig
									SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lTitPai
									SE2->E2_TITPAI := cTitPai
								EndIf

								MsUnlock()
								FKCOMMIT()

								AADD(aRecImpos,{"SE2",Recno()})

								If ExistBlock("F050CSL")
									Execblock("F050CSL",.F.,.F.,nRegSE2)
								EndIf

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava lançamento do imposto CSLL no SIGAPCO se a rotina foi chamada do contas a pagar ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Upper(ALLTRIM(cOrigem)) $ "FINA050#FINA080"
									PCODetLan("000002","12","FINA050")
								ElseIf Upper(cOrigem) == "FINA240"
									PCODetLan("000023","05",Upper(cOrigem))
								EndIf
								// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
								If lRatImp
									// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
									GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
								Else
									If lAtuSldNat
										AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, "+")
									Endif
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Grava parcela do CSLL na parcela do titulo   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								DbSelectArea( "SE2" )
								DbGoTo( nRegSe2 )
								Reclock( "SE2" , .F. )
								SE2->E2_PARCSLL := cParcela
								If cPaisLoc=="BRA"
									SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de
									// imposto var para DIRF
								Endif
								MsUnlock()

							EndIf  // cPaisLoc

							//Refaz os valores de PIS/COFINS/CSLL, quando aglutinados em um unico TX.
							If SuperGetMv("MV_AG10925",.F.,"2") == "1"
								nPis -= nRefCof + nRefCsl
								nCsll := nRefCsl
								nCofins := nRefCof
							Endif

						EndIf
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera titulo de ISS - Baixa					  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nIss > 0 ) .and. lCalcIssBx

						DbSelectArea( "SE2" )
						DbGoTo( nRegSe2 )

						DbSelectArea("SA2")
						DbSetOrder(1)
						DbSeek(xFilial(SE2->E2_FORNECE+SE2->E2_LOJA))
						If SA2->( FieldPos( "A2_MUNIC" ) ) > 0 .And. !Empty( SA2->A2_MUNIC )
							cMunISS := SA2->A2_MUNIC
						Else
							cMunIss := SuperGetMV("MV_MUNIC")
							If AliasInDic( "FIM" ) .AND. !Empty( SE2->E2_CODISS )
								DbSelectArea( "FIM" )
								FIM->( DbSetOrder( 1 ) )
								If FIM->( DbSeek( xFilial( "FIM" ) + SE2->E2_CODISS ) )
									cMunIss 	:= FIM->FIM_CODFOR
									cLojaImpos	:= FIM->FIM_FORLOJ
									cNome	+= "-" + AllTrim( FIM->FIM_MUN )
								EndIf
							EndIf

							If !lE2Iss
								cForLojISS := Pad( cMunIss, Len( SA2->A2_COD ) ) + cLojaImpos
							Endif

						EndIf

						DbSelectArea( "SE2" )

						cParcSe2 := SE2->E2_PARCELA
						dEmissao := dBaixa
						dEmis1	:= dBaixa
						dVencto	:= dBaixa
						dVctoReal:= dBaixa
						cLa		:= SE2->E2_LA

						DbSelectArea("SA2")
						DbSeek(cFilial+cMunIss+Space(Len(A2_COD)-Len(cMunIss))+cLojaImpos)
						If ( EOF() )
							Reclock("SA2",.T.)
							SA2->A2_FILIAL := cFilial
							SA2->A2_COD 	:= cMunIss
							SA2->A2_LOJA	:= cLojaImpos
							SA2->A2_NOME	:= "MUNICIPIO"
							SA2->A2_NREDUZ := "MUNICIPIO"
							SA2->A2_BAIRRO := "."
							SA2->A2_MUN 	:= "."
							SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
							SA2->A2_End 	:= "."
							MsUnlock()
							FKCOMMIT()
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Cria a natureza ISS caso nao exista		  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						cNatureza	:= &(SuperGetMV("MV_ISS"))
						cNatureza	:= cNatureza+Space(10-Len(cNatureza))
						DbSelectArea("SED")
						If ( ! DbSeek( cFilial + cNatureza ) )
							RecLock("SED",.T.)
							SED->ED_FILIAL  := cFilial
							SED->ED_CODIGO  := cNatureza
							SED->ED_CALCIRF := "N"
							SED->ED_CALCISS := "N"
							SED->ED_CALCINS := "N"
							SED->ED_CALCCSL := "N"
							SED->ED_CALCCOF := "N"
							SED->ED_CALCPIS := "N"
							SED->ED_DESCRIC := "IMPOSTO SOBRE SERVICOS"
							SED->ED_TIPO	:= "2"
							MsUnlock()
							FKCOMMIT()
						EndIf

						//Calcula parcela do imposto
						cParcela := STRZERO(1,aTamParc[1])
						cParcela := ParcImposto(cPrefixo,cNum,"ISS",lIRPFBaixa,cForLojISS,.F.)

						If Empty(dVenISS)
							Do Case
							Case GetNewPar("MV_VENCISS","E")=="E"
								dVenISS := dEmissao
								dVenISS += 28
								If ( Month(dVenISS) == Month(dEmissao) )
									dVenISS := dVenISS+28
								EndIf
								nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
								dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
								dVenISS := DataValida(dVenISS,!lVcAntIss)
							Case GetNewPar("MV_VENCISS","E")=="Q" //Ultimo dia util da quinzena subsequente a dEmissao
								If Day(dEmissao) <= 15
									dVenISS	:= LastDay(dEmissao)
									dVenISS := DataValida(dVenISS,!lVcAntIss)
								Else
									dVenISS := DataValida((LastDay(dEmissao)+1)+14,!lVcAntIss)
								EndIf
							Case GetNewPar("MV_VENCISS","E")=="U" //Ultimo dia util do mes subsequente da dEmissao
								dVenISS := DataValida(LastDay(LastDay(dEmissao)+1),!lVcAntIss)
							Case GetNewPar("MV_VENCISS","E")=="D"
								dVenISS := (LastDay(dEmissao)+1)
								nDiaUtil:= SuperGetMv("MV_DIAISS")
								For nDia := 1 To nDiaUtil-1
									If !(dVenISS == DataValida(dVenISS))
										dVenISS := DataValida(dVenISS,!lVcAntIss)
										Exit
									EndIf
									dVenISS+=1
								Next nDia
							Case GetNewPar("MV_VENCISS","E")=="F" //Qtd de dia do parametro MV_DIAISS apos o fechamento da quinzena.
								If Day(dEmissao) <= 15
									dVenISS := CtoD("15"+SUBSTR(DtoC(dEmissao),3,Len(DtoC(dEmissao))))+SuperGetMv("MV_DIAISS")
								Else
									dVenISS := LastDay(dEmissao)+SuperGetMv("MV_DIAISS")
								EndIf
								dVenISS := DataValida(dVenISS,!lVcAntIss)
							OtherWise
								dVenISS := dVencto
								dVenISS += 28
								If ( Month(dVenISS) == Month(dVencto) )
									dVenISS := dVenISS+28
								EndIf
								nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
								dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
								dVenISS := DataValida(dVenISS,!lVcAntIss)
							EndCase
						EndIf

						RecLock("SE2",.T.)
						SE2->E2_FILIAL  := cFilial
						SE2->E2_PREFIXO := cPrefixo
						SE2->E2_NUM 	 := cNum
						SE2->E2_PARCELA := cParcela
						SE2->E2_TIPO	 := MVISS
						SE2->E2_EMISSAO := dEmissao
						SE2->E2_EMIS1	 := dDataBase
						SE2->E2_VALOR	 := nIss
						SE2->E2_VENCTO  := dVenISS
						SE2->E2_SALDO	 := nIss
						SE2->E2_VENCREA := dVenISS
						SE2->E2_VENCORI := dVenISS
						SE2->E2_FORNECE := Left(cForLojISS,Len(SE2->E2_FORNECE))
						SE2->E2_LOJA    := Right(cForLojISS,Len(SE2->E2_LOJA))
						SE2->E2_NOMFOR  := cNome
						SE2->E2_MOEDA	 := nMoeda
						SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
						SE2->E2_ORIGEM  := cOrigem
						SE2->E2_NATUREZ := cNatureza
						SE2->E2_LA      := cLA			// Herda do principal
						SE2->E2_SEQBX	 := cSeq
						If lRatImp
							SE2->E2_MULTNAT  := "1"
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava a filial de origem quando existir o campo no SE2            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lFilOrig
							SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lTitPai
							SE2->E2_TITPAI := cTitPai
						EndIf

						MsUnlock()
						FKCOMMIT()

						AADD(aRecImpos,{"SE2",Recno()})

						If ExistBlock("F050ISS")
							Execblock("F050ISS",.F.,.F.,nRegSE2)
						EndIf
						// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
						If lRatImp
							// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
							GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
						Else
							If lAtuSldNat
								AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, "+")
							Endif
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava parcela do IRF na parcela do titulo  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						DbSelectArea( "SE2" )
						DbGoTo( nRegSe2 )
						Reclock( "SE2" , .F. )
						SE2->E2_PARCISS := cParcela
						MsUnlock()

					EndIf

					//Ponto se entrada para gravacoes genericas a todos os titulos de impostos
					If lF050GER
						ExecBlock("F050GER",.F.,.F.,aRecImpos)
					Endif

					Return
					/*/
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³GrvSevSezImp³ Autor ³ Claudio Donizete Souza³ Data ³ 15/03/06 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Efetua a gravacao das multiplas naturezas/centro de custo    ³±±
					±±³          ³ dos titulos de impostos												    ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³GrvSevSezImp(aRatSev,aRatSez,cParcela,cTipo,cFornece,cLoja,   ³±±
					±±³          ³         		nValor)                                          ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ FINANCEIRO/COMPRAS  												       ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function GrvSevSezImp(aRatSev,aRatSez,cParcela, cTipo, cFornece, cLoja, nValor)
					Local nX
					Local nY
					Local nLenSev := Len(aRatSev)
					Local nLenSez := Len(aRatSez)
					Local aArea := GetArea()
					Local aAreaSev := SEV->(GetArea())
					Local aAreaSez := SEZ->(GetArea())
					Local nPosPrefixo
					Local nPosNum
					Local nPosNatureza
					Local nPosPerc
					Local nPosCCusto

					Static lAtuSldNat
					DEFAULT lAtuSldNat := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
					SEV->(DbSetOrder(1))
					SEZ->(DbSetOrder(1))

					For nX := 1 To nLenSev
						nPosPrefixo := Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_PREFIXO" } )
						nPosNum		:= Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_NUM" } )
						nPosNatureza:= Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_NATUREZ" } )
						nPosPerc		:= Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_PERC" } )
						If !SEV->(MsSeek(xFilial("SEV")+aRatSev[nX][nPosPrefixo][2]+aRatSev[nX][nPosNum][2]+cParcela+cTipo+cFornece+cLoja+aRatSev[nX][nPosNatureza][2]))
							SEV->(RecLock("SEV", .T.))
							Aeval(aRatSev[nX], {|e| SEV->(FieldPut(FieldPos(e[1]),e[2])) })  // Grava os campos comuns ao rateio do titulo principal
							// Altera os campos que nao sao comuns
							SEV->EV_PARCELA	:= cParcela
							SEV->EV_CLIFOR		:= cFornece
							SEV->EV_LOJA		:= cLoja
							SEV->EV_TIPO		:= cTipo
							SEV->EV_VALOR		:= nValor * aRatSev[nX][nPosPerc][2]	// Proporcionaliza o valor do impostos pelo percentual rateado
							SEV->EV_RECPAG		:= "P" // Grava a Carteira
							SEV->(MsUnlock())
							If lAtuSldNat
								AtuSldNat(SEV->EV_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SEV->EV_VALOR, SE2->E2_VLCRUZ * SEV->EV_PERC, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
							Endif
						Endif
					Next
					For nY := 1 To nLenSez
						nPosPrefixo := Ascan(aRatSez[1],{|e| e[1] == "EZ_PREFIXO" } )
						nPosNum		:= Ascan(aRatSez[1],{|e| e[1] == "EZ_NUM" } )
						nPosNatureza:= Ascan(aRatSez[1],{|e| e[1] == "EZ_NATUREZ" } )
						nPosPerc	:= Ascan(aRatSez[1],{|e| e[1] == "EZ_PERC" } )
						nPosCcusto	:= Ascan(aRatSez[1],{|e| e[1] == "EZ_CCUSTO" } )
						// Posiciona no SEV para obter o valor do imposto rateado por centro de custo
						If SEV->(MsSeek(xFilial("SEV")+aRatSez[nY][nPosPrefixo][2]+aRatSez[nY][nPosNum][2]+cParcela+cTipo+cFornece+cLoja+aRatSez[nY][nPosNatureza][2]))
							SEZ->(RecLock("SEZ", .T.))
							Aeval(aRatSez[nY], {|e| SEZ->(FieldPut(FieldPos(e[1]),e[2])) })  // Grava os campos comuns ao rateio do titulo principal
							// Altera os campos que nao sao comuns
							SEZ->EZ_PARCELA	:= cParcela
							SEZ->EZ_CLIFOR		:= cFornece
							SEZ->EZ_LOJA		:= cLoja
							SEZ->EZ_TIPO		:= cTipo
							SEZ->EZ_VALOR		:= SEV->EV_VALOR * aRatSez[nY][nPosPerc][2]
							SEZ->EZ_RECPAG		:= "P"  // Grava a Carteira
							SEV->(MsUnlock())
						Endif
					Next
					SEV->(RestArea(aAreaSev))
					SEZ->(RestArea(aAreaSez))
					RestArea(aArea)
					Return Nil

				Static Function MenuDef()
					Local aRotina

					aRotina := { { oemtoansi(STR0014),"AxPesqui", 0 , 1,,.F.},; // "Pesquisar"
					{ oemtoansi(STR0015),"AxCadVis", 0 , 2},; // "Visualizar"
					{ oemtoansi(STR0016),"AxCadInc", 0 , 3},; //"Incluir"
					{ oemtoansi(STR0017),"AxCadAlt", 0 , 4},; //"Alterar"
					{ oemtoansi(STR0018),"AxCadDel", 0 , 5}}  //"Excluir"
					Return aRotina
					//-----------------------------------------------

				Static Function AxPesqPreview(aRet,oPPreview,oList,aList)

					Local nI
					Local nJ
					Local aArray := {}
					Local aHList := {}
					Local aIndex := StrTokArr(IndexKey(),"+")
					aList := {}

					//-- Cria cabecalho do list
					For nI := 1 To Len(aIndex)
						Aadd( aHList, RetTitle(aIndex[nI]) )
					Next nI

					//-- Carrega as informacoes
					For nI := 1 To Len(aRet)
						DbGoto(aRet[nI])
						aArray := Array(Len(aIndex)+1)

						For nJ := 1 To Len(aIndex)
							aArray[nj] := &(aIndex[nJ])
						Next nJ
						aArray[Len(aArray)] := aRet[nI]

						Aadd( aList, aClone(aArray) )
					Next nI

					//-- List
					oList := TCBrowse():New(0,0,0,0,,,,oPPreview,,,,,,,,,,,,.T.,,.T.,,.F.,,)
					oList:SetArray(aList)
					oList:Align := CONTROL_ALIGN_ALLCLIENT

					For nI := 1 To Len(aHList)
						oList:AddColumn(TCColumn():New(aHList[nI],&("{ || aList[oList:nAt,"+Str(nI)+"] }"),,,,"LEFT",,.F.,.F.,,,,.F.,))
					Next nI

					oList:nAt := 1
					oList:Refresh()

					Return

					//-----------------------------------------------

				Static Function AxPreview(cAlias,lDetail,cCampo,aLista,aMyOrd,nOrd,lSeeAll,aPesqVar,oPPreview,oBigGet,aScroll,nOrd,oList,aList)

					Local lRet := .F.
					Local aRet := AxPesqSeek(cAlias,lDetail,cCampo,aLista,aMyOrd,nOrd,lSeeAll,aPesqVar,.T.)

					If Len(aRet) > 0
						lRet := .T.
						oPPreview:FreeChildren()

						oBigGet:Hide()
						aScroll[nOrd]:Hide()
						AxPesqPreview(aRet,@oPPreview,@oList,@aList)

						oPPreview:Refresh()
						oPPreview:Show()
					EndIf

					Return lRet

					//---------------------
				Static Function CalcMemoSize(nTam)
					Local nRet

					// Mantem o tamanho Default em char.
					nRet := If(nTam == 0 .or. nTam == 10,56,nTam)
					nRet := If(nRet > 80,80,nRet)
					If nRet > 50
						nRet := (308 * nRet / 100) +7
					Else
						nRet := (310 * nRet / 100)+8
					EndIf
					Return nRet

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Funcao    ³FGrvIRRF   ³Autor  ³João Gonçalves de Oliveira ³ Data ³18/08/2008³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Efetua gravação do titulo de imposto de renda e dados            ³±±
					±±³          ³relacionados a operacao                                          ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ExpC1 - Função que originou a gravação                           ³±±
					±±³          ³ExpD2 - Vencimento Real                                          ³±±
					±±³          ³ExpD3 - Emissão do título                                        ³±±
					±±³          ³ExpC4 - Prefixo do título                                        ³±±
					±±³          ³ExpC5 - Número do título                                         ³±±
					±±³          ³ExpC6 - Tipo do título                                           ³±±
					±±³          ³ExpN7 - Valor IRRF                                               ³±±
					±±³          ³ExpN8 - Moeda                                                    ³±±
					±±³          ³ExpC9 - Flag Lançamento Contábil                                 ³±±
					±±³          ³ExpCA - Flag Geração DIRF                                        ³±±
					±±³          ³ExpCB - Código de Retenção                                       ³±±
					±±³          ³ExpLC - Define se existe rateio                                  ³±±
					±±³          ³ExpAD - Vetor com rateio multiplas naturezas                     ³±±
					±±³          ³ExpAE - Vetor com rateio centros de custo                        ³±±
					±±³          ³ExpNF - Número de registro do documento que originou o imposto   ³±±
					±±³          ³ExpCG - Apelido do arquivo do documento que originou o imposto   ³±±
					±±³          ³ExpLH - Define se trata-se de IRPF na Baixa                      ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/

				Function FGrvIRRF(cOrigem,dVencRea,dEmissao,cPrefixo,cNum,cTipoE2,nIRRF,nMoeda,cLa,cGeraDIRF,cCodRetIr,lRatImp,;
						aRatSEV,aRatSEZ,nRegiOrig,cAlias,lIRPFBaixa,aRecImpos)

					Local aArea		:= GetArea()
					Local aAreaSE2	:= SE2->( GetArea() )
					Local aAreaSA2	:= SA2->( GetArea() )

					Local cNatureza	:= &(GetMv("MV_IRF"))
					Local cLojaImpos := PadR( "00", Len( SE2->E2_LOJA ), "0" )
					Local cTitPai    := SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
					Local lFilOrig   := SE2->(FieldPos("E2_FILORIG")) > 0
					Local cFilorig   := SE2->E2_FILORIG

					Static lAtuSldNat

					Default aRecImpos := {}
					Default cGeraDirf := "1"
					Default lAtuSldNat := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")

					If nIRRF == 0
						Return
					EndIf

					If IsInCallStack("fa530Processa")	 .And. !Empty(cCodRetIr)
						cGeraDirf := "1"
					Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria o Fornecedor, caso nao exista 		  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SA2")
					MsSeek(cFilial+GetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMV("MV_UNIAO")))+cLojaImpos)

					If ( EOF() )
						Reclock("SA2",.T.)
						SA2->A2_FILIAL := cFilial
						SA2->A2_COD 	:= GetMV("MV_UNIAO")
						SA2->A2_LOJA	:= cLojaImpos
						SA2->A2_NOME	:= "UNIAO"
						SA2->A2_NREDUZ := "UNIAO"
						SA2->A2_BAIRRO := "."
						SA2->A2_MUN 	:= "."
						SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
						SA2->A2_End 	:= "."
						SA2->A2_TIPO	:= "J"
						MsUnlock()
						FKCOMMIT()
					EndIf

					cNatureza := cNatureza + Space(10-Len(cNatureza))

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria a natureza IRF caso nao exista		   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SED")
					If ( !DbSeek(cFilial+cNatureza) )
						RecLock("SED",.T.)
						SED->ED_FILIAL  := cFilial
						SED->ED_CODIGO  := cNatureza
						SED->ED_CALCIRF := "N"
						SED->ED_CALCISS := "N"
						SED->ED_CALCINS := "N"
						SED->ED_CALCCSL := "N"
						SED->ED_CALCCOF := "N"
						SED->ED_CALCPIS := "N"
						SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
						SED->ED_TIPO	:= "2"
						MsUnlock()
						FKCOMMIT()
					EndIf

					cParcela := ParcImposto(cPrefixo,cNum,cTipoE2,lIRPFBaixa,,.T.)

					RecLock("SE2",.T.)
					SE2->E2_FILIAL  := cFilial
					SE2->E2_PREFIXO := cPrefixo
					SE2->E2_NUM 	:= cNum
					SE2->E2_PARCELA := cParcela
					SE2->E2_TIPO	:= Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG .And. ! lIRPFBaixa,MVTXA,MVTAXA)
					SE2->E2_EMISSAO := dEmissao
					SE2->E2_VALOR	:= nIrrf
					SE2->E2_VENCREA := dVencrea
					SE2->E2_SALDO	:= nIrrf
					SE2->E2_VENCTO  := dVencRea
					SE2->E2_VENCORI := dVencRea
					SE2->E2_MOEDA	:= If(cPaisLoc=="BRA",1,nMoeda)
					SE2->E2_EMIS1	:= dDataBase
					SE2->E2_FORNECE := GetMV("MV_UNIAO")
					SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
					SE2->E2_LOJA	:= SA2->A2_LOJA
					SE2->E2_NOMFOR  := SA2->A2_NREDUZ
					SE2->E2_ORIGEM  := cOrigem
					SE2->E2_NATUREZ := cNatureza
					SE2->E2_LA      := cLA			// Herda do principal

					If cPaisLoc == "BRA"
						SE2->E2_DIRF    := cGeraDirf
						SE2->E2_CODRET  := cCodRetIr
					Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava a filial de origem quando existir o campo no SE2            ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lFilOrig
						SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
					EndIf

					If SE2->(FieldPos("E2_TITPAI")) > 0
						SE2->E2_TITPAI := cTitPai
					EndIf

					MsUnlock()

					FKCOMMIT()

					AADD(aRecImpos,{"SE2",Recno()})

					If ExistBlock("F050IRF")
						Execblock("F050IRF",.F.,.F.,nRegiOrig)
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava lançamento do imposto IRRF no SIGAPCO se a rotina foi chamada do contas a pagar ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If "FINA050" $ cOrigem

						PCODetLan("000002","06","FINA050")

					EndIf

					// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
					If lRatImp .And. cAlias == "SE2"

						GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) // Grava SEV e SEZ dos impostos
					ElseIf cAlias == "SE2"
						If lAtuSldNat
							AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, "+")
						Endif
					Endif


					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava parcela do IRF na parcela do titulo  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If cAlias == "SE2"

						DbSelectArea( cAlias )
						DbGoTo( nRegiOrig )
						Reclock( "SE2" , .F. )
						SE2->E2_PARCIR := cParcela
						If cPaisLoc=="BRA"

							SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de
							// imposto vai para DIRF
						Endif
						MsUnlock()

					EndIf

					RestArea( aAreaSA2 )
					RestArea( aAreaSE2 )
					RestArea( aArea )
					Return


					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Funcao    ³FGrvINSS   ³Autor  ³Adrianne Furtado Andrade   ³ Data ³12/01/2009³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Efetua gravação do titulo de INSS                                ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ExpC1 - Prefixo do título de INSS que será gravado               ³±±
					±±³          ³ExpC2 - Numero do título de INSS que será gravado                ³±±
					±±³          ³ExpC3 - Parcela do título de INSS que será gravado               ³±±
					±±³          ³ExpC4 - Loja do fornecedor de INSS que será gravado (MV_FORINSS) ³±±
					±±³          ³ExpC5 - Rotina que originou a gravacao do título de INSS         ³±±
					±±³          ³ExpN6 - Moeda utilizada na gravação do título de INSS            ³±±
					±±³          ³ExpN7 - Recno da Natureza(SED) do tít original-gerador do imposto³±±
					±±³          ³ExpN8 - Recno do Titulo Original (SE2) - gerador do imposto      ³±±
					±±³          ³ExpD9 - Data de Emissao do título original - gerador do imposto  ³±±
					±±³          ³ExpDA - Emis1 do título original - gerador do imposto            ³±±
					±±³          ³ExpDB - Vencimento real do título original - gerador do imposto  ³±±
					±±³          ³ExpNC - Valor do INSS já calculado - na inclusao do tit original ³±±
					±±³          ³ExpLE - Informa se há rateio                                     ³±±
					±±³          ³ExpAF - Array do Rateio por Natureza                             ³±±
					±±³          ³ExpAG - Array do Rateio por Centro de Custo                      ³±±
					±±³          ³ExpCH - E2_LA do título principal                                ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function FGrvINSS(cPrefixo,cNum,cParcela,cLojaImpos,cOrigem,nMoeda,nRegSED,nRegSE2,dEmissao,dEmis1,dVctoReal,nInss,;
						lRatImp,aRatSev,aRatSez,cGeraDirf,cCodRetIr,lSpbInUse,cModSpb,aRecImpos)
					Local aRecINSS 		:= {}
					Local aTamParc 		:= TamSx3("E2_PARCELA")
					Local cNatureza 	:= ""
					Local dVencRea
					Local lTCpsINSS		:= SE2->(FieldPos("E2_VRETINS")) > 0 .And. SE2->(FieldPos("E2_PRETINS")) > 0 .And.;
						SFQ->(FieldPos("FQ_TPIMP")) > 0
					Local cLa
					Local lTitPai 		:= !Empty( SE2->( FieldPos( "E2_TITPAI" ) ) )
					Local cTitPai		:= SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
					Local lFilOrig      := SE2->(FieldPos("E2_FILORIG")) > 0
					Local cFilOrig      := SE2->E2_FILORIG
					Local cTipo 		:= IIf(!Empty(SA2->A2_TIPO),SA2->A2_TIPO,"J")
					Local cTpTit		:= SE2->E2_TIPO
					Local aArea		:= GetArea()
					Local aAreaSE2	:= SE2->( GetArea() )
					Local aAreaSA2	:= SA2->( GetArea() )

					Default lSpbInUse := .F.
					Default cModSpb   := ""
					Default aRecImpos := {}

					//Posiciona no SED, no SE2 e no SA2
					DbGoTo(nRegSe2)
					SED->(DBSeek(xFilial("SED")+SE2->E2_NATUREZ))
					SA2->(DbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
					If SA2->A2_TIPO == "J"
						cGeraDirf  := "2"
						cCodRetIr  := ""
					EndIf
					If lTCpsINSS
						VerInssCalc(SA2->A2_COD,SA2->A2_LOJA,SA2->A2_NREDUZ,dEmissao,dVctoReal,@aRecINSS)
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria o Fornecedor, caso nao exista 		  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SA2")
					If !(MsSeek(xFilial()+GetMv("MV_FORINSS")+Space(Len(A2_COD)-Len(GetMv("MV_FORINSS")))+cLojaImpos))
						Reclock("SA2",.T.)
						SA2->A2_FILIAL	:= xFilial("SA2")
						SA2->A2_COD		:= GetMv("MV_FORINSS")
						SA2->A2_LOJA	:= If(Alltrim(cLojaImpos)<>"",cLojaImpos,PadR("00",TamSX3("A2_LOJA")[1],"0"))
						SA2->A2_NOME	:= "Instituto Nacional de Previdencia Social"
						SA2->A2_NREDUZ	:= "INPS"
						SA2->A2_BAIRRO	:= "."
						SA2->A2_MUN		:= "."
						SA2->A2_EST		:= SuperGetMv("MV_ESTADO")
						SA2->A2_END		:= "."
						SA2->A2_TIPO	:= "J"
						MsUnlock()
						FKCOMMIT()
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria a natureza INSS caso nao exista		  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cNatureza	:= &(GetMv("MV_INSS"))
					cNatureza	:= cNatureza+Space(10-Len(cNatureza))
					DbSelectArea("SED")
					If !DbSeek(cFilial+cNatureza)
						RecLock("SED",.T.)
						SED->ED_FILIAL  := cFilial
						SED->ED_CODIGO  := cNatureza
						SED->ED_CALCIRF := "N"
						SED->ED_CALCISS := "N"
						SED->ED_CALCINS := "N"
						SED->ED_CALCCSL := "N"
						SED->ED_CALCCOF := "N"
						SED->ED_CALCPIS := "N"
						SED->ED_DESCRIC := "RETENCAO P/ SEGURIDADE SOCIAL"
						SED->ED_TIPO	:= "2"
						MsUnlock()
						FKCOMMIT()
					EndIf
					DbGoTo(nRegSED)

					cParcela := STRZERO(1,aTamParc[1])
					DbSelectArea("SE2")
					DbSetOrder(1)
					While .T.
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ VerIfica se ja' ha' titulo de INSS com esta numera‡„o ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (DbSeek(cFilial+cPrefixo+cNum+cParcela+If(SE2->E2_TIPO$MVPAGANT,"INA",MVINSS)+PadR(GetMv("MV_FORINSS"),6)))
							cParcela := Soma1( cParcela,,.t. )
							Loop
						EndIf
						Exit
					End

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava a parcela do INSS no titulo pai fazendo ³
					//³ a amarracao titulo x titulo INSS			  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbGoTo( nRegSe2 )
					Reclock( "SE2" , .F. )
					SE2->E2_PARCINS := cParcela
					If SE2->(FieldPos("E2_PRETINS"))>0
						SE2->E2_PRETINS := " " // PRET = " " - Retido nele mesmo.
					EndIf
					MsUnlock()
					cLa := SE2->E2_LA

					// Calcula o vencto do imposto
					dVencRea := F050VIMP("INSS",dEmissao,dEmis1,dVctoReal,,cTipo)

					RecLock("SE2",.T.)
					SE2->E2_FILIAL  := xFilial()
					SE2->E2_PREFIXO := cPrefixo
					SE2->E2_NUM 	 := cNum
					SE2->E2_PARCELA := cParcela
					SE2->E2_TIPO	 := IF(cTpTit$MVPAGANT .AND. SED->ED_RINSSPA == "1","INA",MVINSS)
					SE2->E2_EMISSAO := dEmissao
					SE2->E2_VALOR	 := nInss
					SE2->E2_VENCREA := dVencrea
					SE2->E2_SALDO	 := nInss
					SE2->E2_VENCTO  := dVencRea
					SE2->E2_VENCORI := dVencRea
					SE2->E2_MOEDA	 := If(cPaisLoc=="BRA",1,nMoeda)
					SE2->E2_EMIS1	 := dDataBase
					SE2->E2_FORNECE := GetMv("MV_FORINSS")
					SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
					SE2->E2_LOJA	 := SA2->A2_LOJA
					SE2->E2_NOMFOR  := SA2->A2_NREDUZ
					SE2->E2_ORIGEM  := cOrigem
					SE2->E2_NATUREZ := cNatureza
					SE2->E2_LA      := cLA			// Herda do principal
					If cPaisLoc == "BRA"
						SE2->E2_DIRF    := cGeraDirf
						SE2->E2_CODRET  := cCodRetIr
					Endif

					If lSpbInUse
						Replace	SE2->E2_MODSPB with cModSpb
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava a filial de origem quando existir o campo no SE2            ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lFilOrig
						SE2->E2_FILORIG := cFilorig //filial origem do titulo pai
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lTitPai
						SE2->E2_TITPAI := cTitPai
					EndIf

					MsUnlock()
					FKCOMMIT()

					AADD(aRecImpos,{"SE2",Recno()})

					If ExistBlock("F050INS")
						Execblock("F050INS",.F.,.F.,nRegSE2)
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava lançamento do imposto INSS no SIGAPCO se a rotina foi chamada do contas a pagar ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If "FINA050" $ cOrigem
						PCODetLan("000002","07","FINA050")
					EndIf
					// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
					If lRatImp
						// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
						GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR)
					Else
						If lAtuSldNat
							AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR, SE2->E2_VLCRUZ, If(SE2->E2_TIPO $ MVABATIM,"-","+"))
						Endif
					Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gravacao do SFQ 						   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lTCpsINSS
						FGrvSFQ("SE2",nRegSE2,aRecINSS, "INS")
					EndIf
					DbSelectArea( "SE2" )
					DbGoTo( nRegSE2 )
					Reclock( "SE2" , .F. )
					If cPaisLoc=="BRA"
						SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de  imposto vai para DIRF
					Endif
					MsUnlock()

					RestArea( aAreaSA2 )
					RestArea( aAreaSE2 )
					RestArea( aArea )

					Return

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Funcao    ³FGrvSFQ    ³Autor  ³Adrianne Furtado Andrade   ³ Data ³12/01/2009³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³Efetua gravação do relacionamento de impostos no SFQ             ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Parametros³ExpC1 - Tabela de relacionamento                                 ³±±
					±±³          ³ExpN2 - RECNO do registro que gerou o(s) imposto(s)              ³±±
					±±³          ³ExpA3 - Array com a lista de titulos relacionados ao impostos    ³±±
					±±³          		  retido.												   ³±±
					±±³          ³ExpC4 - Tipo do Imposto referente ao relacionamento, informar:   ³±±
					±±³                   "INS" : parar relacionamentos de INSS                    ³±±
					±±³                   "   " : parar relacionamentos de PIS COFINS e CSLL       ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function FGrvSFQ(cTabela,nRegOri,aListTit, cTipImp)
					Local cPrefOri
					Local cNumOri
					Local cParcOri
					Local cTipoOri
					Local cCfOri
					Local cLojaOri
					Local nX

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava parcela do INSS na parcela do titulo ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea( "SE2" )
					DbGoTo( nRegOri )
					cPrefOri  := SE2->E2_PREFIXO
					cNumOri   := SE2->E2_NUM
					cParcOri  := SE2->E2_PARCELA
					cTipoOri  := SE2->E2_TIPO
					cCfOri    := SE2->E2_FORNECE
					cLojaOri  := SE2->E2_LOJA

					For nX := 1 to Len(aListTit)

						SE2->(DbGoTo( aListTit[nX] ))
						Reclock( cTabela , .F. )
						SE2->E2_PRETINS := "2" // PRET = "2" - Retido na emissão em outro título.
						MsUnlock()

						If FindFunction("ALIASINDIC")
							If AliasIndic("SFQ")
								If nRegOri <> aListTit[nX]
									dbSelectArea("SFQ")
									RecLock("SFQ",.T.)
									SFQ->FQ_FILIAL  := xFilial("SFQ")
									SFQ->FQ_ENTORI  := cTabela
									SFQ->FQ_PREFORI := cPrefOri
									SFQ->FQ_NUMORI  := cNumOri
									SFQ->FQ_PARCORI := cParcOri
									SFQ->FQ_TIPOORI := cTipoOri
									SFQ->FQ_CFORI   := cCfOri
									SFQ->FQ_LOJAORI := cLojaOri

									//Grava a filial de destino caso o campo exista
									If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) )
										SFQ->FQ_FILDES			:=    SE2->E2_FILIAL
									EndIf
									SFQ->FQ_ENTDES  := cTabela
									SFQ->FQ_PREFDES := SE2->E2_PREFIXO
									SFQ->FQ_NUMDES  := SE2->E2_NUM
									SFQ->FQ_PARCDES := SE2->E2_PARCELA
									SFQ->FQ_TIPODES := SE2->E2_TIPO
									SFQ->FQ_CFDES   := SE2->E2_FORNECE
									SFQ->FQ_LOJADES := SE2->E2_LOJA

									SFQ->FQ_TPIMP	:= cTipImp //sempre deve gravar "INS" para INSS e "   " para PCC
									MsUnlock()
								Endif
							Endif
						Endif
					Next nX

					Return

					/*/
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³FGrvPccRec³ Autor ³ Mauricio Pequim Junior³ Data ³ 18/10/04 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Efetua a gravacao dos titulos de impostos PIS, COFINS      ³±±
					±±³          ³ e CSLL                                                     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ GrvPccRec(cPrefixo,cNum,cTipoE1)                           ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ FINANCEIRO/COMPRAS  												     ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function FGrvPccRec(nPis,nCofins,nCsll,nRegSe1,lInclusao,lRtPICFCS,cSeq,cOrigem,nMoeda)

					//Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
					Local lPccBxCr			:= If (FindFunction("FPccBxCr"),FPccBxCr(),.F.)
					Local cPrefixo	:= ""
					Local cNum		:= ""
					Local cParcela,dEmissao,dVencto,dVencRea,dEmis1
					Local lTitPai := !Empty( SE1->( FieldPos( "E1_TITPAI" ) ) )
					Local cTitPai := SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA)
					Local aArea	:= GetArea()

					DEFAULT cOrigem 	:= Space(8)
					DEFAULT lRtPICFCS:= .T.
					DEFAULT nMoeda := 1
					DEFAULT lInclusao := .T.

					dBaixa := If(Type("dBaixa") != "D",dDataBase,dBaixa)

					SE1->(dbGoto(nRegSe1))

					SA1->(dbSetOrder(1))
					SA1->(MsSeek(xFilial("SA1")+SE1->(E1_CLIENTE+E1_LOJA)))


					If cPaisLoc=="BRA".And. !( SE1->E1_TIPO $ MVABATIM+"/PIS#COF#CSL")

						cPrefixo		:= SE1->E1_PREFIXO
						cNum			:= SE1->E1_NUM
						cTipoE1		:= SE1->E1_TIPO
						cParcSe1		:= SE1->E1_PARCELA
						dEmissao		:= SE1->E1_EMISSAO
						dEmis1		:= SE1->E1_EMIS1
						dVencto		:= SE1->E1_VENCTO
						dVencRea		:= SE1->E1_VENCREA
						cLa			:= SE1->E1_LA
						cCLiente		:= SE1->E1_CLIENTE
						cLoja			:= SE1->E1_LOJA
						cNomCli		:= SE1->E1_NOMCLI

						//Se for tratado o imposto pela baixa
						If lPccBxCr .and. !lInclusao
							dEmissao	:= dBaixa
							dEmis1	:= dDataBase
							dVctoReal := dBaixa
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de PIS                         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nPis > 0 .And. lRtPICFCS
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza PIS caso nao exista        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SED")
							cNatureza := Pad(SuperGetMV("MV_PISNAT"),10)
							If ( ! DbSeek( cFilial + cNatureza ) )
								RecLock("SED",.T.)
								SED->ED_FILIAL  := cFilial
								SED->ED_CODIGO  := cNatureza
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := "PIS"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf

							cParcela := ParcImpRec(cPrefixo,cNum,"PIS")
							RecLock("SE1",.T.)
							SE1->E1_FILIAL  := cFilial
							SE1->E1_PREFIXO := cPrefixo
							SE1->E1_NUM     := cNum
							SE1->E1_PARCELA := cParcela
							SE1->E1_TIPO    := "PIS"
							SE1->E1_EMISSAO := dEmissao
							SE1->E1_EMIS1   := dDataBase
							SE1->E1_VALOR   := nPis
							SE1->E1_VENCTO  := dVencRea
							SE1->E1_VENCREA := dVencRea
							SE1->E1_VENCORI := dVencRea
							SE1->E1_CLIENTE := cCliente
							SE1->E1_LOJA    := cLoja
							SE1->E1_NOMCLI  := cNomCli
							SE1->E1_MOEDA   := nMoeda
							SE1->E1_VLCRUZ  := Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
							SE1->E1_ORIGEM  := Upper(cOrigem)
							SE1->E1_NATUREZ := cNatureza
							SE1->E1_LA      := cLa
							SE1->E1_SALDO   := 0 // nPis
							SE1->E1_STATUS  := "B"
							SE1->E1_BAIXA   := dDataBase

							If lPccBxCr
								SE1->E1_SEQBX  := cSeq
								SE1->E1_HIST	:= "Desconto - Pis"
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava a filial de origem quando existir o campo no SE2            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If SE1->(FieldPos("E1_FILORIG")) > 0
								SE1->E1_FILORIG := CriaVar("E1_FILORIG",.T.)
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lTitPai
								SE1->E1_TITPAI := cTitPai
							EndIf
							MsUnlock()
							FKCOMMIT()

							If ExistBlock("F040PIS")
								Execblock("F040PIS",.F.,.F.,nRegSe1)
							EndIf

						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de COFINS                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nCofins > 0 .And. lRtPICFCS
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza COFINS caso nao exista     ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SED")
							cNatureza := Pad(SuperGetMV("MV_COFINS"),10)
							If ( ! DbSeek( cFilial + cNatureza ) )
								RecLock("SED",.T.)
								SED->ED_FILIAL  := xFilial()
								SED->ED_CODIGO  := cNatureza
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := "COFINS"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf

							cParcela := ParcImpRec(cPrefixo,cNum,"COF")
							RecLock("SE1",.T.)
							SE1->E1_FILIAL  := cFilial
							SE1->E1_PREFIXO := cPrefixo
							SE1->E1_NUM     := cNum
							SE1->E1_PARCELA := cParcela
							SE1->E1_TIPO    := "COF"
							SE1->E1_EMISSAO := dEmissao
							SE1->E1_EMIS1   := dDataBase
							SE1->E1_VALOR   := nCofins
							SE1->E1_VENCTO  := dVencRea
							SE1->E1_VENCREA := dVencRea
							SE1->E1_VENCORI := dVencRea
							SE1->E1_CLIENTE := cCliente
							SE1->E1_LOJA    := cLoja
							SE1->E1_NOMCLI  := cNomCli
							SE1->E1_MOEDA   := nMoeda
							SE1->E1_VLCRUZ  := Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
							SE1->E1_ORIGEM  := Upper(cOrigem)
							SE1->E1_NATUREZ := cNatureza
							SE1->E1_LA      := cLa
							SE1->E1_SALDO   := 0 // nCofins
							SE1->E1_STATUS  := "B"
							SE1->E1_BAIXA   := dDataBase

							If lPccBxCr
								SE1->E1_SEQBX  := cSeq
								SE1->E1_HIST	:= "Desconto - Cofins"
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava a filial de origem quando existir o campo no SE2            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If SE1->(FieldPos("E1_FILORIG")) > 0
								SE1->E1_FILORIG := CriaVar("E1_FILORIG",.T.)
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lTitPai
								SE1->E1_TITPAI := cTitPai
							EndIf

							MsUnlock()
							FKCOMMIT()

							If ExistBlock("F040COF")
								Execblock("F040COF",.F.,.F.,nRegSe1)
							EndIf

						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera titulo de CSLL                        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nCsll > 0 .And. lRtPICFCS
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Cria a natureza CSLL caso nao exista       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SED")
							cNatureza  := Pad(SuperGetMV("MV_CSLL"),10)
							If ( ! DbSeek( cFilial + cNatureza ) )
								RecLock("SED",.T.)
								SED->ED_FILIAL  := cFilial
								SED->ED_CODIGO  := cNatureza
								SED->ED_CALCIRF := "N"
								SED->ED_CALCISS := "N"
								SED->ED_CALCINS := "N"
								SED->ED_CALCCSL := "N"
								SED->ED_CALCCOF := "N"
								SED->ED_CALCPIS := "N"
								SED->ED_DESCRIC := "CONTRIB.S/LUCRO LIQUIDO"
								SED->ED_TIPO	:= "2"
								MsUnlock()
								FKCOMMIT()
							EndIf

							cParcela := ParcImpRec(cPrefixo,cNum,"CSL")
							RecLock("SE1",.T.) // Erro
							SE1->E1_FILIAL  := cFilial
							SE1->E1_PREFIXO := cPrefixo
							SE1->E1_NUM     := cNum
							SE1->E1_PARCELA := cParcela
							SE1->E1_TIPO    := "CSL"
							SE1->E1_EMISSAO := dEmissao
							SE1->E1_EMIS1   := dDataBase
							SE1->E1_VALOR   := nCsll
							SE1->E1_VENCTO  := dVencRea
							SE1->E1_VENCREA := dVencRea
							SE1->E1_VENCORI := dVencRea
							SE1->E1_CLIENTE := cCliente
							SE1->E1_LOJA    := cLoja
							SE1->E1_NOMCLI  := cNomCli
							SE1->E1_MOEDA   := nMoeda
							SE1->E1_VLCRUZ  := Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
							SE1->E1_ORIGEM  := Upper(cOrigem)
							SE1->E1_NATUREZ := cNatureza
							SE1->E1_LA      := cLa
							SE1->E1_SALDO   := 0 // nCsll
							SE1->E1_STATUS  := "B"
							SE1->E1_BAIXA   := dDataBase

							If lPccBxCr
								SE1->E1_SEQBX  := cSeq
								SE1->E1_HIST	:= "Desconto - Csll"
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava a filial de origem quando existir o campo no SE2            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If SE1->(FieldPos("E1_FILORIG")) > 0
								SE1->E1_FILORIG := CriaVar("E1_FILORIG",.T.)
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava os dados do titulo de origem do imposto se existir o campo no SE2 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lTitPai
								SE1->E1_TITPAI := cTitPai
							EndIf

							MsUnlock()
							FKCOMMIT()

							If ExistBlock("F040CSL")
								Execblock("F040CSL",.F.,.F.,nRegSe1)
							EndIf
						EndIf
					EndIf

					RestArea(aArea)

					Return

					/*/
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ParcImpRec³ Autor ³ Claudio D. de Souza   ³ Data ³ 11/12/03 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Calcula a parcela de titulos de impostos, IR, PIS, COFINS  ³±±
					±±³          ³ e CSLL                                                     ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ ParcImpRec(cPrefixo,cNum,cTipoE1,lIRPFBaixa)               ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ FINANCEIRO/COMPRAS  												     ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function ParcImpRec(cPrefixo,cNum,cTipoE1)
					Local aArea	:= GetArea()
					Local aAreaSE1 := SE1->(GetArea())
					Local cParcela	:= ""
					Local cAlias 	:= ""
					Local cChave := ""
					Local aTamParc := TamSx3("E1_PARCELA")

					Local cSavFilter // Declarar variavel para evitar problemas quando existir filtro

					If Select("__SE1") == 0
						dbSelectArea("SE1")
						cSavFilter := dbFilter()
						dbClearFilter()
						cAlias := "SE1"
					Else
						cAlias := "__SE1"
					EndIf
					cParcela := STRZERO(1,aTamParc[1])
					While ( .T. )
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ VerIfica se ja' ha' titulo de IMPOSTO com esta numera‡„o ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						DbSelectArea(cAlias)
						DbSetOrder(1)
						cChave := xFilial("SE1")+cPrefixo+cNum+cParcela+cTipoE1

						If DbSeek(cChave)
							cParcela := Soma1( cParcela,,.T.)
							Loop
						EndIf
						Exit
					Enddo

					If cAlias=="SE1" .And. !Empty( cSavFilter )
						dbSelectArea("SE1")
						DbSetFilter({||&(cSavFilter)},cSavFilter)
					EndIf

					RestArea(aArea)
					RestArea(aAreaSE1)
					Return cParcela

					/*
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
					±±ºFuncao    ³FPccBxCr	ºAutor  ³Mauricio Pequim Jr. º Data ³  03/09/09   º±±
					±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
					±±ºDesc.     ³ Funcao para verificar o tratamento de PCC na baixa CR      º±±
					±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
					±±ºUso       ³ Generico - PCC Baixa CR                                    º±±
					±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/
				Function FPccBxCr()

					//Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
					Local lPccBxCr :=	(SuperGetMv("MV_BR10925",.T.,"2") == "1")	.And. ;
						!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
						!Empty( SE1->( FieldPos( "E1_TITPAI"  ) ) ) .And. ;
						!Empty( SE1->( FieldPos( "E1_SEQBX"   ) ) ) .And. ;
						!Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) )
					Return lPccBxCr

					/*/
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ AtuSalCxa³ Autor ³ Totvs          	    ³ Data ³ 13/11/09 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Func„o para atualiza‡„o do saldo do caixinha				  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ AtuSalCxa() 												  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ SIGAFIN													  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					/*/
				Function AtuSalCxa( cCaixa, dData, nValor , lIni )

					Local aAreaFIJ	:= FIJ->( GetArea() )
					Local lAppend	:= .T.
					Local nSalIni	:= 0
					Local cFilFIJ	:= xFilial( "FIJ" )

					Default lIni := .F. // Utilizado para forcar a gravação do valor no saldo.

					If Empty( cCaixa )
						Return
					EndIf

					DbSelectArea( "FIJ" )
					FIJ->( DbSetOrder( 1 ) )
					If FIJ->( DbSeek( cFilFIJ + DtoS( dData ) + cCaixa ) )
						nSalIni	:= If( lIni , 0 , FIJ->FIJ_SALDO) // Caso seja valor seja saldo inicial força esta variavel com 0
						lAppend	:= .F.
					ElseIf !lIni
						FIJ->( DbSetOrder( 2 ) )
						FIJ->( DbSeek( cFilFIJ + cCaixa ) )
						While !Eof() .And. FIJ->FIJ_FILIAL == cFilFIJ .And. FIJ->FIJ_CODCX == cCaixa
							nSalIni	:= FIJ->FIJ_SALDO
							FIJ->(dbSkip())
						EndDo
					EndIf

					RecLock( "FIJ", lAppend )
					FIJ->FIJ_FILIAL := cFilFIJ
					FIJ->FIJ_CODCX	:= cCaixa
					FIJ->FIJ_DATA	:= dData
					FIJ->FIJ_SALDO	:= ( nSalIni + nValor )
					MsUnlock()
					/*
					//*****************************************************************************
					// Atualiza o saldo posterior caso usuario tenha retroagido a data do sistema *
					//      Performance muito baixo. Deve ser avaliada melhoria na rotina         *
					//*****************************************************************************
					*/
					#IFDEF TOP
						cQuery := " SELECT R_E_C_N_O_ FIJREG "
						cQuery += "FROM " + RetSQLName( "FIJ" )
						cQuery += " WHERE "
						cQuery += "FIJ_FILIAL = '" + cFilFIJ + "' AND "
						cQuery += "FIJ_CODCX = '" + cCaixa + "' AND "
						cQuery += "FIJ_DATA > '" + DtoS( dData ) + "' AND "
						cQuery += "D_E_L_E_T_ = ' ' "

						cQuery := ChangeQuery( cQuery )

						dbUseArea( .T.,"TOPCONN",TcGenQry(,,cQuery),"TRBFIJ" )

						Do While TRBFIJ->( ! EoF() )

							FIJ->( dbGoTo( TRBFIJ->FIJREG ) )

							RecLock( "FIJ", .F. )
							If !lIni
								FIJ->FIJ_SALDO += nValor
							Else
								FIJ->FIJ_SALDO := nValor
							EndIf
							MsUnlock()

							TRBFIJ->( dbSkip() )

						EndDo

						TRBFIJ->( dbCloseArea() )
						dbSelectArea("FIJ")

					#ELSE
						FIJ->( DbSetOrder( 2 ) )
						FIJ->( DbSeek( cFilFIJ + cCaixa ) )
						While !Eof() .And. FIJ->FIJ_FILIAL == cFilFIJ .And. FIJ->FIJ_CODCX == cCaixa
							If dData < FIJ->FIJ_DATA
								RecLock( "FIJ", .F. )
								If !lIni
									FIJ->FIJ_SALDO += nValor
								Else
									FIJ->FIJ_SALDO := nValor
								EndIf
								MsUnlock()
							EndIf
							FIJ->(dbSkip())
						EndDo
					#ENDIF

					RestArea( aAreaFIJ )

					Return

					/*
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³ RecSalCxa³ Autor ³ Totvs          	    ³ Data ³ 13/11/09 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Func„o para recalcular o saldo do caixinha com base na     ³±±
					±±³          ³ tabela SEU.                                                ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ AtuSalCxa() 												  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ SIGAFIN													  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/
				Function RecSalCxa( cCaixa )
					Local aAreaSET	:= SET->( GetArea() )

					If Empty( cCaixa )
						Return
					EndIf

					DbSelectArea( "SET" )
					SET->( DbSetOrder( 1 ) )
					If SET->( DbSeek( xFilial( "SET" ) + cCaixa ) )
						If FIJ->( !DbSeek( xFilial( "FIJ" ) + SET->ET_ULTREP + cCaixa ) )
							RecLock( "FIJ", .T. )
							FIJ->FIJ_FILIAL := xFilial( "FIJ" )
							FIJ->FIJ_CODCX	:= cCaixa
							FIJ->FIJ_DATA	:= SET->ET_ULTREP
							FIJ->FIJ_SALDO	:= SET->ET_SALDO
							MsUnlock()
						EndIf
					EndIf

					RestArea( aAreaSET )
					Return

					/*
					ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
					±±³Fun‡…o	 ³FinSpdF100³ Autor ³ Totvs          	    ³ Data ³ 28/04/11 ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Descri‡…o ³ Func„o para retornar os títulos que compoem o bloco F100   ³±±
					±±³          ³ do SPED PIS/COFINS                                         ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³Sintaxe	 ³ FinSpdF100() 											  ³±±
					±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
					±±³ Uso		 ³ SIGAFIS													  ³±±
					±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
					±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
					ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
					*/
				Function FinSpdF100(nMesRef,nAnoRef,lTotF100, cDataIni,cDataFim,cBloco)

					Local aReturn	:= {}
					Local aF100  	:= {}
					Local cQuery 	:= ""
					Local cAliasQry:= ""
					Local aStruct	:= {}
					Local nA			:= 0
					Local nX			:= 0
					Local nValorPis:= 0
					Local nValorCof:= 0
					Local cIndCmlt	:= ""
					Local dLastDay := ""
					Local cDocSpd	:= SuperGetMv("MV_DOCSPD",,"")
					Local cDcsSpd	:= SuperGetMv("MV_DCSSPD",,"")
					Local cMotBx	:= SuperGetMv("MV_MTBXSD",,"")
					Local lSpdMt100:=	.F.
					Local lSpdMt460:=	.F.
					Local aAreaSF1	:= {}
					Local aAreaSF2	:= {}
					Local lSpdDtEm	:=	ExistBlock("SPDF1001")
					Local lSpdTipo	:=	ExistBlock("SPDF1002")
					Local lSpdOrig	:=	ExistBlock("SPDF1003")
					Local lSpdPart	:=	ExistBlock("SPDF1004")
					Local lSpdNOrig:=	ExistBlock("SPDF1005")
					Local lSpdDtEm2:=	ExistBlock("SPDF1006")
					Local lCodPart	:=	.T.
					Local	cNOrigem	:=	""
					Local cDtEmis	:=	""
					Local cTipo		:=	""
					Local cNome		:=	""
					Local cOrigem	:=	""
					Local cNomeApl	:=	""
					Local cTpSel	:= ""
					Local cTpApl	:= ""
					Local cFilSe1	:= ""
					Local cFilSe2	:= ""
					Local lCmpCCz	:=	(SED->(FieldPos("ED_TABCCZ")) > 0 .And. SED->(FieldPos("ED_CODCCZ")) > 0 .And.;
						SED->(FieldPos("ED_GRUCCZ")) > 0 .And. SED->(FieldPos("ED_DTFCCZ")) > 0)
					//Verificar a existencia dos campos referentes a Naturezas de Receitas na tabela SED para envio no bloco
					Local lBxSped	:= SuperGetMv("MV_RENTRIB",,.F.) //Habilita o envio receitas financeiras não tributaveis
					//,ou seja, dados da baixa (juros, descontos ou variacao cambial).
					Local cNatRec	:= SuperGetMv("MV_NATRNT",,"") 	//Codigo da Natureza de Receita Nao Tributavel.
					Local cNatDesp	:= SuperGetMv("MV_NATDNT",,"") 	//Codigo da Natureza de Despesa Nao Tributavel.
					Local aNatNTrib:= {}
					Local aNatDbf	:= {}
					Local lAplSped	:= SuperGetMv("MV_APLFIN",,.F.) //Habilita o envio das Aplicacoes financeiras.
					Local cNatApl	:= SuperGetMv("MV_APLNAT",,"") 	//Codigo da Natureza das Aplicacoes Financeiras.
					Local cTpSe5	:=	"'JR','CM','DC','MT'"
					Local lEnvReg	:=	.F.
					Local aAreaSED	:=	{}
					Local nI			:=	0
					Local nJ			:=	0
					Local aAlias	:= If(lBxSped,{"SE5","SE1","SE1","SE2","SE2","SE2","SE2"},{"SE1","SE1","SE2","SE2","SE2","SE2"})
					Local aRegSped	:=	{}
					Local aAreaSEV	:=	{}
					Local lRenTribR	:=	.T. //Valida as naturezas de receitas nao tributaveis.
					Local lRenTribD	:=	.T. //Valida as naturezas de despesas nao tributaveis.
					Local aCampos	:= {}
					Local aTam     := {}
					Local cIndex	:=	""
					Local nIndex	:=	0
					Local cChave	:=	""
					Local aMotBx 	:= ReadMotBx()
					Local lBxOk		:=	.T.
					Local nVrRateio:=	0
					Local lScorgp	:=	SE1->(FieldPos("E1_SCORGP")) > 0 //Identifica bem ou servico contratado por orgaos publicos.

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Parametro que permite ao usuario utilizar o desdobramento³
					//³da maneira anterior ao implementado com o rastreamento.  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					Local lNRastDSD	:= SuperGetMV("MV_NRASDSD",.T.,.F.)
					Local nOrdem 	:= 0
					Local cChaveSe2	:=	""
					Local cChaveFil	:= ""
					Local cChaveDt	:=	""
					Local dDataIni	:=	Ctod("  /  /  ")
					Local nMes		:=	0
					Local cCstPis	:=	""
					Local cCstCof	:=	""
					Local lEnvBase	:=	.T. //Enviar ou nao base de Pis e Cofins dependendo do codigo de CST.
					Local nBase		:=	0
					Local nMoeda	:= 0
					Local lSEI_		:= SuperGetMv("MV_APLAPRO",,.F.) //Habilita o envio das Aplicacoes financeiras.
					Local lDescApl	:= SuperGetMv("MV_DESCRF",,.T.) //Habilita o envio dos descontos referentes a Aplicacoes financeiras nao tributaveis.
					Local nProp		:= 0
					Local nVlrCruz	:= 0
					Local cChaveBx	:= cChArray	:= ""
					Local nJurosBx	:= nDescBx	:=	nDescBxC	:=0
					Local aRecNTrib := {}
					Local nTotF100	:= 0
					Local lBaseImp	:=	.T. 		// Nf possui valor de base de imposto.
					Local nValTit	:=	0		//Campos para a geracao do arquivo para o RH.
					Local aTitRH	:= {}
					Local aTamRH   := {}
					Local cChaveRH	:=	""
					Local cArqRH	:=	""
					Local cIndRH  	:=	""
					Local cAliasRH	:=	""
					Local cNomeRH	:=	""
					Local nIndexRH	:= 0
					Local nBasePis	:=	0
					Local aBasePis	:=	{}
					Local lTitRet	:=	.F.		//Titulo retido em outro ou que retem outro.
					Local nVlMinImp:= GetNewPar("MV_VL10925",5000)
					Local lEnvFatCr:= .F. 	//Identifica a query referente a fatura de titulos a receber.
					Local nEnvFatCp:= 0   	//Identifica a query referente a fatura de titulos a pagar.
					Local	cOriTit	:=	""		//Origem do titulo qdo fatura vou precisar utilizar...
					Local nAliasSe2:=	0
					Local lRedCof	:=	SED->(FieldPos('ED_REDCOF'))> 0
					Local lRedPis	:=	SED->(FieldPos('ED_REDPIS')) > 0
					Local cMoeda	:=	""
					Local cNatSe2	:= SuperGetMv("MV_NATCP",,"")
					Local lSE1Proc	:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)
					Local lSE2Proc	:=	(SE2->(FieldPos('E2_NUMPRO')) > 0 .And. SE2->(FieldPos('E2_INDPRO')) > 0)
					Local lDescDoc	:= SuperGetMv("MV_DESCDOC",,.F.) //Habilita o envio da descrição da operação/documento no bloco F100 do SPED PIS/COFINS.
					Local lTpDesc	:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
					Local nVrDescInc	:=	0 //Valor do desconto incondicional .
					Local lDescSe5	:= SE5->(FieldPos("E5_TPDESC"))	> 0 //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
					Local	cData		:= ""
					Local cNro		:= ""
					Local 	nVrJuros	:=	nRegApl	:=	0
					Local cChaveApl:=	""
					Local 	cNatResg := &(GetMv("MV_NATRAPL"))
					Local cNatApl		:= SuperGetMv("MV_APLNAT",,"") 	//Codigo da Natureza das Aplicacoes Financeiras.
					Local 	nTxMoeda	:=	0
					Local	cTpApl			:=	""
					Local 	aRegApl		:= 	{}
					Local nVrCanc		:= 	0
					Local aAreaSE5		:=	{}
					Local cChaveSE5	:= 	""
					Local lRecIss	  		:=	.F.
					Local lMVDescIss	:=	GetNewPar("MV_DESCISS",.F.)
					Local cNewDocSpd:=","+STRTRAN(STRTRAN(STRTRAN(STRTRAN(STRTRAN(STRTRAN(cDcsSpd,";",","),"/",","),"|",",")," ",","),"-",","),"_",",")+","

					Private lEnvDesd	:= .F. //Diferencia query da tabela SE2 que seleciona somente desdobramentos.

					DEFAULT nMesRef := Month(dDataBase)
					DEFAULT nAnoRef := Year(dDataBase)
					DEFAULT lTotF100:= .F.
					DEFAULT cBloco	:= ""

					cDataIni := If(cDataIni	= Nil, StrZero(nAnoRef,4)+StrZero(nMesRef,2)+"01", cDataIni)
					dLastDay := LastDay(Ctod("01/"+StrZero(nMesRef,2)+"/"+StrZero(nAnoRef,4)))
					cDataFim := If(cDataFim	= Nil, StrZero(nAnoRef,4)+StrZero(nMesRef,2)+StrZero(Day(dLastDay),2), cDataFim)

					If lTotF100 //Caso seja realizada a totalizacao para o RH um arquivo DBF vai ser criado para o Relatorio de Desoneracao dos Dados do Financeiro.
						//Criando arquivo para o Relatorio de Desoneracao dos Dados do Financeiro.
						aTitRH := {}
						aTamRH:=TamSX3("E5_FILIAL")
						AADD(aTitRH,{"FILIAL"  ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_PREFIXO")
						AADD(aTitRH,{"PREFIXO"    ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_NUMERO")
						AADD(aTitRH,{"NUMERO"   ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_PARCELA")
						AADD(aTitRH,{"PARCELA" ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_TIPO")
						AADD(aTitRH,{"TIPO"   ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_CLIFOR")
						AADD(aTitRH,{"CLIENTE" ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_LOJA")
						AADD(aTitRH,{"LOJA"   ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_DATA")
						AADD(aTitRH,{"DTMOV" ,"C",8,0})
						aTamRH:=TamSX3("E1_NATUREZ")
						AADD(aTitRH,{"NATUREZ"   ,"C",aTamRH[1],aTamRH[2]})
						aTamRH:=TamSX3("E5_VALOR")
						AADD(aTitRH,{"VALOR"   ,"N",aTamRH[1],aTamRH[2]})
						AADD(aTitRH,{"TABELA" ,"C",8,0})

						cArqRH 	:=	CriaTrab(aTitRH,.T.)

						//Nome do arquivo FIN+Nome Filial+DES+mesano.
						cAliasRH	:= "FINDESRH"
						cNomeRH	:= "FIN" + Alltrim(xFilial("SE1")) + "DES" + Alltrim(Str(nMesRef)) + Alltrim(Str(nAnoRef)) + ".DBF"

						dbUseArea(.T.,__LocalDriver, cArqRH,cAliasRH,.F.,.F.)
						DbSelectArea(cAliasRH)
						cIndRH		:=	CriaTrab(Nil,.F.)

						cChaveRH   := "FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA"
						IndRegua(cAliasRH,cIndRH,cChaveRH,,Nil,)  //"Selecionando Registros..."
						#IFNDEF TOP
							DbSetIndex(cIndRH+OrdBagExt())
						#ENDIF
						DbSetOrder(1)
					Endif

					//Identifico se tenho unidade de negócios.
					lUnidNeg := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa

					If lUnidNeg
						cFilSe1	:=	SM0->M0_CODFIL
						cFilSe2	:= SM0->M0_CODFIL
					Else
						cFilSe1	:= xFilial("SE1")
						cFilSe2	:= xFilial("SE2")
					Endif

					dbSelectArea("SED")

					cTipo	:=	"" //Tratamentos para o ponto de entrada SPDF1002
					If lSpdTipo
						cTipo := ExecBlock ("SPDF1002",.F.,.F.)
					Endif
					If !Empty(cTipo) // Inserindo aspas e virgulas para o select da query.
						cNome:="'"
						For nA:=1 To Len(cTipo)
							If Subst(cTipo,nA,1) $ ";,-_|./"
								cNome+="','"
							Else
								cNome+=Subst(cTipo,nA,1)
							Endif
						Next
					Endif
					cNome	+=	"'"
					If !Empty(cTipo) //Verificando o tamanho dos tipos de titulos fornecidos pelo usuario.
						cTpSel:=""
						cTipo:=""
						For nA:=1 To Len(cNome)
							If Subst(cNome,nA,1) $ "'"
								If Len(cTipo) > 1 .And. Len(cTipo) < 3
									cTpSel+=Space(1)
								Endif
								cTpSel+=Subst(cNome,nA,1)
								cTipo:=""
							ElseIf Subst(cNome,nA,1) $ ","
								cTpSel+=Subst(cNome,nA,1)
							Else
								cTpSel+=Subst(cNome,nA,1)
								cTipo+=Subst(cNome,nA,1)
							Endif
						Next
					Endif

					cOrigem	:=	"" //Tratamentos para o ponto de entrada SPDF1003
					If lSpdOrig
						cOrigem := ExecBlock ("SPDF1003",.F.,.F.)
					Endif

					cNOrigem	:=	"" //Ponto de Entrada que das origens que nao devem ser checadas para o envio no bloco F100.
					If lSpdNOrig
						cNOrigem := ExecBlock ("SPDF1005",.F.,.F.)
						cNOrigem :=	SpdVldVar( cNOrigem )
					Endif

					If lAplSped .And. !Empty(cNatApl) // Tratamento para o parametro MV_APLNAT.
						Aadd(aAlias,"SEI")
						cNomeApl:="'"	// Inserindo aspas e virgulas para o select da query.
						For nA:=1 To Len(cNatApl)
							If Subst(cNatApl,nA,1) $ ";,-_|./"
								cNomeApl+="','"
							Else
								cNomeApl+=Subst(cNatApl,nA,1)
							Endif
						Next

						cNomeApl	+=	"'"
						cTpApl	:=""
						cNatApl	:=""
						For nA:=1 To Len(cNomeApl)
							If Subst(cNomeApl,nA,1) $ "'"
								If Len(cNatApl) > 1 .And. Len(cNatApl) < 10
									cTpApl+=Space(1)
								Endif
								cTpApl+=Subst(cNomeApl,nA,1)
								cNatApl:=""
							ElseIf Subst(cNomeApl,nA,1) $ ","
								cTpApl+=Subst(cNomeApl,nA,1)
							Else
								cTpApl	+=Subst(cNomeApl,nA,1)
								cNatApl	+=Subst(cNomeApl,nA,1)
							Endif
						Next
					Endif
					#IFNDEF TOP //Caso seja base DBF verificar a existencia dos campos da tabela SED que serao necessarias a geracao deste bloco.
						If SED->(FieldPos("ED_APURCOF")) <= 0 .Or.	SED->(FieldPos("ED_APURPIS")) <= 0 .Or. SED->(FieldPos("ED_PCAPPIS")) <= 0 .Or.;
								SED->(FieldPos("ED_PCAPCOF")) <= 0 .Or.	SED->(FieldPos("ED_CSTPIS")) <= 0 .Or. SED->(FieldPos("ED_CSTCOF")) <= 0 .Or.;
								SED->(FieldPos("ED_CLASFIS")) <= 0 .Or.	SED->(FieldPos("ED_TABCCZ")) <= 0 .Or. SED->(FieldPos("ED_CODCCZ")) <= 0 .Or.;
								SED->(FieldPos("ED_GRUCCZ")) <= 0 .Or.	SED->(FieldPos("ED_DTFCCZ")) <= 0 .Or. SED->(FieldPos("ED_INDCMLT")) <= 0 .Or.;
								SED->(FieldPos("ED_INDRET")) <= 0
							MsgAlert('Alguns campos do SPED PIS/COFINS nao existem na base. Favor verificar os boletins referentes ao SPED PIS/COFINS (Fiscal e Financeiro).')
							Return aReturn
						Endif
					#ENDIF

					aRecNTrib	:=	{}
					nAliasSe2	:=	0

					For nA:= 1 to Len(aAlias)
						If aAlias[nA] == "SE5"
							cAliasQry	:= "SE5QRY"
						Elseif aAlias[nA] == "SEI"
							cAliasQry	:= "SEIQRY"
						Elseif aAlias[nA] == "SE1"
							cAliasQry	:= "SE1QRY"
						Elseif aAlias[nA] == "SE2"
							cAliasQry	:= "SE2QRY"
						Endif

						#IFDEF TOP
							F100Top(aAlias[nA],cAliasQry,cDataIni,cDataFim,cTpSe5,cTpApl,lSpdDtEm,cTpSel,lSEI_,cNOrigem,lEnvFatCr,nEnvFatCp,lSpdDtEm2)
						#ELSE
							F100DBF(aAlias[nA],cAliasQry,cDataIni,cDataFim,cTpSe5,cTpApl,lSpdDtEm,cTpSel,lSEI_,cNOrigem,lEnvFatCr,nEnvFatCp,lSpdDtEm2)
						#ENDIF

						If aAlias[nA] == "SE5"
							If Empty(cNatRec)
								lRenTribR	:=	.F.//Valida as naturezas de receitas nao tributaveis.
							Else
								//Naturezas das Receitas e Despesas nao Tributáveis
								aAreaSED := SED->(GetArea())
								DbSelectArea("SED")
								DbSetOrder(1)
								If DbSeek(xFilial("SED")+ cNatRec) //SE1
									Aadd(aNatNTrib,{"SE1",SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
										SED->ED_CSTCOF,SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),;
										SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->(Recno()),;
										SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC})
								Else
									lRenTribR	:=	.F.
								Endif
								RestArea(aAreaSED)
							Endif

							If Empty(cNatDesp)
								lRenTribD	:=	.F.//Valida as naturezas de despesas nao tributaveis.
							Else
								aAreaSED := SED->(GetArea())
								DbSelectArea("SED")
								DbSetOrder(1)
								If DbSeek(xFilial("SED")+ cNatDesp) //SE2
									Aadd(aNatNTrib,{"SE2",SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
										SED->ED_CSTCOF,SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),;
										SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->(Recno()),;
										SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC})
								Else
									lRenTribD	:=	.F.
								Endif

								RestArea(aAreaSED)
							Endif

						ElseIf aAlias[nA] == "SEI"
							If Empty(cTpApl)
								lRenTribR	:=	.F.//Valida as naturezas de receita e despesa das receitas financeiras nao tributaveis e as aplicacoes financeiras.
							Else
								aAreaSED := SED->(GetArea())
								DbSelectArea("SED")
								DbSetOrder(1)
								SED->(Dbseek(xFilial("SED")))
								While !(Eof()) .And. SED->ED_FILIAL = xFilial("SED")
									If Alltrim(SED->ED_CODIGO) $ cTpApl
										Aadd(aNatNTrib,{"SEI",SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
											SED->ED_CSTCOF,SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),;
											SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->(Recno()),;
											SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC})
										lRenTribR	:=	.T.
									Endif
									SED->(Dbskip())
								Enddo
							Endif
						Endif

						dbSelectArea(cAliasQry)

						#IFNDEF TOP
							(cAliasQry)->(Dbgotop())
						#ENDIF

						While !(cAliasQry)->(Eof()) .And. lRenTribR .And. lRenTribD

							lEnvReg		:=	.F.
							aRegSped		:=	{}
							lSpdMt100 	:= .F.
							lSpdMt460 	:= .F.
							nProp 		:= 0
							cMoeda		:=	""

							If ("SE5" $ cAliasQry) .OR. ("SEI" $ cAliasQry) // EH_MOEDA ou E5_MOEDA -> Único campo moeda que é caracter!

								If ("SE5" $ cAliasQry)
									cMoeda	:= (cAliasQry)->MOEDA
								ElseIf ("SEI" $ cAliasQry)
									cMoeda	:= Iif(lSEI_,Alltrim(Str((cAliasQry)->MOEDA)),(cAliasQry)->MOEDA )
								Endif

								If cMoeda $ ("M1;R")
									nMoeda := 1
								Elseif cMoeda $ ("M")
									nMoeda := Val(SUBSTR( cMoeda ,2,1))
								Else
									nMoeda := Val( cMoeda )
								Endif

								If nMoeda > 1
									nProp 	:= 1 // movimentos de não tributaveis e aplicações e emprestimo não tem proporcionalização  //(cAliasQry)->VALOR / (cAliasQry)->BASEPIS
								Endif
							Else

								nMoeda 	:= (cAliasQry)->MOEDA
								cChave	:=	((cAliasQry)->PREFIXO+ (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)-> CLIFOR + (cAliasQry)->LOJA )
								aBasePis	:=	{}
								aBasePis := FinRepBase(cAliasQry,nMoeda,cChave)
								nBasePis	:=	aBasePis[1] //Valor base para calculo do Pis e Cofins...

								If aAlias[nA] = "SE1" .And. aBasePis[1] == 0 .And. aBasePis[2] == 0//Tit. a Rec. originado do juridico com natureza que retem e apura PIS e COFINS mas nao gera os impostos nao devem ser enviados.
									(cAliasQry)->(dbSkip())
									Loop
								Endif

								If nMoeda > 1
									If aAlias[nA] $ "SE1_SE2" .And. (cAliasQry)->TXMOEDA == 0
										nProp := xMoeda(nBasePis,(cAliasQry)->MOEDA, 1,STOD((cAliasQry)->EMISSAO)) / nBasePis
									Else
										If	aAlias[nA] = "SE2"
											nProp := (cAliasQry)->TXMOEDA
										Else
											nProp := (cAliasQry)->VLCRUZ / nBasePis
										Endif
									Endif
								Endif

								cOriTit	:=	(cAliasQry)->ORIGEM
								If (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2"  .And. nEnvFatCp > 0	)
									aRegSped	:=	TitFatF100(cAliasQry,aAlias[nA],nEnvFatCp) // Seleciona titulos da fatura que serao enviados neste bloco.
								Endif
							Endif

							#IFNDEF TOP
								If aAlias[nA] == "SEI" .AND. !(Alltrim((cAliasQry)->NATUREZ) $ cTpApl)
									(cAliasQry)->(dbSkip())
									Loop
								EndIf
							#ENDIF

							nVrJuros	:=	nRegApl	:=	0
							aRegApl	:= 	{}
							#IFDEF TOP
								If aAlias[nA] == "SEI" 	.And. 	lSEI_ .And. !Empty(cTpApl) //Somar todos os titulos referentes a taxas I1,I2,I3,I4 e JR das apropriacoes das aplicacoes financeiras e dos resgates.

									nTxMoeda	:=	(cAliasQry)->TXMOEDA
									cTpApl			:=	(cAliasQry)->TIPO
									cChaveApl	:= 	(cAliasQry)->FILIAL+ (cAliasQry)->APLEMP + (cAliasQry)->NUM + (cAliasQry)->REVISAO + (cAliasQry)->SEQ

									aAdd(aRegApl,{aAlias[nA],(cAliasQry)->FILIAL,(cAliasQry)->APLEMP,(cAliasQry)->NUM,(cAliasQry)->REVISAO,(cAliasQry)->SEQ,;
										(cAliasQry)->TIPO,(cAliasQry)->BANCO,(cAliasQry)->AGENCIA,(cAliasQry)->CONTA,(cAliasQry)->NATUREZ,;
										(cAliasQry)->DATA,(cAliasQry)->RECNO})

									While !(cAliasQry)->(Eof()) .And. ((cAliasQry)->FILIAL+ (cAliasQry)->APLEMP + (cAliasQry)->NUM + (cAliasQry)->REVISAO + (cAliasQry)->SEQ) = cChaveApl
										If   (cAliasQry)->TIPODOC = "JR"
											nVrJuros	+=	(cAliasQry)->VALOR
										Endif
										(cAliasQry)->(Dbskip())
									Enddo

									nBase	:=	nVrJuros

									If  nMoeda >1  .And. Alltrim(aRegApl[1,7]) <> "CDI"
										nBase	:= nBase	* nTxMoeda
									Endif

									aAdd(aRegSped,{aAlias[nA],"2",	"",; // 3
									nBase,; // 4 VALOR
									100,aRegApl[1,2], aRegApl[1,3],aRegApl[1,4],aRegApl[1,5],aRegApl[1,6],; //  10 FILIAL,APLEMP,NUM,REVISAO,SEQ
									aRegApl[1,7], aRegApl[1,8],aRegApl[1,9],aRegApl[1,10],aRegApl[1,11],; //  15 TIPO,BANCO,AGENCIA,CONTA, NATUREZ
									aRegApl[1,12],aRegApl[1,13]}) // 17 DATA e RECNO

								Endif
							#ENDIF

							nVrCanc	:=	0

							If aAlias[nA] == "SE5" //Verificando se o movimento tem um titulo que retenha Pis ou Cofins.

								If (cAliasQry)->RECPAG == "R"	//SE1

									If(cAliasQry)->TIPODOC $ "DC_D2" .And. !lDescApl
										(cAliasQry)->( dbSkip() )
										Loop
									Endif

									nVrDescInc	:=	0

									DbSelectArea("SE1")
									DbSetOrder(1)
									If SE1->(DbSeek(xFilial("SE1")+(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO))) .And. SED->(Dbseek(xFilial("SED")+SE1->E1_NATUREZ))
										If SE1->E1_TIPO $ (MVPROVIS,'PR ','PRE')
											(cAliasQry)->(Dbskip())
											Loop
										Endif
										If	(Empty(SED->ED_APURCOF) .Or. Empty(SED->ED_APURPIS))
											(cAliasQry)->(Dbskip())
											Loop
										Endif
										If lTpDesc .And. (cAliasQry)->TIPODOC $ "DC_D2" //Em caso de descontos incondicionais de titulos a receber o desconto nao deve ser enviado.
											If SE1->E1_TPDESC == "I" .And. SE1->E1_DECRESC > 0
												nVrDescInc	:=	SE1->E1_DECRESC
											Endif
										Endif
									Endif

									lEnvReg	:=	.T.
									aAdd(aRegSped,{aAlias[nA],"2",(cAliasQry)->RECPAG,(cAliasQry)->VALOR,0,""})

								ElseIf (cAliasQry)->RECPAG == "P"	//SE2
									DbSelectArea("SE2")
									DbSetOrder(1)
									If SE2->(DbSeek(xFilial("SE2")+(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO))) .And. SED->(Dbseek(xFilial("SED")+SE2->E2_NATUREZ))
										If SE2->E2_TIPO $ (MVPROVIS,'PR ','PRE')
											(cAliasQry)->(Dbskip())
											Loop
										Endif
										If	(Empty(SED->ED_APURCOF) .Or. Empty(SED->ED_APURPIS))
											(cAliasQry)->(Dbskip())
											Loop
										Endif
									Endif

									//De acordo com a definicao do Fiscal no caso de titulo a pagar devo somente calcular o valor para apuracao e enviar somente um titulo.
									cChaveBx		:=	(cAliasQry)->FILIAL + (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA
									cChArray		:= xFilial("SE2") + (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA
									nDescBx		:=	nDescBxC	:=	nJurosBx	:= 0
									While  (cAliasQry)->( !EoF()) .AND. cChaveBx ==  ( (cAliasQry)->FILIAL + (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA )
										If (cAliasQry)->TIPODOC $ "JR_MT_J2_M2_CM_C2"
											nJurosBx	+= (cAliasQry)->VALOR
										ElseIf(cAliasQry)->TIPODOC $ "DC_D2"
											If lDescSe5 .And. (cAliasQry)->TPDESC = "C"
												nDescBxC	+= (cAliasQry)->VALOR

												#IFDEF TOP
													cData	:= "DATA"
													cNro	:= "RECNO"
												#ELSE
													cData	:= "DTMOV"
													cNro	:= "NROREG"
												#ENDIF

												aAdd(aRegSped,{"SE2","2","P",(cAliasQry)->VALOR,100,;//5
												(cAliasQry)->(CLIFOR+LOJA),(cAliasQry)->&cData,(cAliasQry)->&cNro,; //8
												(cAliasQry)->FILIAL,	(cAliasQry)->PREFIXO,(cAliasQry)->NUM,; // 11
												(cAliasQry)->PARCELA,(cAliasQry)->TIPO,(cAliasQry)->CLIFOR,; // 14
												(cAliasQry)->LOJA})
											Else
												nDescBx	+= (cAliasQry)->VALOR
											Endif
										Endif
										(cAliasQry)->(Dbskip())
									Enddo

									If nJurosBx > 0 .Or. nDescBx > 0 .Or. nDescBxC > 0
										aAdd(aRecNTrib,{cChArray,nDescBx,nJurosBx,nDescBxC})
										If Len(aRegSped) > 0
											lEnvReg	:=	.T.
										Else
											Loop
										Endif
									Endif
								Endif
							ElseIf	(aAlias[nA] = "SE1" .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
								lEnvReg	:=	.T.
							Else
								If aAlias[nA] == "SEI"
									lEnvReg	:=	.T.
								Else
									lBxOk	:=	.T.
									If  aAlias[nA] $ "SE1_SE2"

										If  (cAliasQry)->TIPO $ MV_CRNEG //NCC nao deve ser enviada no SPED PIS/COFINS.
											(cAliasQry)->(Dbskip())
											Loop
										Endif

										dbSelectArea("SE5")
										SE5 -> ( dbSetOrder ( 7 ) ) //FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIFOR+LOJA+SEQ
										SE5 -> ( dbSeek ( xFilial("SE5") + (cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA) ) )

										Do While ( SE5->(!Eof()) .And.;
												xFilial("SE5")+(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA) == SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))

											If !(Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim )
												SE5->(Dbskip())
												Loop
											Endif

											If SE5->E5_TIPODOC = 'ES' .Or. SE5->E5_MOTBX $ 'FAT_LIQ'
												SE5->(dbSkip())
												Loop
											EndIf

											If SE5->E5_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS)
												SE5->(dbSkip())
												Loop
											EndIf

											If SE5->E5_SITUACA = 'C'
												SE5->(dbSkip())
												Loop
											EndIf

											If TemBxCanc(SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ),.T.)
												SE5->(dbSkip())
												Loop
											Endif

											If aAlias[nA] = "SE1" .And. SE5->E5_TIPODOC = 'CP'  	//Compensacao com NCC e sem baixa cancelada.
												SA1->( Dbseek( xFilial("SA1") + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA ) )
												lRecIss := (SA1->A1_RECISS == "1" .And. lMVDescIss)
												aAreaSE5		:= 	SE5->(GetArea())
												cChaveSE5	:=	SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_LOJA
												SE5->(Dbsetorder(10)) // E5_FILIAL+E5_DOCUMEN
												If SE5->(Dbseek(xFilial("SE5")+ cChaveSE5)) .And. SE5->E5_TIPO $ MV_CRNEG
													nVrCanc := SE5->E5_VALOR
												Endif
												SE5 -> ( dbSetOrder ( 7 ) ) //FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIFOR+LOJA+SEQ
												SE5->(RestArea(aAreaSE5))
												SE5->(dbSkip())
												Loop
											ElseIf SE5->E5_MOTBX <> 'NOR'
												nI :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper(SE5->E5_MOTBX) })
												If SE5->E5_MOTBX $ cMotBx .And. nI > 0
													If Substr(aMotBx[nI],26,01) == "N"
														lBxOk	:=	.F.
														Exit
													Else
														Exit
													Endif
												Else
													Exit
												Endif
											Else
												SE5->(dbSkip())
												Loop
											Endif
										Enddo
									Endif

									If  (Alltrim(cBloco) $ "F100" .And. !lBxOk)
										(cAliasQry)->(Dbskip())
										Loop
									Endif

									If lSpdOrig
										lEnvReg	:=	(AllTrim((cAliasQry)->ORIGEM) $ ("FINA040|FINA050|FINA280|FINA290|FINA565|FINA460"+cOrigem))
									Else
										lEnvReg	:=	(AllTrim((cAliasQry)->ORIGEM) $ "FINA040|FINA050|FINA280|FINA290|FINA565|FINA460")
									Endif

									cNewDocSpd:=","+STRTRAN(STRTRAN(STRTRAN(STRTRAN(STRTRAN(STRTRAN(cDcsSpd,";",","),"/",","),"|",",")," ",","),"-",","),"_",",")+","

									If AllTrim((cAliasQry)->ORIGEM) == "MATA100"
										aAreaSF1 := SF1->(GetArea())
										DbSelectArea("SF1")
										DbSetOrder(1)
										If DbSeek(xFilial("SF1")+(cAliasQry)->(NUM+PREFIXO+CLIFOR+LOJA)) .And. At(","+Alltrim(SF1->F1_ESPECIE)+",",cNewDocSpd)>0
											lSpdMt100 := .T.
										Endif
										RestArea(aAreaSF1)
									Endif


									If AllTrim((cAliasQry)->ORIGEM) == "MATA460"
										aAreaSF2 := SF2->(GetArea())
										DbSelectArea("SF2")
										DbSetOrder(1)
										If DbSeek(xFilial("SF2")+(cAliasQry)->(NUM+PREFIXO+CLIFOR+LOJA)) .And. At(","+Alltrim(SF2->F2_SERIE)+",",cNewDocSpd)>0
											lSpdMt460 := .T.
										Endif
										RestArea(aAreaSF2)
									Endif
								Endif

								If aAlias[nA] $ "SE1_SE2"	.And. (cAliasQry)->MULTNAT = "1"
									aAreaSEV := SEV->(GetArea())
									DbSelectArea("SEV")
									DbSetOrder(1)
									//Verificar se o titulo possui multiplas naturezas.
									SEV->(DbSeek(xFilial("SEV")+(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA)))
									While SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA) ==;
											(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA) .And. !SEV->(EOF())

										nVrRateio	:=	0

										If SEV->EV_IDENT <> "1" // 1=Rateio de Inclusao 2=Rateio de Baixa
											SEV->(Dbskip())
											Loop
										Endif

										If	(aAlias[nA] == "SE2" .And. SEV->EV_RECPAG == "P") .Or. (aAlias[nA] == "SE1" .And. SEV->EV_RECPAG == "R")
											aAreaSED := SED->(GetArea()) //Caso a natureza apure Pis ou Cofins
											DbSelectArea("SED")
											DbSetOrder(1)
											If DbSeek(xFilial("SED")+ SEV->EV_NATUREZ)
												If (!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))

													If aAlias[nA] == "SE1"
														If nMoeda > 1
															nVrRateio	:= Round((SEV->EV_VALOR/(cAliasQry)->VALOR) * (cAliasQry)->VLCRUZ,2)
														Else
															nVrRateio	:= SEV->EV_VALOR
														Endif
													ElseIf aAlias[nA] == "SE2"
														If nMoeda > 1
															If (cAliasQry)->TXMOEDA == 0
																nVrRateio	:=	xMoeda((nBasePis*SEV->EV_PERC),(cAliasQry)->MOEDA, 1,STOD((cAliasQry)->EMISSAO))
															Else
																nVrRateio	:=	Round((nBasePis*SEV->EV_PERC)*(cAliasQry)->TXMOEDA,2)
															Endif
														Else
															nVrRateio	:=	Round((nBasePis*SEV->EV_PERC),2)
														Endif
													Endif

													aAdd(aRegSped,{aAlias[nA],(cAliasQry)->MULTNAT,;
														SEV->EV_RECPAG,nVrRateio,SEV->EV_PERC,SED->ED_CODIGO,SED->ED_APURPIS,;
														SED->ED_APURCOF,SED->ED_CSTPIS,;
														SED->ED_CSTCOF,SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_TABCCZ,SED->ED_CODCCZ,;
														SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC,;
														If(SED->(FieldPos("ED_CLASFIS")) > 0,SED->ED_CLASFIS, "" ),;
															SEV->EV_PERC,Iif ((aAlias[nA] == "SE1"	.And. lSE1Proc) .Or.  (aAlias[nA] == "SE2" .And. lSE2Proc),(cAliasQry)->NUMPRO,""),;
															Iif ((aAlias[nA] == "SE1"	.And. lSE1Proc) .Or.  (aAlias[nA] == "SE2" .And. lSE2Proc),(cAliasQry)->INDPRO,""),;
															Iif(lRedPis .And. !Empty(SED->ED_REDPIS) .And. Empty(SED->ED_PERCPIS),(SED->ED_REDPIS/100),0),;
															Iif(lRedCof .And. !Empty(SED->ED_REDCOF)	.And. Empty(SED->ED_PERCCOF),(SED->ED_REDCOF/100),0),;
															Iif(lDescDoc,(cAliasQry)->HIST,"")})
													Endif

												Endif
												RestArea(aAreaSED)
											Endif
											SEV->(Dbskip())
										Enddo
										RestArea(aAreaSEV)
									ElseIf  !(Len(aRegApl)>0) //Nao trata de multiplas naturezas
										aAdd(aRegSped,{aAlias[nA],"2","",(cAliasQry)->VALOR,0,"","","","","","","","","","","","","","","","",""})
									Endif
								Endif

								//Proteção pois campo E5_MOEDA é caracter
								If aAlias[nA] == "SEI" .and. !lSEI_
									If SE5 -> E5_MOEDA $ ("M1;R")
										nMoeda := 1
									Elseif SE5 -> E5_MOEDA $ ("M")
										nMoeda := Val(SUBSTR(SE5->E5_MOEDA,2,1))
									Else
										nMoeda := Val(SE5 -> E5_MOEDA)
									Endif
								Endif
								If lEnvReg .Or. lSpdMt100 .Or. lSpdMt460

									For nJ	:= 1 To Len(aRegSped)

										If (aAlias[nA] = "SE1"  .And. lEnvFatCr)
											If AllTrim(aRegSped[nJ,37]) $ MVRECANT
												Loop
											Endif
										Else
											If  (aAlias[nA] = "SE1" .And. (cAliasQry)->TIPO $ MVRECANT) .Or. (aAlias[nA] = "SE5" .And. (cAliasQry)->TIPODOC $ MVRECANT)
												Loop
											Endif
										Endif

										If lTotF100 .And. aAlias[nA] $ "SEI_SE5_SE1" // Leva valor total para RH

											If aAlias[nA] = "SE5" .And. (cAliasQry)->RECPAG <> "R"
												Loop
											Endif

											nValTit	:=	0
											//Calcular o valor que deve ser enviado.
											If aAlias[nA] == "SEI"
												If lSEI_
													If Len(aRegApl) > 0
														nTotF100  += aRegSped[nJ,4]
														nValTit	 := aRegSped[nJ,4]
													Else
														nTotF100  += If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If((cAliasQry)->MOEDA>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
														nValTit	 := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If((cAliasQry)->MOEDA>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
													Endif
												Else
													nTotF100  += If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If( nMoeda>1 ,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
													nValTit	 := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If( nMoeda>1 ,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
												Endif
											ElseIf aAlias[nA] = "SE1"
												nTotF100  += If(aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) ,aRegSped[nJ,4],If((cAliasQry)->MOEDA>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
												nValTit 	 := If(aRegSped[nJ,2] == "1" ,aRegSped[nJ,4],If((cAliasQry)->MOEDA>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
											ElseIF  aAlias[nA] = "SE5"
												If (cAliasQry)->TIPODOC $ "DC_D2_C2" .And. lDescApl
													nTotF100 -= If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],(cAliasQry)->VALOR)
													nValTit	:= If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],(cAliasQry)->VALOR)
												Else
													nTotF100 += If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],(cAliasQry)->VALOR)
													nValTit	:=	If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],(cAliasQry)->VALOR)
												Endif
											Endif

											(cAliasRH)->(DbAppend())
											(cAliasRH)->VALOR		:= nValTit		  //VALOR
											(cAliasRH)->TABELA	:= aAlias[nA]

											//Caso seja realizada a totalizacao para o RH um arquivo DBF vai ser criado para o Relatorio de Desoneracao dos Dados do Financeiro.
											If	(aAlias[nA] = "SE1"  .And. lEnvFatCr)
												//FILIAL + PREFIXO + NUMERO + PARCELA + TIPO + CLIENTE + LOJA + DATA + NATUREZA + VALOR + TABELA
												(cAliasRH)->FILIAL		:=	aRegSped[nJ,33] //FILIAL
												(cAliasRH)->PREFIXO		:=	aRegSped[nJ,34] //PREFIXO
												(cAliasRH)->NUMERO		:=	aRegSped[nJ,35] //NUMERO
												(cAliasRH)->PARCELA		:=	aRegSped[nJ,36] //PARCELA
												(cAliasRH)->TIPO			:=	aRegSped[nJ,37] //TIPO
												(cAliasRH)->CLIENTE		:=	aRegSped[nJ,38] //CLIENTE
												(cAliasRH)->LOJA			:=	aRegSped[nJ,39] //LOJA
												(cAliasRH)->DTMOV    	:=	aRegSped[nJ,40] //DATA
												(cAliasRH)->NATUREZ		:=	aRegSped[nJ,6] //NATUREZ
											Else
												If Len(aRegApl) > 0
													(cAliasRH)->FILIAL			:=	aRegSped[1,6] //FILIAL
													(cAliasRH)->PREFIXO		:=	"" // PREFIXO
													(cAliasRH)->NUMERO		:=	aRegSped[1,8]	//NUMERO
													(cAliasRH)->PARCELA	:=	""
													(cAliasRH)->TIPO				:=	aRegSped[1,11]
													(cAliasRH)->CLIENTE		:=	aRegSped[1,12]  + aRegSped[1,13] //BANCO + AGENCIA
													(cAliasRH)->LOJA				:=	aRegSped[1,14] //CONTA
													(cAliasRH)->NATUREZ	:=	aRegSped[1,15] //NATUREZ
													(cAliasRH)->VALOR			:= 	aRegSped[nJ,4] //VALOR
													#IFDEF TOP
														(cAliasRH)->DTMOV  := aRegSped[1,16]	// -- Data
													#ENDIF
												Else
													(cAliasRH)->FILIAL		:=	(cAliasQry)->FILIAL  //FILIAL
													(cAliasRH)->PREFIXO		:=	Iif(aAlias[nA] = "SEI" ,"",(cAliasQry)->PREFIXO ) //PREFIXO
													(cAliasRH)->NUMERO		:=	(cAliasQry)->NUM		 //NUMERO
													(cAliasRH)->PARCELA		:=	Iif(aAlias[nA] = "SEI","",(cAliasQry)->PARCELA ) //PARCELA
													(cAliasRH)->TIPO			:=	Iif(aAlias[nA] = "SE5",(cAliasQry)->TIPODOC,(cAliasQry)->TIPO)  	//TIPO
													(cAliasRH)->CLIENTE		:=	Iif(aAlias[nA] = "SEI",Alltrim((cAliasQry)->BANCO)+" - "+Alltrim((cAliasQry)->AGENCIA),(cAliasQry)->CLIFOR)  //CLIENTE
													(cAliasRH)->LOJA			:=	Iif(aAlias[nA] = "SEI",Alltrim((cAliasQry)->CONTA),(cAliasQry)->LOJA)    //LOJA
													(cAliasRH)->NATUREZ		:=	Iif(aAlias[nA] = "SE5","",(cAliasQry)->NATUREZ) 	//NATUREZ

													#IFDEF TOP
														(cAliasRH)->DTMOV  := If(aAlias[nA] $ "SE5_SEI",(cAliasQry)->DATA,(cAliasQry)->EMISSAO)	// -- Data
													#ELSE
														(cAliasRH)->DTMOV  := (cAliasQry)->DTMOV	// -- Data
													#ENDIF
												Endif
											Endif
										Endif

										//Em caso de descontos incondicionais de titulos a receber o desconto nao deve ser enviado.
										If aAlias[nA] $ "SE5" .And. nVrDescInc > 0
											Loop
										Endif

										aF100		:= Array(31)
										cCstPis	:=	""
										cCstCof	:=	""
										lEnvBase	:=	.T.
										lBaseImp	:=	.T.

										If aAlias[nA] $ "SE1_SE2"
											cCstPis	:=	If(aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0),aRegSped[nJ,9],(cAliasQry)->CSTPIS)
											cCstCof	:=	If(aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0),aRegSped[nJ,10],(cAliasQry)->CSTCOF)

											If aAlias[nA] = "SE1" .And. (cCstPis $ "07_08_09_49"	.Or.	cCstCof $ "07_08_09_49")
												lEnvBase	:=	.F.
											ElseIf aAlias[nA] = "SE2" .And. (cCstPis $ "70_71_72_74_75_98" .Or.	cCstCof $ "70_71_72_74_75_98")
												lEnvBase	:=	.F.
											Endif
										Endif

										If aAlias[nA] $ "SE5_SEI"
											If aAlias[nA] == "SE5"
												If nDescBxC	> 0 //Desconto Condicional da tabela SE2
													nI	:=	Ascan(aNatNTrib, {|x| x[1]= "SE2"})
												ElseIf (cAliasQry)->RECPAG == "R"				//SE1
													nI	:=	1
												ElseIf (cAliasQry)->RECPAG == "P"		//SE2
													nI	:=	2
												Endif
											ElseIf aAlias[nA] == "SEI"
												If Len(aRegApl) >0
													nI				:=	Ascan(aNatNTrib, {|x| x[2]= Alltrim(aRegSped[nJ,15])})
												Else
													nI				:=	Ascan(aNatNTrib, {|x| x[2]= Alltrim((cAliasQry)->NATUREZ)})
												Endif
											Endif

											If !Empty(aNatNTrib[nI,3])
												If aAlias[nA] = "SE5"  .Or. Len(aRegApl) > 0
													nValorPis := Round(aRegSped[nJ,4] * (aNatNTrib[nI,13]/100),2)
												Else
													If !lSEI_
														nValorPis := Round(Iif( nMoeda > 1 ,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR)*(aNatNTrib[nI,13]/100),2)
													Else
														nValorPis := Round(Iif(nMoeda > 1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR)*(aNatNTrib[nI,13]/100),2)
													Endif
												Endif
											Else
												nValorPis := 0
											Endif

											If !Empty(aNatNTrib[nI,4])
												If aAlias[nA] = "SE5" .Or. Len(aRegApl) > 0
													nValorCof := Round(aRegSped[nJ,4] * (aNatNTrib[nI,14]/100),2)
												Else
													If !lSEI_
														nValorCof := Round(If(nMoeda>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR)* (aNatNTrib[nI,14]/100),2)
													Else
														nValorCof := Round(If(nMoeda>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR)* (aNatNTrib[nI,14]/100),2)
													Endif
												Endif
											Else
												nValorCof := 0
											Endif
										Else

											If (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
												nBase	:= aRegSped[nJ,4]
											Else
												nBase	:= nBasePis

												If (aAlias[nA] = "SE1" .And. (cAliasQry)->DESDOBR = "1")
													nBase	:=	(cAliasQry)->VALOR
													If lTpDesc .And. (cAliasQry)->TPDESC == "I" .And. (cAliasQry)->DECRESC > 0
														nBase	-= (cAliasQry)->DECRESC
													Endif
												Endif

												If aRegSped[nJ,2] == "1" //Multiplas naturezas
													If nMoeda = 1  .And. lBaseImp
														nBase	:= nBasePis * aRegSped[nJ,23]
													Else
														nBase	:=	aRegSped[nJ,4]
													Endif

													//Calculando reducao do valor em natureza que contenha somente apuracao de Pis e Cofins.
													If aRegSped[nJ,26] > 0 //Reducao de Apuracao de PIS.
														nBase	:=	nBase	* aRegSped[nJ,26]
													ElseIf aRegSped[nJ,27] > 0 //Reducao de Apuracao de COFINS.
														nBase	:=	nBase	* aRegSped[nJ,27]
													Endif
												Endif
											Endif

											nDescBx	:=	nJurosBx	:= 0
											If aAlias[nA] = "SE2"
												lTitRet	:=	.F.
												If nBase <= nVlMinImp
													SFQ->(DbSetOrder(2)) // FQ_FILIAL+FQ_ENTDES+FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES
													If SFQ->(DbSeek(xFilial("SFQ")+"SE2"+ (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA ))
														lTitRet	:=	.T. //Caso o titulo seja retido em outro.
													Endif
												Endif

												SFQ->(DbSetOrder(1)) // FQ_FILIAL + FQ_ENTORI + FQ_PREFORI + FQ_NUMORI + FQ_PARCORI + FQ_TIPOORI + FQ_CFORI + FQ_LOJAORI
												If SFQ->(DbSeek(xFilial("SFQ")+"SE2"+ SE2->E2_PREFIXO + SE2->E2_NUM + SE2->E2_PARCELA + SE2->E2_TIPO + SE2->E2_FORNECE + SE2->E2_LOJA))
													lTitRet	:=	.T.	//Caso o titulo seja titulo que retem outro.
												Endif

												nX	:=	 Ascan(aRecNTrib, {|x| x[1] == ((cAliasQry)->FILIAL + (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA ) })
												If nX > 0
													nJurosBx	:= If(aRegSped[nJ,2] == "1" .And. nMoeda = 1 ,(aRecNTrib[nX,3]*aRegSped[nJ,23]),aRecNTrib[nX,3])
													nDescBx	:=	If(aRegSped[nJ,2] == "1" .And. nMoeda = 1 ,(aRecNTrib[nX,2]*aRegSped[nJ,23]),aRecNTrib[nX,2])
													If nMoeda > 1
														nJurosBx	:= nJurosBx / nProp
														nDescBx	:=	nDescBx	/ nProp
													Endif
													nBase	:= (nBase - nDescBx + nJurosBx)
												Endif
											Endif

											If aAlias[nA] == "SE1"	.And. Alltrim(cBloco) = "F100"  .And. nVrCanc > 0
												nBase	:=	nBase - nVrCanc
											Endif

											If aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr)	 .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0) //Possui multiplas naturezas
												nValorPis := Round(nBase * (aRegSped[nJ,11]/100),2)
											ElseIf !Empty((cAliasQry)->APURPIS)
												nValorPis := Round(If(nMoeda>1,nBase*nProp,nBase) * ((cAliasQry)->PCAPPIS/100),2)
											Else
												nValorPis := 0
											Endif

											If aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0) //Possui multiplas naturezas
												nValorCof := Round(nBase * (aRegSped[nJ,12]/100),2)
											ElseIf !Empty((cAliasQry)->APURCOF)
												nValorCof := Round(If(nMoeda>1,nBase*nProp,nBase) * ((cAliasQry)->PCAPCOF/100),2)
											Else
												nValorCof := 0
											Endif
										Endif

										If aAlias[nA] $ "SE5"
											cCstPis	:=	aNatNTrib[nI,5]	//CST PIS
											cCstCof	:=	aNatNTrib[nI,6]	//CST COFINS
											If (cAliasQry)->RECPAG == "R" .And. (cCstPis $ "07_08_09_49"	.Or.	cCstCof $ "07_08_09_49") //Tabela SE1
												lEnvBase	:=	.F.
											Endif
										Endif

										If  nDescBxC > 0 .And. aAlias[nA] == "SE5"
											aF100[1]  := aRegSped[nJ,7]	// -- Data
										ElseIf Len(aRegApl) > 0
											aF100[1]  := aRegSped[nJ,16]
										ElseIf (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[1]  := aRegSped[nJ,2]
										Else
											If (aAlias[nA] = "SE2" .And. !Empty(cNatSe2) .And. lEnvDesd .And. nEnvFatCp = 0 .And. (cAliasQry)->DESDOBR = "S")
												aF100[1]  	:= (cAliasQry)->VENCTO
											Else
												#IFDEF TOP
													aF100[1]  := If(aAlias[nA] $ "SE5_SEI",(cAliasQry)->DATA,(cAliasQry)->EMISSAO)
												#ELSE
													aF100[1]  := (cAliasQry)->DTMOV
												#ENDIF
											Endif
										Endif

										If aAlias[nA] == "SEI" // -- Valor
											If lSEI_
												If Len(aRegApl) > 0
													aF100[2]  := aRegSped[nJ,4]
												Else
													aF100[2]  := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If(nMoeda>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
												Endif
											Else
												aF100[2]  := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If( nMoeda>1 ,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))
											Endif
										ElseIf aAlias[nA] = "SE1"
											If	aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr)
												If lEnvFatCr .And. lTpDesc .And. aRegSped[nJ,42] == "I" .And. aRegSped[nJ,41] > 0
													aF100[2]  := aRegSped[nJ,4] + aRegSped[nJ,41]
												Else
													aF100[2]  := aRegSped[nJ,4] 			// -- Valor
												Endif
											ElseIf nMoeda > 1
												aF100[2]  := If((nBase*nProp) <> (cAliasQry)->VLCRUZ ,(cAliasQry)->VLCRUZ,nBase*nProp)  // -- Valor
											Else
												aF100[2]  := (cAliasQry)->VALOR  	// -- Valor
											Endif
										ElseIf aAlias[nA] = "SE2"
											If	aRegSped[nJ,2] == "1"
												aF100[2]  := If(nX>0,aRegSped[nJ,4]+(aRecNTrib[nX,3]* aRegSped[nJ,23]),aRegSped[nJ,4])
											ElseIf	(aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
												aF100[2]  := If(nX>0,aRegSped[nJ,4]-(aRecNTrib[nX,2] * aRegSped[nJ,23])+(aRecNTrib[nX,3]* aRegSped[nJ,23]),aRegSped[nJ,4])
											Else
												aF100[2]  := If(nMoeda>1,(nBase+nDescBx)*nProp,nDescBx+If(nX>0,(aBasePis[2]-aRecNTrib[nX,2]+aRecNTrib[nX,3]),If(lTitRet,aBasePis[1],aBasePis[2])))
											Endif
										Else
											aF100[2]  := If(aRegSped[nJ,2] == "1" .Or. nDescBxC > 0,aRegSped[nJ,4],(cAliasQry)->VALOR)
										Endif

										If aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[3]  :=	aRegSped[nJ,9]	//CST PIS
										ElseIf aAlias[nA] $ "SE5_SEI"
											aF100[3]  :=  aNatNTrib[nI,5]
										Else
											If SED->(FieldPos("ED_CSTPIS")) > 0
												aF100[3]  :=  (cAliasQry)->CSTPIS
											Else
												aF100[3]  :=  ""
											Endif
										Endif

										If aAlias[nA] == "SEI" // -- Base PIS
											If lSEI_
												If Len(aRegApl) > 0
													aF100[4]  := aRegSped[nJ,4]
												Else
													aF100[4]  := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],Iif(nMoeda>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))// -- Base PIS
												Endif
											Else
												aF100[4]  := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],Iif( nMoeda>1 ,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))// -- Base PIS
											Endif
										ElseIf aAlias[nA] $ "SE1_SE2"
											If !lEnvBase
												aF100[4]  :=	0
											Else
												aF100[4]  := If(aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0),nBase,If(nMoeda > 1, nBase*nProp , nBase))// -- Base PIS
											Endif
										Else
											If !lEnvBase
												aF100[4]  :=	0
											Else
												aF100[4]  := If(aRegSped[nJ,2] == "1" .Or. nDescBxC > 0,aRegSped[nJ,4],(cAliasQry)->VALOR)	// -- Base PIS
											Endif
										Endif

										If	aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[5]  :=	aRegSped[nJ,11]	// -- % PIS
										ElseIf	aAlias[nA] $ "SE5_SEI"
											aF100[5]  := aNatNTrib[nI,13]
										Else
											aF100[5]  := (cAliasQry)->PCAPPIS
										Endif

										aF100[6]  :=  nValorPis            // -- Valor do PIS

										If	aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[7]  :=	aRegSped[nJ,10]	//CST COFINS
										ElseIf aAlias[nA] $ "SE5_SEI"
											aF100[7]  :=  aNatNTrib[nI,6]
										Else
											If SED->(FieldPos("ED_CSTCOF")) > 0
												aF100[7]  :=  (cAliasQry)->CSTCOF
											Else
												aF100[7]  :=  ""
											Endif
										Endif

										If aAlias[nA] == "SEI"	// -- Base COFINS
											If lSEI_
												If Len(aRegApl) > 0
													aF100[8]  := aRegSped[nJ,4]
												Else
													aF100[8]  := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If(nMoeda>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))// -- Base COFINS
												Endif
											Else
												aF100[8]  := If(aRegSped[nJ,2] == "1",aRegSped[nJ,4],If(nMoeda>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALOR))// -- Base COFINS
											Endif
										ElseIf aAlias[nA] $ "SE1_SE2"
											If	!lEnvBase
												aF100[8]  :=	0
											Else
												aF100[8]  := If(aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0),nBase,If(nMoeda>1,nBase*nProp,nBase))// -- Base COFINS
											Endif
										Else
											If !lEnvBase
												aF100[8]  :=	0
											Else
												aF100[8]  := If(aRegSped[nJ,2] == "1" .Or. nDescBxC > 0,aRegSped[nJ,4],(cAliasQry)->VALOR)// -- Base COFINS
											Endif
										Endif

										If	aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[9]  :=	aRegSped[nJ,12] 	// -- % COFINS
										ElseIf	aAlias[nA] $ "SE5_SEI"
											aF100[9]  := aNatNTrib[nI,14]
										Else
											aF100[9]  := (cAliasQry)->PCAPCOF
										Endif

										aF100[10] :=  nValorCof            // -- Valor do COFINS

										If	aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[11]  :=	aRegSped[nJ,22]	//Classificação Financeira - Natureza da Base de Crédito
										ElseIf aAlias[nA] $ "SE5_SEI"
											aF100[11]  := aNatNTrib[nI,11]
										Else
											If SED->(FieldPos("ED_CLASFIS")) > 0
												aF100[11]  :=  (cAliasQry)->CLASFIS
											Else
												aF100[11]  :=  ""
											Endif
										Endif

										If	aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[12] := aRegSped[nJ,7]			// -- Credito ou Debito PIS
											aF100[13] := aRegSped[nJ,8]			// -- Credito ou Debito  COFINS
										ElseIf aAlias[nA] $ "SE5_SEI"
											aF100[12] := aNatNTrib[nI,3]
											aF100[13] := aNatNTrib[nI,4]
										Else
											aF100[12] := (cAliasQry)->APURPIS
											aF100[13] := (cAliasQry)->APURCOF
										Endif

										If aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)		//Indice de Cumulatividade
											If aRegSped[nJ,14] == "1"
												cIndCmlt := "0" //Cumulativo
											ElseIf aRegSped[nJ,14] == "2"
												cIndCmlt := "1" //Não Cumulativo
											Else
												cIndCmlt := ""
											EndIf
											aF100[14] := cIndCmlt
										ElseIf aAlias[nA] $ "SE5_SEI"		//Indice de Cumulatividade
											If aNatNTrib[nI,12] == "1"
												cIndCmlt := "0" //Cumulativo
											ElseIf aNatNTrib[nI,12] == "2"
												cIndCmlt := "1" //Não Cumulativo
											Else
												cIndCmlt := ""
											EndIf
											aF100[14] := cIndCmlt
										Else
											If SED->(FieldPos("ED_INDCMLT")) > 0
												If (cAliasQry)->INDCMLT == "1"
													cIndCmlt := "0" //Cumulativo
												ElseIf (cAliasQry)->INDCMLT == "2"
													cIndCmlt := "1" //Não Cumulativo
												EndIf
												aF100[14] := cIndCmlt
											Else
												aF100[14] := ""
											Endif
										Endif

										aF100[15] := aAlias[nA]            //-- Tabela

										If nDescBxC > 0 .And. aAlias[nA] == "SE5"
											aF100[16] := aRegSped[nJ,8]  		//-- Recno
										ElseIf (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[16] := aRegSped[nJ,27]
										ElseIf  Len(aRegApl) > 0
											aF100[16] := aRegSped[nJ,17]
										Else
											#IFDEF TOP
												aF100[16] := (cAliasQry)->RECNO
											#ELSE
												aF100[16] := (cAliasQry)->NROREG
											#ENDIF
										Endif

										lCodPart	:= .T.
										If lSpdPart	//Ponto de entrada SPDF1004 permite enviar o campo COD_PART vazio.
											lCodPart	:=	ExecBlock ("SPDF1004",.F.,.F.,{(cAliasQry)})
										Endif

										If !lCodPart	.Or. aAlias[nA] == "SEI"	//Ponto de entrada para enviar o campo COD_PART vazio.
											aF100[17] := ""								//-- Cod. Fornecedor/Cliente + Loja
										Else
											If nDescBxC > 0 .And. aAlias[nA] == "SE5"
												aF100[17] := aRegSped[nJ,6]	//-- Cod. Fornecedor/Cliente - sem a loja
											ElseIf (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0) //titulo que tem fatura
												aF100[17] := aRegSped[nJ,28]
											Else
												aF100[17] := ((cAliasQry)->CLIFOR+(cAliasQry)->LOJA)
											Endif
										Endif

										If lCmpCcz
											If aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)	//multiplas naturezas
												aF100[18] := aRegSped[nJ,15]   		//-- Tabela Nat. Receita
												aF100[19] := aRegSped[nJ,16]   		//-- Codigo Grupo Nat. Receita
												aF100[20] := aRegSped[nJ,17]			//-- Grupo
												aF100[21] := aRegSped[nJ,18]			//-- Data Final da Escrituracao
											ElseIf	aAlias[nA] $ "SE5_SEI"
												aF100[18] := aNatNTrib[nI,7]
												aF100[19] := aNatNTrib[nI,8]
												aF100[20] := aNatNTrib[nI,9]
												aF100[21] := aNatNTrib[nI,10]
											Else
												aF100[18] := (cAliasQry)->TABCCZ
												aF100[19] := (cAliasQry)->CODCCZ
												aF100[20] := (cAliasQry)->GRUCCZ
												aF100[21] := (cAliasQry)->DTFCCZ
											Endif
										Else
											aF100[18] := ""
											aF100[19] := ""
											aF100[20] := ""
											aF100[21] := ""
										Endif

										If aAlias[nA] == "SE1"
											If lEnvFatCr//titulo que tem fatura
												aF100[22] := aRegSped[nJ,29]	//-- Data Final da Escrituracao
											Else
												aF100[22] := (cAliasQry)->TIPOA1
											Endif
										ElseIf (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
											aF100[22] := aRegSped[nJ,29]
										ElseIf  nDescBxC > 0 .And. aAlias[nA] == "SE5"
											aF100[22]  := ""
										Else
											aF100[22] := ""
										Endif

										If	aAlias[nA] $ "SE1_SE2" // Trata geracao de conta contabil
											aF100[23] := If(aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0),aRegSped[nJ,19],(cAliasQry)->EDCONTA)	//-- Cod. Cta Analista Contabil
										ElseIf	aAlias[nA] == "SE5"
											aF100[23] := aNatNTrib[nI,16]
										Else //SEI
											aF100[23] := ""
										Endif

										// Trata geracao de centro de custo
										If	aAlias[nA] == "SE2"
											// Soh grava centro de custo para CST entre 50 e 66 conforme definicao em layout SPED F100.
											If	( aF100[3] >= "50" .And. aF100[3] <= "66" ) .Or. ;
													( aF100[7] >= "50" .And. aF100[7] <= "66" )
												aF100[24] := If(aRegSped[nJ,2] == "1",aRegSped[nJ,20],(cAliasQry)->EDCCD)	//-- Codigo Centro de Custo
											Else
												aF100[24] := ""
											Endif
										Else
											aF100[24] := ""
										Endif

										If aAlias[nA] == "SE1"	.And. lScorgp //Identifica bem ou servico contratado por orgaos publicos.
											If lEnvFatCr//titulo que tem fatura
												aF100[25] := aRegSped[nJ,30]	//-- Data Final da Escrituracao
											Else
												aF100[25] := (cAliasQry)->SCORGP
											Endif
										Else
											aF100[25] := ""
										Endif

										If	aAlias[nA] $ "SE1_SE2"	//-- Cod. Natureza
											aF100[26] := If(aRegSped[nJ,2] == "1" .Or. (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0),aRegSped[nJ,6],(cAliasQry)->NATUREZ)	//-- Cod. Natureza
										ElseIf	aAlias[nA] $ "SE5_SEI"
											aF100[26] := aNatNTrib[nI,2]
										Else
											aF100[26] := ""
										Endif
										If	(aAlias[nA] == "SE1"	.And. lSE1Proc) .Or.  (aAlias[nA] == "SE2" .And. lSE2Proc)
											If (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
												aF100[27] :=	aRegSped[nJ,31] 	//-- Nro Processo	Referenciado
												aF100[28] :=	aRegSped[nJ,32]	//-- Tipo do Processo
											ElseIf aRegSped[nJ,2] == "1"
												aF100[27] :=	aRegSped[nJ,24]
												aF100[28] :=	aRegSped[nJ,25]
											Else
												aF100[27] := (cAliasQry)->NUMPRO
												aF100[28] := (cAliasQry)->INDPRO
											Endif
										Else
											aF100[27] := ""
											aF100[28] := ""
										Endif

										If	(aAlias[nA] == "SE1"	.And. lDescDoc) .Or.  (aAlias[nA] == "SE2" .And. lDescDoc)
											If aRegSped[nJ,2] == "1"
												aF100[29] := aRegSped[nJ,28]	//-- Descricao da Documento/Operacao
											ElseIf (aAlias[nA] = "SE1"  .And. lEnvFatCr) .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp > 0)
												aF100[29] := aRegSped[nJ,41]
											Else
												aF100[29] := (cAliasQry)->HIST
											Endif
										Else
											aF100[29] := ""
										Endif

										If aAlias[nA] == "SE1"	.And. Alltrim(cBloco) $ "1900_F550"  .And. !lBxOk
											aF100[30] :=	.T. //Status de Cancelado.
										Else
											aF100[30] := 	.F.
										Endif

										If aAlias[nA] == "SE1"	.And. Alltrim(cBloco) = "F550"  .And. nVrCanc > 0
											aF100[31] := nVrCanc
										Else
											aF100[31] := 0
										Endif

										aAdd(aReturn, aF100)

										nValorPis := 0
										nValorCof := 0

									Next
								EndIf

								If !(((aAlias[nA] = "SE1"  .And. lEnvFatCr .And. Alltrim(cOriTit) == "FINA280") .Or. (aAlias[nA] = "SE2" .And. nEnvFatCp >0 .And. Alltrim(cOriTit) == "FINA290")) ) .And. !(Len(aRegApl)> 0)
									//Ao processar as faturas na funcao que alimenta o vetor aRegSped foi executado o comando Dbskip entao nao posso executar esta acao novamente.
									(cAliasQry)->(dbSkip())
								Endif

							EndDo

							If (aAlias[nA] = "SE1"  .And. !lEnvFatCr)
								lEnvFatCr	:=	.T.
							Endif

							If aAlias[nA] = "SE2"
								//Preciso usar isso para saber quando o sistema jah processou os titulos de desdobramento nao posso utilizar a checagem do conteudo
								//da variavel lEnvDesd porque na primeira vez que passa na tabela SE2 o seu conteudo jah modifica para .T.
								nAliasSe2 ++ //Identifica qual momento que vou criar a query da fatura sem desdobramento e a com desdobramento.
								If nAliasSe2 == 2
									nEnvFatCp	:=	1 //No caso de titulos a pagar na primeira query as faturas sao selecionadas pela data de emissao entao os titulos desdobrados nao devem ser processados.
								ElseiF nAliasSe2 == 3
									nEnvFatCp	:=	2	//Na segunda query as faturas sao selecionadas pela data de baixa para processar somente os titulos desdobrados.
								Endif
							Endif

							(cAliasQry)->(dbCloseArea())

							#IFNDEF TOP
								fErase ( cAliasQry + GetDBExtension() )
								fErase ( cAliasQry + OrdBagExt() )
							#EndIf

							lRenTribR := .T.
							lRenTribD := .T.

						Next nA

						If lTotF100
							(cAliasRH)->(dbCloseArea())
							If file(cNomeRH)
								FErase(cNomeRH)
							Endif

							FRename(cArqRH+GetDBExtension(),cNomeRH)
						Endif

						Return Iif( lTotF100 , nTotF100 , aReturn )



						/*/
						ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
						±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
						±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
						±±³Fun‡…o	 ³FinSpdF600³ Autor ³ Totvs          	    ³ Data ³ 28/04/11 ³±±
						±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
						±±³Descri‡…o ³ Func„o para retornar os títulos que compoem o bloco F600   ³±±
						±±³          ³ do SPED PIS/COFINS                                         ³±±
						±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
						±±³Sintaxe	 ³ FinSpdF600() 											  ³±±
						±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
						±±³ Uso		 ³ SIGAFIS													  ³±±
						±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
						±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
						ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
						/*/
					Function FinSpdF600(nMesRef,nAnoRef)

						Local aReturn		:= {}
						Local aF600  		:= {}
						Local cQuery 		:= ""
						Local cAliasQry	:= ""
						Local aStruct		:= {}
						Local nX				:= 0
						Local nBase			:= 0
						Local cIndCmlt		:= ""
						Local dLastDay  	:= ""
						Local lSpdMotBx	:=	ExistBlock("SPDF6001")
						Local lSpdNat	   :=	ExistBlock("SPDF6002")
						Local lSpdCodRec  :=	ExistBlock("SPDF6003")
						Local cPeCodRec	:=	""
						Local cNatur		:= ""
						Local nI				:=	0
						Local nJ				:=	0
						Local lBaixa 		:= If(FindFunction("FPccBxCr"),FPccBxCr(),.F.)
						Local nPercBx		:=	0
						Local nJurosBx		:=	0
						Local nDescBx		:=	0
						Local cChaveBx		:= ""
						Local nPisBx		:=	0
						Local nCofBx		:= 0
						Local nVlrSe5		:=	0
						Local aRegBx		:=	{}
						Local aCampos		:= {}
						Local aTam     	:= {}
						Local lRecIss		:=	.F.
						Local cMotBx		:= SuperGetMv("MV_MTBXF6",,"")
						Local cBaixa		:=	""
						Local aMotBx 	:= ReadMotBx()
						Local cMotQry		:= ""
						Local cTipoQry		:= ""
						Local nTpMoeda		:= 0
						Local lEDIndRet	:= SED->( FieldPos( "ED_INDRET"  ) ) > 0
						Local lEDIndCMLT	:= SED->( FieldPos( "ED_INDCMLT" ) ) > 0
						Local lEDCond		:= SED->( FieldPos( "ED_COND"    ) ) > 0
						Local lMVDescIss	:= GetNewPar("MV_DESCISS",.F.)
						Local aUnidNeg		:= {}
						Local nVlMinImp 	:= GetNewPar("MV_VL10925",5000)
						Local nVrTransf	:=	0
						Local aSpdMotTRF	:= {}
						Local cAliasSPED	:= ""
						Local lRetSFQ		:=.F. 						//titulo que retem valores de outros titulos
						Local cFilSe5	:= xFilial("SE5")
						Local cFilSe1	:= xFilial("SE1")
						Local lSe1MsFil:=	SE1->(FieldPos("E1_MSFIL")) > 0
						Local lSe5MsFil:=	SE5->(FieldPos("E5_MSFIL")) > 0
						Local cTipoTit	:=	""
						Local lDescIss		:= SuperGetMv("MV_DESCISS",,.F.)
						Local lDeIssBs		:= SuperGetMv("MV_DEISSBS",,.T.)
						Local cTpAbIss		:=	SuperGetMv("MV_TPABISS",,"2") //Verificando se os titulos criados no modulo FATURAMENTO os impostos do PCC sao calculados atraves do valor do titulo com a reducao do ISS.
						Local aTitRet		:=	{} 						//titulos que retem outros
						Local cIndCmlDes  := cIndCmlOri	:= ""    //indicadores de cumulatividade
						Local	nVrPIS		:=	nVrCOFINS	:=	nVrCSLL :=	nVrIR	:=	nVrISS :=	nVrINSS	:=	0
						Local lTitRet		:= .F. 						//titulo retido em outro
						Local cRASpd		:= SuperGetMv("MV_NTRASPD",,'')//Indica as naturezas de titulos RA que devo antecipar os creditos na geração deste bloco.
						Local aAreaSEV 	:= SEV->(GetArea())
						Local nVrRateio	:=	 0
						Local nTxMoeda		:=	 0
						Local nPercPis		:=	 0
						Local nPercCof		:=	 0
						Local cChaveOri		:=	cChaveDes	:=	""
						Local lScorgp	:=	SE1->(FieldPos("E1_SCORGP")) > 0 //Identifica bem ou servico contratado por orgaos publicos.
						Local aAreaSC5 	:= SC5->(GetArea())

						Private cPeMBx		:=	""
						Private cBxSql		:= ""
						Private cDataIni	:= ""
						Private cDataFim 	:= ""
						Private lA1IndRet	:= SA1->( FieldPos( "A1_INDRET"  ) ) > 0
						Private cMotBaixa	:= ""
						Private cPeNat		:=	""
						Private lUnidNeg 	:= Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa

						DEFAULT nMesRef := Month(dDataBase)
						DEFAULT nAnoRef := Year(dDataBase)

						If lUnidNeg
							cFilSe5	:= SM0->M0_CODFIL
							cFilSe1 := SM0->M0_CODFIL
						Else
							cFilSe5	:= xFilial("SE5")
							cFilSe1 := xFilial("SE1")
						Endif

						cDataIni := StrZero(nAnoRef,4)+StrZero(nMesRef,2)+"01"
						dLastDay := LastDay(Ctod("01/"+StrZero(nMesRef,2)+"/"+StrZero(nAnoRef,4)))
						cDataFim := StrZero(nAnoRef,4)+StrZero(nMesRef,2)+StrZero(Day(dLastDay),2)

						//Tratamentos para o ponto de entrada SPDF6001
						cPeMBx	:=	""
						If lSpdMotBx
							cPeMBx := ExecBlock ("SPDF6001",.F.,.F.)
						Endif

						If !Empty(cPeMBx) // Inserindo aspas e virgulas para o select da query.
							cMotBaixa:="'"
							For nI:=1 To Len(cPeMBx)
								If Subst(cPeMBx,nI,1) $ ";,-_|./"
									cMotBaixa+="','"
								Else
									cMotBaixa+=Subst(cPeMBx,nI,1)
								Endif
							Next
						Endif
						cMotBaixa	+=	"'"

						//Tratamentos para o ponto de entrada SPDF6002
						cPeNat	:=	""
						If lSpdNat
							cPeNat := ExecBlock ("SPDF6002",.F.,.F.)
						Endif

						If !Empty(cPeNat) // Inserindo aspas e virgulas para o select da query.
							cNatur	:=	"'"
							For nI:=1 To Len(cPeNat)
								If Subst(cPeNat,nI,1) $ ";,-_|./"
									cNatur	+=	"','"
								Else
									cNatur	+=	Subst(cPeNat,nI,1)
								Endif
							Next
						Endif
						cNatur	+=	"'"

						dbSelectArea("SED")

						If !Empty(cMotBx)// Para o parametro MV_MTBXF6
							#IFDEF TOP
								cBxSql	+=""
								cBaixa	:=	""
								For nI:=1 To Len(cMotBx)
									If Subst(cMotBx,nI,1) $ ";,-_|./"
										If !Empty(cBaixa)
											nJ :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper(cBaixa) })
											If nJ >0 .And. Substr(aMotBx[nJ],26,01) == "N" //Nao movimenta banco.
												If !Empty(cBxSql)
													cBxSql	+= ",'"
												Else
													cBxSql	+= "'"
												Endif
												cBxSql	+= cBaixa + "'"
											Endif
											cBaixa	:=	""
										Endif
									Else
										cBaixa+=Subst(cMotBx,nI,1)
									Endif
								Next
								If !Empty(cBaixa)
									If !Empty(cBxSql)
										cBxSql	+= ",'"
									Else
										cBxSql	+= "'"
									Endif
									cBxSql	+= cBaixa
								Endif
								cBxSql	+=	"'"
							#EndIf
						Endif

						cPeCodRec:=	"" //Tratamentos para o ponto de entrada SPDF6003
						If lSpdCodRec
							cPeCodRec := ExecBlock ("SPDF6003",.F.,.F.)
							If Len(cPeCodRec) > 4
								cPeCodRec := Subst(cPeCodRec,1,4)
							Endif
						Endif

						#IFNDEF TOP
							If SED->(FieldPos("ED_APURCOF")) <= 0 .Or.	SED->(FieldPos("ED_APURPIS")) <= 0 .Or. SED->(FieldPos("ED_PCAPPIS")) <= 0 .Or.;
									SED->(FieldPos("ED_PCAPCOF")) <= 0 .Or.	SED->(FieldPos("ED_CSTPIS")) <= 0 .Or. SED->(FieldPos("ED_CSTCOF")) <= 0 .Or.;
									SED->(FieldPos("ED_CLASFIS")) <= 0 .Or.	SED->(FieldPos("ED_TABCCZ")) <= 0 .Or. SED->(FieldPos("ED_CODCCZ")) <= 0 .Or.;
									SED->(FieldPos("ED_GRUCCZ")) <= 0 .Or.	SED->(FieldPos("ED_DTFCCZ")) <= 0 .Or. SED->(FieldPos("ED_INDCMLT")) <= 0 .Or.;
									SED->(FieldPos("ED_INDRET")) <= 0
								Return aReturn
							Endif

							//***********************************************************************
							// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							// ³ Cria o arquivo de trabalho ³
							// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cAliasQry	:= "SE5QRY"
							aCampos := {}
							aTam:=TamSX3("E5_FILIAL")
							AADD(aCampos,{"FILIAL"  	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_PREFIXO")
							AADD(aCampos,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_NUMERO")
							AADD(aCampos,{"NUMERO"   	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_PARCELA")
							AADD(aCampos,{"PARCELA" 	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_TIPO")
							AADD(aCampos,{"TIPO"   		,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_CLIFOR")
							AADD(aCampos,{"CLIENTE" 	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_LOJA")
							AADD(aCampos,{"LOJA"   		,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_TIPODOC")
							AADD(aCampos,{"TIPODOC"  	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E5_NATUREZ")
							AADD(aCampos,{"NATUREZ"  	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("A1_CGC")
							AADD(aCampos,{"CNPJ"  		,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("A1_RECPIS")
							AADD(aCampos,{"RECPIS"   	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("A1_RECCOFI")
							AADD(aCampos,{"RECCOFI"   	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("A1_RECISS")
							AADD(aCampos,{"RECISS"   	,"C",aTam[1],aTam[2]})
							AADD(aCampos,{"NROREG"  	,"N",9,0})
							aTam:=TamSX3("ED_PERCPIS")
							AADD(aCampos,{"PERCPIS"   	,"N",aTam[1],aTam[2]})
							aTam:=TamSX3("ED_PERCCOF")
							AADD(aCampos,{"PERCCOF"   	,"N",aTam[1],aTam[2]})
							aTam:=TamSX3("ED_INDRET")
							AADD(aCampos,{"INDRET"   	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E1_BASEPIS")
							AADD(aCampos,{"BASEPIS"   	,"N",aTam[1],aTam[2]})
							aTam:=TamSX3("E1_ORIGEM")
							AADD(aCampos,{"ORIGEM"   	,"C",aTam[1],aTam[2]})
							aTam:=TamSX3("E1_MULTNAT")
							AADD(aCampos,{"MULTNAT"   	,"C",aTam[1],aTam[2]})

							If lEDCond
								aTam:=TamSX3("ED_COND")
								AADD(aCampos,{"COND"   		,"C",aTam[1],aTam[2]})
							Endif

							If lEDIndCMLT
								aTam:=TamSX3("ED_INDCMLT")
								AADD(aCampos,{"INDCMLT"   	,"C",aTam[1],aTam[2]})
							Endif
							aTam:=TamSX3("E5_DATA")
							AADD(aCampos,{"DTMOV" 		,"C",8,0})

							If lA1IndRet
								aTam:=TamSX3("A1_INDRET")
								AADD(aCampos,{"A1INDRET"   	,"C",aTam[1],aTam[2]})
							Endif
						#EndIf

						//PIS e COFINS na emissão
						If !lBaixa

							#IFDEF TOP

								cAliasQry	:= "SE5QRY"
								aStruct	 	:= SE5->(dbStruct())
								cQuery	 	:= "SELECT "

								//Campos de referência
								cQuery	 	+= "SE5.E5_FILIAL FILIAL , SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUMERO, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, "
								cQuery	 	+= "SE5.E5_CLIFOR CLIENTE, SE5.E5_LOJA LOJA, SE5.E5_TIPODOC TIPODOC, SE5.E5_DATA DATA, SE5.E5_FILORIG FILORIG, "
								cQuery		+= "SE5.E5_VALOR VALORE5 , SE5.E5_NATUREZ NATUREZ, SE5.E5_MOTBX MOTBX, SE5.E5_DOCUMEN DOCUMEN, SE5.R_E_C_N_O_ RECNO, "
								cQuery		+= "SE5.E5_PRETCOF PRETCOF , SE5.E5_PRETPIS PRETPIS, "
								cQuery		+= "SE1.E1_PIS PIS, SE1.E1_COFINS COFINS, SE1.E1_CSLL CSLL, SE1.E1_SALDO SALDO, SE1.E1_VALOR VALORE1, SE1.E1_BASEPIS BASEPIS, "
								cQuery		+= "SE1.E1_IRRF VRIR, SE1.E1_INSS VRINSS, SE1.E1_ISS VRISS, SE1.E1_MOEDA TPMOEDA, SE1.E1_VLCRUZ VLCRUZ, SE1.E1_ORIGEM ORIGEM, "
								cQuery		+= "SE1.E1_MULTNAT MULTNAT, SE1.E1_PEDIDO PEDIDO "

								If lScorgp
									cQuery		+= ", SE1.E1_SCORGP SCORGP "
								Endif

								cQuery	 	+= "FROM "
								cQuery 		+= RetSqlName("SE5") + " SE5, "
								cQuery 		+= RetSqlName("SE1") + " SE1 "

								cQuery	 	+= "WHERE "

								If !Empty( Iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) )
									cQuery 	+= "SE5.E5_FILIAL = '"  + xFilial("SE5") + "' AND "
								Else
									If lSe5MsFil
										cQuery 	+= "SE5.E5_MSFIL = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
									Else
										cQuery 	+= "SE5.E5_FILORIG = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
									Endif
								EndIf

								If !Empty( Iif( lUnidNeg, FWFilial("SE1") , xFilial("SE1") ) )
									cQuery 	+= "SE1.E1_FILIAL = '"  + xFilial("SE1") + "' AND "
								Else
									If lSe1MsFil
										cQuery 	+= "SE1.E1_MSFIL = '" + Iif(lUnidNeg, cFilSe1, cFilAnt) + "' AND "
									Else
										cQuery 	+= "SE1.E1_FILORIG = '" + Iif(lUnidNeg, cFilSe1, cFilAnt) + "' AND "
									Endif
								EndIf

								cQuery 		+= "SE5.E5_PREFIXO = SE1.E1_PREFIXO AND "
								cQuery 		+= "SE5.E5_NUMERO = SE1.E1_NUM AND "
								cQuery 		+= "SE5.E5_PARCELA = SE1.E1_PARCELA AND "
								cQuery 		+= "SE5.E5_TIPO = SE1.E1_TIPO AND "
								cQuery	 	+= "SE5.E5_CLIFOR = SE1.E1_CLIENTE AND "
								cQuery		+= "SE5.E5_LOJA = SE1.E1_LOJA AND "

								cQuery		+= "( ( SE1.E1_PIS > 0 AND SE1.E1_SABTPIS = 0 ) OR ( SE1.E1_COFINS > 0 AND SE1.E1_SABTCOF = 0 ) ) AND "

								cQuery	 	+= "SE5.E5_RECPAG = 'R' AND "

								cTipoTit		:=	""
								cTipoTit		:=	MVABATIM + "|" + MV_CRNEG + "|" + MVPROVIS
								cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(cTipoTit,If("|"$cTipoTit,"|",","))  + " AND "

								cQuery		+= "SE5.E5_SITUACA <> 'C' AND "
								cQuery	 	+= "SE5.E5_DATA BETWEEN '" + cDataIni + "' AND '" + cDataFim + "' AND "

								cMotQry		:= "('FAT','LIQ'"

								If !Empty(cPeMBx)
									cMotQry += "," + cMotBaixa
								Endif

								If !Empty(cBxSql)
									cMotQry += "," + cBxSql
								EndIf

								cMotQry		+= ")"

								cQuery		+= "SE5.E5_MOTBX NOT IN " + cMotQry + " AND "

								//Exclui os titulos que possuem estorno
								cQuery	 	+= "SE5.E5_SEQ NOT IN "
								cQuery 		+= "( SELECT SE5AUX.E5_SEQ FROM "
								cQuery		+=      RetSqlName("SE5") + " SE5AUX WHERE "
								cQuery		+= 		" SE5AUX.E5_FILIAL = SE5.E5_FILIAL AND "
								cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
								cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
								cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
								cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
								cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
								cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
								cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
								cQuery		+= 		" SE5AUX.D_E_L_E_T_ = ' ' "
								cQuery 		+= ") AND "

								cQuery		+= "SE1.D_E_L_E_T_ = ' ' AND "
								cQuery		+= "SE5.D_E_L_E_T_ = ' ' "

								cQuery 		+= " ORDER BY FILIAL, RECNO, PREFIXO, NUMERO, PARCELA, TIPO, CLIENTE, LOJA"

								cQuery 		:= ChangeQuery(cQuery)
								dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

								For nX := 1 To len(aStruct)
									If aStruct[nX][2] <> "C" .And. FieldPos(aStruct[nX][1]) > 0
										TcSetField(cAliasQry,aStruct[nX,1],aStruct[nX,2],aStruct[nX,3],aStruct[nX,4])
									EndIf
								Next nX

								// Tabelas posicionadas no laco de processamento da query
								SE1 -> ( dbSetOrder ( 1 ) ) //FILIAL+PREFIXO+NUM+PARCELA+TIPO
								SED -> ( dbSetOrder ( 1 ) )
								SA1 -> ( dbSetOrder ( 1 ) )

							#ELSE

								//***********************************************************************
								// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								// ³ Cria o arquivo de trabalho ³
								// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

								aTam:=TamSX3("E5_VALOR")
								AADD(aCampos,{"VALORE5"   ,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E5_DATA")
								aTam:=TamSX3("E1_PIS")
								AADD(aCampos,{"PIS"   		,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_COFINS")
								AADD(aCampos,{"COFINS"   	,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_CSLL")
								AADD(aCampos,{"CSLL"   		,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_VALOR")
								AADD(aCampos,{"VALORE1"   	,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_SALDO")
								AADD(aCampos,{"SALDO"   	,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_INSS")
								AADD(aCampos,{"VRINSS"   		,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_IRRF")
								AADD(aCampos,{"VRIR"   	,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_ISS")
								AADD(aCampos,{"VRISS"   		,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_MOEDA")
								AADD(aCampos,{"TPMOEDA"   	,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_VLCRUZ")
								AADD(aCampos,{"VLCRUZ"   	,"N",aTam[1],aTam[2]})
								aTam:=TamSX3("E5_MOTBX")
								AADD(aCampos,{"MOTBX"   	,"C",aTam[1],aTam[2]})
								aTam:=TamSX3("E5_FILORIG")
								AADD(aCampos,{"FILORIG"   	,"C",aTam[1],aTam[2]})
								aTam:=TamSX3("E5_DOCUMEN")
								AADD(aCampos,{"DOCUMEN"   	,"C",aTam[1],aTam[2]})
								aTam:=TamSX3("E5_PRETCOF")
								AADD(aCampos,{"PRETCOF"   ,"C",aTam[1],aTam[2]})
								aTam:=TamSX3("E5_PRETPIS")
								AADD(aCampos,{"PRETPIS"   ,"C",aTam[1],aTam[2]})
								aTam:=TamSX3("E1_PEDIDO")
								AADD(aCampos,{"PEDIDO"   		,"C",aTam[1],aTam[2]})

								If lScorgp
									aTam:=TamSX3("E1_SCORGP")
									AADD(aCampos,{"SCORGP"   	,"C",aTam[1],aTam[2]})
								Endif

								cTrabalho := CriaTrab(aCampos)
								dbUseArea(.T.,,cTrabalho,cAliasQry,.F.,.F.)
								dbCreateInd(cTrabalho, "DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA", {||DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA})

								SE1 -> ( dbSetOrder ( 1 ) ) //FILIAL+PREFIXO+NUM+PARCELA+TIPO
								SA1 -> ( dbSetOrder ( 1 ) ) //FILIAL+COD+LOJA
								SED -> ( dbSetOrder ( 1 ) ) //FILIAL+CODIGO

								dbSelectArea("SE5")
								SE5 -> ( dbSetOrder ( 1 ) ) //FILIAL+DTOS(DATA)+BANCO+AGENCIA+CONTA+NUMCHEQ
								SE5 -> ( dbSeek ( xFilial("SE5") + cDataIni, .T. ) )

								Do While ( SE5->(!Eof()) .And. Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim .And. SE5->E5_FILIAL = xFilial("SE5"))

									If !Empty(cPeMBx) .And. !SE5->E5_MOTBX $ cMotBaixa
										SE5->(dbSkip())
										Loop
									Endif

									If SE5->E5_TIPODOC = 'ES' .Or. SE5->E5_MOTBX $ 'FAT_LIQ'
										SE5->(dbSkip())
										Loop
									EndIf

									If (SE5->E5_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS)) .Or. SE5->E5_SITUACA = 'C'
										SE5->(dbSkip())
										Loop
									EndIf

									SED->(DbSeek(xFilial("SED")+ SE5->E5_NATUREZ))
									If SED->ED_CODIGO <> SE5->E5_NATUREZ
										SE5->(Dbskip())
										Loop
									Endif

									If !Empty(cPeNat) .And. !SED->ED_INDRET $ cNatur
										SE5->(dbSkip())
										Loop
									Endif

									If !SE1 -> ( dbSeek ( xFilial("SE1") + SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO)) )
										SE5->(dbSkip())
										Loop
									Endif

									If (SE1->E1_PIS <= 0 .Or. SE1->E1_COFINS <= 0)
										SE5->(dbSkip())
										Loop
									Endif

									If (SE1->E1_SABTPIS <> 0 .Or. SE1->E1_SABTCOF <> 0 .Or. SE1->E1_SABTCSL <> 0)
										SE5->(dbSkip())
										Loop
									Endif

									If !SA1 -> ( dbSeek ( xFilial("SA1") + SE1->(E1_CLIENTE+E1_LOJA)) )
										SE5->(dbSkip())
										Loop
									Endif

									If !Empty(cMotBx) .And. SE5->E5_MOTBX <> 'NOR'
										nI :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper(SE5->E5_MOTBX) })
										If SE5->E5_MOTBX $ cMotBx .And. nI > 0
											If Substr(aMotBx[nI],26,01) == "N" //Nao movimenta banco.
												SE5->(dbSkip())
												Loop
											Endif
										Endif
									Endif

									RecLock (cAliasQry, .T. )
									(cAliasQry) ->	FILIAL		:= SE5 -> E5_FILIAL
									(cAliasQry) ->	PREFIXO		:= SE5 -> E5_PREFIXO
									(cAliasQry) ->	NUMERO		:= SE5 -> E5_NUMERO
									(cAliasQry) ->	PARCELA		:= SE5 -> E5_PARCELA
									(cAliasQry) ->	TIPO			:= SE5 -> E5_TIPO
									(cAliasQry) ->	CLIENTE		:= SE5 -> E5_CLIENTE
									(cAliasQry) ->	LOJA			:= SE5 -> E5_LOJA
									(cAliasQry) ->	TIPODOC		:= SE5 -> E5_TIPODOC
									(cAliasQry) ->	VALORE5		:= SE5 -> E5_VALOR
									(cAliasQry) ->	NATUREZ		:= SE5 -> E5_NATUREZ
									(cAliasQry) ->DTMOV    		:= Dtos(SE5 -> E5_DATA)
									(cAliasQry) ->	NROREG		:= SE5 -> (Recno())
									(cAliasQry) ->	PIS			:= SE1 -> E1_PIS
									(cAliasQry) ->	COFINS		:= SE1 -> E1_COFINS
									(cAliasQry) ->	CSLL			:= SE1 -> E1_CSLL
									(cAliasQry) ->	VALORE1		:= SE1 -> E1_VALOR
									(cAliasQry) ->	SALDO			:= SE1 -> E1_SALDO
									(cAliasQry) ->	VRIR			:= SE1 -> E1_IRRF
									(cAliasQry) ->	VRINSS		:= SE1 -> E1_INSS
									(cAliasQry) ->	VRISS			:= SE1 -> E1_ISS
									(cAliasQry) ->	TPMOEDA		:= SE1 -> E1_MOEDA
									(cAliasQry) ->	VLCRUZ		:= SE1 -> E1_VLCRUZ
									(cAliasQry) ->	CNPJ			:= SA1 -> A1_CGC
									(cAliasQry) ->	RECPIS		:= SA1 -> A1_RECPIS
									(cAliasQry) ->	RECCOFI		:= SA1 -> A1_RECCOFI
									(cAliasQry) ->	RECISS		:= SA1 -> A1_RECISS
									(cAliasQry) ->	PERCPIS		:= SED -> ED_PERCPIS
									(cAliasQry) ->	PERCCOF		:= SED -> ED_PERCCOF
									(cAliasQry) ->	INDRET		:= SED -> ED_INDRET
									(cAliasQry) ->	BASEPIS		:= SE1 -> E1_BASEPIS
									(cAliasQry) ->	MOTBX			:= SE5 -> E5_MOTBX
									(cAliasQry) ->	FILORIG		:= SE5 -> E5_FILORIG
									(cAliasQry) ->	ORIGEM		:= SE1 -> E1_ORIGEM
									(cAliasQry) -> DOCUMEN		:=	SE5 -> E5_DOCUMEN
									(cAliasQry) -> MULTNAT		:= SE1 -> E1_MULTNAT
									(cAliasQry) ->	PRETCOF		:= SE5 -> E5_PRETCOF
									(cAliasQry) ->	PRETPIS		:= SE5 -> E5_PRETPIS
									(cAliasQry) -> PEDIDO		:= SE1 -> E1_PEDIDO

									If lEDIndCMLT
										(cAliasQry) ->	INDCMLT		:= SED -> ED_INDCMLT
									Endif

									If lEDCond
										(cAliasQry) ->	COND			:= SED -> ED_COND
									Endif

									If lA1IndRet
										(cAliasQry) ->	A1INDRET	:= SA1 -> A1_INDRET
									Endif

									If lScorgp
										(cAliasQry) ->	SCORGP 	:= SE1 -> E1_SCORGP
									Endif

									(cAliasQry) -> (MsUnlock( ))

									SE5->(dbSkip())
								EndDo

							#ENDIF

							dbSelectArea(cAliasQry)
							cAliasSPED := cAliasQry
							aTitRet		:= {}
							While !(cAliasQry)->(Eof())

								If lScorgp .And. (cAliasQry)->SCORGP  = "1" .And. (cAliasQry)->MOTBX == "CMP"  .And. "NCC" $ (cAliasQry)->DOCUMEN
									(cAliasQry)->(Dbskip())
									Loop
								Endif

								If !Empty(cRASpd) .And. 'RA' $ (cAliasQry)->DOCUMEN .And.;  //Caso tenham naturezas tenho que antecipar o credito do tipo RA.
									SE1->(DbSeek(xFilial("SE1") + (cAliasQry)->DOCUMEN )) .And. Alltrim(SE1->E1_NATUREZ) $ cRASpd
									(cAliasQry)->(Dbskip())
									Loop
								Endif

								lTitRet		:=	.F.
								cIndCmlDes	:=	cIndCmlOri	:= ""
								If (cAliasQry)->VALORE1 <= nVlMinImp //Caso o titulo seja retido em outro nao devo enviar no bloco F600.
									SFQ->(DbSetOrder(2)) // FQ_FILIAL+FQ_ENTDES+FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES
									//Verificar se os dois titulos possuem naturezas com o mesmo tipo de cumulatividade.
									If SFQ->(DbSeek(xFilial("SFQ")+"SE1"+ (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA ))

										If SE1->(DbSeek(xFilial("SE1") + SFQ->FQ_PREFDES + SFQ->FQ_NUMDES + SFQ->FQ_PARCDES + SFQ->FQ_TIPODES))
											cIndCmlDes	:=	If(SED->(Dbseek(xFilial("SED")+SE1->E1_NATUREZ)),SED->ED_INDCMLT,'') //Natureza destino
											cChaveDes	:=(xFilial("SE1") + SFQ->FQ_PREFDES + SFQ->FQ_NUMDES + SFQ->FQ_PARCDES + SFQ->FQ_TIPODES)
										Endif

										If SE1->(DbSeek(xFilial("SE1") + SFQ->FQ_PREFORI + SFQ->FQ_NUMORI + SFQ->FQ_PARCORI + SFQ->FQ_TIPOORI))
											cIndCmlOri	:= If(SED->(Dbseek(xFilial("SED")+SE1->E1_NATUREZ)),SED->ED_INDCMLT,'')	//Natureza origem
											cChaveOri	:= (xFilial("SE1") + SFQ->FQ_PREFORI + SFQ->FQ_NUMORI + SFQ->FQ_PARCORI + SFQ->FQ_TIPOORI)
										Endif

										If Alltrim(cIndCmlDes) == Alltrim(cIndCmlOri)
											If !(cChaveDes == cChaveOri .And. (Empty((cAliasQry)->PRETPIS)  .And. Empty((cAliasQry)->PRETCOF)))
												(cAliasQry)->(Dbskip())
											Endif
										Else
											Aadd(aTitRet,{(xFilial("SE1") + SFQ->FQ_PREFORI + SFQ->FQ_NUMORI + SFQ->FQ_PARCORI + SFQ->FQ_TIPOORI + SFQ->FQ_CFORI+ SFQ->FQ_LOJAORI),;
												(cAliasQry)->PIS,(cAliasQry)->COFINS,(cAliasQry)->CSLL,	(cAliasQry)->VRIR,(cAliasQry)->VRISS,(cAliasQry)->VRINSS})
											lTitRet	:=	.T.
										Endif
									Endif
								Endif

								lRetSFQ		:=.F. //Retem valores de impostos de outros titulos.
								SFQ->(DbSetOrder(1)) // FQ_FILIAL + FQ_ENTORI + FQ_PREFORI + FQ_NUMORI + FQ_PARCORI + FQ_TIPOORI + FQ_CFORI + FQ_LOJAORI
								If SFQ->(DbSeek(xFilial("SFQ")+"SE1"+ (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA))
									lRetSFQ	:=	.T.
								Endif

								If (cAliasQry)->MOTBX $ 'NOR_CMP'
									cChaveBx		:=	SpdMotNOR((cAliasQry)->( FILIAL + PREFIXO + NUMERO + PARCELA + TIPO))
									If Empty(cChaveBx)
										(cAliasQry)->(Dbskip())
										Loop
									Endif
								ElseIf (cAliasQry)->MOTBX = 'TRF'
									aSpdMotTRF	:=	SpdMotTRF((cAliasQry)->( PREFIXO + NUMERO + PARCELA + TIPO + FILORIG))

									If !aSpdMotTRF[3] .Or. !aSpdMotTRF[1]
										(cAliasQry)->( dbSkip())
										Loop
									Endif

									If aSpdMotTRF[1]
										cAliasQry := aSpdMotTRF[2] // novo alias a ser tratado
									Endif
								Endif

								cChaveBx		:=	(cAliasQry)->FILIAL + (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA
								nJurosBx		:=	 nDescBx		:=		nVlrSe5		:=	0
								nTpMoeda		:=	(cAliasQry)->TPMOEDA
								aSpdMotTRF	:= {}
								aRegBx		:=	{}
								nVrPIS		:=		nVrCOFINS	:=	nVrCSLL :=	nVrIR	:=	nVrISS :=	nVrINSS	:=	0

								// Posiciona no cliente e loja do titulo que serao processadas as movimentacoes no loop abaixo
								SA1->( MsSeek( xFilial("SA1") + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA ) )

								While  (cAliasQry)->( !EoF()) .AND. cChaveBx ==  ( (cAliasQry)->FILIAL + (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA )

									SED->( MsSeek( xFilial("SED") + (cAliasQry)->NATUREZ ) )

									If lEDIndRet
										If !Empty(cPeNat) .And. !SED->ED_INDRET $ cNatur
											(cAliasQry)->( dbSkip() )
											Loop
										Endif
									EndIf

									If (cAliasQry)->TIPO $ ( MVABATIM + MV_CRNEG + MVPROVIS )
										(cAliasQry)->( dbSkip() )
										Loop
									EndIf

									lRecIss := (SA1->A1_RECISS == "1" .And. lMVDescIss)

									If !Empty((cAliasQry)->PEDIDO) .And. Alltrim((cAliasQry)->ORIGEM) == "MATA460"
										SC5->(Dbsetorder(3)) //C5_FILIAL+C5_CLIENTE+C5_LOJACLI+C5_NUM
										If SC5->(Dbseek(xFilial("SC5") + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA + (cAliasQry)->PEDIDO )) .And. !Empty(SC5->C5_RECISS)
											lRecIss := (SC5->C5_RECISS == "1" .And. lMVDescIss)
										Endif
									Endif

									nVrPIS		:=	(cAliasQry)->PIS
									nVrCOFINS	:=	(cAliasQry)->COFINS
									nVrCSLL		:=	(cAliasQry)->CSLL
									nVrIR			:=	(cAliasQry)->VRIR
									nVrISS		:=	(cAliasQry)->VRISS
									nVrINSS		:=	(cAliasQry)->VRINSS

									If lRetSFQ //Caso seja titulo que retenha outro com cumulatividades diferentes devo entao subtrair os valores para nao enviar duas vezes.
										For nI:= 1 To Len(aTitRet)
											If aTitRet[nI,1] == (xFilial("SE1")+ (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA )
												nVrPIS		-=	aTitRet[nI,2]
												nVrCOFINS	-=	aTitRet[nI,3]
												nVrCSLL		-=	aTitRet[nI,4]
												nVrIR			-=	aTitRet[nI,5]
												nVrISS		-=	aTitRet[nI,6]
												nVrINSS		-=	aTitRet[nI,7]
											Endif
										Next
									Endif
									If (cAliasQry)->TIPODOC $ "JR_MT_J2_M2"
										nJurosBx	+= (cAliasQry)->VALORE5
									ElseIf(cAliasQry)->TIPODOC $ "DC_CM_D2_C2"
										nDescBx	+= (cAliasQry)->VALORE5
									ElseIf !(cAliasQry)->TIPODOC $ "JR_MT_J2_M2_DC_CM_D2_C2"
										nVlrSe5	+=	(cAliasQry)->VALORE5
										aRegBx	:= {}
										nTxMoeda	:= 1

										If (cAliasQry)->MULTNAT = "1" //Tratamento para multiplas naturezas.
											aAreaSEV := SEV->(GetArea())
											DbSelectArea("SEV")
											DbSetOrder(1)	//Verificar se o titulo possui multiplas naturezas.
											SEV->(DbSeek(xFilial("SEV")+(cAliasQry)->PREFIXO+(cAliasQry)->NUMERO+(cAliasQry)->PARCELA+(cAliasQry)->TIPO+(cAliasQry)->CLIENTE+(cAliasQry)->LOJA))
											While SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA) ==;
													((cAliasQry)->PREFIXO+(cAliasQry)->NUMERO+(cAliasQry)->PARCELA+(cAliasQry)->TIPO+(cAliasQry)->CLIENTE+(cAliasQry)->LOJA) .And. !SEV->(EOF())

												nVrRateio:=	0

												If nTpMoeda > 1
													nTxMoeda	:= (cAliasQry)->VLCRUZ	/(cAliasQry)->VALORE1
												Endif

												If SEV->EV_IDENT <> "1" // 1=Rateio de Inclusao 2=Rateio de Baixa
													SEV->(Dbskip())
													Loop
												Endif

												aAreaSED := SED->(GetArea()) //Caso a natureza apure Pis ou Cofins
												DbSelectArea("SED")
												DbSetOrder(1)
												If DbSeek(xFilial("SED")+ SEV->EV_NATUREZ) .And. !Empty(SED->ED_PERCPIS) .Or. !Empty(SED->ED_PERCCOF)

													nVrRateio	:=	SEV->EV_PERC

													#IFDEF TOP
														AaDd(aRegBx,{SA1->A1_CGC,(cAliasQry)->DATA,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCPIS)/100,;
															((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCOF)/100,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCSL)/100,;
															(cAliasQry)->VALORE1,(cAliasQry)->VALORE5,SA1->A1_RECPIS,SA1->A1_RECCOFI,;
															SED->ED_PERCPIS,Iif( lEDIndRet, SED->ED_INDRET, "" ),;
															Iif( lEDIndCMLT, SED->ED_INDCMLT, "" ),(cAliasQry)->RECNO,;
															Iif( lEDCond, SED->ED_COND, ""),(cAliasQry)->SALDO,nVrIR,If(lRecIss, nVrISS,0),;
															nVrINSS,(cAliasQry)->VLCRUZ,Iif( lA1IndRet,SA1->A1_INDRET, ""),(cAliasQry)->BASEPIS,(cAliasQry)->ORIGEM,;
															Iif(lRetSFQ,((cAliasQry)->PIS+(cAliasQry)->COFINS+(cAliasQry)->CSLL+(cAliasQry)->VRIR+Iif(lRecIss,(cAliasQry)->VRISS,0)+(cAliasQry)->VRINSS),0),;
															(cAliasQry)->MULTNAT,nVrRateio,SED->ED_PERCCOF,nVrPIS,nVrCOFINS,nVrCSLL})

													#ELSE
														AaDd(aRegBx,{(cAliasQry)->CNPJ,(cAliasQry)->DTMOV,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCPIS)/100,;
															((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCOF)/100,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCSL)/100,;
															(cAliasQry)->VALORE1,(cAliasQry)->VALORE5,(cAliasQry)->RECPIS,(cAliasQry)->RECCOFI,;
															SED->ED_PERCPIS,Iif( lEDIndRet,(cAliasQry)->INDRET, "" ) ,;
															Iif( lEDIndCMLT,(cAliasQry)->INDCMLT, "" ),(cAliasQry)->NROREG,;
															Iif( lEDCond,(cAliasQry)->COND, ""),(cAliasQry)->SALDO,nVrIR,If(lRecIss, nVrISS,0),;
															nVrINSS,(cAliasQry)->VLCRUZ,Iif( lA1IndRet,SA1->A1_INDRET, ""),(cAliasQry)->BASEPIS,(cAliasQry)->ORIGEM,;
															Iif(lRetSFQ,((cAliasQry)->PIS+(cAliasQry)->COFINS+(cAliasQry)->CSLL+(cAliasQry)->VRIR+If(lRecIss,(cAliasQry)->VRISS,0)+(cAliasQry)->VRINSS),0),;
															(cAliasQry)->MULTNAT,nVrRateio,SED->ED_PERCCOF,nVrPIS,nVrCOFINS,nVrCSLL})
													#ENDIF

												Endif
												RestArea(aAreaSED)
												SEV->(Dbskip())
											Enddo
											RestArea(aAreaSEV)
										Else //Nao trata de multiplas naturezas
											#IFDEF TOP
												AaDd(aRegBx,{SA1->A1_CGC,;  // 1
												(cAliasQry)->DATA,;  // 2
												nVrPIS,;  // 3
												nVrCOFINS,;  // 4
												nVrCSLL,;  // 5
												(cAliasQry)->VALORE1,;  // 6
												(cAliasQry)->VALORE5,;  // 7
												SA1->A1_RECPIS,;  // 8
												SA1->A1_RECCOFI,;  // 9
												SED->ED_PERCPIS,;  // 10
												Iif( lEDIndRet, SED->ED_INDRET, "" ),;  // 11
												Iif( lEDIndCMLT, SED->ED_INDCMLT, "" ),;  // 12
												(cAliasQry)->RECNO,;  // 13
												Iif( lEDCond, SED->ED_COND, ""),;  // 14
												(cAliasQry)->SALDO,;  // 15
												nVrIR,;  // 16
												If(lRecIss, nVrISS,0),;  // 17
													nVrINSS,;  // 18
													(cAliasQry)->VLCRUZ,;  // 19
													Iif( lA1IndRet,SA1->A1_INDRET, ""),;  // 20
													(cAliasQry)->BASEPIS,;  // 21
													(cAliasQry)->ORIGEM,;  // 22
													Iif(lRetSFQ,    ( (cAliasQry)->PIS+(cAliasQry)->COFINS+(cAliasQry)->CSLL+(cAliasQry)->VRIR+(cAliasQry)->VRINSS+;
														Iif(lRecIss,  (cAliasQry)->VRISS,0)),;
														0),;	// 23
													(cAliasQry)->MULTNAT,;  // 24
													0,;  // 25
													SED->ED_PERCCOF,;  // 26
													0,;  // 27
													0,;  // 28
													0})  // 29

												#ELSE
													AaDd(aRegBx,{(cAliasQry)->CNPJ,;
														(cAliasQry)->DTMOV,;
														nVrPIS,;
														nVrCOFINS,;
														nVrCSLL,;
														(cAliasQry)->VALORE1,;
														(cAliasQry)->VALORE5,;
														(cAliasQry)->RECPIS,;
														(cAliasQry)->RECCOFI,;
														SED->ED_PERCPIS,;
														Iif( lEDIndRet,(cAliasQry)->INDRET, "" ) ,;
														Iif( lEDIndCMLT,(cAliasQry)->INDCMLT, "" ),;
														(cAliasQry)->NROREG,;
														Iif( lEDCond,(cAliasQry)->COND, ""),;
														(cAliasQry)->SALDO,;
														nVrIR,;
														If(lRecIss, nVrISS,0),;
															nVrINSS,;
															(cAliasQry)->VLCRUZ,;
															Iif( lA1IndRet,SA1->A1_INDRET, ""),;
															(cAliasQry)->BASEPIS,;
															(cAliasQry)->ORIGEM,;
															Iif(lRetSFQ,((cAliasQry)->PIS+(cAliasQry)->COFINS+(cAliasQry)->CSLL+(cAliasQry)->VRIR+(cAliasQry)->VRINSS+;
															If(lRecIss,(cAliasQry)->VRISS,0)),;
																0),;
																(cAliasQry)->MULTNAT,;
																0,;
																SED->ED_PERCCOF,;
																0,;
																0,;
																0})
														#ENDIF
													Endif
												Endif
												(cAliasQry)->(Dbskip())

												If (cAliasQry)->(Eof()) .and. (cAliasQry <> cAliasSPED)
													(cAliasQry)->(dbCloseArea())
													cAliasQry := cAliasSPED
													(cAliasQry)->(Dbskip())
												Endif

											Enddo

											If Len(aRegBx) = 0
												Loop
											Endif

											For nI:=1 TO Len(aRegBx)

												aF600 	:= Array(12)
												nPisBx	:=	0
												nCofBx	:=	0
												nBase		:= 0

												If Alltrim(aRegBx[nI,22]) == "MATA460" .And. (cAliasQry)->SALDO == 0 .And. lDescIss .And. cTpAbIss == "1" .And. !lDeIssBs
													nPercBx	:=	((( nVlrSe5 + (aRegBx[nI,3]+aRegBx[nI,4]+aRegBx[nI,5]) - nJurosBx + nDescBx ) *100)/ aRegBx[nI,6])
												ElseIf aRegBx[nI,15] > 0 //Titulo nao baixado totalmente
													nPercBx	:=	((( nVlrSe5 - nJurosBx + nDescBx ) *100)/ If(nTpMoeda>1,aRegBx[nI,7],aRegBx[nI,6]))
												ElseIf aRegBx[nI,24] = "1"     //Multiplas naturezas.
													nPercBx	:=	(((nVlrSe5 + (aRegBx[nI,27]+aRegBx[nI,28]+aRegBx[nI,29]) - nJurosBx + nDescBx ) *100)/ aRegBx[nI,6])
													If nTpMoeda > 1
														nPercBx	:= (nPercBx)/nTxMoeda
													Endif
												Else// baixa total ou ultima baixa do titulo precisa acrescentar o valor dos impostos descontados na movimentacao do SE5
													If nTpMoeda > 1
														nPercBx	:=	((( aRegBx[nI,19] - nJurosBx + nDescBx ) *100)/ aRegBx[nI,19])
													Else
														nPercBx	:=	((( nVlrSe5 + if(!lTitRet .And. !lRetSFQ,(aRegBx[nI,3]+aRegBx[nI,4]+aRegBx[nI,5]+aRegBx[nI,16]+aRegBx[nI,17]+aRegBx[nI,18]),0) + ;
															if(lRetSFQ,aRegBx[nI,23],0)	 - nJurosBx + nDescBx ) *100)/ aRegBx[nI,6])
														Endif
													Endif

													nPisBx	:=	(aRegBx[nI,3]	* nPercBx)/100
													nCofBx	:=	(aRegBx[nI,4]	* nPercBx)/100

													If nVlrSe5 <= nVlMinImp .And. nPercBx > 100 //Para casos de titulos gerados com valor que nao retenha imposto.
														nPisBx	:=	0
														nCofBx	:=	0
													Endif

													//Calculo inverso da retenção para achar a base
													If nTpMoeda > 1
														nBase 	:= Round((((aRegBx[nI,19]*aRegBx[nI,10])/100)* nPercBx)/ aRegBx[nI,10],2)
													ElseIf aRegBx[nI,15] > 0 .Or. lRetSFQ //Titulo nao baixado totalmente ou titulo que retem impostos de outros titulos.
														nBase 	:= Round((aRegBx[nI,3] * nPercBx)/ aRegBx[nI,10],2)
														If lRetSFQ
															If aRegBx[nI,26] > 0 .And. Round((aRegBx[nI,4] * nPercBx)/ aRegBx[nI,26],2) > nBase
																nBase	:=	nBase + (Round((aRegBx[nI,4] * nPercBx)/ aRegBx[nI,26],2) - nBase)
															Endif
														Endif
													Else
														nBase 	:=	aRegBx[nI,21]
													Endif

													If aRegBx[nI,24] = "1"     //Multiplas naturezas.
														nBase		:=	nBase * aRegBx[nI,25]
													Endif

													If lEDIndRet //Indicador da retenção
														If	Empty(aRegBx[nI,11]) .And. lA1IndRet
															aF600[1] := aRegBx[nI,20]
														Else
															aF600[1] := aRegBx[nI,11]
														Endif
													Else
														aF600[1] := ""
													Endif

													aF600[2] := aRegBx[nI,2] 			//-- Data da emissão
													aF600[3] := nBase 					//-- Base do imposto
													aF600[4] := nPisBx + nCofBx 		//-- Valor da retenção

													//Indicador de cumulatividade das naturezas de receita
													If lEDIndCMLT .And. lEDCond
														If aRegBx[nI,12] == "1"
															cIndCmlt := "0" //Cumulativo
														ElseIf aRegBx[nI,12] == "2"
															cIndCmlt := "1" //Não Cumulativo
														EndIf

														aF600[5] := Iif(aRegBx[nI,14] == "R", cIndCmlt, "")
													Else
														aF600[5] := ""
													Endif

													aF600[6] := aRegBx[nI,1] 			//-- CNPJ do cliente
													aF600[7] := nPisBx 	 				//-- Valor da retenção de PIS
													aF600[8] := nCofBx 					//-- Valor da retenção de COFINS

													//Indicador da pessoa declarante
													If (aRegBx[nI,8] $ "SP" .Or. aRegBx[nI,9] $ "SP") .And. SM0->M0_CGC <> aRegBx[nI,1] 	  						//-- Empresa beneficiária da retenção
														aF600[9] := "0"
													ElseIf (aRegBx[nI,8] $ "SP" .Or. aRegBx[nI,9] $ "SP") .And. SM0->M0_CGC == aRegBx[nI,1] //-- Empresa responsável pelo recolhimento
														aF600[9] := "1"
													EndIf

													aF600[10] := "SE5" 					//-- Tabela
													aF600[11] := aRegBx[nI,13] 		//-- Recno

													If lSpdCodRec .And. !Empty(cPeCodRec)
														aF600[12] := cPeCodRec 			//-- Codigo da Receita
													Else
														aF600[12] := ""		 			//-- Codigo da Receita
													Endif

													aAdd(aReturn, aF600)
													nBase := 0
												Next
											EndDo

											(cAliasQry)->(dbCloseArea())

											#IFNDEF TOP
												fErase ( cTrabalho + GetDBExtension() )
												fErase ( cTrabalho + OrdBagExt() )
											#EndIf

										Else

											//PIS e COFINS na baixa
											#IFDEF TOP

												cAliasQry	:= "SE5QRY"
												aStruct	 	:= SE5->(dbStruct())

												cQuery	 	:= "SELECT "

												//Campos de referência
												cQuery	 	+= "SE5.E5_FILIAL FILIAL, SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUMERO, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, SE5.E5_CLIFOR CLIENTE, "
												cQuery		+= "SE5.E5_LOJA LOJA, SE5.E5_TXMOEDA TXMOEDA, SE5.E5_MOTBX MOTBX, SE5.E5_FILORIG FILORIG, "
												cQuery	 	+= "SE5.E5_TIPODOC TIPODOC, SE5.E5_PRETPIS PRETPIS, SE5.E5_DOCUMEN DOCUMEN, SE5.E5_VLMOED2 VLMOED2, SE5.E5_PRETCOF PRETCOF, "
												cQuery	 	+= "SE5.E5_DATA DATA, SE5.E5_VALOR VALORBX, SE5.E5_VRETPIS PIS, SE5.E5_VRETCOF COFINS, SE5.E5_VRETCSL CSL, "
												cQuery	 	+= "SE5.R_E_C_N_O_ RECNO, "

												//Campos do SED
												cQuery	 	+= "SED.ED_PERCPIS PERCPIS, SED.ED_COND COND, SED.ED_PERCCOF PERCCOF, "

												//Indicador de Retenção
												If lEDIndRet
													cQuery	+= "SED.ED_INDRET INDRET, "
												Endif

												//Indicador de Cumulatividade
												If lEDIndCMLT
													cQuery	+= "SED.ED_INDCMLT INDCMLT, "
												Endif

												//Dados do cliente para o SPED
												cQuery	 	+= "SA1.A1_CGC CNPJ, SA1.A1_RECPIS RECPIS, SA1.A1_RECCOFI RECCOFI "

												If lA1IndRet
													cQuery	 	+= ", SA1.A1_INDRET A1INDRET "
												Endif
												cQuery	 	+= "FROM "
												cQuery 		+= RetSqlName("SE5") + " SE5,  "
												cQuery 		+= RetSqlName("SED") + " SED,  "
												cQuery 		+= RetSqlName("SA1") + " SA1   "

												cQuery	 	+= "WHERE "

												cQuery	 	+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "
												cQuery 		+=	"SA1.A1_FILIAL ='" + xFilial("SA1") + "' AND "

												If !Empty( Iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) )
													cQuery 	+= "SE5.E5_FILIAL = '"  + xFilial("SE5") + "' AND "
												Else
													If lSe5MsFil
														cQuery 	+= "SE5.E5_MSFIL = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
													Else
														cQuery 	+= "SE5.E5_FILORIG = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
													Endif
												EndIf

												cQuery	 	+= "SE5.E5_CLIFOR = SA1.A1_COD AND "
												cQuery	 	+= "SE5.E5_LOJA = SA1.A1_LOJA AND "
												cQuery	 	+= "(SE5.E5_DATA >= '"+cDataIni+"' AND SE5.E5_DATA <= '"+cDataFim+"') AND "
												cQuery	 	+= "((SE5.E5_VRETPIS > 0 AND (SE5.E5_PRETPIS = '' OR SE5.E5_PRETPIS = '2')) OR "
												cQuery	 	+= "(SE5.E5_VRETCOF > 0 AND (SE5.E5_PRETCOF = '' OR SE5.E5_PRETCOF = '2'))) AND "
												cQuery		+= "SE5.E5_SITUACA <> 'C' AND "
												cQuery	 	+= "SE5.E5_RECPAG = 'R' AND "

												cTipoTit		:=	""
												cTipoTit		:=	MVABATIM + "|" + MV_CRNEG + "|" + MVPROVIS
												cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(cTipoTit,If("|"$cTipoTit,"|",","))  + " AND "

												cMotQry		:= "('FAT','LIQ'"

												If !Empty(cPeMBx)
													cMotQry += "," + cMotBaixa
												Endif

												If !Empty(cBxSql)
													cMotQry += "," + cBxSql
												EndIf

												cMotQry		+= ")"

												cQuery		+= "SE5.E5_MOTBX NOT IN " + cMotQry + " AND "

												//Exclui os titulos que possuem estorno
												cQuery	 	+= "SE5.E5_SEQ NOT IN "
												cQuery 		+= "(SELECT SE5AUX.E5_SEQ FROM "+RetSqlName("SE5")+" SE5AUX WHERE "
												cQuery		+=		" SE5AUX.E5_FILIAL = SE5.E5_FILIAL AND "
												cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
												cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
												cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
												cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
												cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
												cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
												cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
												cQuery		+= 		" SE5AUX.D_E_L_E_T_ = ' ' "
												cQuery 		+= ") AND "

												If !Empty(cPeNat)
													cQuery 	+= "SED.ED_INDRET NOT IN (" + cNatur + ") AND "
												Endif

												cQuery	 	+= "SED.ED_CODIGO = SE5.E5_NATUREZ AND "

												cQuery		+= "SED.D_E_L_E_T_ = ' ' AND "
												cQuery		+= "SE5.D_E_L_E_T_ = ' ' AND "
												cQuery		+= "SA1.D_E_L_E_T_ = ' ' 	"

												cQuery 		:= ChangeQuery(cQuery)
												dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

												For nX := 1 To len(aStruct)
													If aStruct[nX][2] <> "C" .And. FieldPos(aStruct[nX][1])<>0
														TcSetField(cAliasQry,aStruct[nX][1],aStruct[nX][2],aStruct[nX][3],aStruct[nX][4])
													EndIf

												Next nX

												SE1 -> ( dbSetOrder ( 1 ) ) //FILIAL+PREFIXO+NUM+PARCELA+TIPO
												SA1 -> ( dbSetOrder ( 1 ) ) //FILIAL+COD+LOJA
												SED -> ( dbSetOrder ( 1 ) ) //FILIAL+CODIGO
											#ELSE

												//***********************************************************************
												// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												// ³ Cria o arquivo de trabalho ³
												// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												aTam:=TamSX3("E5_VALOR")
												AADD(aCampos,{"VALORBX"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VRETPIS")
												AADD(aCampos,{"PIS"   		,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VRETCOF")
												AADD(aCampos,{"COFINS"   	,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VRETCSL")
												AADD(aCampos,{"CSL"   		,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TXMOEDA")
												AADD(aCampos,{"TXMOEDA"   	,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_MOTBX")
												AADD(aCampos,{"MOTBX"   	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_FILORIG")
												AADD(aCampos,{"FILORIG"   	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PRETPIS")
												AADD(aCampos,{"PRETPIS"   	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_DOCUMEN")
												AADD(aCampos,{"DOCUMEN"   	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VLMOED2")
												AADD(aCampos,{"VLMOED2"   	,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PRETCOF")
												AADD(aCampos,{"PRETCOF"   	,"C",aTam[1],aTam[2]})

												cTrabalho := CriaTrab(aCampos)
												dbUseArea(.T.,,cTrabalho,cAliasQry,.F.,.F.)
												dbCreateInd(cTrabalho, "DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA", {||DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA})

												SE1 -> ( dbSetOrder ( 1 ) ) //FILIAL+PREFIXO+NUM+PARCELA+TIPO
												SA1 -> ( dbSetOrder ( 1 ) ) //FILIAL+COD+LOJA
												SED -> ( dbSetOrder ( 1 ) ) //FILIAL+CODIGO

												dbSelectArea("SE5")
												SE5 -> ( dbSetOrder ( 1 ) ) //FILIAL+DTOS(DATA)+BANCO+AGENCIA+CONTA+NUMCHEQ
												SE5 -> ( dbSeek ( xFilial("SE5") + cDataIni, .T. ) )

												Do While ( SE5->(!Eof()) .And. Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim .And. SE5->E5_FILIAL = xFilial("SE5"))

													If !Empty(cPeMBx) .And. !SE5->E5_MOTBX $ cMotBaixa
														SE5->(dbSkip())
														Loop
													Endif

													If SE5->E5_TIPODOC = 'ES' .Or. SE5->E5_MOTBX $ 'FAT_LIQ' .Or. SE5->E5_RECPAG <> 'R'
														SE5->(dbSkip())
														Loop
													EndIf

													If ((SE5->E5_VRETPIS == 0 .And. (SE5->E5_PRETPIS <> '' .And. SE5->E5_PRETPIS <> '2')) .Or.;
															(SE5->E5_VRETCOF == 0 .And. (SE5->E5_PRETCOF <> '' .And. SE5->E5_PRETCOF <> '2' )))
														SE5->(dbSkip())
														Loop
													EndIf

													If (SE5->E5_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS)) .Or. SE5->E5_SITUACA = 'C'
														SE5->(dbSkip())
														Loop
													EndIf

													SED->(DbSeek(xFilial("SED")+ SE5->E5_NATUREZ))
													If SED->ED_CODIGO <> SE5->E5_NATUREZ
														SE5->(Dbskip())
														Loop
													Endif

													If !Empty(cPeNat) .And. !SED->ED_INDRET $ cNatur
														SE5->(dbSkip())
														Loop
													Endif

													If !Empty(cMotBx) .And. SE5->E5_MOTBX <> 'NOR'
														nI :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper(SE5->E5_MOTBX) })
														If SE5->E5_MOTBX $ cMotBx .And. nI > 0
															If Substr(aMotBx[nI],26,01) == "N" //Nao movimenta banco.
																SE5->(dbSkip())
																Loop
															Endif
														Endif
													Endif

													If !SA1 -> ( dbSeek ( xFilial("SA1") + SE5->(E5_CLIENTE+E5_LOJA)) )
														SE5->(dbSkip())
														Loop
													Endif

													RecLock (cAliasQry, .T. )
													(cAliasQry) ->	FILIAL		:= SE5 -> E5_FILIAL
													(cAliasQry) ->	PREFIXO		:= SE5 -> E5_PREFIXO
													(cAliasQry) ->	NUMERO		:= SE5 -> E5_NUMERO
													(cAliasQry) ->	PARCELA		:= SE5 -> E5_PARCELA
													(cAliasQry) ->	TIPO			:= SE5 -> E5_TIPO
													(cAliasQry) ->	CLIENTE		:= SE5 -> E5_CLIENTE
													(cAliasQry) ->	LOJA			:= SE5 -> E5_LOJA
													(cAliasQry) ->	TIPODOC		:= SE5 -> E5_TIPODOC
													(cAliasQry) ->	VALORBX		:= SE5 -> E5_VALOR
													(cAliasQry) ->	CSL			:= SE5 -> E5_VRETCSL
													(cAliasQry) ->	TXMOEDA		:= SE5 -> E5_TXMOEDA
													(cAliasQry) ->DTMOV    		:= Dtos(SE5 -> E5_DATA)
													(cAliasQry) ->	NROREG		:= SE5 -> (Recno())
													(cAliasQry) ->	PIS			:= SE5 -> E5_VRETPIS
													(cAliasQry) ->	COFINS		:= SE5 -> E5_VRETCOF
													(cAliasQry) ->	CNPJ			:= SA1 -> A1_CGC
													(cAliasQry) ->	RECPIS		:= SA1 -> A1_RECPIS
													(cAliasQry) ->	RECCOFI		:= SA1 -> A1_RECCOFI
													(cAliasQry) ->	PERCPIS		:= SED -> ED_PERCPIS
													(cAliasQry) ->	PERCCOF		:= SED -> ED_PERCCOF
													(cAliasQry) ->	INDRET		:= SED -> ED_INDRET
													(cAliasQry) ->	FILORIG		:= SE5 -> E5_FILORIG
													(cAliasQry) ->	MOTBX			:= SE5 -> E5_MOTBX
													(cAliasQry) ->	PRETPIS		:= SE5 -> E5_PRETPIS
													(cAliasQry) ->	VLMOED2		:= SE5 -> E5_VLMOED2
													(cAliasQry) ->	DOCUMEN		:= SE5 -> E5_DOCUMEN
													(cAliasQry) ->	PRETCOF		:= SE5 -> E5_PRETCOF

													If lEDIndCMLT
														(cAliasQry) ->	INDCMLT		:= SED -> ED_INDCMLT
													Endif

													If lEDCond
														(cAliasQry) ->	COND			:= SED -> ED_COND
													Endif

													If lA1IndRet
														(cAliasQry) ->	A1INDRET		:= SA1 -> A1_INDRET
													Endif
													(cAliasQry) -> (MsUnlock( ))

													SE5->(dbSkip())
												EndDo

											#ENDIF

											aTitRet	:= {}
											dbSelectArea(cAliasQry)
											cAliasSPED := cAliasQry
											While !(cAliasQry)->(Eof())

												If  lScorgp .And. (cAliasQry)->MOTBX == "CMP"  .And. "NCC" $ (cAliasQry)->DOCUMEN
													If SE1->(DbSeek(xFilial("SE1") + (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO ))
														If SE1->E1_SCORGP = "1"
															(cAliasQry)->(Dbskip())
															Loop
														Endif
													Endif
												Endif

												If !Empty(cRASpd) .And. 'RA' $ (cAliasQry)->DOCUMEN .And.;//Caso tenham naturezas tenho que antecipar o credito do tipo RA.
													SE1->(DbSeek(xFilial("SE1") + (cAliasQry)->DOCUMEN )) .And. Alltrim(SE1->E1_NATUREZ) $ cRASpd
													(cAliasQry)->(Dbskip())
													Loop
												Endif
												aRegBx	:= {}
												cChaveBx	:=	""
												If (cAliasQry)->MOTBX $ 'NOR_CMP'
													cChaveBx		:=	SpdMotNOR((cAliasQry)->( FILIAL + PREFIXO + NUMERO + PARCELA + TIPO))
													If Empty(cChaveBx)
														(cAliasQry)->(Dbskip())
														Loop
													Endif
												ElseIf (cAliasQry)->MOTBX = 'TRF'
													aSpdMotTRF	:=	SpdTRFB((cAliasQry)->( PREFIXO + NUMERO + PARCELA + TIPO + FILORIG))

													If !aSpdMotTRF[3]
														(cAliasQry)->( dbSkip())
														Loop
													Endif

													If aSpdMotTRF[1]
														cAliasQry := aSpdMotTRF[2] // novo alias a ser tratado
													Endif
												Endif

												cChaveDes	:=	cChaveOri	:=	cIndCmlDes	:=	cIndCmlOri	:= ""
												If (cAliasQry)->VALORBX <= nVlMinImp //Caso o titulo seja retido em outro nao devo enviar no bloco F600.
													SFQ->(DbSetOrder(2)) // FQ_FILIAL+FQ_ENTDES+FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES
													//Verificar se os dois titulos possuem naturezas com o mesmo tipo de cumulatividade.
													If SFQ->(DbSeek(xFilial("SFQ")+"E1B"+ (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA ))

														If SE1->(DbSeek(xFilial("SE1") + SFQ->FQ_PREFDES + SFQ->FQ_NUMDES + SFQ->FQ_PARCDES + SFQ->FQ_TIPODES))
															cIndCmlDes	:=	Iif(SED->(Dbseek(xFilial("SED")+SE1->E1_NATUREZ)),SED->ED_INDCMLT,'') //Natureza destino
															cChaveDes	:=(xFilial("SE1") + SFQ->FQ_PREFDES + SFQ->FQ_NUMDES + SFQ->FQ_PARCDES + SFQ->FQ_TIPODES)
														Endif

														If SE1->(DbSeek(xFilial("SE1") + SFQ->FQ_PREFORI + SFQ->FQ_NUMORI + SFQ->FQ_PARCORI + SFQ->FQ_TIPOORI))
															cIndCmlOri	:= Iif(SED->(Dbseek(xFilial("SED")+SE1->E1_NATUREZ)),SED->ED_INDCMLT,'')	//Natureza origem
															cChaveOri	:= (xFilial("SE1") + SFQ->FQ_PREFORI + SFQ->FQ_NUMORI + SFQ->FQ_PARCORI + SFQ->FQ_TIPOORI)
														Endif

														If Alltrim(cIndCmlDes) == Alltrim(cIndCmlOri)
															If !(cChaveDes == cChaveOri .And. (Empty((cAliasQry)->PRETPIS)  .And. Empty((cAliasQry)->PRETCOF)))
																(cAliasQry)->(Dbskip())
															Endif

															aRegBx	:= {}
															cChaveBx	:=	""
															If (cAliasQry)->MOTBX $ 'NOR_CMP'
																cChaveBx		:=	SpdMotNOR((cAliasQry)->( FILIAL + PREFIXO + NUMERO + PARCELA + TIPO))
																If Empty(cChaveBx)
																	(cAliasQry)->(Dbskip())
																	Loop
																Endif
															ElseIf (cAliasQry)->MOTBX = 'TRF'
																aSpdMotTRF	:=	SpdTRFB((cAliasQry)->( PREFIXO + NUMERO + PARCELA + TIPO + FILORIG))

																If !aSpdMotTRF[3]
																	(cAliasQry)->( dbSkip())
																	Loop
																Endif

																If aSpdMotTRF[1]
																	cAliasQry := aSpdMotTRF[2] // novo alias a ser tratado
																Endif
															Endif
														Else
															Aadd(aTitRet,{(xFilial("SE1") + SFQ->FQ_PREFORI + SFQ->FQ_NUMORI + SFQ->FQ_PARCORI + SFQ->FQ_TIPOORI + SFQ->FQ_CFORI+ SFQ->FQ_LOJAORI),;
																(cAliasQry)->PIS,(cAliasQry)->COFINS,(cAliasQry)->CSL})
														Endif
													Endif
												Endif

												lRetSFQ		:=.F. //Retem valores de impostos de outros titulos.
												SFQ->(DbSetOrder(1)) // FQ_FILIAL + FQ_ENTORI + FQ_PREFORI + FQ_NUMORI + FQ_PARCORI + FQ_TIPOORI + FQ_CFORI + FQ_LOJAORI
												If SFQ->(DbSeek(xFilial("SFQ")+"E1B"+ (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA))
													lRetSFQ	:=	.T.
												Endif

												nVrPIS		:=	(cAliasQry)->PIS
												nVrCOFINS	:=	(cAliasQry)->COFINS
												nVrCSLL		:=	(cAliasQry)->CSL

												If lRetSFQ //Caso seja titulo que retenha outro com cumulatividades diferentes devo entao subtrair os valores para nao enviar duas vezes.
													For nI:= 1 To Len(aTitRet)
														If aTitRet[nI,1] == (xFilial("SE1")+ (cAliasQry)->PREFIXO + (cAliasQry)->NUMERO + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIENTE + (cAliasQry)->LOJA )
															nVrPIS		-=	aTitRet[nI,2]
															nVrCOFINS	-=	aTitRet[nI,3]
															nVrCSLL		-=	aTitRet[nI,4]
														Endif
													Next
												Endif

												nTxMoeda	:= If((cAliasQry)->TXMOEDA>1,(cAliasQry)->TXMOEDA,1)

												aAreaSEV := SEV->(GetArea())//Tratamento para multiplas naturezas.
												DbSelectArea("SEV")
												DbSetOrder(1)	//Verificar se o titulo possui multiplas naturezas.
												If	SEV->(DbSeek(xFilial("SEV")+(cAliasQry)->PREFIXO+(cAliasQry)->NUMERO+(cAliasQry)->PARCELA+(cAliasQry)->TIPO+(cAliasQry)->CLIENTE+(cAliasQry)->LOJA))
													While SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA) ==;
															((cAliasQry)->PREFIXO+(cAliasQry)->NUMERO+(cAliasQry)->PARCELA+(cAliasQry)->TIPO+(cAliasQry)->CLIENTE+(cAliasQry)->LOJA) .And. !SEV->(EOF())

														nVrRateio:=	0

														If SEV->EV_IDENT <> "1" // 1=Rateio de Inclusao 2=Rateio de Baixa
															SEV->(Dbskip())
															Loop
														Endif

														aAreaSED := SED->(GetArea()) //Caso a natureza apure Pis ou Cofins
														DbSelectArea("SED")
														DbSetOrder(1)
														If DbSeek(xFilial("SED")+ SEV->EV_NATUREZ) .And. !Empty(SED->ED_PERCPIS) .Or. !Empty(SED->ED_PERCCOF)

															nVrRateio	:=	SEV->EV_PERC

															#IFDEF TOP
																AaDd(aRegBx,{(cAliasQry)->CNPJ,(cAliasQry)->DATA,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCPIS)/100,;
																	((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCOF)/100,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCSL)/100,;
																	((cAliasQry)->VALORBX*nVrRateio),SED->ED_PERCPIS,(cAliasQry)->A1INDRET,SED->ED_INDRET,;
																	SED->ED_INDCMLT,SED->ED_COND,;
																	(cAliasQry)->RECCOFI,(cAliasQry)->RECPIS,(cAliasQry)->RECNO,;
																	(nVrPIS*nVrRateio),(nVrCOFINS*nVrRateio),(nVrCSLL*nVrRateio),"1",0,"",SED->ED_PERCCOF})
															#ELSE
																AaDd(aRegBx,{(cAliasQry)->CNPJ,(cAliasQry)->DTMOV,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCPIS)/100,;
																	((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCOF)/100,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PERCCSL)/100,;
																	((cAliasQry)->VALORBX*nVrRateio),SED->ED_PERCPIS,(cAliasQry)->A1INDRET,SED->ED_INDRET,;
																	SED->ED_INDCMLT,SED->ED_COND,;
																	(cAliasQry)->RECCOFI,(cAliasQry)->RECPIS,(cAliasQry)->NROREG,;
																	(nVrPIS*nVrRateio),(nVrCOFINS*nVrRateio),(nVrCSLL*nVrRateio),"1",0,"",SED->ED_PERCCOF})
															#ENDIF
														Endif
														RestArea(aAreaSED)
														SEV->(Dbskip())
													Enddo
													RestArea(aAreaSEV)
												Else //Nao trata de multiplas naturezas

													If   !Empty((cAliasQry)->PREFIXO+(cAliasQry)->NUMERO+(cAliasQry)->PARCELA+(cAliasQry)->TIPO)
														#IFDEF TOP
															AaDd(aRegBx,{(cAliasQry)->CNPJ,(cAliasQry)->DATA,nVrPIS,nVrCOFINS,nVrCSLL,;
																(cAliasQry)->VALORBX,(cAliasQry)->PERCPIS,(cAliasQry)->A1INDRET,(cAliasQry)->INDRET,;
																(cAliasQry)->INDCMLT,(cAliasQry)->COND,;
																(cAliasQry)->RECCOFI,(cAliasQry)->RECPIS,(cAliasQry)->RECNO,;
																0,0,0,"2",(cAliasQry)->VLMOED2,((cAliasQry)->PREFIXO+(cAliasQry)->NUMERO+(cAliasQry)->PARCELA+(cAliasQry)->TIPO),;
																(cAliasQry)->PERCCOF})
														#ELSE
															AaDd(aRegBx,{(cAliasQry)->CNPJ,;//1
															(cAliasQry)->DTMOV,;//2
															nVrPIS,; //3
															nVrCOFINS,; //4
															nVrCSLL,; //5
															(cAliasQry)->VALORBX,;//6
															(cAliasQry)->PERCPIS,; //7
															(cAliasQry)->A1INDRET,;//8
															(cAliasQry)->INDRET,;  //9
															(cAliasQry)->INDCMLT,; //10
															(cAliasQry)->COND,;    //11
															(cAliasQry)->RECCOFI,; //12
															(cAliasQry)->RECPIS,;  //13
															(cAliasQry)->NROREG,;  //14
															0,;  //15
															0,;  //16
															0,;  //17
															"2",;   //18
															(cAliasQry)->VLMOED2,;//19
															((cAliasQry)->PREFIXO+(cAliasQry)->NUMERO+(cAliasQry)->PARCELA+(cAliasQry)->TIPO),;//20
															(cAliasQry)->PERCCOF})//21
														#ENDIF
													Endif
												Endif
												For nI:= 1 to Len(aRegBx)

													aF600 := Array(12)
													nPercCof	:=	0

													//Calculo inverso da retenção para achar a base
													If nTxMoeda > 1
														nBase := Round((((If(aRegBx[nI,18]="2",(aRegBx[nI,3]+aRegBx[nI,4]+aRegBx[nI,5]),(aRegBx[nI,15]+aRegBx[nI,16]+aRegBx[nI,17]))+aRegBx[nI,6]) *;
															aRegBx[nI,7]/100) * 100)/ aRegBx[nI,7],2)
													Else
														If aRegBx[nI,7] == 0 .And. aRegBx[nI,18]="2"
															//Caso seja um titulo gerado por outro modulo que possua uma natureza sem percentual de imposto. Ou seja, que os Pis e Cofins
															//por exemplo sejam gerados pelos percentuais do produto.
															SE1 -> ( DbSeek ( xFilial("SE1") + aRegBx[nI,20]) )
															nPercPis	:=	(aRegBx[nI,3]/If(SE1->E1_SALDO == 0 ,aRegBx[nI,19],aRegBx[nI,6]))*100
														Else
															nPercPis	:=	aRegBx[nI,7]
															nPercCof	:=	aRegBx[nI,21]
														Endif

														nBase := Round((aRegBx[nI,3] * 100)/ nPercPis ,2)

														If lRetSFQ
															If nPercCof > 0 .And. Round((aRegBx[nI,4] * 100)/ nPercCof ,2) > nBase
																nBase	:=	nBase + (Round((aRegBx[nI,4] * 100)/ nPercCof ,2) - nBase)
															Endif
														Endif

													Endif

													//Indicador da retenção
													If	lEDIndRet
														If Empty(aRegBx[nI,9]) .And. lA1IndRet
															aF600[1] := aRegBx[nI,8]
														Else
															aF600[1] := aRegBx[nI,9]
														Endif
													Else
														aF600[1] := ""
													Endif

													aF600[2] := aRegBx[nI,2]						//-- Data da emissão
													aF600[3] := nBase 								//-- Base do imposto
													aF600[4] := aRegBx[nI,3] + aRegBx[nI,4] //-- Valor da retenção

													//Indicador de cumulatividade das naturezas de receita
													If lEDIndCMLT .And. lEDCond

														If Alltrim(aRegBx[nI,10]) == "1"
															cIndCmlt := "0" //Cumulativo
														ElseIf Alltrim(aRegBx[nI,10]) == "2"
															cIndCmlt := "1" //Não Cumulativo
														EndIf

														aF600[5] := Iif(Alltrim(aRegBx[nI,11]) == "R", cIndCmlt, "")
													Else
														aF600[5] := ""
													Endif

													aF600[6] := aRegBx[nI,1] 	 //-- CNPJ do cliente
													aF600[7] := aRegBx[nI,3]	 //-- Valor da retenção de PIS
													aF600[8] := aRegBx[nI,4]   //-- Valor da retenção de COFINS

													//Indicador da pessoa declarante
													If (aRegBx[nI,13] $ "SP" .Or. aRegBx[nI,12] $ "SP") .And. SM0->M0_CGC <> aRegBx[nI,1]  //-- Empresa beneficiária da retenção
														aF600[9] := "0"
													ElseIf (aRegBx[nI,13] $ "SP" .Or. aRegBx[nI,12] $ "SP") .And. SM0->M0_CGC == aRegBx[nI,1] //-- Empresa responsável pelo recolhimento
														aF600[9] := "1"
													EndIf

													aF600[10] := "SE5" 			 //-- Tabela
													aF600[11] := aRegBx[nI,14] //-- Recno

													If lSpdCodRec .And. !Empty(cPeCodRec)
														aF600[12] := cPeCodRec 	 //-- Codigo da Receita
													Else
														aF600[12] := ""		 	//-- Codigo da Receita
													Endif

													aAdd(aReturn,aF600)
													nBase := 0
													nProp := 0

												Next
												(cAliasQry)->(dbSkip())

												If (cAliasQry)->(Eof()) .and. (cAliasQry <> cAliasSPED)
													(cAliasQry)->(dbCloseArea())
													cAliasQry := cAliasSPED
													(cAliasQry)->(Dbskip())
												Endif
											EndDo

											(cAliasQry)->(dbCloseArea())

											#IFNDEF TOP
												fErase ( cTrabalho + GetDBExtension() )
												fErase ( cTrabalho + OrdBagExt() )
											#EndIf

										Endif

										If !Empty(cRASpd) //Enviar somente os titulos do tipo RA caso o parametro esteja configurado para antecipacao de creditos de Pis e Cofins.
											#IFDEF TOP

												cAliasQry	:= "SE5QRY"
												aStruct	 	:= SE5->(dbStruct())

												cQuery	 	:= "SELECT "

												//Campos de referência
												cQuery	 	+= "SE5.E5_FILIAL FILIAL, SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUMERO, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, SE5.E5_CLIFOR CLIENTE, "
												cQuery		+= "SE5.E5_LOJA LOJA, SE5.E5_TXMOEDA TXMOEDA, SE5.E5_MOTBX MOTBX, SE5.E5_FILORIG FILORIG, "
												cQuery	 	+= "SE5.E5_TIPODOC TIPODOC, SE5.E5_PRETPIS PRETPIS, SE5.E5_DOCUMEN DOCUMEN, "
												cQuery	 	+= "SE5.E5_DATA DATA, SE5.E5_VLMOED2 VALORBX, "
												cQuery	 	+= "SE5.R_E_C_N_O_ RECNO, "

												//Campos do SED
												cQuery	 	+= "SED.ED_PERCPIS PERCPIS, SED.ED_PERCCOF PERCCOF, SED.ED_COND COND, "

												//Indicador de Retenção
												If lEDIndRet
													cQuery	+= "SED.ED_INDRET INDRET, "
												Endif

												//Indicador de Cumulatividade
												If lEDIndCMLT
													cQuery	+= "SED.ED_INDCMLT INDCMLT, "
												Endif

												//Dados do cliente para o SPED
												cQuery	 	+= "SA1.A1_CGC CNPJ, SA1.A1_RECPIS RECPIS, SA1.A1_RECCOFI RECCOFI "

												If lA1IndRet
													cQuery	 	+= ", SA1.A1_INDRET A1INDRET "
												Endif

												cQuery	 	+= "FROM "
												cQuery 		+= RetSqlName("SE5") + " SE5,  "
												cQuery 		+= RetSqlName("SED") + " SED,  "
												cQuery 		+= RetSqlName("SA1") + " SA1   "

												cQuery	 	+= "WHERE "

												cQuery	 	+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "
												cQuery 		+=	"SA1.A1_FILIAL ='" + xFilial("SA1") + "' AND "

												If !Empty( iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) ) //Filiais compartilhadas
													cQuery 		+=	"SE5.E5_FILIAL='" + xFilial("SE5") + "' AND "
												Else
													cQuery 		+=	"SE5.E5_FILORIG='" + cFilAnt + "' AND "
												Endif

												cQuery	 	+= "SE5.E5_CLIFOR = SA1.A1_COD AND "
												cQuery	 	+= "SE5.E5_LOJA = SA1.A1_LOJA AND "
												cQuery	 	+= "(SE5.E5_DATA >= '"+cDataIni+"' AND SE5.E5_DATA <= '"+cDataFim+"') AND "
												cQuery		+= "SE5.E5_SITUACA <> 'C' AND "
												cQuery	 	+= "SE5.E5_RECPAG = 'R' AND "
												cQuery 		+= "SE5.E5_TIPO = 'RA' AND "
												cQuery 		+= "SE5.E5_TIPODOC = 'RA' AND "
												cQuery 		+= "SE5.E5_DOCUMEN = '' AND "
												cQuery 		+= "SE5.E5_NATUREZ IN " + FormatIn(cRASpd,"|") + " AND "

												//Exclui os titulos que possuem estorno
												cQuery	 	+= "SE5.E5_SEQ NOT IN "
												cQuery 		+= "(SELECT SE5AUX.E5_SEQ FROM "+RetSqlName("SE5")+" SE5AUX WHERE "
												cQuery		+=		" SE5AUX.E5_FILIAL = SE5.E5_FILIAL AND "
												cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
												cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
												cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
												cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
												cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
												cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
												cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
												cQuery		+= 		" SE5AUX.D_E_L_E_T_ = ' ' "
												cQuery 		+= ") AND "

												cQuery	 	+= "SED.ED_CODIGO = SE5.E5_NATUREZ AND "

												cQuery		+= "SED.D_E_L_E_T_ = ' ' AND "
												cQuery		+= "SE5.D_E_L_E_T_ = ' ' AND "
												cQuery		+= "SA1.D_E_L_E_T_ = ' ' 	"

												cQuery 		:= ChangeQuery(cQuery)
												dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

												For nX := 1 To len(aStruct)
													If aStruct[nX][2] <> "C" .And. FieldPos(aStruct[nX][1])<>0
														TcSetField(cAliasQry,aStruct[nX][1],aStruct[nX][2],aStruct[nX][3],aStruct[nX][4])
													EndIf

												Next nX

											#ELSE

												//***********************************************************************
												// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												// ³ Cria o arquivo de trabalho ³
												// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												cAliasQry	:= "SE5QRY"
												aCampos := {}
												aTam:=TamSX3("E5_FILIAL")
												AADD(aCampos,{"FILIAL"  	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PREFIXO")
												AADD(aCampos,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_NUMERO")
												AADD(aCampos,{"NUMERO"   	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PARCELA")
												AADD(aCampos,{"PARCELA" 	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TIPO")
												AADD(aCampos,{"TIPO"   		,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_CLIFOR")
												AADD(aCampos,{"CLIENTE" 	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_LOJA")
												AADD(aCampos,{"LOJA"   		,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TIPODOC")
												AADD(aCampos,{"TIPODOC"  	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("A1_CGC")
												AADD(aCampos,{"CNPJ"  		,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("A1_RECPIS")
												AADD(aCampos,{"RECPIS"   	,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("A1_RECCOFI")
												AADD(aCampos,{"RECCOFI"   	,"C",aTam[1],aTam[2]})
												AADD(aCampos,{"NROREG"  	,"N",9,0})
												aTam:=TamSX3("ED_PERCPIS")
												AADD(aCampos,{"PERCPIS"   	,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_PERCCOF")
												AADD(aCampos,{"PERCCOF"   	,"N",aTam[1],aTam[2]})

												aTam:=TamSX3("ED_INDRET")
												AADD(aCampos,{"INDRET"   	,"C",aTam[1],aTam[2]})

												If lEDCond
													aTam:=TamSX3("ED_COND")
													AADD(aCampos,{"COND"   		,"C",aTam[1],aTam[2]})
												Endif

												If lEDIndCMLT
													aTam:=TamSX3("ED_INDCMLT")
													AADD(aCampos,{"INDCMLT"   	,"C",aTam[1],aTam[2]})
												Endif
												aTam:=TamSX3("E5_DATA")
												AADD(aCampos,{"DTMOV" 		,"C",8,0})

												If lA1IndRet
													aTam:=TamSX3("A1_INDRET")
													AADD(aCampos,{"A1INDRET"   	,"C",aTam[1],aTam[2]})
												Endif

												aTam:=TamSX3("E5_VLMOED2")
												AADD(aCampos,{"VALORBX"   		,"N",aTam[1],aTam[2]})

												cTrabalho := CriaTrab(aCampos)
												dbUseArea(.T.,,cTrabalho,cAliasQry,.F.,.F.)
												dbCreateInd(cTrabalho, "DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA", {||DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA})

												SE1 -> ( dbSetOrder ( 1 ) ) //FILIAL+PREFIXO+NUM+PARCELA+TIPO
												SA1 -> ( dbSetOrder ( 1 ) ) //FILIAL+COD+LOJA
												SED -> ( dbSetOrder ( 1 ) ) //FILIAL+CODIGO

												dbSelectArea("SE5")
												SE5 -> ( dbSetOrder ( 1 ) ) //FILIAL+DTOS(DATA)+BANCO+AGENCIA+CONTA+NUMCHEQ
												SE5 -> ( dbSeek ( xFilial("SE5") + cDataIni, .T. ) )

												Do While ( SE5->(!Eof()) .And. Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim .And. SE5->E5_FILIAL = xFilial("SE5"))

													If SE5->E5_TIPODOC = 'ES' .Or. SE5->E5_MOTBX $ 'FAT_LIQ' .Or. SE5->E5_RECPAG <> 'R'
														SE5->(dbSkip())
														Loop
													EndIf

													If Alltrim(SE5->E5_TIPO) <> 'RA' .Or. SE5->E5_SITUACA = 'C' .Or. Alltrim(SE5->E5_TIPODOC) <> 'RA' .Or. !Empty(SE5->E5_DOCUMEN)
														SE5->(dbSkip())
														Loop
													EndIf

													If !(Alltrim(SE5->E5_NATUREZ) $ cRASpd)
														SE5->(dbSkip())
														Loop
													EndIf

													SED->(DbSeek(xFilial("SED")+ SE5->E5_NATUREZ))
													If SED->ED_CODIGO <> SE5->E5_NATUREZ
														SE5->(Dbskip())
														Loop
													Endif

													If !SA1 -> ( dbSeek ( xFilial("SA1") + SE5->(E5_CLIENTE+E5_LOJA)) )
														SE5->(dbSkip())
														Loop
													Endif

													RecLock (cAliasQry, .T. )
													(cAliasQry) ->	FILIAL		:= SE5 -> E5_FILIAL
													(cAliasQry) ->	PREFIXO		:= SE5 -> E5_PREFIXO
													(cAliasQry) ->	NUMERO		:= SE5 -> E5_NUMERO
													(cAliasQry) ->	PARCELA		:= SE5 -> E5_PARCELA
													(cAliasQry) ->	TIPO			:= SE5 -> E5_TIPO
													(cAliasQry) ->	CLIENTE		:= SE5 -> E5_CLIENTE
													(cAliasQry) ->	LOJA			:= SE5 -> E5_LOJA
													(cAliasQry) ->	TIPODOC		:= SE5 -> E5_TIPODOC
													(cAliasQry) ->	VALORBX		:= SE5 -> E5_VLMOED2
													(cAliasQry) ->DTMOV    		:= Dtos(SE5 -> E5_DATA)
													(cAliasQry) ->	NROREG		:= SE5 -> (Recno())
													(cAliasQry) ->	CNPJ			:= SA1 -> A1_CGC
													(cAliasQry) ->	RECPIS		:= SA1 -> A1_RECPIS
													(cAliasQry) ->	RECCOFI		:= SA1 -> A1_RECCOFI
													(cAliasQry) ->	PERCPIS		:= SED -> ED_PERCPIS
													(cAliasQry) ->	PERCCOF		:= SED -> ED_PERCCOF
													(cAliasQry) ->	INDRET		:= SED -> ED_INDRET

													If lEDIndCMLT
														(cAliasQry) ->	INDCMLT		:= SED -> ED_INDCMLT
													Endif

													If lEDCond
														(cAliasQry) ->	COND			:= SED -> ED_COND
													Endif

													If lA1IndRet
														(cAliasQry) ->	A1INDRET		:= SA1 -> A1_INDRET
													Endif

													(cAliasQry) -> (MsUnlock( ))

													SE5->(dbSkip())
												EndDo

												(cAliasQry) -> (Dbgotop())

											#ENDIF

											dbSelectArea(cAliasQry)
											cAliasSPED := cAliasQry
											While !(cAliasQry)->(Eof())

												aF600 := Array(11)

												nBase 	:= Round((cAliasQry)->VALORBX ,2)
												nPisBx	:= Round(((cAliasQry)->VALORBX *(cAliasQry)->PERCPIS)/100,2)
												nCofBx	:=	Round(((cAliasQry)->VALORBX * (cAliasQry)->PERCCOF)/100,2)

												//Indicador da retenção
												If	lEDIndRet
													If Empty((cAliasQry)->INDRET) .And. lA1IndRet
														aF600[1] := (cAliasQry)->A1INDRET
													Else
														aF600[1] := (cAliasQry)->INDRET
													Endif
												Else
													aF600[1] := ""
												Endif

												#IFDEF TOP
													aF600[2] := (cAliasQry)->DATA 	//-- Data da emissão
												#ELSE
													aF600[2] := (cAliasQry)->DTMOV 	//-- Data da emissão
												#ENDIF

												aF600[3] := nBase 				//-- Base do imposto
												aF600[4] := nPisBx + nCofBx 	//-- Valor da retenção

												//Indicador de cumulatividade das naturezas de receita
												If lEDIndCMLT .And. lEDCond

													If (cAliasQry)->INDCMLT == "1"
														cIndCmlt := "0" //Cumulativo
													ElseIf (cAliasQry)->INDCMLT == "2"
														cIndCmlt := "1" //Não Cumulativo
													EndIf

													aF600[5] := Iif((cAliasQry)->COND == "R", cIndCmlt, "")
												Else
													aF600[5] := ""
												Endif

												aF600[6] := (cAliasQry)->CNPJ 	 	//-- CNPJ do cliente
												aF600[7] := nPisBx 						//-- Valor da retenção de PIS
												aF600[8] := nCofBx 						//-- Valor da retenção de COFINS

												//Indicador da pessoa declarante
												If ((cAliasQry)->RECPIS $ "SP" .Or. (cAliasQry)->RECCOFI $ "SP") .And. SM0->M0_CGC <> (cAliasQry)->CNPJ 	  //-- Empresa beneficiária da retenção
													aF600[9] := "0"
												ElseIf ((cAliasQry)->RECPIS $ "SP" .Or. (cAliasQry)->RECCOFI $ "SP") .And. SM0->M0_CGC == (cAliasQry)->CNPJ //-- Empresa responsável pelo recolhimento
													aF600[9] := "1"
												EndIf

												aF600[10] := "SE5" 				 //-- Tabela

												#IFDEF TOP
													aF600[11] := (cAliasQry)->RECNO  //-- Recno
												#ELSE
													aF600[11] := (cAliasQry)->NROREG //-- Recno
												#ENDIF

												aAdd(aReturn,aF600)

												nBase := 0
												nProp := 0

												(cAliasQry)->(dbSkip())

												If (cAliasQry)->(Eof()) .and. (cAliasQry <> cAliasSPED)
													(cAliasQry)->(dbCloseArea())
													cAliasQry := cAliasSPED
													(cAliasQry)->(Dbskip())
												Endif
											EndDo

											(cAliasQry)->(dbCloseArea())

											#IFNDEF TOP
												fErase ( cTrabalho + GetDBExtension() )
												fErase ( cTrabalho + OrdBagExt() )
											#EndIf

										Endif

										If Select(cAliasSPED)>0
											(cAliasSPED)->(dbCloseArea())
										Endif

										SC5->(RestArea(aAreaSC5))

										Return aReturn


										/*/
										ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
										±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
										±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
										±±³Fun‡…o	 ³FinSpdM220³ Autor ³ Totvs          	     ³ Data ³ 06/03/12 ³±±
										±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
										±±³Descri‡…o ³ Func„o para retornar deducoes para os registros M210/M610 e³±±
										±±³          ³ M220/M620 do SPED PIS/COFINS                               ³±±
										±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
										±±³Sintaxe	 ³ FinSpdM220()            											  ³±±
										±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
										±±³ Uso		 ³ SIGAFIS						            							  ³±±
										±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
										±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
										ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
										/*/
									Function FinSpdM220(nMesRef,nAnoRef)
										Local aReturn	:= {}
										Local aM220  	:= {}
										Local cQuery 	:= ""
										Local cAliasQry:= ""
										Local aStruct	:= {}
										Local nJ			:= 0
										Local nI			:= 0
										Local nX			:=	0
										Local nValorPis:= 0
										Local nValorCof:= 0
										Local cDataIni	:= ""
										Local cDataFim := ""
										Local dLastDay := ""
										Local cMotBx	:= SuperGetMv("MV_MTBXSD",,"")
										Local aMotBx 	:= ReadMotBx()
										Local aRegSped	:=	{}
										Local aAreaSEV	:=	{}
										Local aCampos	:= {}
										Local aTam     := {}
										Local nVrRateio:=	0
										Local nMesAnt	:=	0
										Local nAnoAnt	:=	0
										Local cDescBx	:= ""
										Local cIndCmlt	:=	""
										Local cTrabalho:=	""
										Local dDataIni	:=	Ctod("  /  /  ")
										Local nMes		:=	0
										Local lUnidNeg := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
										Local nQtdMesAnt	:=	SuperGetMv("MV_NMSPD",,2)  //Nro de meses que devem ser checado para a emissão dos titulos.
										Local dDtCanc		:=	Ctod("01/"+StrZero(nMesRef,2)+"/"+StrZero(nAnoRef,4))
										Local aBaseIrf	:=	{} //Compoem os valores das bases dos titulos para calcular os impostos.
										Local nBaseIrf	:= 0
										Local nVlMinImp := GetNewPar("MV_VL10925",5000)
										Local lPCCBaixa := If(FindFunction("FPccBxCr"),FPccBxCr(),.F.)
										Local nPerc		:=	0
										Local lSpdOrig	:=	ExistBlock("SPDF1003")
										Local cOrigem	:= ""
										Local dDtRef		:=	Ctod("  /  /  ")
										Local cChaveSe5	:=	""

										DEFAULT nMesRef := Month(dDataBase)
										DEFAULT nAnoRef := Year(dDataBase)

										cDataIni := StrZero(nAnoRef,4)+StrZero(nMesRef,2)+"01"
										dLastDay := LastDay(Ctod("01/"+StrZero(nMesRef,2)+"/"+StrZero(nAnoRef,4)))
										cDataFim := StrZero(nAnoRef,4)+StrZero(nMesRef,2)+StrZero(Day(dLastDay),2)

										For nX := 1 to nQtdMesAnt
											dDtCanc	:= Firstday(dDtCanc)-1
										Next nX
										dDtCanc	:= Firstday(dDtCanc)

										cMotBx	:=	SpdVldVar(cMotBx)

										cOrigem	:=	"" //Tratamentos para o ponto de entrada SPDF1003
										If lSpdOrig
											cOrigem := ExecBlock ("SPDF1003",.F.,.F.)
										Endif

										#IFNDEF TOP //Caso seja base DBF verificar a existencia dos campos da tabela SED que serao necessarias a geracao deste bloco.
											If SED->(FieldPos("ED_APURCOF")) <= 0 .Or.	SED->(FieldPos("ED_APURPIS")) <= 0 .Or. SED->(FieldPos("ED_PCAPPIS")) <= 0 .Or.;
													SED->(FieldPos("ED_PCAPCOF")) <= 0 .Or.	SED->(FieldPos("ED_CSTPIS")) <= 0 .Or. SED->(FieldPos("ED_CSTCOF")) <= 0 .Or.;
													SED->(FieldPos("ED_INDCMLT")) <= 0 .Or.	SED->(FieldPos("ED_INDRET")) <= 0
												MsgAlert('Alguns campos do SPED PIS/COFINS nao existem na base. Favor verificar os boletins referentes ao SPED PIS/COFINS (Fiscal e Financeiro).')
												Return aReturn
											Endif
										#ENDIF

										If !Empty(cMotBx)

											#IFDEF TOP
												cAliasQry	:= "SE5QRY"
												aStruct 	:= SE5->(dbStruct())
												cQuery	 	:= "SELECT "
												cQuery	 	+= "SE5.E5_FILIAL FILIAL, SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUM, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, "
												cQuery		+= "SE5.E5_CLIFOR CLIFOR, SE5.E5_LOJA LOJA, SE5.E5_TIPODOC TIPODOC, SE5.E5_MOTBX MOTBX, "
												cQuery	 	+= "SE5.E5_DATA DATA, SE5.E5_VALOR VALOR, SE5.E5_RECPAG RECPAG, "
												cQuery	 	+= "SE5.E5_VRETPIS VRETPIS, SE5.E5_VRETCOF VRETCOF, SE5.E5_PRETPIS PRETPIS, SE5.E5_PRETCOF PRETCOF, "
												cQuery	 	+= "SE5.R_E_C_N_O_ RECNO, "

												cQuery		+= "SE1.E1_ORIGEM ORIGEM, SE1.E1_EMISSAO EMISSAO, SE1.E1_MOEDA MOEDA, SE1.E1_VLCRUZ VLCRUZ, SE1.E1_VALOR VALORE1, "
												cQuery		+= "SE1.E1_PIS PIS, SE1.E1_COFINS COFINS, SE1.E1_CSLL CSLL, SE1.E1_SALDO SALDO, "
												cQuery		+= "SE1.E1_IRRF VRIR, SE1.E1_INSS VRINSS, SE1.E1_ISS VRISS, "
												cQuery		+= "SE1.E1_TXMOEDA TXMOEDA,SE1.E1_BASEIRF BASEIRF, SE1.E1_MULTNAT MULTNAT, SE1.E1_TIPO TIPOE1, SE1.E1_NATUREZ NATUREZ "

												cQuery	 	+= "FROM "
												cQuery 		+= RetSqlName("SE5") + " SE5, "
												cQuery 		+= RetSqlName("SE1") + " SE1, "
												cQuery 		+= RetSqlName("SED") + " SED "

												cQuery	 	+= "WHERE "

												If !Empty( iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) ) //Filiais compartilhadas
													cQuery	+= "SE5.E5_FILIAL = '"  + cFilAnt + "' AND "
												Else
													cQuery	+= "SE5.E5_FILIAL = '"  + xFilial("SE5") + "' AND "
													cQuery	+= "SE5.E5_FILORIG = '" + cFilAnt + "' AND "
												EndIf

												If !Empty( xFilial("SE1") )
													cQuery 	+= "SE1.E1_FILIAL = '"  + cFilAnt + "' AND "
												Else
													cQuery  += "SE1.E1_FILIAL = '" + xFilial("SE1") + "' AND "
													cQuery 	+= "SE1.E1_FILORIG = '" + cFilAnt + "' AND "
												EndIf

												cQuery 	+= "SED.ED_CODIGO = SE1.E1_NATUREZ AND "
												cQuery 	+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "

												cQuery 		+= "SE5.E5_PREFIXO = SE1.E1_PREFIXO AND "
												cQuery 		+= "SE5.E5_NUMERO = SE1.E1_NUM AND "
												cQuery 		+= "SE5.E5_PARCELA = SE1.E1_PARCELA AND "
												cQuery 		+= "SE5.E5_TIPO = SE1.E1_TIPO AND "
												cQuery	 	+= "SE5.E5_CLIFOR = SE1.E1_CLIENTE AND "
												cQuery		+= "SE5.E5_LOJA = SE1.E1_LOJA AND "

												cQuery	 	+= "SE5.E5_RECPAG = 'R' AND "

												cQuery	 	+= "(SE5.E5_DATA >= '"+cDataIni+"' AND SE5.E5_DATA <= '"+cDataFim+"') AND "

												cQuery	 	+= "(SE1.E1_EMISSAO >= '"+Dtos(dDtCanc)+"' AND SE1.E1_EMISSAO <= '"+Dtos(dDataBase)+"') AND "

												cQuery 		+= "(SED.ED_APURCOF <> '' OR SED.ED_APURPIS <> '') AND "

												//Exclui os titulos que possuem estorno
												cQuery	 	+= "SE5.E5_SEQ NOT IN "
												cQuery 		+= "(SELECT SE5AUX.E5_SEQ FROM "+RetSqlName("SE5")+" SE5AUX WHERE "
												cQuery		+= 		" SE5AUX.E5_FILIAL = SE5.E5_FILIAL AND "
												cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
												cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
												cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
												cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
												cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
												cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
												cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
												cQuery		+= 		" SE5AUX.D_E_L_E_T_ = '' "
												cQuery 		+= ") AND "

												cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(MVABATIM,"|") + " AND "
												cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(MV_CRNEG,If("|"$MV_CRNEG,"|",","))  + " AND "
												cQuery		+= "SE5.E5_TIPO NOT IN " + FormatIn(MVPROVIS,If("|"$MVPROVIS,"|",",") ) + " AND "

												If lPCCBaixa //PCC na Baixa.
													cQuery		+= "SE5.E5_TIPODOC NOT IN ('JR','MT','J2','M2','DC','CM','D2','C2','LJ','OC','OD','OG','CX') AND "
												Endif

												cQuery 		+= "(SE5.E5_MOTBX IN (" + cMotBx + ")  OR SE5.E5_TIPODOC='CP') AND " 	//Compensacao com NCC e baixa cancelada (MV_MTBXSD).

												cQuery		+= "SE5.E5_SITUACA <> 'C' AND "
												cQuery		+= "SE5.D_E_L_E_T_ = '' "

												cQuery 		+= " ORDER BY FILIAL, PREFIXO, NUM, PARCELA, TIPO, CLIFOR, LOJA"

												cQuery 		:= ChangeQuery(cQuery)
												dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

												For nX := 1 To Len(aStruct)
													If aStruct[nX][2] <> "C" .And. FieldPos(aStruct[nX][1])<>0
														TcSetField(cAliasQry,aStruct[nX][1],aStruct[nX][2],aStruct[nX][3],aStruct[nX][4])
													EndIf
												Next nX

											#ELSE

												//***********************************************************************
												// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												// ³ Cria o arquivo de trabalho ³
												// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												cAliasQry	:= "SE5QRY"
												aCampos := {}
												aTam:=TamSX3("E5_FILIAL")
												AADD(aCampos,{"FILIAL"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PREFIXO")
												AADD(aCampos,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_NUMERO")
												AADD(aCampos,{"NUM"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PARCELA")
												AADD(aCampos,{"PARCELA" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TIPO")
												AADD(aCampos,{"TIPO"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TIPODOC")
												AADD(aCampos,{"TIPODOC"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_CLIFOR")
												AADD(aCampos,{"CLIFOR" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_LOJA")
												AADD(aCampos,{"LOJA"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_RECPAG")
												AADD(aCampos,{"RECPAG"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VALOR")
												AADD(aCampos,{"VALOR"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VRETPIS")
												AADD(aCampos,{"VRETPIS"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VRETCOF")
												AADD(aCampos,{"VRETCOF"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PRETPIS")
												AADD(aCampos,{"PRETPIS"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PRETCOF")
												AADD(aCampos,{"PRETCOF"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_DATA")
												AADD(aCampos,{"DTMOV" ,"C",8,0})
												aTam:=TamSX3("E5_MOTBX")
												AADD(aCampos,{"MOTBX" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_ORIGEM")
												AADD(aCampos,{"ORIGEM"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_EMISSAO")
												AADD(aCampos,{"EMISSAO" ,"C",8,0})
												aTam:=TamSX3("E1_MOEDA")
												AADD(aCampos,{"MOEDA"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_VLCRUZ")
												AADD(aCampos,{"VLCRUZ"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_VALOR")
												AADD(aCampos,{"VALORE1"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_BASEIRF")
												AADD(aCampos,{"BASEIRF"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_MULTNAT")
												AADD(aCampos,{"MULTNAT"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_TIPO")
												AADD(aCampos,{"TIPOE1"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_NATUREZ")
												AADD(aCampos,{"NATUREZ"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_PIS")
												AADD(aCampos,{"PIS"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_COFINS")
												AADD(aCampos,{"COFINS"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_CSLL")
												AADD(aCampos,{"CSLL"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_IRRF")
												AADD(aCampos,{"VRIR"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_INSS")
												AADD(aCampos,{"VRINSS"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_ISS")
												AADD(aCampos,{"VRISS"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_SALDO")
												AADD(aCampos,{"SALDO"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_TXMOEDA")
												AADD(aCampos,{"TXMOEDA"   ,"N",aTam[1],aTam[2]})
												AADD(aCampos,{"NROREG"  ,"N",9,0})

												cTrabalho := CriaTrab(aCampos)
												dbUseArea(.T.,,cTrabalho,cAliasQry,.F.,.F.)

												dbCreateInd(cTrabalho, "DTMOV+FILIAL+PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA", {||DTMOV+FILIAL+PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA})

												dbSelectArea("SE5")
												SE5 -> ( dbSetOrder ( 1 ) ) //FILIAL+DTOS(DATA)+BANCO+AGENCIA+CONTA+NUMCHEQ

												dDataIni := Ctod("01/"+StrZero(nMesRef,2)+"/"+StrZero(nAnoRef,4))
												nMes 		:= Month(dDataIni)

												While Month(dDataIni) == nMes

													If SE5->(dbSeek(xFilial("SE5")+DtoS(dDataIni),.T.))
														Do While ( SE5->(!Eof()) .And. Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim .And. SE5->E5_FILIAL = xFilial("SE5"))
															If SE5->E5_TIPODOC = 'ES' .Or. SE5->E5_MOTBX $ 'FAT_LIQ'
																SE5->(DbSkip())
																Loop
															EndIf

															If SE5->E5_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS)
																SE5->(DbSkip())
																Loop
															EndIf

															If SE5->E5_TIPODOC $ 'JR_MT_J2_M2_DC_CM_D2_C2_LJ_OC_OD_OG_CX'
																SE5->(DbSkip())
																Loop
															Endif

															If SE5->E5_SITUACA = 'C' .Or. SE5->E5_RECPAG <> 'R'
																SE5->(DbSkip())
																Loop
															EndIf

															If !(SE5->E5_MOTBX $ cMotBx)  .Or. !(SE5->E5_TIPODOC='CP')
																SE5->(DbSkip())
																Loop
															EndIf

															If !SE1->(DbSeek(xFilial("SE1")+ (SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO)))
																SE5->(DbSkip())
																Loop
															Endif

															If Dtos(SE1->E1_BAIXA) <> Dtos(SE5->E5_DATA)
																SE5->(Dbskip())
																Loop
															Endif

															If Month(SE1->E1_EMISSAO) = Month(SE5->E5_DATA) .And. 	Year(SE1->E1_EMISSAO) = Year(SE5->E5_DATA)
																SE5->(Dbskip())
																Loop
															Endif

															If !(Dtos(SE1->E1_EMISSAO) >= DTOS(dDtCanc) .And. Dtos(SE1->E1_EMISSAO) <= DTOS(dDataBase))
																SE5->(Dbskip())
																Loop
															Endif

															RecLock (cAliasQry, .T. )
															(cAliasQry) ->	FILIAL		:= SE5 -> E5_FILIAL
															(cAliasQry) ->	PREFIXO		:= SE5 -> E5_PREFIXO
															(cAliasQry) ->	NUM			:= SE5 -> E5_NUMERO
															(cAliasQry) ->	PARCELA		:= SE5 -> E5_PARCELA
															(cAliasQry) ->	TIPO			:= SE5 -> E5_TIPO
															(cAliasQry) ->	TIPODOC		:= SE5 -> E5_TIPODOC
															(cAliasQry) ->	CLIFOR		:= SE5 -> E5_CLIFOR
															(cAliasQry) ->	LOJA			:= SE5 -> E5_LOJA
															(cAliasQry) ->	RECPAG		:= SE5 -> E5_RECPAG
															(cAliasQry) ->	VALOR			:= SE5 -> E5_VALOR
															(cAliasQry) ->	MOTBX			:= SE5 -> E5_MOTBX
															(cAliasQry) ->DTMOV    		:= Dtos(SE5 -> E5_DATA)
															(cAliasQry) ->	NROREG		:= SE5 -> (Recno())
															(cAliasQry) ->	ORIGEM		:= SE1 -> E1_ORIGEM
															(cAliasQry) ->	EMISSAO		:= Dtos(SE1 -> E1_EMISSAO)
															(cAliasQry) ->	MOEDA			:= SE1 -> E1_MOEDA
															(cAliasQry) ->	VLCRUZ		:= SE1 -> E1_VLCRUZ
															(cAliasQry) ->	VALORE1		:= SE1 -> E1_VALOR
															(cAliasQry) ->	SALDO		:= SE1 -> E1_SALDO
															(cAliasQry) ->	BASEIRF		:= SE1 -> E1_BASEIRF
															(cAliasQry) ->	MULTNAT		:= SE1 -> E1_MULTNAT
															(cAliasQry) ->	TIPOE1		:= SE1 -> E1_TIPO
															(cAliasQry) ->	NATUREZ		:= SE1 -> E1_NATUREZ
															(cAliasQry) ->	PIS			:= SE1 -> E1_PIS
															(cAliasQry) ->	COFINS		:= SE1 -> E1_COFINS
															(cAliasQry) ->	CSLL			:= SE1 -> E1_CSLL
															(cAliasQry) ->	VRIR			:= SE1 -> E1_IRRF
															(cAliasQry) ->	VRISS			:= SE1 -> E1_ISS
															(cAliasQry) ->	VRINSS		:= SE1 -> E1_INSS
															(cAliasQry) ->	VRETPIS		:= SE5 -> E5_VRETPIS
															(cAliasQry) ->	VRETCOF		:= SE5 -> E5_VRETCOF
															(cAliasQry) ->	PRETPIS		:= SE5 -> E5_PRETPIS
															(cAliasQry) ->	PRETCOF		:= SE5 -> E5_PRETCOF
															(cAliasQry) ->	TXMOEDA		:= SE1 -> E1_TXMOEDA
															(cAliasQry) -> (MsUnlock( ))

															SE5->(dbSkip())
														EndDo
													Endif
													dDataIni++
													Loop
												Enddo

											#ENDIF

											dbSelectArea(cAliasQry)

											#IFNDEF TOP
												(cAliasQry)->(Dbgotop())
											#ENDIF

											While !(cAliasQry)->(Eof())

												aRegSped		:=	{}
												cDescBx		:= ""

												#IFNDEF TOP
													dDtRef  := (cAliasQry)->DTMOV			// Data de Referencia
												#ELSE
													dDtRef  := (cAliasQry)->DATA			// Data de Referencia
												#ENDIF

												If 	(cAliasQry)->TIPODOC = 'CP'  	//Verifica somente Compensacao de NF com NCC.
													cChaveSE5	:=(cAliasQry)->PREFIXO+	(cAliasQry)->NUM+(cAliasQry)->PARCELA+(cAliasQry)->TIPO+(cAliasQry)->LOJA
													SE5->(Dbsetorder(10)) // E5_FILIAL+E5_DOCUMEN
													If SE5->(Dbseek(xFilial("SE5")+ cChaveSE5)) .And. !(SE5->E5_TIPO $ MV_CRNEG)
														(cAliasQry)->(dbSkip())
														Loop
													Endif
												Endif

												If lPCCBaixa //PCC na Baixa.
													//Para casos de titulos gerados com valor que nao retenha imposto vou enviar o ajuste qdo for gerado o imposto que esta retido em outro titulo.
													If (cAliasQry)->VALOR <= nVlMinImp	.And. ((cAliasQry)->PRETPIS == "2"  .Or. (cAliasQry)->PRETCOF == "2")
														(cAliasQry)->(Dbskip())
														Loop
													Endif
												Else //PCC na Emissao.
													If (cAliasQry)->VALOR <= nVlMinImp //Caso o titulo seja retido em outro nao devo enviar no bloco F600.
														SFQ->(DbSetOrder(2)) // FQ_FILIAL+FQ_ENTDES+FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES
														If SFQ->(DbSeek(xFilial("SFQ")+"SE1"+ (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA ))
															(cAliasQry)->(Dbskip())
															Loop
														Endif
													Endif
												Endif

												If 	(cAliasQry)->TIPODOC = 'CP'
													cDescBx	:=	"Baixa Financeira compensando "
												Else
													//Checando motivos de baixas que nao foram enviados.
													nI :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper((cAliasQry)->MOTBX ) })
													If (cAliasQry)->MOTBX $ cMotBx .And. nI > 0
														If Substr(aMotBx[nI],26,01) <> "N" //movimenta banco
															(cAliasQry)->(Dbskip())
															Loop
														Else
															cDescBx	:=	"Baixa Financeira por "+ Substr(aMotBx[nI],07,10)
														Endif
													Else
														(cAliasQry)->(Dbskip())
														Loop
													Endif
												Endif

												#IFDEF TOP
													If (Month(Stod((cAliasQry)->EMISSAO)) = Month(Stod((cAliasQry)->DATA)) ) .And. (Year(Stod((cAliasQry)->EMISSAO)) = Year(Stod((cAliasQry)->DATA)))
														(cAliasQry)->(Dbskip())
														Loop
													Endif
												#ENDIF

												If (cAliasQry)->TIPOE1 $ (MVPROVIS,'PR ','PRE')
													(cAliasQry)->(Dbskip())
													Loop
												Endif

												If !(AllTrim((cAliasQry)->ORIGEM) $ ("FINA040|FINA050|FINA280|FINA290|FINA565|FINA460"+cOrigem))//Somente de titulos financeiros. Assim não se duplica envio de Bloco M com a nota de devolução do FISCAL
													(cAliasQry)->(Dbskip())
													Loop
												Endif

												aBaseIrf	:=	{}
												aBaseIrf := FinRepM220(cAliasQry)
												nBaseIrf	:=	aBaseIrf[1] //Valor base para calculo do Pis e Cofins...

												If (cAliasQry)->MULTNAT	=	"1"
													aAreaSEV := SEV->(GetArea())
													DbSelectArea("SEV")
													DbSetOrder(1)
													//Verificar se o titulo possui multiplas naturezas.
													SEV->(DbSeek(xFilial("SEV")+(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA)))
													While SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA) ==;
															(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA) .And. !SEV->(EOF())
														nVrRateio	:=	0
														If SEV->EV_IDENT <> "1" // 1=Rateio de Inclusao 2=Rateio de Baixa
															SEV->(Dbskip())
															Loop
														Endif
														aAreaSED := SED->(GetArea()) //Caso a natureza apure Pis ou Cofins
														DbSelectArea("SED")
														DbSetOrder(1)
														If DbSeek(xFilial("SED")+ SEV->EV_NATUREZ)
															If (!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))
																If (cAliasQry)->MOEDA > 1
																	nVrRateio	:= Round((SEV->EV_VALOR/(cAliasQry)->VALORE1) * (cAliasQry)->VLCRUZ,2)
																Endif
																aAdd(aRegSped,{"SE1","1",;
																	SEV->EV_RECPAG,If((cAliasQry)->MOEDA > 1,nVrRateio,SEV->EV_VALOR),SEV->EV_PERC,SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,;
																	SED->ED_CSTPIS,SED->ED_CSTCOF,SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->ED_INDCMLT,(cAliasQry)->MOEDA,(cAliasQry)->VLCRUZ,;
																	(cAliasQry)->BASEIRF,(cAliasQry)->VALORE1,(cAliasQry)->NUM,(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA),dDtRef})
															Endif
															RestArea(aAreaSED)
														Endif
														SEV->(Dbskip())
													Enddo
													RestArea(aAreaSEV)
												Else //Nao trata de multiplas naturezas
													SED->(Dbseek(xFilial("SED")+(cAliasQry)->NATUREZ))
													If	(!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))
														aAdd(aRegSped,{"SE1",; //1
														"2",; //2
														SEV->EV_RECPAG,; //3
														If((cAliasQry)->MOEDA > 1,nVrRateio,SEV->EV_VALOR),; //4
															SEV->EV_PERC,; //5
															SED->ED_CODIGO,; //6
															SED->ED_APURPIS,; //7
															SED->ED_APURCOF,; //8
															SED->ED_CSTPIS,; //9
															SED->ED_CSTCOF,; //10
															SED->ED_PCAPPIS,; //11
															SED->ED_PCAPCOF,; //12
															SED->ED_INDCMLT,; //13
															(cAliasQry)->MOEDA,; //14
															(cAliasQry)->VLCRUZ,; //15
															(cAliasQry)->BASEIRF,; //16
															(cAliasQry)->VALORE1,; //17
															(cAliasQry)->NUM,; //18
															(cAliasQry)->(PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA),;//19
															dDtRef}) //20
														Endif
													Endif

													nPerc		:=	0
													If !lPCCBaixa //PCC na Emissao vou precisar de um percentual devido a gravacao dos valores dos impostos e do titulo serem diferentes que na baixa.
														nPerc	:=	PercM220(cAliasQry)// Percentual da baixa.
														nBaseIrf	:=	(nBaseIrf *nPerc)/100
													Endif

													For nJ	:= 1 To Len(aRegSped)
														aM220			:= Array(12)
														nValorPis	:=	0
														nValorCof	:=	0

														If aRegSped[nJ,2] == "1" //Possui multiplas naturezas
															nValorPis := Round(aRegSped[nJ,4] * (aRegSped[nJ,11]/100),2)
														ElseIf !Empty(aRegSped[nJ,7])//APURPIS
															//nValorPis := Round(If(aRegSped[nJ,14]>1,aRegSped[nJ,15],If(aRegSped[nJ,16]>0 .And. aRegSped[nJ,16]>aRegSped[nJ,17],aRegSped[nJ,16],aRegSped[nJ,17])) *;
																//						 (aRegSped[nJ,11]/100),2)
															nValorPis := Round(nBaseIrf*(aRegSped[nJ,11]/100),2)
														Else
															nValorPis := 0
														Endif

														If aRegSped[nJ,2] == "1" //Possui multiplas naturezas
															nValorCof := Round(aRegSped[nJ,4] * (aRegSped[nJ,12]/100),2)
														ElseIf !Empty(aRegSped[nJ,8])//APURCOF
															//nValorCof := Round(If(aRegSped[nJ,14]>1,aRegSped[nJ,15],If(aRegSped[nJ,16]>0 .And. aRegSped[nJ,16]>aRegSped[nJ,17],aRegSped[nJ,16],aRegSped[nJ,17])) *;
																//							 (aRegSped[nJ,12]/100),2)
															nValorCof := Round(nBaseIrf*(aRegSped[nJ,12]/100),2)
														Else
															nValorCof := 0
														Endif

														aM220[1]  := "0"				// Ajuste de Redução
														aM220[2]  := "06"				// Código do Ajuste
														aM220[3]  := aRegSped[nJ,19]					// Nro documento (nao obrigatorio)
														aM220[4]  := cDescBx		// Descricao do Ajuste (nao obrigatorio)
														aM220[5]  := aRegSped[nJ,20]				// Data de Referencia
														aM220[6]  := nValorPis		// Valor do Pis
														aM220[7]  := nValorCof		// Valor do Cofins

														If SED->(FieldPos("ED_CSTPIS")) > 0
															aM220[8]  :=	aRegSped[nJ,9]			//CST PIS
														Else
															aM220[8]  :=  ""
														Endif

														If SED->(FieldPos("ED_CSTCOF")) > 0
															aM220[9]  :=	aRegSped[nJ,10]		//CST COF
														Else
															aM220[9]  :=  ""
														Endif

														aM220[10]  :=	aRegSped[nJ,11]	// Aliquota do Pis
														aM220[11]  := aRegSped[nJ,12]		// Aliquota do Cofins

														If SED->(FieldPos("ED_INDCMLT")) > 0 //Indicador de Cumulatividade
															If aRegSped[nJ,13] == "1"
																cIndCmlt := "0" //Cumulativo
															ElseIf aRegSped[nJ,13] == "2"
																cIndCmlt := "1" //Não Cumulativo
															EndIf
															aM220[12] := cIndCmlt
														Else
															aM220[12] := ""
														Endif

														aAdd(aReturn, aM220)

													Next

													If lPCCBaixa //PCC na Emissao vou precisar de um percentual devido a gravacao dos valores dos impostos e do titulo serem diferentes que na baixa.
														(cAliasQry)->(Dbskip())
													Endif
												Enddo

												(cAliasQry)->(dbCloseArea())

												#IFNDEF TOP
													fErase ( cTrabalho + GetDBExtension() )
													fErase ( cTrabalho + OrdBagExt() )
												#EndIf

											Endif

											Return aReturn

											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
											±±³Fun‡…o	 ³FTotF100  ³ Autor ³ Totvs          	     ³ Data ³ 06/05/12 ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
											±±³Descri‡…o ³ Func„o para a soma dos registros enviados no bloco F100    ³±±
											±±³          ³ do SPED PIS/COFINS                                         ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
											±±³Sintaxe	 ³ FTotF100() 					      		                  	  ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
											±±³ Uso		 ³ Modulo de RH        													  ³±±
											±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Function FTotF100(nMesRef,nAnoRef,cDataIni,cDataFim)

											Return FinSpdF100(nMesRef,nAnoRef,.T.,cDataIni,cDataFim)


											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
											±±³Fun‡…o	 ³   DoEAI  ³ Autor ³ Totvs          	    ³ Data ³ 13/11/09 ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
											±±³Descri‡…o ³ Func„o para gerar mensagem do EAI                          ³±±
											±±³          ³                                                            ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
											±±³ Uso		 ³ GERAL     												  ³±±
											±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Static Function DoEAI()
											Local aArea       := GetArea()
											Local aAreaXX4    := XX4->( GetArea() )
											Local cFunName    := FunName()
											Local nTamFunName := Len( cFunName )
											Local aRetorno    := {}
											Local lUnMess     := ( XX4->( FieldPos( 'XX4_UNMESS' ) ) > 0 )

											If FindFunction( 'FWXX4SEEK' )
												XX4->( dbSetOrder( 1 ) )
												//XX4->( MsSeek(PadR(xFilial('XX4'),Len(XX4->XX4_FILIAL) ) + cFunName ) )
												FWXX4Seek( cFunName )

												If !lUnMess .OR. ( lUnMess .AND. XX4->XX4_UNMESS == '1' )
													While !XX4->( EOF() ) .AND. cFunName == SubStr( XX4->XX4_ROTINA, 1, nTamFunName )
														If FWEAICanSend( EAI_MESSAGE_BUSINESS,, cFunName )
															aRetorno := &( "STATICCALL(" + cFunName + ", IntegDef, NIL, '" + TRANS_SEND + "', '" + EAI_MESSAGE_BUSINESS + "')" )
															If ValType( aRetorno ) == 'A' .AND. Len( aRetorno ) > 1 .AND. aRetorno[1]
																FWEAIMake( EAI_MESSAGE_BUSINESS, aRetorno[2] )
															EndIf
														EndIf
														XX4->( dbSkip() )
													End
												EndIf
											EndIf

											RestArea( aAreaXX4 )
											RestArea( aArea )
											Return NIL

											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
											±±ºPrograma  ³ SpdVldVar   º Autor ³ Andrea Verissimo º Data ³  06/03/12  º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºDescricao ³ Valida variaveis globais e conteudo de paramentros criadas º±±
											±±º          ³ para o Sped Pis/Cofins.                                    º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºParametros³ EXPC1 - Conteudo da variavel que vai ser utilizada no SQL  º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºUso       ³ Financeiro - Relatorio de Razonete                         º±±
											±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Static Function SpdVldVar( cTexto )

											Local cRet			:= ""
											Local nA				:=	0

											If Len(cTexto) > 0
												cRet	:=	"'"	// Inserindo aspas e virgulas para o select da query.
												For nA:=1 To Len(cTexto)
													If Subst(cTexto,nA,1) $ ";,-_|./"
														cRet+="','"
													Else
														cRet+=Subst(cTexto,nA,1)
													Endif
												Next
												cRet	+=	"'"
											Endif

											Return cRet
											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
											±±ºPrograma  ³ SpdMotTRF   º Autor ³ Andrea Verissimo º Data ³  13/03/12  º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºDescricao ³ Verifica titulos de transferencia entre filiais se devem   º±±
											±±º          ³ ser enviados para o Sped Pis/Cofins.                       º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºParametros³ Chave a filial origem                                      º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºUso       ³ Financeiro - SPED PIS/COFINS                               º±±
											±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Static Function SpdMotTRF(cChave)

											Local cQuery 	:= ""
											Local cAlias	:= "TRF"
											Local lAchou	:= .F.
											Local cMotQry	:= ""
											Local lConsidera := .T.

											dbSelectArea("SE6")
											SE6->(Dbsetorder(4)) // FILIAL + PREFIXO + NUM + PARCELA + TIPO + FILORIG
											If SE6->(Dbseek(xFilial("SE6")+cChave))  // Titulo do tipo TRF
												dbSelectArea("SE1")
												SE1->(Dbsetorder(1)) // FILIAL + PREFIXO + NUM + PARCELA + TIPO
												If SE1->(Dbseek(SE6->(E6_FILDEB+E6_PREFIXO+E6_NUM+E6_PARCELA+E6_TIPO))) .And. !Empty(SE1->E1_BAIXA) // baixado
													lAchou	:= .T.

													cQuery	:= "SELECT "

													//Campos de referência
													cQuery	+= "SE5.E5_FILIAL FILIAL , SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUMERO, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, "
													cQuery	+= "SE5.E5_CLIFOR CLIENTE, SE5.E5_LOJA LOJA, SE5.E5_TIPODOC TIPODOC, SE5.E5_DATA DATA, SE5.E5_FILORIG FILORIG, "
													cQuery	+= "SE5.E5_VALOR VALORE5 , SE5.E5_NATUREZ NATUREZ, SE5.E5_MOTBX MOTBX, SE5.R_E_C_N_O_ RECNO, "
													cQuery	+= "SE1.E1_PIS PIS, SE1.E1_COFINS COFINS, SE1.E1_CSLL CSLL, SE1.E1_SALDO SALDO, SE1.E1_VALOR VALORE1, SE1.E1_BASEPIS BASEPIS, "
													cQuery	+= "SE1.E1_IRRF VRIR, SE1.E1_INSS VRINSS, SE1.E1_ISS VRISS, SE1.E1_MOEDA TPMOEDA, SE1.E1_VLCRUZ VLCRUZ "

													cQuery	+= "FROM "
													cQuery 	+= RetSqlName("SE5") + " SE5, "
													cQuery 	+= RetSqlName("SE1") + " SE1 "

													cQuery 	+= "WHERE "

													If !Empty( iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) ) //Filiais compartilhadas
														cQuery 	+=	"SE5.E5_FILIAL='" + SE6->E6_FILDEB + "' AND "
													Else
														cQuery 	+=	"SE5.E5_FILORIG='" + SE6->E6_FILDEB + "' AND "
													Endif

													cQuery	+= "SE1.E1_FILIAL = '"  + SE6->E6_FILDEB + "' AND "
													cQuery 	+= "E5_PREFIXO='"+SE1->E1_PREFIXO+"' AND "
													cQuery 	+= "E5_NUMERO='"+SE1->E1_NUM+"' AND "
													cQuery 	+= "E5_PARCELA='"+SE1->E1_PARCELA+"' AND "
													cQuery 	+= "E5_TIPO='"+SE1->E1_TIPO+"' AND "
													cQuery 	+= "E5_CLIFOR='"+SE1->E1_CLIENTE+"' AND "
													cQuery 	+= "E5_LOJA='"+SE1->E1_LOJA+"' AND "
													cQuery 	+= "SE5.E5_PREFIXO = SE1.E1_PREFIXO AND "
													cQuery 	+= "SE5.E5_NUMERO = SE1.E1_NUM AND "
													cQuery 	+= "SE5.E5_PARCELA = SE1.E1_PARCELA AND "
													cQuery 	+= "SE5.E5_TIPO = SE1.E1_TIPO AND "
													cQuery	+= "SE5.E5_CLIFOR = SE1.E1_CLIENTE AND "
													cQuery	+= "SE5.E5_LOJA = SE1.E1_LOJA AND "

													cQuery	+= "( ( SE1.E1_PIS > 0 AND SE1.E1_SABTPIS = 0 ) OR ( SE1.E1_COFINS > 0 AND SE1.E1_SABTCOF = 0 ) ) AND "

													cQuery	 	+= "SE5.E5_RECPAG = 'R' AND "
													cQuery		+= "SE5.E5_SITUACA <> 'C' AND "
													cQuery	 	+= "SE5.E5_DATA BETWEEN '" + cDataIni + "' AND '" + cDataFim + "' AND "

													cMotQry		:= "('FAT','LIQ'"

													If !Empty(cPeMBx)
														cMotQry += "," + cMotBaixa
													Endif

													If !Empty(cBxSql)
														cMotQry += "," + cBxSql
													EndIf

													cMotQry		+= ")"

													cQuery		+= "SE5.E5_MOTBX NOT IN " + cMotQry + " AND "

													//Exclui os titulos que possuem estorno
													cQuery	 	+= "SE5.E5_SEQ NOT IN "
													cQuery 		+= "( SELECT SE5AUX.E5_SEQ FROM "
													cQuery		+=      RetSqlName("SE5") + " SE5AUX WHERE "
													cQuery		+= 		" SE5AUX.E5_FILIAL = SE5.E5_FILIAL AND "
													cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
													cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
													cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
													cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
													cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
													cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
													cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
													cQuery		+= 		" SE5AUX.D_E_L_E_T_ = ' ' "
													cQuery 		+= ") AND "

													cQuery		+= "SE1.D_E_L_E_T_ = ' ' AND "
													cQuery		+= "SE5.D_E_L_E_T_ = ' ' "

													cQuery 		+= " ORDER BY FILIAL, PREFIXO, NUMERO, PARCELA, TIPO, CLIENTE, LOJA"

													cQuery 	:= ChangeQuery(cQuery)

													dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.T.,.T.)

												ELSE
													lConsidera := .F.
												Endif

											Endif

											Return {lAchou,cAlias,lConsidera}


											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
											±±ºPrograma  ³ SpdTRFB  	º Autor ³ Andrea Verissimo º Data ³  13/03/12  º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºDescricao ³ Verifica titulos de transferencia entre filiais se devem   º±±
											±±º          ³ ser enviados para o Sped Pis/Cofins.                       º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºParametros³ Chave a filial origem                                      º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºUso       ³ Financeiro - SPED PIS/COFINS                               º±±
											±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Static Function SpdTRFB(cChave)

											Local cQuery 		:= ""
											Local cAlias		:= "TRF"
											Local lAchou		:= .T.
											Local cMotQry		:= ""
											Local lConsidera 	:= .T.

											dbSelectArea("SE6")
											SE6->(Dbsetorder(4)) // FILIAL + PREFIXO + NUM + PARCELA + TIPO + FILORIG
											If SE6->(Dbseek(xFilial("SE6")+cChave))  // Titulo do tipo TRF
												dbSelectArea("SE1")
												SE1->(Dbsetorder(1)) // FILIAL + PREFIXO + NUM + PARCELA + TIPO
												If SE1->(Dbseek(SE6->(E6_FILDEB+E6_PREFIXO+E6_NUM+E6_PARCELA+E6_TIPO))) .And. !Empty(SE1->E1_BAIXA) // baixado
													lAchou		:= .T.

													cQuery		:= "SELECT "
													cQuery	 	+= "SE5.E5_FILIAL FILIAL, SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUMERO, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, SE5.E5_CLIFOR CLIENTE, "
													cQuery		+= "SE5.E5_LOJA LOJA, SE5.E5_TXMOEDA TXMOEDA, SE5.E5_MOTBX MOTBX, SE5.E5_FILORIG FILORIG, "
													cQuery	 	+= "SE5.E5_TIPODOC TIPODOC, "
													cQuery	 	+= "SE5.E5_DATA DATA, SE5.E5_VALOR VALORBX, SE5.E5_VRETPIS PIS, SE5.E5_VRETCOF COFINS, SE5.E5_VRETCSL CSL, "
													cQuery	 	+= "SE5.R_E_C_N_O_ RECNO, "
													cQuery	 	+= "SED.ED_PERCPIS PERCPIS, SED.ED_COND COND, SED.ED_INDRET INDRET, SED.ED_INDCMLT INDCMLT, "

													//Dados do cliente para o SPED
													cQuery	 	+= "SA1.A1_CGC CNPJ, SA1.A1_RECPIS RECPIS, SA1.A1_RECCOFI RECCOFI "

													If lA1IndRet
														cQuery	+= ", SA1.A1_INDRET A1INDRET "
													Endif

													cQuery	 	+= "FROM "
													cQuery 		+= RetSqlName("SE5") + " SE5,  "
													cQuery 		+= RetSqlName("SED") + " SED,  "
													cQuery 		+= RetSqlName("SA1") + " SA1   "

													cQuery	 	+= "WHERE "

													If !Empty( iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) ) //Filiais compartilhadas
														cQuery 	+=	"SE5.E5_FILIAL='" + SE6->E6_FILDEB + "' AND "
													Else
														cQuery 	+=	"SE5.E5_FILORIG='" + SE6->E6_FILDEB + "' AND "
													Endif

													cQuery	 	+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "
													cQuery 		+=	"SA1.A1_FILIAL ='" + xFilial("SA1") + "' AND "

													cQuery 		+= "E5_PREFIXO='"+SE1->E1_PREFIXO+"' AND "
													cQuery 		+= "E5_NUMERO='"+SE1->E1_NUM+"' AND "
													cQuery 		+= "E5_PARCELA='"+SE1->E1_PARCELA+"' AND "
													cQuery 		+= "E5_TIPO='"+SE1->E1_TIPO+"' AND "
													cQuery 		+= "E5_CLIFOR='"+SE1->E1_CLIENTE+"' AND "
													cQuery 		+= "E5_LOJA='"+SE1->E1_LOJA+"' AND "

													cQuery	 	+= "SE5.E5_CLIFOR = SA1.A1_COD AND "
													cQuery	 	+= "SE5.E5_LOJA = SA1.A1_LOJA AND "
													cQuery	 	+= "(SE5.E5_DATA >= '"+cDataIni+"' AND SE5.E5_DATA <= '"+cDataFim+"') AND "
													cQuery	 	+= "((SE5.E5_VRETPIS > 0 AND SE5.E5_PRETPIS = '') OR (SE5.E5_VRETCOF > 0 AND SE5.E5_PRETCOF = '')) AND "
													cQuery		+= "SE5.E5_SITUACA <> 'C' AND "
													cQuery	 	+= "SE5.E5_RECPAG = 'R' AND "
													cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(MVABATIM,"|") + " AND "
													cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(MV_CRNEG,If("|"$MV_CRNEG,"|",","))  + " AND "
													cQuery		+= "SE5.E5_TIPO NOT IN " + FormatIn(MVPROVIS,If("|"$MVPROVIS,"|",",") ) + " AND "

													cMotQry		:= "('FAT','LIQ'"

													If !Empty(cPeMBx)
														cMotQry += "," + cMotBaixa
													Endif

													If !Empty(cBxSql)
														cMotQry += "," + cBxSql
													EndIf

													cMotQry		+= ")"
													cQuery		+= "SE5.E5_MOTBX NOT IN " + cMotQry + " AND "

													//Exclui os titulos que possuem estorno
													cQuery	 	+= "SE5.E5_SEQ NOT IN "
													cQuery 		+= "(SELECT SE5AUX.E5_SEQ FROM "+RetSqlName("SE5")+" SE5AUX WHERE "
													cQuery		+=		" SE5AUX.E5_FILIAL = SE5.E5_FILIAL AND "
													cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
													cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
													cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
													cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
													cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
													cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
													cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
													cQuery		+= 		" SE5AUX.D_E_L_E_T_ = ' ' "
													cQuery 		+= ") AND "

													If !Empty(cPeNat)
														cQuery 	+= "SED.ED_INDRET NOT IN (" + cNatur + ") AND "
													Endif

													cQuery	 	+= "SED.ED_CODIGO = SE5.E5_NATUREZ AND "
													cQuery		+= "SED.D_E_L_E_T_ = ' ' AND "
													cQuery		+= "SE5.D_E_L_E_T_ = ' ' AND "
													cQuery		+= "SA1.D_E_L_E_T_ = ' ' 	"

													cQuery 	:= ChangeQuery(cQuery)

													dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.T.,.T.)

												ELSE
													lConsidera := .F.
												Endif

											Endif

											Return {lAchou,cAlias,lConsidera}


											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
											±±ºPrograma  ³ SpdMotNOR   º Autor ³ Andrea Verissimo º Data ³  13/03/12  º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºDescricao ³ Verifica titulos de transferencia entre filiais se devem   º±±
											±±º          ³ ser enviados para o Sped Pis/Cofins.                       º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºParametros³ CHAVE                                                      º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºUso       ³ Financeiro - SPED PIS/COFINS                               º±±
											±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Static Function SpdMotNOR(cChave)
											Local cChaveRet	:= cChave

											dbSelectArea("SE6")
											SE6->(Dbsetorder(5)) // FILDEB + PREFIXO + NUM + PARCELA + TIPO
											If SE6->(Dbseek(cChave)) // se achar nao leva
												cChaveRet	:= ""
											Endif

											Return cChaveRet

											/*
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
											±±ºPrograma  ³F100Top   ºAutor  ³Clovis Magenta      º Data ³  29/06/12   º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºDesc.     ³ Funcao de filtros dos registros do bloco F100 - SPED PIS   º±±
											±±º          ³ COFINS - para TOP CONNECT                                  º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºUso       ³ AP                                                         º±±
											±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											*/
										Function F100Top(cAlias,cAliasQry,cDataIni,cDataFim,cTpSe5,cTpApl,lSpdDtEm,cTpSel,lSEI_,cNOrigem,lEnvFatCr,nEnvFatCp,lSpdDtEm2)

											Local lCmpCCz	:=	(SED->(FieldPos("ED_TABCCZ")) > 0 .And. SED->(FieldPos("ED_CODCCZ")) > 0 .And. SED->(FieldPos("ED_GRUCCZ")) > 0 .And. SED->(FieldPos("ED_DTFCCZ")) > 0)
											Local lScorgp	:=	SE1->(FieldPos("E1_SCORGP")) > 0 //Identifica bem ou servico contratado por orgaos publicos.
											Local lNRastDSD:= SuperGetMV("MV_NRASDSD",.T.,.F.)
											Local aStruct	:= {}
											Local cQuery	:= ""
											Local cDtEmis	:= ""
											Local nX		:= 0
											Local cFilSe1	:= ""
											Local cFilSe2	:= ""
											Local cFilSe5	:= ""
											Local cFilSei	:= ""
											Local lSe1MsFil:=	SE1->(FieldPos("E1_MSFIL")) > 0
											Local lSe2MsFil:=	SE2->(FieldPos("E2_MSFIL")) > 0
											Local lSe5MsFil:=	SE5->(FieldPos("E5_MSFIL")) > 0
											Local lSeiMsFil:=	SEI->(FieldPos("EI_MSFIL")) > 0
											Local cTipoTit	:=	""
											Local lUnidNeg	:= Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
											Local cNatSe2	:= SuperGetMv("MV_NATCP",,"")
											Local cTpNat	:=	cNatDesp	:=	""
											Local lSE1Proc	:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)
											Local lSE2Proc	:=	(SE2->(FieldPos('E2_NUMPRO')) > 0 .And. SE2->(FieldPos('E2_INDPRO')) > 0)
											Local lDescDoc	:= SuperGetMv("MV_DESCDOC",,.F.) //Habilita o envio da descrição da operação/documento no bloco F100 do SPED PIS/COFINS.
											Local lTpDesc	:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
											Local lDescSe5	:= SE5->(FieldPos("E5_TPDESC"))	> 0 //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
											Local 	cNatResg := &(GetMv("MV_NATRAPL"))

											If !Empty(cNatSe2) // Tratamento para o parametro MV_NATDESP.
												cNatDesp	:="'"	// Inserindo aspas e virgulas para o select da query.
												For nX:=1 To Len(cNatSe2)
													If Subst(cNatSe2,nX,1) $ ";,-_|./"
														cNatDesp += "','"
													Else
														cNatDesp += Subst(cNatSe2,nX,1)
													Endif
												Next

												cNatDesp	+=	"'"
												cTpNat	:= ""
												cNatSe2	:= ""
												For nX:=1 To Len(cNatDesp)
													If Subst(cNatDesp,nX,1) $ "'"
														If Len(cNatSe2) > 1 .And. Len(cNatSe2) < 10
															cTpNat += Space(1)
														Endif
														cTpNat  +=Subst(cNatDesp,nX,1)
														cNatSe2 :=""
													ElseIf Subst(cNatDesp,nX,1) $ ","
														cTpNat+=Subst(cNatDesp,nX,1)
													Else
														cTpNat	+=Subst(cNatDesp,nX,1)
														cNatSe2	+=Subst(cNatDesp,nX,1)
													Endif
												Next
											Endif

											If lUnidNeg
												cFilSe1	:= SM0->M0_CODFIL
												cFilSe2	:= SM0->M0_CODFIL
												cFilSe5	:= SM0->M0_CODFIL
												cFilSei	:=	SM0->M0_CODFIL
											Else
												cFilSe1	:= xFilial("SE1")
												cFilSe2	:= xFilial("SE2")
												cFilSe5	:= xFilial("SE5")
												cFilSei	:=	xFilial("SEI")
											Endif

											If cAlias == "SE5"

												aStruct 	:= SE5->(dbStruct())
												cQuery	 	:= "SELECT "
												cQuery	 	+= "SE5.E5_FILIAL FILIAL, SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUM, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, SE5.E5_CLIFOR CLIFOR, SE5.E5_LOJA LOJA, "
												cQuery	 	+= "SE5.E5_TIPODOC TIPODOC, SE5.E5_SEQ SEQBX, SE5.E5_MOEDA MOEDA, SE5.E5_TXMOEDA TXMOEDA, "
												cQuery	 	+= "SE5.E5_DATA DATA, SE5.E5_VALOR VALOR, SE5.E5_VRETPIS PIS, SE5.E5_VRETCOF COFINS, SE5.E5_RECPAG RECPAG, "

												If lDescSe5
													cQuery   += "SE5.E5_TPDESC TPDESC, "
												Endif

												cQuery	 	+= "SE5.R_E_C_N_O_ RECNO "
												cQuery	 	+= "FROM "
												cQuery 		+= RetSqlName("SE5") + " SE5 "
												cQuery	 	+= "WHERE "

												If !Empty( Iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) )
													cQuery 	+= "SE5.E5_FILIAL = '"  + xFilial("SE5") + "' AND "
												Else
													If lSe5MsFil
														cQuery 	+= "SE5.E5_MSFIL = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
													Else
														cQuery 	+= "SE5.E5_FILORIG = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
													Endif
												EndIf

												cQuery	 	+= "(SE5.E5_DATA >= '"+cDataIni+"' AND SE5.E5_DATA <= '"+cDataFim+"') AND "

												//Exclui os titulos que possuem estorno
												cQuery	 	+= "SE5.E5_SEQ NOT IN "
												cQuery 		+= "(SELECT SE5AUX.E5_SEQ FROM "+RetSqlName("SE5")+" SE5AUX WHERE "
												cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
												cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
												cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
												cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
												cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
												cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
												cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
												cQuery		+= 		" SE5AUX.D_E_L_E_T_ = '' "
												cQuery 		+= ") AND "

												cTipoTit		:=	""
												cTipoTit		:=	MVABATIM + "|" + MV_CRNEG + "|" + MVPROVIS
												cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(cTipoTit,If("|"$cTipoTit,"|",","))  + " AND "

												cQuery		+= "((SE5.E5_MOTBX = 'FAT' AND SE5.E5_TIPODOC IN ('DC','JR','MT')) OR SE5.E5_MOTBX <> 'FAT') AND "

												cQuery		+= "SE5.E5_MOTBX <> 'LIQ' AND "

												If !Empty(cTpSe5)
													cQuery 	+= "SE5.E5_TIPODOC IN (" + cTpSe5 + ") AND "
												Endif

												cQuery		+= "SE5.E5_SITUACA <> 'C' AND "
												cQuery		+= "SE5.D_E_L_E_T_ = '' "

												cQuery 		+= " ORDER BY FILIAL, PREFIXO, NUM, PARCELA, TIPO, CLIFOR, LOJA, TIPODOC"

											ElseIf cAlias == "SEI"


												IF lSEI_
													aStruct 		:= SEI->(dbStruct())
													cQuery	 	:= "SELECT "
													cQuery	 	+= "SEI.EI_FILIAL FILIAL, SEI.EI_APLEMP APLEMP, SEI.EI_NUMERO NUM, SEI.EI_REVISAO REVISAO, SEI.EI_SEQ SEQ, "
													cQuery	 	+= "SEI.EI_TIPO TIPO, SEI.EI_DATA DATA,SEI.EI_VALOR VALOR, SEI.EI_STATUS STATUS, "
													cQuery	 	+= "SEI.EI_BANCO BANCO, SEI.EI_AGENCIA AGENCIA, SEI.EI_CONTA CONTA, SEI.EI_TIPODOC TIPODOC, "
													cQuery   	+= "SEI.EI_VLMOED2 VLCRUZ, SEI.EI_NATUREZ NATUREI, SEI.EI_TXMOEDA TXMOEDA, "
													cQuery   	+= "SEH.EH_MOEDA MOEDA, SEH.EH_NATUREZ NATUREZ, "

													cQuery	 	+= "SED.ED_FILIAL FILSED, SED.ED_CODIGO CODNAT, "
													cQuery	 	+= "SA6.A6_FILIAL FILBCO, SA6.A6_COD CODBCO, SA6.A6_AGENCIA AGBCO, SA6.A6_NUMCON CTABCO, SA6.A6_CGC CLIFOR, "
													cQuery	 	+= "SEI.R_E_C_N_O_ RECNO "
													cQuery	 	+= "FROM "
													cQuery 		+= RetSqlName("SEI") + " SEI,  "
													cQuery 		+= RetSqlName("SEH") + " SEH,  "
													cQuery 		+= RetSqlName("SA6") + " SA6,  "
													cQuery 		+= RetSqlName("SED") + " SED   "

													cQuery	 	+= "WHERE "

													cQuery	 	+= "(SEI.EI_DATA >= '"+cDataIni+"' AND SEI.EI_DATA <= '"+cDataFim+"') AND "

													If !Empty( Iif( lUnidNeg, FWFilial("SEI") , xFilial("SEI") ) )
														cQuery 	+= "SEI.EI_FILIAL = '"  + xFilial("SEI") + "' AND "
													Else
														If lSeiMsFil
															cQuery 	+= "SEI.EI_MSFIL = '" + Iif(lUnidNeg, cFilSei, cFilAnt) + "' AND "
														Else
															cQuery 	+= "SEI.EI_FILIAL = '"  + xFilial("SEI") + "' AND "
														Endif
													EndIf

													cQuery 		+=	"SEH.EH_FILIAL='" + xFilial("SEH") + "' AND "
													cQuery 		+=	"SA6.A6_FILIAL='" + xFilial("SA6") + "' AND "
													cQuery 		+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "

													cQuery		+= "SEI.EI_NUMERO = SEH.EH_NUMERO AND "
													cQuery		+= "SEI.EI_REVISAO = SEH.EH_REVISAO AND "
													cQuery		+= "SEI.EI_APLEMP = SEH.EH_APLEMP AND "

													cQuery 		+= "SEH.EH_NATUREZ IN (" + cTpApl + ") AND "
													cQuery 		+= "SEI.EI_NATUREZ IN ('" + cNatResg + "') AND "

													cQuery 		+=  "SEI.EI_TIPODOC IN ( 'JR')  AND "

													cQuery 	+=  "SEI.EI_STATUS NOT IN ( 'C')   AND "

													cQuery 	+=  "SEI.EI_BANCO  != ' '  AND "
													cQuery 	+=  "SEI.EI_AGENCIA  != ' '  AND "
													cQuery 	+=  "SEI.EI_CONTA  != ' '   AND "

													cQuery		+= "SA6.A6_COD = SEH.EH_BANCO AND "
													cQuery		+= "SA6.A6_AGENCIA = SEH.EH_AGENCIA AND "
													cQuery		+= "SA6.A6_NUMCON = SEH.EH_CONTA AND "

													cQuery		+= "SED.ED_CODIGO = SEH.EH_NATUREZ AND "
													cQuery		+= "SEI.D_E_L_E_T_ = '' "

												Else

													aStruct 		:= SE5->(dbStruct())
													cQuery	 	:= "SELECT "
													cQuery	 	+= "SE5.E5_FILIAL FILIAL, SE5.E5_NUMERO NUM, "
													cQuery	 	+= "SE5.E5_TIPO TIPO, SE5.E5_NATUREZ NATUREZ, SE5.E5_DATA DATA,SE5.E5_VALOR VALOR, "
													cQuery	 	+= "SE5.E5_BANCO BANCO, SE5.E5_AGENCIA AGENCIA, SE5.E5_CONTA CONTA, SE5.E5_RECPAG RECPAG, "
													cQuery   	+= "SE5.E5_VLMOED2 VLCRUZ, SE5.E5_MOEDA MOEDA, SE5.E5_TXMOEDA TXMOEDA, "
													cQuery	 	+= "SED.ED_FILIAL FILSED, SED.ED_CODIGO CODNAT, "
													cQuery	 	+= "SA6.A6_FILIAL FILBCO, SA6.A6_COD CODBCO, SA6.A6_AGENCIA AGBCO, SA6.A6_NUMCON CTABCO, SA6.A6_CGC CLIFOR, "

													If lDescSe5
														cQuery   += "SE5.E5_TPDESC TPDESC, "
													Endif

													cQuery	 	+= "SE5.R_E_C_N_O_ RECNO "
													cQuery	 	+= "FROM "
													cQuery 		+= RetSqlName("SE5") + " SE5,  "
													cQuery 		+= RetSqlName("SA6") + " SA6,  "
													cQuery 		+= RetSqlName("SED") + " SED   "

													cQuery	 	+= "WHERE "
													cQuery	 	+= "(SE5.E5_DATA >= '"+cDataIni+"' AND SE5.E5_DATA <= '"+cDataFim+"') AND "
													cQuery 		+= "SE5.E5_NATUREZ IN (" + cTpApl + ") AND "
													cQuery 		+=	"SE5.E5_FILIAL='" + xFilial("SE5") + "' AND "
													cQuery 		+=	"SA6.A6_FILIAL='" + xFilial("SA6") + "' AND "
													cQuery 		+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "
													cQuery		+= "SE5.E5_NATUREZ = SED.ED_CODIGO AND "
													cQuery		+= "SA6.A6_COD = SE5.E5_BANCO AND "
													cQuery		+= "SA6.A6_AGENCIA = SE5.E5_AGENCIA AND "
													cQuery		+= "SA6.A6_NUMCON = SE5.E5_CONTA AND "
													//Exclui os titulos que possuem estorno
													cQuery	 	+= "SE5.E5_SEQ NOT IN "
													cQuery 		+= "(SELECT SE5AUX.E5_SEQ FROM "+RetSqlName("SE5")+" SE5AUX WHERE "
													cQuery		+= 		" SE5AUX.E5_DOCUMEN = SE5.E5_DOCUMEN AND "
													cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
													cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
													cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
													cQuery		+= 		" ((SE5AUX.E5_TIPODOC = 'AP' AND "
													cQuery		+= 		" SE5AUX.E5_RECPAG = 'R') OR(SE5AUX.E5_TIPODOC = 'EP' AND "
													cQuery		+= 		" SE5AUX.E5_RECPAG = 'P')) AND"
													cQuery		+= 		" SE5AUX.D_E_L_E_T_ = '' "
													cQuery 		+= ") AND "
													cQuery		+= "SE5.D_E_L_E_T_ = '' "

												Endif

											Else
												If cAlias == "SE1"
													cDtEmis	:=	"E1_EMISSAO"

													If lSpdDtEm2
														cDtEmis := ExecBlock ("SPDF1006",.F.,.F.)
													Endif

													If !valtype(cDtEmis) == "C" .Or. Empty(cDtEmis)
														cDtEmis	:=	"E1_EMISSAO"
													Endif

													cAliasQry	:= "SE1QRY"
													aStruct 	:= SE1->(dbStruct())
													cQuery	:= "SELECT SE1." + Alltrim(cDtEmis) +  " EMISSAO, SE1.E1_VALOR VALOR, SE1.E1_ORIGEM ORIGEM, SE1.E1_CLIENTE CLIFOR, SE1.E1_TIPO TIPO, "
													cQuery   += "SE1.E1_NUM NUM, SE1.E1_PREFIXO PREFIXO, SE1.E1_LOJA LOJA, SE1.E1_PARCELA PARCELA, SE1.E1_MULTNAT MULTNAT, "
													cQuery   += "SE1.E1_DESDOBR DESDOBR, SE1.E1_FILIAL FILIAL, SE1.E1_FILORIG FILORIG, SE1.E1_NATUREZ NATUREZ, "
													cQuery   += "SE1.E1_VLCRUZ VLCRUZ, SE1.E1_MOEDA MOEDA, SE1.E1_BASEIRF BASEPIS, SE1.E1_TXMOEDA TXMOEDA, SE1.E1_DECRESC DECRESC, "

													If lSE1Proc
														cQuery   += "SE1.E1_NUMPRO NUMPRO, SE1.E1_INDPRO INDPRO,"
													Endif

													If lScorgp
														cQuery   += "SE1.E1_SCORGP SCORGP, "
													Endif

													If lDescDoc
														cQuery   += "SE1.E1_HIST HIST, "
													Endif

													If lTpDesc
														cQuery   += "SE1.E1_TPDESC TPDESC, "
													Endif

													cQuery   += "SA1.A1_TIPO TIPOA1, "
												ElseIf cAlias == "SE2"

													cDtEmis	:=	"E2_EMISSAO"

													If lSpdDtEm
														cDtEmis := ExecBlock ("SPDF1001",.F.,.F.)
													Endif

													If !valtype(cDtEmis) == "C" .Or. Empty(cDtEmis)
														cDtEmis	:=	"E2_EMISSAO"
													Endif

													cAliasQry	:= "SE2QRY"
													aStruct 	:= SE2->(dbStruct())

													If (lEnvDesd .And. nEnvFatCp = 0) .Or. (lEnvDesd .And. nEnvFatCp = 2)
														cDtEmis	:=	"E2_BAIXA"
													Endif

													cQuery	:= "SELECT SE2." + Alltrim(cDtEmis) + " EMISSAO, SE2.E2_VALOR VALOR, SE2.E2_ORIGEM ORIGEM, SE2.E2_FORNECE CLIFOR, SE2.E2_TIPO TIPO, "
													cQuery   += "SE2.E2_NUM NUM, SE2.E2_PREFIXO PREFIXO, SE2.E2_LOJA LOJA, SE2.E2_PARCELA PARCELA, SE2.E2_MULTNAT MULTNAT, SE2.E2_VENCTO VENCTO, "
													cQuery   += "SE2.E2_DESDOBR DESDOBR, SE2.E2_FILIAL FILIAL, SE2.E2_FILORIG FILORIG, SE2.E2_NATUREZ NATUREZ, SE2.E2_TXMOEDA TXMOEDA, "
													cQuery   += "SE2.E2_VLCRUZ VLCRUZ, SE2.E2_MOEDA MOEDA, SE2.E2_BASEPIS BASEPIS, SE2.E2_STATUS STATUS, SE2.E2_BASEIRF BASEIRF, "
													cQuery   += "SE2.E2_VRETPIS VRETPIS, SE2.E2_VRETCOF VRETCOF, SE2.E2_VRETCSL VRETCSL, SE2.E2_VRETINS VRETINS, SE2.E2_VRETISS VRETISS, SE2.E2_VRETIRF VRETIRF, "
													If lSE2Proc
														cQuery   += "SE2.E2_NUMPRO NUMPRO, SE2.E2_INDPRO INDPRO,"
													Endif
													If lDescDoc
														cQuery   += "SE2.E2_HIST HIST, "
													Endif
												EndIf

												cQuery 		+= "SED.ED_APURPIS APURPIS, SED.ED_APURCOF APURCOF, SED.ED_PCAPPIS PCAPPIS,SED.ED_PCAPCOF PCAPCOF, "
												cQuery 		+= "SED.ED_CONTA EDCONTA, SED.ED_CCD EDCCD, SED.ED_CCC EDCCC, "

												If lCmpCCz
													cQuery 		+= "SED.ED_TABCCZ TABCCZ, SED.ED_CODCCZ CODCCZ, SED.ED_GRUCCZ GRUCCZ,SED.ED_DTFCCZ DTFCCZ, "
												Endif

												//CST PIS
												If SED->(FieldPos("ED_CSTPIS")) > 0
													cQuery	+= "SED.ED_CSTPIS CSTPIS, "
												Endif
												//CST COFINS
												If SED->(FieldPos("ED_CSTCOF")) > 0
													cQuery	+= "SED.ED_CSTCOF CSTCOF, "
												Endif
												//Classificação Financeira
												If SED->(FieldPos("ED_CLASFIS")) > 0
													cQuery	+= "SED.ED_CLASFIS CLASFIS, "
												Endif
												//Indicador de Cumulatividade
												If SED->(FieldPos("ED_INDCMLT")) > 0
													cQuery	+= "SED.ED_INDCMLT INDCMLT, "
												Endif

												If cAlias == "SE1"
													cQuery		+= "SE1.R_E_C_N_O_ RECNO FROM "
													cQuery 		+= RetSqlName(cAlias) + " SE1, "
													cQuery 		+= RetSqlName("SA1") + " SA1, "
												ElseIf cAlias == "SE2"
													cQuery		+= "SE2.R_E_C_N_O_ RECNO FROM "
													cQuery 		+= RetSqlName(cAlias) + " SE2, "
													cQuery 		+= RetSqlName("SA2") + " SA2, "
												EndIf

												cQuery 		+= RetSqlName("SED") + " SED  "
												cQuery 		+= "WHERE"
												If nEnvFatCp <> 1
													// Quando for teste de faturas, não devemos olhar se a natureza tem apuração
													// pois podemos gerar novos titulos com naturezas diferentes e sem apuração
													cQuery 		+= "(SED.ED_APURCOF <> '' OR SED.ED_APURPIS <> '') AND "
												Endif

												If cAlias == "SE1"

													cTipoTit		:=	""
													cTipoTit		:=	MVPROVIS + "|" + MVABATIM + "|" + "PR|PRE"
													cQuery 		+= "SE1.E1_TIPO NOT IN " + FormatIn(cTipoTit,If("|"$cTipoTit,"|",",") ) + " AND "

													If !Empty(cTpSel)
														cQuery 	+= "SE1.E1_TIPO IN (" + cTpSel + ") AND " //Tipos para selecao e envio no bloco F100
													Endif

													If	!lEnvFatCr
														cQuery 		+= "SE1.E1_ORIGEM NOT IN ('FINA460 ','FINA280 ') AND " //Fatura ou Liquidacao
													Else
														cQuery 		+= "SE1.E1_ORIGEM IN ('FINA280 ') AND " //Fatura
													Endif

													cQuery 	+= "SED.ED_CODIGO = SE1.E1_NATUREZ AND "
													cQuery 	+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "
													cQuery 	+=	"SA1.A1_FILIAL='" + xFilial("SA1") + "' AND "

													If !Empty( Iif( lUnidNeg, FWFilial("SE1") , xFilial("SE1") ) )
														cQuery 	+= "SE1.E1_FILIAL = '"  + xFilial("SE1") + "' AND "
													Else
														If lSe1MsFil
															cQuery 	+= "SE1.E1_MSFIL = '" + Iif(lUnidNeg, cFilSe1, cFilAnt) + "' AND "
														Else
															cQuery 	+= "SE1.E1_FILORIG = '" + Iif(lUnidNeg, cFilSe1, cFilAnt) + "' AND "
														Endif
													EndIf

													If !lNRastDSD
														If	!lEnvFatCr
															cQuery	+= "((SE1.E1_DESDOBR = '1' AND SE1.E1_PARCELA <> '' ) OR "
															cQuery	+= " SE1.E1_DESDOBR <> '1') AND SE1.E1_FATURA = '         ' AND "
														Else
															cQuery	+= "((SE1.E1_DESDOBR = '1' AND SE1.E1_BAIXA <>'' AND SE1.E1_SITUACA = '') OR "
															cQuery	+= " SE1.E1_DESDOBR <> '1' ) AND "
														Endif
													Endif

													If !Empty(cNOrigem)
														cQuery 	+= "SE1.E1_ORIGEM NOT IN ("  + cNOrigem + ") AND " //Origens que nao devem ser selecionadas - ponto entrada SPDF1005.
													Endif

													cQuery	+= "(SE1." + Alltrim(cDtEmis) + " BETWEEN '"+cDataIni+"' AND '"+cDataFim+ "') AND "
													cQuery 	+= "SA1.A1_COD = SE1.E1_CLIENTE AND "
													cQuery 	+= "SA1.A1_LOJA = SE1.E1_LOJA AND "
													cQuery 	+= "SA1.D_E_L_E_T_ = '' AND "
													cQuery 	+= "SE1.D_E_L_E_T_ = '' "

												ElseIf cAlias == "SE2"

													cTipoTit		:=	""
													cTipoTit		:=	MVPROVIS + "|" + MVABATIM + "|" + "PR|PRE"
													cQuery 		+= "SE2.E2_TIPO NOT IN " + FormatIn(cTipoTit,If("|"$cTipoTit,"|",",") ) + " AND "

													If !Empty(cTpSel)
														cQuery 	+= "SE2.E2_TIPO IN (" + cTpSel+ ") AND " //Tipos para selecao e envio do bloco F100
													Endif

													cQuery 	+= "SED.ED_CODIGO = SE2.E2_NATUREZ AND "
													cQuery 	+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "
													cQuery 	+=	"SA2.A2_FILIAL='" + xFilial("SA2") + "' AND "

													If !Empty( Iif( lUnidNeg, FWFilial("SE2") , xFilial("SE2") ) )
														cQuery 	+= "SE2.E2_FILIAL = '"  + xFilial("SE2") + "' AND "
													Else
														If lSe2MsFil
															cQuery 	+= "SE2.E2_MSFIL = '" + Iif(lUnidNeg, cFilSe2, cFilAnt) + "' AND "
														Else
															cQuery 	+= "SE2.E2_FILORIG = '" + Iif(lUnidNeg, cFilSe2, cFilAnt) + "' AND "
														Endif
													EndIf

													If !lEnvDesd //Query da tabela SE2 que nao seleciona desdobramento, ou seja, titulos por data de emissao.
														cQuery		+= " SE2.E2_DESDOBR <> 'S' AND "
														cQuery 		+= " SE2.E2_FATURA = '         ' AND " // Qdo selecionar pela data de baixa nao enviar os titulos referentes a fatura.
														lEnvDesd	:= .T.

													ElseIf (lEnvDesd .And. nEnvFatCp <> 0) //Query da tabela SE2 que seleciona fatura para enviar titulos sem desdobramento, ou seja, fatura pela emissao.
														//Query da tabela SE2 que fatura para enviar titulos com desdobramento.
														cQuery	+= " SE2.E2_DESDOBR <> 'S' AND "

													Else// Query somente para os desdobramentos da tabela SE2 por data de baixa.

														cQuery	+= " SE2.E2_FATURA = '         ' AND "
														If !Empty(cTpNat) .And. cDtEmis	=	"E2_BAIXA"
															cQuery	+= " (SE2.E2_DESDOBR = 'S' AND SE2.E2_STATUS = '') AND "
														Else
															cQuery	+= " (SE2.E2_DESDOBR = 'S' AND SE2.E2_BAIXA <>'' AND SE2.E2_STATUS = '') AND "
														Endif

													Endif

													If !Empty(cNOrigem)
														cQuery 	+= "SE2.E2_ORIGEM NOT IN ("  + cNOrigem + ") AND " //Origens que nao devem ser selecionadas - ponto entrada SPDF1005.
													Endif

													If	lEnvDesd .And. nEnvFatCp > 0
														cQuery 		+= " SE2.E2_ORIGEM IN ('FINA290 ') AND " 						//Fatura
													Else
														cQuery 		+= " SE2.E2_ORIGEM NOT IN ('FINA565 ','FINA290 ') AND " 	//Fatura ou Liquidacao
													Endif

													If !Empty(cTpNat) .And. cDtEmis	=	"E2_BAIXA"
														cQuery	+= "(((SE2." + cDtEmis + " BETWEEN '" + cDataIni + "' AND '" +cDataFim+ "') AND SE2.E2_NATUREZ NOT IN (" + cTpNat + "))  OR "
														cQuery	+= "((SE2.E2_VENCTO  BETWEEN '" + cDataIni + "' AND '"+cDataFim+ "') AND SE2.E2_NATUREZ IN (" + cTpNat + ") ))  AND "
													Else
														cQuery	+= "(SE2." + cDtEmis + " BETWEEN '"+cDataIni+"' AND '" +cDataFim+ "') AND "
													Endif

													cQuery 	+= "SA2.A2_COD = SE2.E2_FORNECE AND "
													cQuery 	+= "SA2.A2_LOJA = SE2.E2_LOJA AND "
													cQuery 	+= "SA2.D_E_L_E_T_ = '' AND "
													cQuery 	+= "SE2.D_E_L_E_T_ = '' AND "
													cQuery 	+= "SED.D_E_L_E_T_ = ''"

													If cAlias == "SE1" .And. lEnvFatCr
														cQuery 		+= " ORDER BY FILIAL, CLIFOR, LOJA, PREFIXO, NUM, PARCELA"
													Endif
												Endif
											Endif

											cQuery 		:= ChangeQuery(cQuery)
											dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

											For nX := 1 To Len(aStruct)
												If aStruct[nX][2] <> "C" .And. FieldPos(aStruct[nX][1])<>0
													TcSetField(cAliasQry,aStruct[nX][1],aStruct[nX][2],aStruct[nX][3],aStruct[nX][4])
												EndIf
											Next nX

											Return

											/*
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
											±±ºPrograma  ³F100DBF   ºAutor  ³Clovis Magenta      º Data ³  29/06/12   º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºDesc.     ³ Funcao de filtros dos registros do bloco F100 - SPED PIS   º±±
											±±º          ³ COFINS - para DBF                                          º±±
											±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
											±±ºUso       ³ AP                                                        º±±
											±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											*/
										Function F100DBF(cAlias,cAliasQry,cDataIni,cDataFim,cTpSe5,cTpApl,lSpdDtEm,cTpSel,lSEI_,cNOrigem,lEnvFatCr,nEnvFatCp,lSpdDtEm2)

											Local aCampos	:= {}
											Local aTam		:=	{}
											Local aNatDbf	:= {}
											Local cTrabalho:= ""
											Local cChave	:= ""
											Local cDtEmis	:= ""
											Local cIndex	:= ""
											Local cChaveSe2:=	""
											Local cChaveFil:= ""
											Local cChaveDt	:=	""
											Local nIndex	:= 0
											Local nMes		:= 0
											Local lScorgp	:=	SE1->(FieldPos("E1_SCORGP")) > 0 //Identifica bem ou servico contratado por orgaos publicos.
											Local dDataIni	:=	Ctod("  /  /  ")
											Local lNRastDSD:= SuperGetMV("MV_NRASDSD",.T.,.F.)
											Local cFilSe1	:= ""
											Local cFilSe2	:= ""
											Local cFilSe5	:= ""
											Local cFilSei	:= ""
											Local lSe1MsFil:=	SE1->(FieldPos("E1_MSFIL")) > 0
											Local lSe2MsFil:=	SE2->(FieldPos("E2_MSFIL")) > 0
											Local lSe5MsFil:=	SE5->(FieldPos("E5_MSFIL")) > 0
											Local lSeiMsFil:=	SEI->(FieldPos("EI_MSFIL")) > 0
											Local lUnidNeg	:= Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
											Local cNatSei	:=	""
											Local cNatSe2	:= SuperGetMv("MV_NATCP",,"")
											Local cTpNat	:=	cNatDesp	:=	""
											Local nX			:= 0
											Local lSE1Proc	:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)
											Local lSE2Proc	:=	(SE2->(FieldPos('E2_NUMPRO')) > 0 .And. SE2->(FieldPos('E2_INDPRO')) > 0)
											Local lDescDoc	:= SuperGetMv("MV_DESCDOC",,.F.) //Habilita o envio da descrição da operação/documento no bloco F100 do SPED PIS/COFINS.
											Local lTpDesc	:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
											Local lDescSe5	:= SE5->(FieldPos("E5_TPDESC"))	> 0 //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
											Local 	cNatResg := &(GetMv("MV_NATRAPL"))

											If !Empty(cNatSe2) // Tratamento para o parametro MV_NATDESP.
												cNatDesp	:="'"	// Inserindo aspas e virgulas para o select da query.
												For nX:=1 To Len(cNatSe2)
													If Subst(cNatSe2,nX,1) $ ";,-_|./"
														cNatDesp += "','"
													Else
														cNatDesp += Subst(cNatSe2,nX,1)
													Endif
												Next

												cNatDesp	+=	"'"
												cTpNat	:= ""
												cNatSe2	:= ""
												For nX:=1 To Len(cNatDesp)
													If Subst(cNatDesp,nX,1) $ "'"
														If Len(cNatSe2) > 1 .And. Len(cNatSe2) < 10
															cTpNat += Space(1)
														Endif
														cTpNat  +=Subst(cNatDesp,nX,1)
														cNatSe2 :=""
													ElseIf Subst(cNatDesp,nX,1) $ ","
														cTpNat+=Subst(cNatDesp,nX,1)
													Else
														cTpNat	+=Subst(cNatDesp,nX,1)
														cNatSe2	+=Subst(cNatDesp,nX,1)
													Endif
												Next
											Endif

											If lUnidNeg
												cFilSe1	:= SM0->M0_CODFIL
												cFilSe2	:= SM0->M0_CODFIL
												cFilSe5	:= SM0->M0_CODFIL
												cFilSei	:=	SM0->M0_CODFIL
											Else
												cFilSe1	:= xFilial("SE1")
												cFilSe2	:= xFilial("SE2")
												cFilSe5	:= xFilial("SE5")
												cFilSei	:=	xFilial("SEI")
											Endif

											If cAlias == "SE5"

												//***********************************************************************
												// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												// ³ Cria o arquivo de trabalho ³
												// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												cAliasQry	:= "SE5QRY"
												aCampos := {}
												aTam:=TamSX3("E5_FILIAL")
												AADD(aCampos,{"FILIAL"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PREFIXO")
												AADD(aCampos,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_NUMERO")
												AADD(aCampos,{"NUM"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_PARCELA")
												AADD(aCampos,{"PARCELA" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TIPO")
												AADD(aCampos,{"TIPO"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_CLIFOR")
												AADD(aCampos,{"CLIFOR" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TIPODOC")
												AADD(aCampos,{"TIPODOC" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_LOJA")
												AADD(aCampos,{"LOJA"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_RECPAG")
												AADD(aCampos,{"RECPAG"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VALOR")
												AADD(aCampos,{"VALOR"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_DATA")
												AADD(aCampos,{"DTMOV" ,"C",8,0})
												aTam:=TamSX3("E5_VRETPIS")
												AADD(aCampos,{"PIS"  ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_VRETCOF")
												AADD(aCampos,{"COFINS"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_TXMOEDA")
												AADD(aCampos,{"TXMOEDA"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("E5_MOEDA")
												AADD(aCampos,{"MOEDA"   ,"C",aTam[1],aTam[2]})
												AADD(aCampos,{"NROREG"  ,"N",9,0})

												If lDescSe5
													aTam:=TamSX3("E5_TPDESC")
													AADD(aCampos,{"TPDESC"   ,"C",aTam[1],aTam[2]})
												Endif

												cTrabalho := CriaTrab(aCampos)
												dbUseArea(.T.,,cTrabalho,cAliasQry,.F.,.F.)

												dbCreateInd(cTrabalho, "DTMOV+FILIAL+PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA", {||DTMOV+FILIAL+PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA})

												dbSelectArea("SE5")
												SE5 -> ( dbSetOrder ( 1 ) ) //FILIAL+DTOS(DATA)+BANCO+AGENCIA+CONTA+NUMCHEQ
												SE5 -> ( dbSeek ( xFilial("SE5") + cDataIni, .T. ) )

												Do While ( SE5->(!Eof()) .And. Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim .And. SE5->E5_FILIAL = xFilial("SE5"))

													If Empty( Iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) )//Compartilhada
														If lSe5MsFil
															If SE5->E5_MSFIL <> Iif(lUnidNeg, cFilSe5, cFilAnt)
																SE5->(Dbskip())
																Loop
															Endif
														Else
															If SE5->E5_FILORIG <> Iif(lUnidNeg, cFilSe5, cFilAnt)
																SE5->(Dbskip())
																Loop
															Endif
														Endif
													EndIf
													If SE5->E5_TIPODOC = 'ES' .Or. SE5->E5_MOTBX $ 'FAT_LIQ'
														SE5->(dbSkip())
														Loop
													EndIf

													If SE5->E5_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS)
														SE5->(dbSkip())
														Loop
													EndIf

													If !Empty(cTpSe5) .And. !SE5->E5_TIPODOC $ cTpSe5
														SE5->(dbSkip())
														Loop
													Endif

													If SE5->E5_SITUACA = 'C'
														SE5->(dbSkip())
														Loop
													EndIf

													RecLock (cAliasQry, .T. )
													(cAliasQry) ->	FILIAL		:= SE5 -> E5_FILIAL
													(cAliasQry) ->	PREFIXO		:= SE5 -> E5_PREFIXO
													(cAliasQry) ->	NUM			:= SE5 -> E5_NUMERO
													(cAliasQry) ->	PARCELA		:= SE5 -> E5_PARCELA
													(cAliasQry) ->	TIPO			:= SE5 -> E5_TIPO
													(cAliasQry) ->	CLIFOR		:= SE5 -> E5_CLIFOR
													(cAliasQry) ->	LOJA			:= SE5 -> E5_LOJA
													(cAliasQry) ->	RECPAG		:= SE5 -> E5_RECPAG
													(cAliasQry) ->	VALOR			:= SE5 -> E5_VALOR
													(cAliasQry) ->DTMOV    		:= Dtos(SE5 -> E5_DATA)
													(cAliasQry) ->	PIS			:= SE5 -> E5_VRETPIS
													(cAliasQry) ->	COFINS		:= SE5 -> E5_VRETCOF
													(cAliasQry) ->	TIPODOC		:= SE5 -> E5_TIPODOC
													(cAliasQry) ->	TXMOEDA		:= SE5 -> E5_TXMOEDA
													(cAliasQry) ->	MOEDA			:= SE5 -> E5_MOEDA
													(cAliasQry) ->	NROREG		:= SE5 -> (Recno())
													If lDescSe5
														(cAliasQry) ->	TPDESC	:= SE5 -> E5_TPDESC
													Endif

													(cAliasQry) -> (MsUnlock( ))

													SE5->(dbSkip())
												EndDo

											ElseIf cAlias == "SEI"

												IF lSEI_
													cChave	:= "EI_FILIAL+DTOS(EI_DATA)+EI_NUMERO+EI_REVISAO"
													//***********************************************************************
													// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
													// ³ Cria o arquivo de trabalho ³
													// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
													cAliasQry	:= "SEIQRY"
													aCampos := {}
													aTam:=TamSX3("EI_FILIAL")
													AADD(aCampos,{"FILIAL"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_NUMERO")
													AADD(aCampos,{"NUM"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_REVISAO")
													AADD(aCampos,{"REVISAO" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_APLEMP")
													AADD(aCampos,{"APLEMP" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_TIPO")
													AADD(aCampos,{"TIPO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_VALOR")
													AADD(aCampos,{"VALOR"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_DATA")
													AADD(aCampos,{"DTMOV" ,"C",8,0})
													aTam:=TamSX3("EI_BANCO")
													AADD(aCampos,{"BANCO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_AGENCIA")
													AADD(aCampos,{"AGENCIA"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_CONTA")
													AADD(aCampos,{"CONTA"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_VLMOED2")
													AADD(aCampos,{"VLCRUZ"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("EH_MOEDA")
													AADD(aCampos,{"MOEDA"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_CGC")
													AADD(aCampos,{"CLIFOR" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_COD")
													AADD(aCampos,{"CODBCO"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_AGENCIA")
													AADD(aCampos,{"AGBCO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_NUMCON")
													AADD(aCampos,{"CTABCO"  ,"C",aTam[1],aTam[2]})
													AADD(aCampos,{"NROREG"  ,"N",9,0})
													aTam:=TamSX3("EH_NATUREZ")
													AADD(aCampos,{"NATUREZ"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("EI_TXMOEDA")
													AADD(aCampos,{"TXMOEDA"   ,"N",aTam[1],aTam[2]})
												Else

													cChave	:= "E5_FILIAL+DTOS(E5_DATA)+E5_NUMERO"
													//***********************************************************************
													// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
													// ³ Cria o arquivo de trabalho ³
													// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
													cAliasQry	:= "SEIQRY"
													aCampos := {}
													aTam:=TamSX3("E5_FILIAL")
													AADD(aCampos,{"FILIAL"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_NUMERO")
													AADD(aCampos,{"NUM"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_TIPO")
													AADD(aCampos,{"TIPO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_PREFIXO")
													AADD(aCampos,{"PREFIXO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_RECPAG")
													AADD(aCampos,{"RECPAG"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_VALOR")
													AADD(aCampos,{"VALOR"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_DATA")
													AADD(aCampos,{"DTMOV" ,"C",8,0})
													aTam:=TamSX3("E5_BANCO")
													AADD(aCampos,{"BANCO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_AGENCIA")
													AADD(aCampos,{"AGENCIA"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_CONTA")
													AADD(aCampos,{"CONTA"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_NATUREZ")
													AADD(aCampos,{"NATUREZ"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_VLMOED2")
													AADD(aCampos,{"VLCRUZ"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_MOEDA")
													AADD(aCampos,{"MOEDA"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_CGC")
													AADD(aCampos,{"CLIFOR" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_COD")
													AADD(aCampos,{"CODBCO"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_AGENCIA")
													AADD(aCampos,{"AGBCO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("A6_NUMCON")
													AADD(aCampos,{"CTABCO"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E5_TXMOEDA")
													AADD(aCampos,{"TXMOEDA"   ,"N",aTam[1],aTam[2]})
													AADD(aCampos,{"NROREG"  ,"N",9,0})

													If lDescSe5
														aTam:=TamSX3("E5_TPDESC")
														AADD(aCampos,{"TPDESC"   ,"C",aTam[1],aTam[2]})
													Endif

												Endif
												cTrabalho := CriaTrab(aCampos)
												dbUseArea(.T.,,cTrabalho,cAliasQry,.F.,.F.)

												IF lSEI_
													dbCreateInd(cTrabalho, "DTMOV+FILIAL+NUM+REVISAO", {||DTMOV+FILIAL+NUM+REVISAO})
												Else
													dbCreateInd(cTrabalho, "DTMOV+FILIAL+NUM", {||DTMOV+FILIAL+NUM})
												Endif

												IF lSEI_

													dbSelectArea("SEI")
													dbSetOrder(1)
													cIndex	:= CriaTrab(nil,.f.)
													dbSelectArea("SEI")
													IndRegua("SEI",cIndex,cChave,,Nil,)  //"Selecionando Registros..."
													nIndex	:= RetIndex("SEI")
													dbSetIndex(cIndex+OrdBagExt())
													dbSetOrder(nIndex+1)
													dbSeek(xFilial("SEI")+cDataIni,.T.)

													Do While ( SEI->(!Eof()) .And. Dtos(SEI->EI_DATA) >= cDataIni .And. Dtos(SEI->EI_DATA) <= cDataFim .And. SEI->EI_FILIAL = xFilial("SEI"))

														If Empty( Iif( lUnidNeg, FWFilial("SEI") , xFilial("SEI") ) )
															If lSeiMsFil
																If SEI->EI_MSFIL <> Iif(lUnidNeg, cFilSei, cFilAnt)
																	SEI->(Dbskip())
																	Loop
																Endif
															Endif
														EndIf

														If (SEI->EI_TIPODOC <> "JR") .Or. (SEI->EI_STATUS = "C") .Or. (Alltrim(SEI->EI_NATUREZ) <> Alltrim(cNatResg))
															SEI->(Dbskip())
															Loop
														Endif
														SA6->(DbSetOrder(1))//filial+cod+agencia+numcon
														If !SA6->(DbSeek(xFilial("SA6")+ SEI->(EI_BANCO+EI_AGENCIA+EI_CONTA)))
															SEI->(Dbskip())
															Loop
														Endif

														cNatSei	:=	POSICIONE("SEH",1, xFilial("SEH")+SEI->(EI_NUMERO+EI_REVISAO), "EH_NATUREZ")
														aNatDbf	:=	{}
														SED->(DbSetOrder(1))
														SED->(DbSeek(xFilial("SED")+ cNatSei))
														If Alltrim(SED->ED_CODIGO) <> Alltrim(cNatSei)
															SEI->(Dbskip())
															Loop
														Else
															If Ascan(aNatDbf, {|x| x[2] == cNatSei }) == 0
																Aadd(aNatDbf,{"SEI",SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
																	SED->ED_CSTCOF,SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),;
																	SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->(Recno())})
															Endif
														Endif

														RecLock (cAliasQry, .T. )
														(cAliasQry) ->	FILIAL		:= SEI -> EI_FILIAL
														(cAliasQry) ->DTMOV    		:= Dtos(SEI -> EI_DATA)
														(cAliasQry) ->	NUM			:= SEI -> EI_NUMERO
														(cAliasQry) ->	REVISAO		:= SEI -> EI_REVISAO
														(cAliasQry) ->	APLEMP		:= SEI -> EI_APLEMP
														(cAliasQry) ->	TIPO			:= SEI -> EI_TIPO
														(cAliasQry) ->	NATUREZ		:= SEI -> EI_NATUREZ
														(cAliasQry) ->	BANCO			:= SEI -> EI_BANCO
														(cAliasQry) ->	AGENCIA		:= SEI -> EI_AGENCIA
														(cAliasQry) ->	CONTA			:= SEI -> EI_CONTA
														(cAliasQry) ->	VALOR			:= SEI -> EI_VALOR
														(cAliasQry) ->	VLCRUZ		:= SEI -> EI_VLMOED2
														(cAliasQry) ->	MOEDA			:= POSICIONE("SEH",1, xFilial("SEH")+SEI->(EI_NUMERO+EI_REVISAO), "EH_MOEDA")
														(cAliasQry) ->NATUREZ		:= cNatSei
														(cAliasQry) ->	NROREG		:= SEI -> (Recno())
														(cAliasQry) ->	TXMOEDA		:= SEI -> EI_TXMOEDA
														(cAliasQry) ->CODBCO			:= SA6 -> A6_COD
														(cAliasQry) ->AGBCO			:= SA6 -> A6_AGENCIA
														(cAliasQry) ->CTABCO			:= SA6 -> A6_NUMCON
														(cAliasQry) ->CLIFOR			:= SA6 -> A6_CGC
														(cAliasQry) -> (MsUnlock( ))

														SEI->(dbSkip())
													EndDo

												Else

													dbSelectArea("SE5")
													dbSetOrder(1)
													cIndex	:= CriaTrab(nil,.f.)
													dbSelectArea("SE5")
													IndRegua("SE5",cIndex,cChave,,Nil,)  //"Selecionando Registros..."
													nIndex	:= RetIndex("SE5")
													dbSetIndex(cIndex+OrdBagExt())
													dbSetOrder(nIndex+1)
													dbSeek(xFilial("SE5")+cDataIni,.T.)

													Do While ( SE5->(!Eof()) .And. Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim .And. SE5->E5_FILIAL = xFilial("SE5"))

														If Empty( Iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) )//Compartilhada
															If lSe5MsFil
																If Alltrim(SE5->E5_MSFIL) <> Iif(lUnidNeg, cFilSe5, cFilAnt)
																	SE5->(Dbskip())
																	Loop
																Endif
															Else
																If Alltrim(SE5->E5_FILORIG) <> Iif(lUnidNeg, cFilSe5, cFilAnt)
																	SE5->(Dbskip())
																	Loop
																Endif
															Endif
														EndIf
														If !(Alltrim(SE5->E5_NATUREZ) $ cTpApl)
															SE5->(dbSkip())
															Loop
														EndIf

														SA6->(DbSetOrder(1))//filial+cod+agencia+numcon
														If !SA6->(DbSeek(xFilial("SA6")+ SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA)))
															SE5->(Dbskip())
															Loop
														Endif

														aNatDbf	:=	{}
														SED->(DbSetOrder(1))
														SED->(DbSeek(xFilial("SED")+ SE5->E5_NATUREZ))
														If Alltrim(SED->ED_CODIGO) <> Alltrim(SE5->E5_NATUREZ)
															SE5->(Dbskip())
															Loop
														Else
															If Ascan(aNatDbf, {|x| x[2] == SE5->E5_NATUREZ }) == 0
																Aadd(aNatDbf,{"SEI",SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
																	SED->ED_CSTCOF,SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),;
																	SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->(Recno())})
															Endif
														Endif

														RecLock (cAliasQry, .T. )
														(cAliasQry) ->	FILIAL		:= SE5 -> E5_FILIAL
														(cAliasQry) ->DTMOV    		:= Dtos(SE5 -> E5_DATA)
														(cAliasQry) ->	NUM			:= SE5 -> E5_NUMERO
														(cAliasQry) ->	REVISAO		:= ""
														(cAliasQry) ->	APLEMP		:= ""
														(cAliasQry) ->	TIPO			:= SE5 -> E5_TIPO
														(cAliasQry) ->	PREFIXO		:= SE5 -> E5_PREFIXO
														(cAliasQry) ->	RECPAG		:= SE5 -> E5_RECPAG
														(cAliasQry) ->	NATUREZ		:= SE5 -> E5_NATUREZ
														(cAliasQry) ->	BANCO			:= SE5 -> E5_BANCO
														(cAliasQry) ->	AGENCIA		:= SE5 -> E5_AGENCIA
														(cAliasQry) ->	CONTA			:= SE5 -> E5_CONTA
														(cAliasQry) ->	VALOR			:= SE5 -> E5_VALOR
														(cAliasQry) ->	VLCRUZ		:= SE5 -> E5_VLMOED2

														//Proteção pois campo E5_MOEDA é caracter
														If SE5 -> E5_MOEDA $ ("M1;R")
															(cAliasQry) ->	MOEDA	 := 1
														Elseif SE5 -> E5_MOEDA $ ("M")
															(cAliasQry) ->	MOEDA	 := Val(SUBSTR(SE5->E5_MOEDA,2,1))
														Else
															(cAliasQry) ->	MOEDA	 := Val(SE5 -> E5_MOEDA)
														Endif

														If lDescSe5
															(cAliasQry) ->	TPDESC	:= SE5 -> E5_TPDESC
														Endif

														(cAliasQry) ->	TXMOEDA		:= SE5 -> E5_TXMOEDA
														(cAliasQry) ->	NROREG		:= SE5 -> (Recno())
														(cAliasQry) ->CODBCO			:= SA6 -> A6_COD
														(cAliasQry) ->AGBCO			:= SA6 -> A6_AGENCIA
														(cAliasQry) ->CTABCO			:= SA6 -> A6_NUMCON
														(cAliasQry) ->CLIFOR			:= SA6 -> A6_CGC
														(cAliasQry) -> (MsUnlock( ))

														SEI->(dbSkip())
													EndDo
												Endif


											ElseIf cAlias $ "SE1_SE2"

												If cAlias == "SE1"
													//***********************************************************************
													// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
													// ³ Cria o arquivo de trabalho ³
													// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
													cAliasQry	:= "SE1QRY"
													aCampos := {}
													aTam:=TamSX3("E1_FILIAL")
													AADD(aCampos,{"FILIAL"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_FILORIG")
													AADD(aCampos,{"FILORIG"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_PREFIXO")
													AADD(aCampos,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_NUM")
													AADD(aCampos,{"NUM"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_PARCELA")
													AADD(aCampos,{"PARCELA" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_TIPO")
													AADD(aCampos,{"TIPO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_CLIENTE")
													AADD(aCampos,{"CLIFOR" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_LOJA")
													AADD(aCampos,{"LOJA"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_VALOR")
													AADD(aCampos,{"VALOR"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_ORIGEM")
													AADD(aCampos,{"ORIGEM"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_MULTNAT")
													AADD(aCampos,{"MULTNAT"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_DESDOBR")
													AADD(aCampos,{"DESDOBR"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_EMISSAO")
													AADD(aCampos,{"DTMOV" ,"C",8,0})
													aTam:=TamSX3("E1_VLCRUZ")
													AADD(aCampos,{"VLCRUZ"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_MOEDA")
													AADD(aCampos,{"MOEDA"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_TXMOEDA")
													AADD(aCampos,{"TXMOEDA"   ,"N",aTam[1],aTam[2]})
													AADD(aCampos,{"NROREG"  ,"N",9,0})
													aTam:=TamSX3("A1_TIPO")
													AADD(aCampos,{"TIPOA1"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_BASEIRF")
													AADD(aCampos,{"BASEPIS"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_NATUREZ")
													AADD(aCampos,{"NATUREZ"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E1_DECRESC")
													AADD(aCampos,{"DECRESC"   ,"N",aTam[1],aTam[2]})

													If lScorgp
														aTam:=TamSX3("E1_SCORGP")
														AADD(aCampos,{"SCORGP"   ,"C",aTam[1],aTam[2]})
													Endif
													If lSE1Proc
														aTam:=TamSX3("E1_NUMPRO")
														AADD(aCampos,{"NUMPRO"   ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_INDPRO")
														AADD(aCampos,{"INDPRO"   ,"C",aTam[1],aTam[2]})
													Endif
													If lDescDoc
														aTam:=TamSX3("E1_HIST")
														AADD(aCampos,{"HIST"   ,"C",aTam[1],aTam[2]})
													Endif

													If lTpDesc
														aTam:=TamSX3("E1_TPDESC")
														AADD(aCampos,{"TPDESC"   ,"C",aTam[1],aTam[2]})
													Endif

												ElseIf cAlias == "SE2"

													//***********************************************************************
													// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
													// ³ Cria o arquivo de trabalho ³
													// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
													cAliasQry	:= "SE2QRY"
													aCampos := {}
													aTam:=TamSX3("E2_FILIAL")
													AADD(aCampos,{"FILIAL"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_FILORIG")
													AADD(aCampos,{"FILORIG"  ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_PREFIXO")
													AADD(aCampos,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_NUM")
													AADD(aCampos,{"NUM"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_PARCELA")
													AADD(aCampos,{"PARCELA" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_TIPO")
													AADD(aCampos,{"TIPO"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_FORNECE")
													AADD(aCampos,{"CLIFOR" ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_LOJA")
													AADD(aCampos,{"LOJA"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VALOR")
													AADD(aCampos,{"VALOR"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_ORIGEM")
													AADD(aCampos,{"ORIGEM"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_MULTNAT")
													AADD(aCampos,{"MULTNAT"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_DESDOBR")
													AADD(aCampos,{"DESDOBR"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_EMISSAO")
													AADD(aCampos,{"DTMOV" ,"C",8,0})
													aTam:=TamSX3("E2_VLCRUZ")
													AADD(aCampos,{"VLCRUZ"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_MOEDA")
													AADD(aCampos,{"MOEDA"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_TXMOEDA")
													AADD(aCampos,{"TXMOEDA"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_BASEPIS")
													AADD(aCampos,{"BASEPIS"   ,"N",aTam[1],aTam[2]})
													AADD(aCampos,{"NROREG"  ,"N",9,0})
													aTam:=TamSX3("E2_NATUREZ")
													AADD(aCampos,{"NATUREZ"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_STATUS")
													AADD(aCampos,{"STATUS"   ,"C",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_BASEIRF")
													AADD(aCampos,{"BASEIRF"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VRETPIS")
													AADD(aCampos,{"VRETPIS"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VRETCOF")
													AADD(aCampos,{"VRETCOF"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VRETCSL")
													AADD(aCampos,{"VRETCSL"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VRETINS")
													AADD(aCampos,{"VRETINS"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VRETISS")
													AADD(aCampos,{"VRETISS"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VRETIRF")
													AADD(aCampos,{"VRETIRF"   ,"N",aTam[1],aTam[2]})
													aTam:=TamSX3("E2_VENCTO")
													AADD(aCampos,{"VENCTO" ,"C",8,0})
													If lSE2Proc
														aTam:=TamSX3("E2_NUMPRO")
														AADD(aCampos,{"NUMPRO"   ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E2_INDPRO")
														AADD(aCampos,{"INDPRO"   ,"C",aTam[1],aTam[2]})
													Endif
													If lDescDoc
														aTam:=TamSX3("E2_HIST")
														AADD(aCampos,{"HIST"   ,"C",aTam[1],aTam[2]})
													Endif
												Endif

												aTam:=TamSX3("ED_APURCOF")
												AADD(aCampos,{"APURCOF" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_APURPIS")
												AADD(aCampos,{"APURPIS"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_PCAPPIS")
												AADD(aCampos,{"PCAPPIS"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_PCAPCOF")
												AADD(aCampos,{"PCAPCOF"   ,"N",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_CSTPIS")
												AADD(aCampos,{"CSTPIS" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_CSTCOF")
												AADD(aCampos,{"CSTCOF"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_CLASFIS")
												AADD(aCampos,{"CLASFIS"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_TABCCZ")
												AADD(aCampos,{"TABCCZ"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_CODCCZ")
												AADD(aCampos,{"CODCCZ"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_GRUCCZ")
												AADD(aCampos,{"GRUCCZ"   ,"C",aTam[1],aTam[2]})
												AADD(aCampos,{"DTFCCZ" 	 ,"C",8,0})
												aTam:=TamSX3("ED_INDCMLT")
												AADD(aCampos,{"INDCMLT" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_CONTA")
												AADD(aCampos,{"EDCONTA" ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_CCD")
												AADD(aCampos,{"EDCCD"  ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("ED_CCC")
												AADD(aCampos,{"EDCCC"   ,"C",aTam[1],aTam[2]})

												cTrabalho := CriaTrab(aCampos)
												dbUseArea(.T.,,cTrabalho,cAliasQry,.F.,.F.)

												dbCreateInd(cTrabalho,"DTMOV+FILIAL+PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA", {||DTMOV+FILIAL+PREFIXO+NUM+PARCELA+TIPO+CLIFOR+LOJA})

												If cAlias == "SE1"

													If lSpdDtEm2
														cDtEmis 		:= ExecBlock ("SPDF1006",.F.,.F.)
														cChaveSe2	:= "E1_FILIAL+DTOS(" + &cDtEmis + ")"
														//Filtra a tabela SE1 para titulos sem desdobramento ou com desdobramento.
														nOrdem 		:= SE1->(IndexOrd())
														cIndex 		:= CriaTrab(nil,.f.)
														dbSelectArea("SE1")
														IndRegua("SE1",cIndex,cChaveSe2,,Nil,)  //"Selecionando Registros..."
														nIndex 		:= RetIndex("SE1")
														dbSetIndex(cIndex+ordBagExt())
														dbSetOrder(nIndex+1)
													Else
														SE1 -> ( dbSetOrder ( 6 ) ) //FILIAL+DTOS(EMISSAO)+ ...
														cDtEmis	:=	"SE1->E1_EMISSAO"
													Endif
													dDataIni 	:= Stod(cDataIni) //Foi feito isto porque o Dbseek nao estava selecionando a data mais proxima.
													dDataIni		:=	FirstDay(dDataIni)
													nMes 			:= Month(dDataIni)

													While Month(dDataIni) == nMes
														If SE1->(dbSeek(xFilial("SE1")+DtoS(dDataIni),.T.))
															While (SE1->(!Eof()) .And. Dtos(&cDtEmis) >= cDataIni .And. Dtos(&cDtEmis) <= cDataFim .And. SE1->E1_FILIAL = xFilial("SE1"))

																If Empty( Iif( lUnidNeg, FWFilial("SE1") , xFilial("SE1") ) )
																	If lSe1MsFil
																		If SE1->E1_MSFIL <> Iif(lUnidNeg, FWFilial("SE1") , cFilAnt)
																			SE1->(Dbskip())
																			Loop
																		Endif
																	Else
																		If SE1->E1_FILORIG <> Iif(lUnidNeg, FWFilial("SE1") , cFilAnt)
																			SE1->(Dbskip())
																			Loop
																		Endif
																	Endif
																EndIf

																If (SE1->E1_TIPO $ (MVPROVIS+'_PR _'+'PRE')) .Or. (Alltrim(SE1->E1_ORIGEM) == 'FINA460')
																	SE1->(dbSkip())
																	Loop
																EndIf

																If !Empty(cTpSel) .And. !SE1->E1_TIPO $ cTpSel
																	SE1->(dbSkip())
																	Loop
																Endif

																If SE1->E1_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS+"TX ")
																	SE1->(dbSkip())
																	Loop
																EndIf

																If SE1->E1_ORIGEM $ cNOrigem
																	SE1->(dbSkip())
																	Loop
																EndIf

																If (!lEnvFatCr .And. ((Alltrim(SE1->E1_ORIGEM) == 'FINA280') .Or. !Empty(SE1->E1_FATURA)))
																	SE1->(dbSkip())
																	Loop
																EndIf

																If	!lEnvFatCr .And. SE1->E1_ORIGEM $ cNOrigem
																	SE1->(dbSkip())
																	Loop
																ElseIf lEnvFatCr .And. SE1->E1_ORIGEM <> "FINA280 " //Enviar somente Fatura.
																	SE1->(dbSkip())
																	Loop
																Endif

																DbSelectArea("SA1")
																SA1->(DbSetOrder(1))
																If !SA1->(DbSeek(xFilial("SA1")+SE1->E1_CLIENTE))
																	SE1->(dbSkip())
																	Loop
																Endif

																aNatDbf	:=	{}
																SED->(DbSetOrder(1))
																SED->(DbSeek(xFilial("SED")+ SE1->E1_NATUREZ))
																If SED->ED_CODIGO <> SE1->E1_NATUREZ .Or. (Empty(SED->ED_APURCOF) .Or. Empty(SED->ED_APURPIS))
																	SE1->(Dbskip())
																	Loop
																Else
																	Aadd(aNatDbf,{"SE1",SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
																		SED->ED_CSTCOF,SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),;
																		SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->(Recno()),;
																		SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC})
																Endif

																RecLock (cAliasQry, .T. )
																(cAliasQry) ->	FILIAL		:= SE1 -> E1_FILIAL
																(cAliasQry) ->	PREFIXO		:= SE1 -> E1_PREFIXO
																(cAliasQry) ->	NUM			:= SE1 -> E1_NUM
																(cAliasQry) ->	PARCELA		:= SE1 -> E1_PARCELA
																(cAliasQry) ->	TIPO			:= SE1 -> E1_TIPO
																(cAliasQry) ->	CLIFOR		:= SE1 -> E1_CLIENTE
																(cAliasQry) ->	LOJA			:= SE1 -> E1_LOJA
																(cAliasQry) ->	VALOR			:= SE1 -> E1_VALOR
																(cAliasQry) ->DTMOV    		:= Dtos(SE1 -> E1_EMISSAO)
																(cAliasQry) ->	ORIGEM		:= SE1 -> E1_ORIGEM
																(cAliasQry) ->	FILORIG		:= SE1 -> E1_FILORIG
																(cAliasQry) ->MULTNAT		:= SE1 -> E1_MULTNAT
																(cAliasQry) ->	DESDOBR		:= SE1 -> E1_DESDOBR
																(cAliasQry) ->	VLCRUZ		:= SE1 -> E1_VLCRUZ
																(cAliasQry) ->	MOEDA			:= SE1 -> E1_MOEDA
																(cAliasQry) ->	NROREG		:= SE1 -> (Recno())
																(cAliasQry) ->	TIPOA1		:= SA1 -> A1_TIPO
																(cAliasQry) ->	APURPIS		:= aNatDbf[1,3]
																(cAliasQry) ->	APURCOF		:= aNatDbf[1,4]
																(cAliasQry) ->	PCAPPIS		:= aNatDbf[1,13]
																(cAliasQry) ->	PCAPCOF		:= aNatDbf[1,14]
																(cAliasQry) ->	TABCCZ		:=	aNatDbf[1,7]
																(cAliasQry) ->	CODCCZ		:= aNatDbf[1,8]
																(cAliasQry) ->	GRUCCZ		:= aNatDbf[1,9]
																(cAliasQry) ->	DTFCCZ		:= aNatDbf[1,10]
																(cAliasQry) ->	BASEPIS		:= SE1 -> E1_BASEIRF
																(cAliasQry) ->	NATUREZ		:= SE1 -> E1_NATUREZ
																(cAliasQry) ->	DECRESC	:= SE1 -> E1_DECRESC

																If lTpDesc
																	(cAliasQry) ->	TPDESC	:= SE1 -> E1_TPDESC
																Endif

																If lScorgp
																	(cAliasQry) ->	SCORGP	:= SE1 -> E1_SCORGP
																Endif
																If lSE1Proc
																	(cAliasQry) ->	NUMPRO		:= SE1 -> E1_NUMPRO
																	(cAliasQry) ->	INDPRO		:= SE1 -> E1_INDPRO
																Endif
																If lDescDoc
																	(cAliasQry) ->	HIST		:= SE1 -> E1_HIST
																Endif
																//CST PIS
																If SED->(FieldPos("ED_CSTPIS")) > 0
																	(cAliasQry) ->CSTPIS		:= aNatDbf[1,5]
																Endif
																//CST COFINS
																If SED->(FieldPos("ED_CSTCOF")) > 0
																	(cAliasQry) ->CSTCOF		:= aNatDbf[1,6]
																Endif
																//Classificação Financeira
																If SED->(FieldPos("ED_CLASFIS")) > 0
																	(cAliasQry) ->CLASFIS	:= aNatDbf[1,11]
																Endif
																//Indicador de Cumulatividade
																If SED->(FieldPos("ED_INDCMLT")) > 0
																	(cAliasQry) ->INDCMLT	:= aNatDbf[1,12]
																Endif
																(cAliasQry) ->	EDCONTA		:= aNatDbf[1,16]
																(cAliasQry) ->	EDCCD			:= aNatDbf[1,17]
																(cAliasQry) ->	EDCCC			:= aNatDbf[1,18]
																(cAliasQry) -> (MsUnlock( ))

																SE1->(dbSkip())
															EndDo
														Endif
														dDataIni++
														Loop
													Enddo

												ElseIf cAlias == "SE2"

													//Filtra a tabela SE2 para titulos sem desdobramento ou com desdobramento.
													nOrdem 		:= SE2->(IndexOrd())
													cIndex 		:= CriaTrab(nil,.f.)

													If lUnidNeg //Compartilhamento das tabelas e utilizacao do parametro MV_NRASDSD.
														If lNRastDSD
															cChaveSe2	:=	"E2_FILORIG"
															cChaveFil	:=	"SE2->E2_FILORIG"
														Else
															cChaveSe2	:=	"E2_FILIAL"
															cChaveFil	:=	"SE2->E2_FILIAL"
														Endif
													Else
														cChaveSe2	:=	"E2_FILIAL"
														cChaveFil	:=	"SE2->E2_FILIAL"
													Endif

													If !lEnvDesd .Or. (lEnvDesd .And. nEnvFatCp = 1)
														cChaveSe2	+=	"+DTOS(E2_EMISSAO)"
														cChaveDt		:=	 "Dtos(SE2->E2_EMISSAO)"
													ElseIf (lEnvDesd .And. nEnvFatCp = 0) .Or. (lEnvDesd .And. nEnvFatCp = 2)
														If (lEnvDesd .And. nEnvFatCp = 0) .And. !Empty(cTpNat)
															cChaveSe2	+= "+DTOS(E2_VENCTO)"
															cChaveDt		:= "Dtos(SE2->E2_VENCTO)"
														Else
															cChaveSe2	+= "+DTOS(E2_BAIXA)"
															cChaveDt		:= "Dtos(SE2->E2_BAIXA)"
														Endif
													Endif

													dbSelectArea("SE2")
													IndRegua("SE2",cIndex,cChaveSe2,,Nil,)  //"Selecionando Registros..."
													nIndex 		:= RetIndex("SE2")
													dbSetIndex(cIndex+ordBagExt())
													dbSetOrder(nIndex+1)

													dDataIni := Stod(cDataIni) //Foi feito isto porque o Dbseek nao estava selecionando a data mais proxima.
													dDataIni	:=	FirstDay(dDataIni)
													nMes 		:= Month(dDataIni)

													While Month(dDataIni) == nMes
														If SE2->(dbSeek(If(lNRastDSD,cFilSe2,xFilial("SE2"))+DtoS(dDataIni),.T.))

															Do While SE2->(!Eof()) .And. &cChaveFil == If(lNRastDSD,cFilSe2,xFilial("SE2")) .And. &cChaveDt >= cDataIni  .And. &cChaveDt <= cDataFim

																If !Empty( Iif( lUnidNeg, FWFilial("SE2") , xFilial("SE2") ) )
																	If SE2->E2_FILIAL <> Iif( lUnidNeg, FWFilial("SE2") , xFilial("SE2") )
																		SE2->(Dbskip())
																		Loop
																	Endif
																Else
																	If lSe2MsFil
																		If SE2->E2_MSFIL <> Iif( lUnidNeg, FWFilial("SE2") , cFilAnt )
																			SE2->(Dbskip())
																			Loop
																		Endif
																	Else
																		If SE2->E2_FILORIG <> Iif( lUnidNeg, FWFilial("SE2") , cFilAnt )
																			SE2->(Dbskip())
																			Loop
																		Endif
																	Endif
																EndIf
																If (SE2->E2_TIPO $ (MVPROVIS+'_PR _'+'PRE')) .Or. (SE2->E2_ORIGEM $ 'FINA290_FINA565')
																	SE2->(dbSkip())
																	Loop
																EndIf

																If !Empty(cTpSel) .And. !SE2->E2_TIPO $ cTpSel
																	SE2->(dbSkip())
																	Loop
																Endif

																If SE2->E2_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS+"TX ")
																	SE2->(dbSkip())
																	Loop
																EndIf

																If SE2->E2_ORIGEM $ cNOrigem
																	SE2->(dbSkip())
																	Loop
																EndIf

																If !lEnvDesd //Envio da tabela SE2 que nao seleciona desdobramento, ou seja, titulos por data de emissao.
																	If SE2->E2_DESDOBR == "S"
																		SE2->(dbSkip())
																		Loop
																	Endif

																	If !Empty(SE2->E2_FATURA)
																		SE2->(dbSkip())
																		Loop
																	Endif

																	If Alltrim(SE2->E2_ORIGEM) $ "|FINA290 |FINA565 |"
																		SE2->(dbSkip())
																		Loop
																	Endif

																ElseIf lEnvDesd .And. nEnvFatCp > 0 //Envio de faturas.
																	If SE2->E2_DESDOBR == "S"
																		SE2->(dbSkip())
																		Loop
																	Endif

																	If Alltrim(SE2->E2_ORIGEM) <> "FINA290"
																		SE2->(dbSkip())
																		Loop
																	Endif

																ElseIf lEnvDesd .And. nEnvFatCp = 0 //Envio de desdobramentos.

																	If SE2->E2_DESDOBR <> "S"
																		SE2->(dbSkip())
																		Loop
																	Endif

																	If Alltrim(SE2->E2_ORIGEM) $ "|FINA290 |FINA565 |"
																		SE2->(dbSkip())
																		Loop
																	Endif

																	If !Empty(SE2->E2_FATURA)
																		SE2->(dbSkip())
																		Loop
																	Endif

																	If Empty(cTpNat) .And. Empty(SE2->E2_BAIXA)
																		SE2->(Dbskip())
																		Loop
																	Endif

																	//Exclui titulo criado como baixado quando parametro = .F.
																	If (SE2->E2_DESDOBR == "S" .And. !Empty(SE2->E2_BAIXA) .And. !Empty(SE2->E2_STATUS))
																		SE2->(dbSkip())
																		Loop
																	Endif

																Endif

																DbSelectArea("SA2")
																SA2->(DbSetOrder(1))
																If !SA2->(DbSeek(xFilial("SA2")+SE2->E2_FORNECE))
																	SE2->(dbSkip())
																	Loop
																Endif
																aNatDbf	:=	{}
																SED->(DbSetOrder(1))
																SED->(DbSeek(xFilial("SED")+ SE2->E2_NATUREZ))
																If SED->ED_CODIGO <> SE2->E2_NATUREZ .Or. (Empty(SED->ED_APURCOF) .Or. Empty(SED->ED_APURPIS))
																	SE2->(Dbskip())
																	Loop
																Else
																	Aadd(aNatDbf,{"SE2",SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
																		SED->ED_CSTCOF,SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),;
																		SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->(Recno()),;
																		SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC})
																Endif

																RecLock (cAliasQry, .T. )
																(cAliasQry) ->	FILIAL		:= SE2 -> E2_FILIAL
																(cAliasQry) ->	PREFIXO		:= SE2 -> E2_PREFIXO
																(cAliasQry) ->	NUM			:= SE2 -> E2_NUM
																(cAliasQry) ->	PARCELA		:= SE2 -> E2_PARCELA
																(cAliasQry) ->	TIPO			:= SE2 -> E2_TIPO
																(cAliasQry) ->	CLIFOR		:= SE2 -> E2_FORNECE
																(cAliasQry) ->	LOJA			:= SE2 -> E2_LOJA
																(cAliasQry) ->	VALOR			:= SE2 -> E2_VALOR
																(cAliasQry) ->DTMOV    		:= Dtos(SE2 -> E2_EMISSAO)
																(cAliasQry) ->	ORIGEM		:= SE2 -> E2_ORIGEM
																(cAliasQry) ->	FILORIG		:= SE2 -> E2_FILORIG
																(cAliasQry) ->MULTNAT		:= SE2 -> E2_MULTNAT
																(cAliasQry) ->	DESDOBR		:= SE2 -> E2_DESDOBR
																(cAliasQry) ->	VLCRUZ		:= SE2 -> E2_VLCRUZ
																(cAliasQry) ->	MOEDA			:= SE2 -> E2_MOEDA
																(cAliasQry) ->	TXMOEDA		:= SE2 -> E2_TXMOEDA
																(cAliasQry) ->	NROREG		:= SE2 -> (Recno())
																(cAliasQry) ->	APURPIS		:= aNatDbf[1,3]
																(cAliasQry) ->	APURCOF		:= aNatDbf[1,4]
																(cAliasQry) ->	PCAPPIS		:= aNatDbf[1,13]
																(cAliasQry) ->	PCAPCOF		:= aNatDbf[1,14]
																(cAliasQry) ->	TABCCZ		:=	aNatDbf[1,7]
																(cAliasQry) ->	CODCCZ		:= aNatDbf[1,8]
																(cAliasQry) ->	GRUCCZ		:= aNatDbf[1,9]
																(cAliasQry) ->	DTFCCZ		:= aNatDbf[1,10]
																(cAliasQry) ->	BASEPIS		:= SE2 -> E2_BASEPIS
																(cAliasQry) ->	BASEIRF		:= SE2 -> E2_BASEIRF
																(cAliasQry) ->	NATUREZ		:= SE2 -> E2_NATUREZ
																(cAliasQry) ->	STATUS		:= SE2 -> E2_STATUS
																(cAliasQry) ->	VRETPIS		:= SE2 -> E2_VRETPIS
																(cAliasQry) ->	VRETCOF		:= SE2 -> E2_VRETCOF
																(cAliasQry) ->	VRETCSL		:= SE2 -> E2_VRETCSL
																(cAliasQry) ->	VRETINS		:= SE2 -> E2_VRETINS
																(cAliasQry) ->	VRETISS		:= SE2 -> E2_VRETISS
																(cAliasQry) ->	VRETIRF		:= SE2 -> E2_VRETIRF
																(cAliasQry) ->VENCTO    	:= Dtos(SE2 ->E2_VENCTO)

																If lSE2Proc
																	(cAliasQry) ->	NUMPRO		:= SE2 -> E2_NUMPRO
																	(cAliasQry) ->	INDPRO		:= SE2 -> E2_INDPRO
																Endif
																If lDescDoc
																	(cAliasQry) ->	HIST			:= SE2 -> E2_HIST
																Endif
																//CST PIS
																If SED->(FieldPos("ED_CSTPIS")) > 0
																	(cAliasQry) ->CSTPIS		:= aNatDbf[1,5]
																Endif
																//CST COFINS
																If SED->(FieldPos("ED_CSTCOF")) > 0
																	(cAliasQry) ->CSTCOF		:= aNatDbf[1,6]
																Endif
																//Classificação Financeira
																If SED->(FieldPos("ED_CLASFIS")) > 0
																	(cAliasQry) ->CLASFIS	:= aNatDbf[1,11]
																Endif
																//Indicador de Cumulatividade
																If SED->(FieldPos("ED_INDCMLT")) > 0
																	(cAliasQry) ->INDCMLT	:= aNatDbf[1,12]
																Endif
																(cAliasQry) ->	EDCONTA		:= aNatDbf[1,16]
																(cAliasQry) ->	EDCCD			:= aNatDbf[1,17]
																(cAliasQry) ->	EDCCC			:= aNatDbf[1,18]
																(cAliasQry) -> (MsUnlock( ))
																SE2->(dbSkip())
															EndDo
														Endif
														dDataIni++
														Loop
													Enddo

													If !lEnvDesd //Selecionando os titulos da tabela SE2 que nao sejam desdobramento, ou seja, titulos por data de emissao.
														lEnvDesd	:=	.T.
													Endif

													dbSelectArea("SE2") //Restaura os indices
													RetIndex("SE2")
													IF cIndex != ""
														FErase (cIndex+OrdBagExt())
													EndIF
													dbSetOrder(nOrdem)
												Endif
											Endif

											Return

											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
											±±³Fun‡…o	 ³FinSpdF500³ Autor ³ Clovis / Andrea      ³ Data ³ 30/05/12 ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
											±±³Descri‡…o ³ Func„o para retornar informacoes para a geracao do Regime  ³±±
											±±³          ³ de Caixa bloco F500 do SPED PIS/COFINS                     ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
											±±³Sintaxe	 ³ FinSpdF500()            											  ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
											±±³ Uso		 ³ SIGAFIS						            							  ³±±
											±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Function FinSpdF500(nMesRef,nAnoRef,cAliasF500)
											Local cDataIni	:= ""
											Local cDataFim 	:= ""
											Local dLastDay 	:= ""
											Local aCampos	:= {}
											Local aTam     	:= {}
											Local cChave	:=	""
											Local cArqTrab	:=	""
											Local cIndTmp  	:=	""
											Local cNome		:= ""
											Local nIndex	:= 0
											Local nTamCli_1	:= 0
											Local nTamCli_2	:= 0
											Local lSE1Proc	:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)

											cDataIni := StrZero(nAnoRef,4)+StrZero(nMesRef,2)+"01"
											dLastDay := LastDay(Ctod("01/"+StrZero(nMesRef,2)+"/"+StrZero(nAnoRef,4)))
											cDataFim := StrZero(nAnoRef,4)+StrZero(nMesRef,2)+StrZero(Day(dLastDay),2)

											#IFNDEF TOP //Caso seja base DBF verificar a existencia dos campos da tabela SED que serao necessarias a geracao deste bloco.
												If SED->(FieldPos("ED_APURCOF")) <= 0 .Or.	SED->(FieldPos("ED_APURPIS")) <= 0 .Or. SED->(FieldPos("ED_PCAPPIS")) <= 0 .Or.;
														SED->(FieldPos("ED_PCAPCOF")) <= 0 .Or.	SED->(FieldPos("ED_CSTPIS")) <= 0 .Or. SED->(FieldPos("ED_CSTCOF")) <= 0 .Or.;
														SED->(FieldPos("ED_INDCMLT")) <= 0 .Or.	SED->(FieldPos("ED_INDRET")) <= 0 .Or. SED->(FieldPos("ED_TABCCZ")) <= 0 .Or.;
														SED->(FieldPos("ED_CODCCZ")) <= 0 .Or. SED->(FieldPos("ED_GRUCCZ")) <= 0 .Or.	SED->(FieldPos("ED_DTFCCZ")) <= 0

													MsgAlert('Alguns campos do SPED PIS/COFINS nao existem na base. Favor verificar os boletins referentes ao SPED PIS/COFINS (Fiscal e Financeiro).')
													Return
												Endif
											#ENDIF

											aCampos := {}
											aTam:=TamSX3("E5_FILIAL")
											AADD(aCampos,{"FILIAL"  ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_PREFIXO")
											AADD(aCampos,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_NUMERO")
											AADD(aCampos,{"NUMERO"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_PARCELA")
											AADD(aCampos,{"PARCELA" ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_TIPO")
											AADD(aCampos,{"TIPO"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_CLIFOR")
											nTamCli_1 := aTam[1] + 12
											nTamCli_2 := aTam[2]
											AADD(aCampos,{"CLIENTE" ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_LOJA")
											nTamCli_1 += aTam[1]
											nTamCli_2 += aTam[2]
											AADD(aCampos,{"LOJA"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_TIPODOC")
											AADD(aCampos,{"TIPODOC"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_ORIGEM")
											AADD(aCampos,{"ORIGEM"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_VALOR")
											AADD(aCampos,{"VALOR"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("E5_DATA")
											AADD(aCampos,{"DTMOV" ,"C",8,0})
											aTam:=TamSX3("E1_NATUREZ")
											AADD(aCampos,{"NATUREZ"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_CSTPIS")
											AADD(aCampos,{"CSTPIS"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_PCAPPIS")
											AADD(aCampos,{"ALIQPIS"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_VALOR")
											AADD(aCampos,{"BASEPIS"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_PIS")
											AADD(aCampos,{"VRPIS"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_COFINS")
											AADD(aCampos,{"VRCOFINS"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_CSTCOF")
											AADD(aCampos,{"CSTCOF"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_PCAPCOF")
											AADD(aCampos,{"ALIQCOF"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_VALOR")
											AADD(aCampos,{"BASECOF"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_CONTA")
											AADD(aCampos,{"CONTA"   ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_VALOR")
											AADD(aCampos,{"VRDESC"   ,"N",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_VALOR")
											AADD(aCampos,{"VRDESCON"   ,"N",aTam[1],aTam[2]})
											AADD(aCampos,{"TABELA"  ,"C",3,0})
											AADD(aCampos,{"NROREG"  ,"N",9,0})
											aTam:=TamSX3("E1_SERIE")
											AADD(aCampos,{"SERIE"  ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("E1_VALOR")
											AADD(aCampos,{"PERC"   ,"N",aTam[1],6})
											aTam:=TamSX3("E1_VALOR")
											AADD(aCampos,{"VALORE1"   	,"N",aTam[1],aTam[2]})
											AADD(aCampos,{"ORIFIN"  ,"L",1,0})
											aTam:=TamSX3("ED_TABCCZ")
											AADD(aCampos,{"ED_TABCCZ"  ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_CODCCZ")
											AADD(aCampos,{"ED_CODCCZ"  ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_GRUCCZ")
											AADD(aCampos,{"ED_GRUCCZ"  ,"C",aTam[1],aTam[2]})
											aTam:=TamSX3("ED_DTFCCZ")
											AADD(aCampos,{"ED_DTFCCZ"  ,"C",aTam[1],aTam[2]})
											AADD(aCampos,{"CHVCLIENTE" ,"C" , nTamCli_1 , nTamCli_2 })
											aTam:=TamSX3("E1_EMISSAO")
											AADD(aCampos,{"EMISSAO" ,"C",8,0})

											If lSE1Proc
												aTam:=TamSX3("E1_NUMPRO")
												AADD(aCampos,{"NUMPRO"   ,"C",aTam[1],aTam[2]})
												aTam:=TamSX3("E1_INDPRO")
												AADD(aCampos,{"INDPRO"   ,"C",aTam[1],aTam[2]})
											Endif

											cArqTrab 	:=	CriaTrab(aCampos,.T.)

											dbUseArea(.T.,__LocalDriver, cArqTrab,cAliasF500,.F.,.F.)
											DbSelectArea(cAliasF500)

											cIndTmp		:=	CriaTrab(Nil,.F.)

											cChave   := "FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA+TIPODOC"
											IndRegua(cAliasF500,cIndTmp,cChave,,Nil,)  //"Selecionando Registros..."

											#IFNDEF TOP
												DbSetIndex(cIndTmp+OrdBagExt())
											#ENDIF
											DbSetOrder(1)


											TrbF500(cArqTrab,cDataIni,cDataFim,cAliasF500) //Gera dados na tabela TRB quando banco em TOP.

											cNome	:= ""
											If !(cAliasF500)->(Eof())
												cNome	:=	cAliasF500
											Else
												Ferase(cArqTrab+GetDBExtension())
											Endif

											Return(cNome)

											/*/
											ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
											±±³Fun‡ao	 ³TrbF500	³ Autor ³ Totvs          	     ³ Data ³ 31/05/12 ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
											±±³Descri‡…o ³ Func„o para gerar tabela TRB a ser enviada no bloco F500   ³±±
											±±³          ³ do SPED PIS/COFINS.                                        ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
											±±³Sintaxe	 ³ TrbF500(cArqTrab,cDataIni,cDataFim)                   	  ³±±
											±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
											±±³ Uso		 ³ Modulo Financeiro   													  ³±±
											±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
											±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
											ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
											/*/
										Static Function TrbF500(cArqTrab,cDataIni,cDataFim,cAliasF500)
											Local cQuery			:=	""
											Local cNomeArq	:=	""
											Local cAlias				:= 	""
											Local aStructTRB	:= {}
											Local nI 					:= 0
											Local aAreaSEV 	:= SEV->(GetArea())
											Local	aAreaSED 	:= SED->(GetArea())
											Local nVrRateio		:=	0
											Local nPisBx			:=	0
											Local	nCofBx			:=	0
											Local	nBase			:= 0
											Local nPercBx		:= 0
											Local cChaveBx		:=	""
											Local	nJurosBx		:=	 nMultaBx		:=	nDescBx		:=		nVlrSe5		:=	0
											Local	nTpMoeda	:=	0
											Local	aRegBx			:=	{}
											Local	nVrPIS			:=	nVrCOFINS	:=	nVrCSLL :=	nVrIR	:=	nVrISS :=	nVrINSS	:=	0
											Local	lTitRet			:=	.F.
											Local nVlMinImp 	:= GetNewPar("MV_VL10925",5000)
											Local aTitRet			:=	{} 						//titulos que retem outros
											Local lRecIss			:=	.F.
											Local lMVDescIss	:=	GetNewPar("MV_DESCISS",.F.)
											Local lBxSped		:= SuperGetMv("MV_RENTRIB",,.F.) //Habilita o envio receitas financeiras não tributaveis
											//,ou seja, dados da baixa (juros, descontos ou variacao cambial).
											Local cNatRec		:= SuperGetMv("MV_NATRNT",,"") 	//Codigo da Natureza de Receita Nao Tributavel.
											Local	aNatNTrib		:=	{}
											Local lDescApl		:= SuperGetMv("MV_DESCRF",,.T.) //Habilita o envio dos descontos referentes a Aplicacoes financeiras nao tributaveis.
											Local lNRastDSD	:= SuperGetMV("MV_NRASDSD",.T.,.F.) //Parametro que permite ao usuario utilizar o desdobramento da maneira anterior ao implementado com o rastremaento.
											Local aTam				:= aCampos	:= {}
											Local cTrabalho		:=	""
											Local cMotBx			:= SuperGetMv("MV_MTBXSD",,"")
											Local aMotBx 		:= ReadMotBx()
											Local cBaixa			:=	cBxSql		:=	""
											Local nJ					:= 0
											Local nVRDESC	:=	0
											Local lRetSe5			:=	.F.
											Local lPCCBaixa	:= If(FindFunction("FPccBxCr"),FPccBxCr(),.F.)
											Local nVrRet			:=	nVrRetOld	:=	nVrRetAnt	:=	0
											Local lTpDesc			:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
											Local nDescInc		:=	0 //Valor do desconto incondicional .
											Local lPCCBaixa	:= If(FindFunction("FPccBxCr"),FPccBxCr(),.F.)
											Local nTotBx			:=	nTotBaixa	:= 0
											Local 	nVrSevPIS	:=	nVrSevCOF		:=	nVrSevCSLL 	:=	nVrSev	:=	0
											Local 	nDescSev		:=	nMultaSev	:=	nJurosSev		:=	0
											Local nTotPis			:=	nTotCof		:=	nTotCsll	:=	nVrPcc	:=	0
											Local lSE1Proc		:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)
											Local lEnvBase		:=	.T. //Enviar ou nao base de Pis e Cofins dependendo do codigo de CST.
											Local 	cUltBx			:= ""
											Local lAplSped 		:= SuperGetMv("MV_APLFIN",,.F.) //Habilita o envio das Aplicacoes financeiras.
											Local aAlias				:= If(lAplSped,{"SE5","SEI"},{"SE5"})
											Local nA					:= 	0
											Local aAreaSC5 	:= SC5->(GetArea())
											Local 	nTxMoeda	:=	nMoeda	:=	0
											Local	cTpApl			:=	""
											Local 	aRegApl		:= 	{}
											Local cNatApl			:= SuperGetMv("MV_APLNAT",,"") 	//Codigo da Natureza das Aplicacoes Financeiras.
											Local lSEI_				:= SuperGetMv("MV_APLAPRO",,.F.) //Habilita o envio das Aplicacoes financeiras.
											Local cChaveApl	:=	""
											Local 	nVrJuros	:=	nRegApl	:=	0
											Local cChaveSE5	:= 	""
											Local lSpdOrig	:=	ExistBlock("SPDF1003")
											Local cOrigem	:= ""

											If lSpdOrig
												cOrigem := ExecBlock ("SPDF1003",.F.,.F.)
											Endif

											If !Empty(cMotBx) // Para o parametro MV_MTBXSD
												cMotBx				:=	SpdVldVar(cMotBx)
												#IFDEF TOP
													cBxSql	+=""
													cBaixa	:=	""
													For nI:=1 To Len(cMotBx)
														If Subst(cMotBx,nI,1) $ ";,-_|./"
															If !Empty(cBaixa)
																nJ :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper(Substr(cBaixa,2,3)) })
																If nJ >0 .And. Substr(aMotBx[nJ],26,01) == "N" //Nao movimenta banco.
																	If !Empty(cBxSql)
																		cBxSql	+= ",'"
																	Else
																		cBxSql	+= "'"
																	Endif
																	cBxSql	+= Substr(cBaixa,2,3) + "'"
																Endif
																cBaixa	:=	""
															Endif
														Else
															cBaixa+=Subst(cMotBx,nI,1)
														Endif
													Next
													If !Empty(cBaixa)
														If !Empty(cBxSql)
															cBxSql	+= ",'"
														Else
															cBxSql	+= "'"
														Endif
														cBxSql	+= Substr(cBaixa,2,3)
													Endif
													cBxSql	+=	"'"
												#EndIf
											Endif

											If lBxSped //Verificando naturezas das receitas tributaveis...
												If !SED->(DbSeek(xFilial("SED")+ cNatRec))
													aNatNTrib	:=	{}
												Else
													Aadd(aNatNTrib,{SED->ED_CODIGO,SED->ED_CSTPIS,SED->ED_APURPIS,SED->ED_PCAPPIS,SED->ED_CSTCOF,SED->ED_APURCOF,SED->ED_PCAPCOF,;
														SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC,;
														SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ)})
												Endif
											Endif

											#IFNDEF TOP
												If SED->(FieldPos("ED_APURCOF")) <= 0 .Or.	SED->(FieldPos("ED_APURPIS")) <= 0 .Or. SED->(FieldPos("ED_PCAPPIS")) <= 0 .Or.;
														SED->(FieldPos("ED_PCAPCOF")) <= 0 .Or.	SED->(FieldPos("ED_CSTPIS")) <= 0 .Or. SED->(FieldPos("ED_CSTCOF")) <= 0 .Or.;
														SED->(FieldPos("ED_CLASFIS")) <= 0 .Or.	SED->(FieldPos("ED_TABCCZ")) <= 0 .Or. SED->(FieldPos("ED_CODCCZ")) <= 0 .Or.;
														SED->(FieldPos("ED_GRUCCZ")) <= 0 .Or.	SED->(FieldPos("ED_DTFCCZ")) <= 0 .Or. SED->(FieldPos("ED_INDCMLT")) <= 0 .Or.;
														SED->(FieldPos("ED_INDRET")) <= 0
													Return aReturn
												Endif
											#EndIf

											For nA:= 1 to Len(aAlias)

												If aAlias[nA] == "SE5"
													cAlias	:= "SE5QRY"
												Elseif aAlias[nA] == "SEI"
													cAlias	:= "SEIQRY"
												Endif

												If aAlias[nA] == "SE5"

													SE5 -> ( dbSetOrder ( 1 ) ) //FILIAL+DTOS(DATA)...

													#IFNDEF TOP

														//***********************************************************************
														// ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
														// ³ Cria o arquivo de trabalho ³
														// ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
														aStructTRB := {}
														aTam:=TamSX3("E5_FILIAL")
														AADD(aStructTRB,{"FILIAL"  	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_PREFIXO")
														AADD(aStructTRB,{"PREFIXO"    ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_NUMERO")
														AADD(aStructTRB,{"NUMERO"   	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_PARCELA")
														AADD(aStructTRB,{"PARCELA" 	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_TIPO")
														AADD(aStructTRB,{"TIPO"   		,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_CLIFOR")
														AADD(aStructTRB,{"CLIENTE" 	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_LOJA")
														AADD(aStructTRB,{"LOJA"   		,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_TIPODOC")
														AADD(aStructTRB,{"TIPODOC"  	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_MOTBX")
														AADD(aStructTRB,{"MOTBX"  		,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_DATA")
														AADD(aStructTRB,{"DTMOV" 		,"C",8,0})
														aTam:=TamSX3("E5_VALOR")
														AADD(aStructTRB,{"VALOR"   	,"N",aTam[1],aTam[2]})
														AADD(aStructTRB,{"NROREG"  	,"N",4,0})
														AADD(aStructTRB,{"ORIFIN"  	,"L",1,0})
														aTam:=TamSX3("E1_ORIGEM")
														AADD(aStructTRB,{"ORIGEM"   	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_NATUREZ")
														AADD(aStructTRB,{"NATUREZ"  	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_SALDO")
														AADD(aStructTRB,{"SALDO"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_MOEDA")
														AADD(aStructTRB,{"TPMOEDA"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_PIS")
														AADD(aStructTRB,{"PIS"   		,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_COFINS")
														AADD(aStructTRB,{"COFINS"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_CSLL")
														AADD(aStructTRB,{"CSLL"   		,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_INSS")
														AADD(aStructTRB,{"INSS"    	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_IRRF")
														AADD(aStructTRB,{"IRRF"    	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_ISS")
														AADD(aStructTRB,{"ISS"   		,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_VALOR")
														AADD(aStructTRB,{"VALORE1"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_VLCRUZ")
														AADD(aStructTRB,{"VLCRUZ"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_BASEIRF")
														AADD(aStructTRB,{"BASEIRF"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_DESDOBR")
														AADD(aStructTRB,{"DESDOBR"   ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_SERIE")
														AADD(aStructTRB,{"SERIE"  		,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_CSTPIS")
														AADD(aStructTRB,{"CSTPIS" 		,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_PCAPPIS")
														AADD(aStructTRB,{"PCAPPIS"   ,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_CSTCOF")
														AADD(aStructTRB,{"CSTCOF"  	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_PCAPCOF")
														AADD(aStructTRB,{"PCAPCOF"   ,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_CONTA")
														AADD(aStructTRB,{"CONTA"  		,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_CODIGO")
														AADD(aStructTRB,{"CODIGO" 		,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_TABCCZ")
														AADD(aStructTRB,{"ED_TABCCZ"  ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_CODCCZ")
														AADD(aStructTRB,{"ED_CODCCZ"  ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_GRUCCZ")
														AADD(aStructTRB,{"ED_GRUCCZ"  ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("ED_DTFCCZ")
														AADD(aStructTRB,{"ED_DTFCCZ"  ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_EMISSAO")
														AADD(aStructTRB,{"EMISSAO"  	,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_VRETPIS")
														AADD(aStructTRB,{"VRETPIS"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_VRETCOF")
														AADD(aStructTRB,{"VRETCOF"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_VRETCSL")
														AADD(aStructTRB,{"VRETCSL"   	,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_VLDESCO")
														AADD(aStructTRB,{"VLDESCO"   ,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_VLMULTA")
														AADD(aStructTRB,{"VLMULTA"   ,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_VLJUROS")
														AADD(aStructTRB,{"VLJUROS"   ,"N",aTam[1],aTam[2]})
														aTam:=TamSX3("E5_DOCUMEN")
														AADD(aStructTRB,{"DOCUMEN"   ,"C",aTam[1],aTam[2]})
														aTam:=TamSX3("E1_PEDIDO")
														AADD(aStructTRB,{"PEDIDO"   ,"C",aTam[1],aTam[2]})

														If lTpDesc
															aTam:=TamSX3("E1_TPDESC")
															AADD(aStructTRB,{"TPDESC"   ,"C",aTam[1],aTam[2]})
														Endif

														If lSE1Proc
															aTam:=TamSX3("E1_NUMPRO")
															AADD(aStructTRB,{"NUMPRO"   ,"C",aTam[1],aTam[2]})
															aTam:=TamSX3("E1_INDPRO")
															AADD(aStructTRB,{"INDPRO"   ,"C",aTam[1],aTam[2]})
														Endif

													#EndIf

													#IFDEF TOP
														F500Top(lNRastDSD,cDataIni,cDataFim,cMotBx,lBxSped,aNatNTrib,cBxSql,cAlias)
													#ELSE
														F500DBF(lNRastDSD,cDataIni,cDataFim,cMotBx,lBxSped,aNatNTrib,cBxSql,aMotBx,aStructTRB,cAlias)
													#ENDIF

													dbSelectArea(cAlias)

													#IFNDEF TOP
														(cAlias)->(Dbgotop())
													#ENDIF

													While !(cAlias)->(Eof())

														//Conforme definicao do Fiscal somente titulos com natureza configurada para realizar apuracao de PIS e COFINS.
														If AllTrim((cAlias)->ORIGEM) $ "FINA040_FINA050_FINA280_FINA290_FINA565_FINA460_MATA460_"+Alltrim(cOrigem)
															If !Empty((cAlias)->CODIGO) //CODIGO NATUREZA
																If Empty( (cAlias)->APURCOF ) .And. Empty( (cAlias)->APURPIS )
																	(cAlias)->(Dbskip())
																	Loop
																Endif
															Endif
														Else
															(cAlias)->(Dbskip())
															Loop
														Endif

														aTitRet		:= {} //Tratamento para Titulos retidos em outro
														lTitRet		:=	.F.

														If	(cAlias)->TIPODOC $ "DC_D2" .And. !lDescApl
															(cAlias)->( dbSkip() )
															Loop
														Endif

														If 	(cAlias)->TIPODOC = 'CP'  	//Compensacao com NCC nao deve ser enviada.
															cChaveSE5	:=(cAlias)->PREFIXO+	(cAlias)->NUMERO+(cAlias)->PARCELA+(cAlias)->TIPO+(cAlias)->LOJA
															SE5->(Dbsetorder(10)) // E5_FILIAL+E5_DOCUMEN
															If SE5->(Dbseek(xFilial("SE5")+ cChaveSE5)) .And. SE5->E5_TIPO $ MV_CRNEG
																(cAlias)->(dbSkip())
																Loop
															Endif
														Endif

														If (cAlias)->VALORE1 <= nVlMinImp //titulo seja retido em outro
															SFQ->(DbSetOrder(2)) // FQ_FILIAL+FQ_ENTDES+FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES
															If SFQ->(DbSeek(xFilial("SFQ")+Iif(lPCCBaixa,"E1B","SE1")+ (cAlias)->PREFIXO + (cAlias)->NUMERO + (cAlias)->PARCELA + (cAlias)->TIPO + (cAlias)->CLIENTE + (cAlias)->LOJA ))
																Aadd(aTitRet,{(xFilial("SE1") + SFQ->FQ_PREFORI + SFQ->FQ_NUMORI + SFQ->FQ_PARCORI + SFQ->FQ_TIPOORI + SFQ->FQ_CFORI+ SFQ->FQ_LOJAORI),;
																	(cAlias)->PIS,(cAlias)->COFINS,(cAlias)->CSLL,(cAlias)->IRRF,(cAlias)->ISS,(cAlias)->INSS})
																lTitRet	:=	.T.
															Endif
														Endif

														lRetSFQ		:=.F. //Retem valores de impostos de outros titulos.
														SFQ->(DbSetOrder(1)) // FQ_FILIAL + FQ_ENTORI + FQ_PREFORI + FQ_NUMORI + FQ_PARCORI + FQ_TIPOORI + FQ_CFORI + FQ_LOJAORI

														If SFQ->(DbSeek(xFilial("SFQ")+Iif(lPCCBaixa,"E1B","SE1")+ (cAlias)->PREFIXO + (cAlias)->NUMERO + (cAlias)->PARCELA + (cAlias)->TIPO + (cAlias)->CLIENTE + (cAlias)->LOJA))
															lRetSFQ	:=	.T.
														Endif

														cChaveBx		:=		((cAlias)->FILIAL + (cAlias)->PREFIXO + (cAlias)->NUMERO + (cAlias)->PARCELA + (cAlias)->TIPO + (cAlias)->CLIENTE + (cAlias)->LOJA)
														nJurosBx		:=	 	nMultaBx	:=	nDescBx		:=		nDescInc	:=		nVlrSe5		:=		nTotBaixa	:=	0
														nTpMoeda	:=		(cAlias)->TPMOEDA
														aRegBx			:=		{}
														nVrPIS			:=		nVrCOFINS	:=	nVrCSLL :=	nVrIR	:=	nVrISS :=	nVrINSS	:=	nVrRetOld	:=	nVrRetAnt	:=	0
														nVrSevPIS	:=		nVrSevCOF	:=	nVrSevCSLL 	:=	nVrSev		:=	nDescSev	:=	nMultaSev	:=	nJurosSev	:=	0

														SA1->( Dbseek( xFilial("SA1") + (cAlias)->CLIENTE + (cAlias)->LOJA ) )
														While  !(cAlias)->(EoF()) .AND. cChaveBx ==  ( (cAlias)->FILIAL+ (cAlias)->PREFIXO + (cAlias)->NUMERO + (cAlias)->PARCELA + (cAlias)->TIPO + (cAlias)->CLIENTE + (cAlias)->LOJA )

															If (cAlias)->TIPODOC $ "JR_MT_J2_M2_DC_CM_D2_C2"	 //Conforme definido pelo Fiscal as receitas nao tributaveis nao devem ser enviadas neste bloco.
																(cAlias)->(Dbskip())
																Loop
															Endif

															nDescInc	:=	(cAlias)->VLDESCO
															nMultaBx 	:=	(cAlias)->VLMULTA
															nJurosBx	:=	(cAlias)->VLJUROS
															lRecIss := (SA1->A1_RECISS == "1" .And. lMVDescIss)

															If !Empty((cAlias)->PEDIDO) .And. Alltrim((cAlias)->ORIGEM) == "MATA460"
																SC5->(Dbsetorder(3)) //C5_FILIAL+C5_CLIENTE+C5_LOJACLI+C5_NUM
																If SC5->(Dbseek(xFilial("SC5") + (cAlias)->CLIENTE + (cAlias)->LOJA + (cAlias)->PEDIDO )) .And. !Empty(SC5->C5_RECISS)
																	lRecIss := (SC5->C5_RECISS == "1" .And. lMVDescIss)
																Endif
															Endif

															nVrPIS			:=	(cAlias)->PIS
															nVrCOFINS	:=	(cAlias)->COFINS
															nVrCSLL		:=	(cAlias)->CSLL
															nVrIR				:=	(cAlias)->IRRF
															nVrISS			:=	(cAlias)->ISS
															nVrINSS		:=	(cAlias)->INSS
															nVRDESC 	:= 	0
															If lRetSFQ .And. !lTitRet //.And. (lPccBaixa .Or. (!lPccBaixa .And. !Empty((cAlias)->PRETPIS) .And. !Empty((cAlias)->PRETCOF) .And. !Empty((cAlias)->PRETCSL)))
																For nI:= 1 To Len(aTitRet)
																	If aTitRet[nI,1] == (xFilial("SE1")+ (cAlias)->PREFIXO + (cAlias)->NUMERO + (cAlias)->PARCELA + (cAlias)->TIPO + (cAlias)->CLIENTE + (cAlias)->LOJA )
																		nVrPIS		-=	aTitRet[nI,2]
																		nVrCOFINS	-=	aTitRet[nI,3]
																		nVrCSLL		-=	aTitRet[nI,4]
																		nVrIR			-=	aTitRet[nI,5]
																		nVrISS		-=	aTitRet[nI,6]
																		nVrINSS		-=	aTitRet[nI,7]
																	Endif
																Next
															Endif

															If (cAlias)->MOTBX $ cMotBx .AND. Month(Stod((cAlias)->EMISSAO))==Month(Stod((cAlias)->DTMOV))
																nVRDESC := (cAlias)->VALOR
															Endif

															If  !((cAlias)->TIPODOC $ "JR_MT_J2_M2_DC_CM_D2_C2")

																nVlrSe5				:=	(cAlias)->VALOR
																nTxMoeda		:= 1
																nTotBaixa	++
																nVrSevPIS		+=	(cAlias)->VRETPIS
																nVrSevCOF		+= 	(cAlias)->VRETCOF
																nVrSevCSLL 	+=	(cAlias)->VRETCSL
																nVrSev				+= (cAlias)->VALOR
																nDescSev			+= (cAlias)->VLDESCO
																nMultaSev		+= (cAlias)->VLMULTA
																nJurosSev			+= (cAlias)->VLJUROS

																aAreaSEV := SEV->(GetArea())
																DbSelectArea("SEV")
																DbSetOrder(1)	//Verificar se o titulo possui multiplas naturezas.
																If	SEV->(DbSeek(xFilial("SEV")+(cAlias)->PREFIXO+(cAlias)->NUMERO+(cAlias)->PARCELA+(cAlias)->TIPO+(cAlias)->CLIENTE+(cAlias)->LOJA))
																	While SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA) ==;
																			((cAlias)->PREFIXO+(cAlias)->NUMERO+(cAlias)->PARCELA+(cAlias)->TIPO+(cAlias)->CLIENTE+(cAlias)->LOJA) .And. !SEV->(EOF())

																		nVrRateio:=	0
																		If nTpMoeda > 1
																			nTxMoeda	:= (cAlias)->VLCRUZ/(cAlias)->VALORE1
																		Endif

																		If SEV->EV_IDENT <> "1" // 1=Rateio de Inclusao 2=Rateio de Baixa
																			SEV->(Dbskip())
																			Loop
																		Endif

																		cUltBx	:= "N"

																		aAreaSED := SED->(GetArea())
																		DbSelectArea("SED")
																		DbSetOrder(1)
																		If SED->(DbSeek(xFilial("SED")+ SEV->EV_NATUREZ)) 	.And.	(!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))

																			nVrRateio	:=	SEV->EV_PERC

																			If (cAlias)->VALORE1= nVrSev
																				cUltBx	:= "S"
																			ElseIf (cAlias)->VALORE1= (nVrSev+(cAlias)->PIS+(cAlias)->COFINS+(cAlias)->CSLL +(cAlias)->IRRF + (cAlias)->INSS + Iif(lRecIss,(cAlias)->ISS,0)+ ;
																					Iif( (cAlias)->SALDO == 0, 	nDescSev,0) - Iif( (cAlias)->SALDO == 0, (nJurosSev+nMultaSev),0))
																				cUltBx	:= "S"
																			ElseIf (cAlias)->VALORE1 + (cAlias)->VLJUROS+(cAlias)->VLMULTA= (nVrSev+(cAlias)->PIS+(cAlias)->COFINS+(cAlias)->CSLL+;
																					(cAlias)->IRRF + (cAlias)->INSS + Iif(lRecIss,(cAlias)->ISS,0)  + Iif( (cAlias)->SALDO == 0, 	nDescSev,0) -Iif( (cAlias)->SALDO == 0, (nJurosSev+nMultaSev),0) )
																				cUltBx	:= "S"
																			Endif

																			AaDd(aRegBx,{(cAlias)->FILIAL,(cAlias)->PREFIXO,(cAlias)->NUMERO,(cAlias)->PARCELA,(cAlias)->TIPO,;   //5
																			(cAlias)->CLIENTE,(cAlias)->LOJA,(cAlias)->DTMOV,(cAlias)->NROREG,SED->ED_CODIGO,(cAlias)->ORIGEM,;     //11
																			SED->ED_CSTPIS,SED->ED_PCAPPIS,SED->ED_CSTCOF,SED->ED_PCAPCOF,;       //15
																			((SEV->EV_VALOR*nTxMoeda)*SED->ED_PCAPPIS)/100,((SEV->EV_VALOR*nTxMoeda)*SED->ED_PCAPCOF)/100,nVrCSLL,SEV->EV_VALOR,;  //19
																			SED->ED_PERCPIS,SED->ED_PERCCOF,	(cAlias)->SALDO,nVrIR,If(lRecIss, nVrISS,0),nVrINSS,(cAlias)->VLCRUZ,;     //26
																			If((cAlias)->DESDOBR = "1",(cAlias)->VALOR,(cAlias)->BASEIRF),;    //27
																				Iif(lRetSFQ,((cAlias)->PIS+(cAlias)->COFINS+(cAlias)->CSLL+(cAlias)->IRRF+Iif(lRecIss,(cAlias)->ISS,0)+(cAlias)->INSS),0),; //28
																				"1",nVrPIS,nVrCOFINS,nVrCSLL,nVrRateio,Round((nVlrSe5 * nVrRateio),2),(cAlias)->TIPODOC,SED->ED_CONTA,(cAlias)->DESDOBR,(cAlias)->SERIE,;      //38
																				(cAlias)->ED_TABCCZ,(cAlias)->ED_CODCCZ,(cAlias)->ED_GRUCCZ,(cAlias)->ED_DTFCCZ,(cAlias)->EMISSAO,;   //43
																				(cAlias)->VALOR,(nJurosBx*nVrRateio),(nMultaBx*nVrRateio),nVRDESC,(nDescInc*nVrRateio),(cAlias)->VRETPIS,(cAlias)->VRETCOF,(cAlias)->VRETCSL,; //51
																				Iif(lTpDesc,(cAlias)->TPDESC,""),(cAlias)->MOTBX,;     //53
																				Iif(lSE1Proc,(cAlias)->NUMPRO,""),Iif(lSE1Proc,(cAlias)->INDPRO,""),; //55
																				cUltBx,(cAlias)->PRETPIS,(cAlias)->PRETCOF,(cAlias)->PRETCSL})  //56 Identifica se trata-se da ultima baixa em multiplas naturezas.

																			Endif
																			RestArea(aAreaSED)
																			SEV->(Dbskip())
																		Enddo
																		RestArea(aAreaSEV)
																	Else //Nao trata de multiplas naturezas
																		aAreaSED := SED->(GetArea())
																		DbSelectArea("SED")
																		DbSetOrder(1)
																		If !Empty((cAlias)->NATUREZ) .And. SED->(DbSeek(xFilial("SED")+ (cAlias)->NATUREZ)) .And. (!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))
																			nVrRet	:=	0
																			If lRetSFQ
																				If lPCCBaixa
																					If (cAlias)->VRETCOF > 0 .And. ((cAlias)->VRETCOF/SED->ED_PERCCOF)*100 > nVlMinImp //retem cofins e valor retido maior que minimo para retencao titulo com varias baixas
																						nVrRetAnt := (cAlias)->VRETPIS+(cAlias)->VRETCOF+(cAlias)->VRETCSL
																					Endif
																					If (cAlias)->VRETPIS > 0 .And. ((cAlias)->VRETPIS/SED->ED_PERCPIS)*100> nVlMinImp //retem cofins e valor retido maior que minimo para retencao titulo com varias baixas
																						nVrRetAnt := (cAlias)->VRETPIS+(cAlias)->VRETCOF+(cAlias)->VRETCSL
																					Endif
																					nVrRetOld	+=  nVlrSe5	+	(cAlias)->VRETPIS+(cAlias)->VRETCOF+(cAlias)->VRETCSL
																					If (nVrRetOld	+  (cAlias)->IRRF + (cAlias)->INSS + Iif(lRecIss,(cAlias)->ISS,0))  = (cAlias)->VALORE1 .And. nTotBaixa > 1 //titulo possui mais de uma baixa porem trata se da ultima
																						nVrRet	:= nVrRetAnt
																					Endif
																					nVrRet	:=	nVrRet	+	(cAlias)->VRETPIS+(cAlias)->VRETCOF+(cAlias)->VRETCSL
																				Else
																					nVrRet	:= (cAlias)->PIS+(cAlias)->COFINS+(cAlias)->CSLL
																				Endif
																			Endif

																			nVrRet	:= nVrRet + (cAlias)->IRRF + (cAlias)->INSS + Iif(lRecIss,(cAlias)->ISS,0)

																			AaDd(aRegBx,{(cAlias)->FILIAL,; //1
																			(cAlias)->PREFIXO,; //2
																			(cAlias)->NUMERO,; //3
																			(cAlias)->PARCELA,; //4
																			(cAlias)->TIPO,;         //5
																			(cAlias)->CLIENTE,;   //6
																			(cAlias)->LOJA,; //7
																			(cAlias)->DTMOV,; //8
																			(cAlias)->NROREG,; //9
																			SED->ED_CODIGO,(cAlias)->ORIGEM,; // 10 e 11
																			SED->ED_CSTPIS, SED->ED_PCAPPIS,; //12 e 13
																			SED->ED_CSTCOF, SED->ED_PCAPCOF,; //14 e 15
																			nVrPIS,nVrCOFINS,nVrCSLL,; // 16, 17 e 18
																			(cAlias)->VALORE1,SED->ED_PERCPIS,SED->ED_PERCCOF,; // 19, 20 e 21
																			(cAlias)->SALDO,nVrIR,If(lRecIss, nVrISS,0),nVrINSS,(cAlias)->VLCRUZ,; // 22 a 26
																			If((cAlias)->DESDOBR = "1",(cAlias)->VALOR,(cAlias)->BASEIRF),;  // 27
																				nVrRet,; // 28
																				"2",0,0,0,; // 29 a 33
																				nVrRateio,nVlrSe5,; //33 e 34
																				(cAlias)->TIPODOC,SED->ED_CONTA,(cAlias)->DESDOBR,(cAlias)->SERIE,; // 35 a 38
																				SED->ED_TABCCZ,SED->ED_CODCCZ,SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),; // 39 a 42
																				(cAlias)->EMISSAO,;	// 43
																				(cAlias)->VALOR,; // 44
																				nJurosBx,nMultaBx,nVRDESC,nDescInc,; // 45 a 48
																				(cAlias)->VRETPIS,(cAlias)->VRETCOF,(cAlias)->VRETCSL,; // 49 a 51
																				Iif(lTpDesc,(cAlias)->TPDESC,""),(cAlias)->MOTBX,Iif(lSE1Proc,(cAlias)->NUMPRO,""),Iif(lSE1Proc,(cAlias)->INDPRO,""),"",;
																					(cAlias)->PRETPIS,(cAlias)->PRETCOF,(cAlias)->PRETCSL})

																			Elseif Empty( (cAlias)->NATUREZ )
																				AaDd(aRegBx,{	(cAlias)->FILIAL,; // 1
																				(cAlias)->PREFIXO,; // 2
																				(cAlias)->NUMERO,; // 3
																				(cAlias)->PARCELA,; // 4
																				(cAlias)->TIPO,; // 5
																				(cAlias)->CLIENTE,; // 6
																				(cAlias)->LOJA,; // 7
																				(cAlias)->DTMOV,; // 8
																				(cAlias)->NROREG,; // 9
																				"" /*SED->ED_CODIGO*/,; // 10
																				(cAlias)->ORIGEM ,; // 11
																				"" /*SED->ED_CSTPIS*/ ,; // 12
																				"" /*SED->ED_PCAPPIS*/,; // 13
																				"" /*SED->ED_CSTCOF*/,; // 14
																				"" /*SED->ED_PCAPCOF*/,; // 15
																				nVrPIS,; // 16
																				nVrCOFINS,; // 17
																				nVrCSLL,; // 18
																				(cAlias)->VALORE1,; // 19
																				0 /*SED->ED_PERCPIS*/,; // 20
																				0 /*SED->ED_PERCCOF*/,; // 21
																				(cAlias)->SALDO,; // 22
																				nVrIR,; // 23
																				If(lRecIss, nVrISS,0),; // 24
																					nVrINSS,; // 25
																					(cAlias)->VLCRUZ,;// 26
																					Iif( (cAlias)->DESDOBR == "1", (cAlias)->VALOR, (cAlias)->BASEIRF ),; // 27
																					Iif( lRetSFQ, ( (cAlias)->PIS+(cAlias)->COFINS+(cAlias)->CSLL+(cAlias)->IRRF+(cAlias)->INSS+;
																						Iif(lRecIss,(cAlias)->ISS,0)),0),; // 28
																					"2",; // 29
																					0,; // 30
																					0,; // 31
																					0,; // 32
																					nVrRateio,; // 33
																					nVlrSe5,; // 34
																					(cAlias)->TIPODOC,; // 35
																					"" /*SED->ED_CONTA*/ ,; // 36
																					(cAlias)->DESDOBR,; // 37
																					(cAlias)->SERIE,; //38
																					(cAlias)->ED_TABCCZ,; //39
																					(cAlias)->ED_CODCCZ,; //40
																					(cAlias)->ED_GRUCCZ,; //41
																					(cAlias)->ED_DTFCCZ,; //42
																					(cAlias)->EMISSAO,;//43
																					(cAlias)->VALOR,;//44 valor movimento
																					nJurosBx,;//45 valor juros
																					nMultaBx,;//46 valor multa
																					nVRDESC,;//47 valor desconto
																					nDescInc,;//48 valor desconto incondicional
																					(cAlias)->VRETPIS,;//49 valor retido do PIS
																					(cAlias)->VRETCOF,;//50 valor retido do COFINS
																					(cAlias)->VRETCSL, ;//51 valor retido do CSL
																					Iif(lTpDesc,(cAlias)->TPDESC,""),;//52 tipo de desconto
																					(cAlias)->MOTBX,;//53 motivo de baixa
																					Iif(lSE1Proc,(cAlias)->NUMPRO,""),;//54 Nro Processo Referencial
																					Iif(lSE1Proc,(cAlias)->INDPRO,""),;//55 Tipo Processo Referencial
																					"",; //56 Campo especifico para multiplas naturezas
																					(cAlias)->PRETPIS,; //57 Status de Retenção do PIS
																					(cAlias)->PRETCOF,; //58 Status de Retenção do COFINS
																					(cAlias)->PRETCSL}) //59 Status de Retenção do CSLL
																				Endif

																				RestArea(aAreaSED)
																			Endif
																		Endif
																		(cAlias)->(Dbskip())
																	Enddo

																	nTotBx 			:=	nTotPis		:=	nTotCof		:=	nTotCsll		:=	0
																	nJurosBx		:=	 nMultaBx	:=	nDescInc	:=	0

																	For nI	:=	1 TO Len(aRegBx)

																		lEnvBase	:=	.T.
																		nVrPcc		:=	0

																		(cAliasF500)->(DbAppend())
																		(cAliasF500)->FILIAL		:=	aRegBx[nI,1] //FILIAL
																		(cAliasF500)->PREFIXO	:=	aRegBx[nI,2] //PREFIXO
																		(cAliasF500)->NUMERO		:=	aRegBx[nI,3] //NUMERO
																		(cAliasF500)->PARCELA	:=	aRegBx[nI,4] //PARCELA
																		(cAliasF500)->TIPO		:=	aRegBx[nI,5] //TIPO
																		(cAliasF500)->CLIENTE	:=	aRegBx[nI,6] //CLIENTE
																		(cAliasF500)->LOJA		:=	aRegBx[nI,7] //LOJA
																		(cAliasF500)->DTMOV    	:=	aRegBx[nI,8] //DATA
																		(cAliasF500)->TABELA	  	:=	"SE5"        //TABELA SE5
																		(cAliasF500)->NROREG   	:=	aRegBx[nI,9] //RECNO
																		(cAliasF500)->ORIGEM		:=	aRegBx[nI,11] //ORIGEM
																		(cAliasF500)->SERIE		:=	aRegBx[nI,38] //SERIE
																		(cAliasF500)->ORIFIN    := ( Alltrim(aRegBx[nI,11]) != "MATA460" ) // Envio (.F.) para titulos que possuem notas fiscais.
																		(cAliasF500)->EMISSAO	:= aRegBx[nI,43] // SE1 E1_EMISSAO

																		If aRegBx[nI,29] = "1"
																			nVlrSe5  	:= aRegBx[nI,34]
																		Else
																			nVlrSe5  	:= aRegBx[nI,44]
																			(cAliasF500)->VALORE1	:= aRegBx[nI,19]
																			(cAliasF500)->VALOR			:= aRegBx[nI,34]
																		Endif

																		If aRegBx[nI,29] = "1" .And. Len(aRegBx) = 1
																			nJurosBx		+= 	aRegBx[nI,45]
																			nMultaBx		+= 	aRegBx[nI,46]
																			nDescInc		+=	aRegBx[nI,48]
																		ElseIf aRegBx[nI,29] <> "1"
																			nJurosBx		:= 	aRegBx[nI,45]
																			nMultaBx		:= 	aRegBx[nI,46]
																			nDescInc		:=	aRegBx[nI,48]
																		Endif

																		nPisBx	:=	0
																		nCofBx	:=	0
																		nBase		:= 0
																		nPercBx	:= 0
																		lRetSe5	:=	.F.

																		If aRegBx[nI,29] = "1"    //Multiplas naturezas.

																			nVrPcc		:= 0
																			If aRegBx[nI,22]  == 0 		//Titulo baixado totalmente
																				If	 aRegBx[nI,56] = "S" .Or.  nTpMoeda > 1
																					nVrPcc		:= ( (aRegBx[nI,30]+aRegBx[nI,31]+aRegBx[nI,32]+aRegBx[nI,23]+aRegBx[nI,24]+aRegBx[nI,25])*aRegBx[nI,33]) //impostos (pcc+ir+inss+iss)
																				Endif
																			Endif

																			nPercBx	:=	(nVlrSe5 + nVrPcc )

																			If  Len(aRegBx) = 1
																				(cAliasF500)->VALORE1	+= aRegBx[nI,34] + nVrPcc + 	Iif(aRegBx[nI,56] = "S" ,(nDescInc  -  (nJurosBx + nMultaBx) ),0)
																			Else
																				(cAliasF500)->VALORE1	+= aRegBx[nI,34] + nVrPcc + 	Iif(aRegBx[nI,56] = "S" ,(nDescSev*aRegBx[nI,33]) -  ((nJurosSev + nMultaSev)* aRegBx[nI,33] ),0)
																			Endif

																			If lTpDesc .Or. nDescInc > 0
																				If aRegBx[nI,52] <> "I"	 .And. aRegBx[nI,56] = "S"
																					If  Len(aRegBx) = 1
																						nPercBx += nDescInc
																					Else
																						nPercBx  += (nDescSev*aRegBx[nI,33])
																						nPercBx	:= nPercBx - ((nJurosSev + nMultaSev)* aRegBx[nI,33] )
																					Endif
																				Else
																					If !lPccBaixa
																						nPercBx -= nDescInc
																					Endif
																				Endif
																			Endif

																			nPercBx	:=	(((nPercBx) *100)/If(nTpMoeda>1,aRegBx[nI,19]*nTxMoeda,aRegBx[nI,19]))

																			If nTpMoeda > 1
																				nPercBx	:= (nPercBx)/nTxMoeda
																			Endif

																		ElseIf aRegBx[nI,22] > 0 		//Titulo nao baixado totalmente

																			nPercBx	:=	nVlrSe5

																			If lTpDesc .Or. nDescInc > 0
																				nPercBx -= nDescInc
																			Endif

																			nPercBx	:=	nPercBx -  (nJurosBx + nMultaBx)

																			If Alltrim((cAliasF500)->ORIGEM) = "MATA460"
																				nBase	:= nPercBx
																			Endif

																			nPercBx	:=	((nPercBx*100)/ If(nTpMoeda>1,aRegBx[nI,26],aRegBx[nI,19]))

																			(cAliasF500)->VALOR		:= (cAliasF500)->VALOR - (nJurosBx + nMultaBx+nDescInc)

																		Else// baixa total ou ultima baixa do titulo precisa acrescentar o valor dos impostos descontados na movimentacao do SE5

																			nPercBx	:=	0
																			nTotBx	:= nTotBx + 1

																			If nTpMoeda > 1
																				nPercBx	:=	((( aRegBx[nI,26]) *100)/ aRegBx[nI,26])
																			Else
																				If aRegBx[nI,20] > 0 .And. aRegBx[nI,49] > 0 //Retencao de PIS
																					lRetSe5	:=	Iif( ((nVlrSe5*aRegBx[nI,20])/100 == aRegBx[nI,49]) ,.T.,.F.)
																				ElseIf aRegBx[nI,21] > 0 .And. aRegBx[nI,50] > 0 //Retencao de COFINS
																					lRetSe5	:=	Iif( ((nVlrSe5*aRegBx[nI,21])/100 == aRegBx[nI,50]) ,.T.,.F.)
																				Endif

																				nPercBx	:=	nVlrSe5

																				If !(lTitRet .And. lRetSFQ .And. nTotBx <> nTotBaixa )
																					If lPccBaixa
																						nTotPis	:=	nTotPis + aRegBx[nI,49]
																						nTotCof	:=	nTotCof + aRegBx[nI,50]
																						nTotCsll	:=	nTotCsll	+	aRegBx[nI,51]
																					Else
																						nTotPis	:=	nTotPis + aRegBx[nI,16]
																						nTotCof	:=	nTotCof + aRegBx[nI,17]
																						nTotCsll	:=	nTotCsll	+	aRegBx[nI,18]
																					Endif
																				Endif

																				If !lTitRet .And. !lRetSFQ .And. !lRetSe5
																					If	nTotBx = nTotBaixa
																						If lPccBaixa
																							nPercBx	:=	nPercBx 	+ ( Iif(Alltrim((cAliasF500)->ORIGEM) == "FINA280" , 0 ,nTotPis+nTotCof+nTotCsll)+aRegBx[nI,23]+aRegBx[nI,24]+aRegBx[nI,25])
																							(cAliasF500)->VALOR		+=  ( Iif(Alltrim((cAliasF500)->ORIGEM) == "FINA280" , 0 ,nTotPis+nTotCof+nTotCsll)+aRegBx[nI,23]+aRegBx[nI,24]+aRegBx[nI,25])
																							If aRegBx[nI,19] <= nVlMinImp	.And. nPercBx > aRegBx[nI,19] .And. Alltrim((cAliasF500)->ORIGEM) <> "FINA280" //titulo normal com valor inferior a valor minimo
																								nPercBx	:=	nPercBx - (nTotPis+nTotCof+nTotCsll)
																								(cAliasF500)->VALOR	:= (cAliasF500)->VALOR - (nTotPis+nTotCof+nTotCsll)
																							Endif
																						Else
																							nPercBx	:=	nPercBx + (Iif((Alltrim((cAliasF500)->ORIGEM) $ "FINA460_MATA460" .Or. Alltrim(aRegBx[nI,53]) = "CMP")  .And. aRegBx[nI,19] <= nVlMinImp,0, aRegBx[nI,16]+aRegBx[nI,17]+aRegBx[nI,18])+aRegBx[nI,23]+aRegBx[nI,24]+aRegBx[nI,25])
																							(cAliasF500)->VALOR		+= (Iif((Alltrim((cAliasF500)->ORIGEM) $"FINA460_MATA460" .Or. Alltrim(aRegBx[nI,53]) = "CMP") .And. aRegBx[nI,19] <= nVlMinImp ,0,aRegBx[nI,16]+aRegBx[nI,17]+aRegBx[nI,18])+aRegBx[nI,23]+aRegBx[nI,24]+aRegBx[nI,25])
																						Endif
																					Endif
																				Endif

																				(cAliasF500)->VALOR		+= nDescInc
																				(cAliasF500)->VALOR		:= (cAliasF500)->VALOR - (nJurosBx + nMultaBx)

																				If  (lTitRet .And. nTotBx = nTotBaixa) .Or.	(lRetSFQ .And. nTotBx = nTotBaixa)
																					nPercBx	:=	nPercBx + aRegBx[nI,28]
																				Endif

																				nPercBx	:=	 (nPercBx - nJurosBx  - nMultaBx)

																				If lTpDesc .Or. nDescInc > 0
																					If aRegBx[nI,52] <> "I"
																						nPercBx += nDescInc
																					Endif
																				Endif

																				If Alltrim((cAliasF500)->ORIGEM) = "MATA460"
																					nBase	:= nPercBx
																				Endif

																				nPercBx	:=	 (nPercBx *100)/ aRegBx[nI,19]

																			Endif

																		Endif

																		If aRegBx[nI,47] > 0
																			If Alltrim(aRegBx[nI,11]) = 'MATA460'
																				nPercBx := 100
																				(cAliasF500)->PERC := 100
																			Else
																				(cAliasF500)->PERC := 0
																			Endif
																		Else
																			(cAliasF500)->PERC := Round(nPercBx,6) // Percentual
																		Endif

																		If  (	aRegBx[nI,12] $ "07_08_09_49"	.Or.	 	aRegBx[nI,14] $ "07_08_09_49")
																			lEnvBase	:=	.F.
																		Endif

																		If Alltrim(aRegBx[nI,11]) $ "FINA040_FINA050_FINA280_FINA290_FINA565_FINA460_"+Alltrim(cOrigem)

																			(cAliasF500)->ED_TABCCZ	:= aRegBx[nI,39]
																			(cAliasF500)->ED_CODCCZ	:= aRegBx[nI,40]
																			(cAliasF500)->ED_GRUCCZ	:= aRegBx[nI,41]
																			(cAliasF500)->ED_DTFCCZ	:= aRegBx[nI,42]
																			(cAliasF500)->CHVCLIENTE:= aRegBx[nI,6] + aRegBx[nI,7] // CODIGO + LOJA CLIENTE

																			If aRegBx[nI,29] == "1".Or. (aRegBx[nI,37] = "1" .And. nTotBx <> nTotBaixa)
																				nBase	:=(cAliasF500)->VALORE1
																				If nTpMoeda > 1
																					nBase := nBase * nTxMoeda
																				Endif
																			Else
																				nBase	:= Round(If(nTpMoeda>1,aRegBx[nI,26],If(aRegBx[nI,27]>0 .And. aRegBx[nI,27]>aRegBx[nI,19],aRegBx[nI,27],aRegBx[nI,19])),2)
																			Endif

																			nPisBx := Round( nBase * (aRegBx[nI,13]/100),2)
																			nCofBx := Round( nBase * (aRegBx[nI,15]/100),2)

																			If nPercBx < 100 .And. aRegBx[nI,29] <> "1"
																				nBase 	:= Round(nBase  * nPercBx,2)/100
																				nPisBx	:= Round(nPisBx * nPercBx,2)/100
																				nCofBx	:=	Round(nCofBx * nPercBx,2)/100
																			Endif

																			(cAliasF500)->NATUREZ	:=	aRegBx[nI,10]//CODIGO NATUREZA
																			(cAliasF500)->CSTPIS		:=	aRegBx[nI,12] //CST PIS
																			(cAliasF500)->ALIQPIS	:=	aRegBx[nI,13] //ALIQUOTA APURACAO PIS
																			(cAliasF500)->CSTCOF		:=	aRegBx[nI,14] //CST COFINS
																			(cAliasF500)->ALIQCOF	:=	aRegBx[nI,15] //ALIQUOTA APURACAO COFINS
																			(cAliasF500)->CONTA		:=	aRegBx[nI,36] //CONTA ANALITICA CONTABIL
																			(cAliasF500)->BASEPIS		:=	Iif(lEnvBase,nBase,0) //BASE PIS
																			(cAliasF500)->VRPIS		:=	nPisBx        //VALOR PIS
																			(cAliasF500)->BASECOF	:=	Iif(lEnvBase,nBase,0) //BASE COFINS
																			(cAliasF500)->VRCOFINS	:=	nCofBx        //VALOR COFINS

																			//Tratar cancelamento - Ainda nao foi definido pelo Fiscal.
																			(cAliasF500)->VRDESC		:= aRegBx[nI,47] //VALOD DESCONTO

																			If lSE1Proc
																				(cAliasF500)->NUMPRO	:=	aRegBx[nI,54]//Nro do Processo Referencial
																				(cAliasF500)->INDPRO	:=	aRegBx[nI,55] //Tipo do Processo Referencial
																			Endif

																		Else
																			(cAliasF500)->CSTPIS		:=	"" //CST PIS
																			(cAliasF500)->ALIQPIS	:=	0  //ALIQUOTA APURACAO PIS
																			(cAliasF500)->CSTCOF		:=	"" //CST COFINS
																			(cAliasF500)->ALIQCOF	:=	0  //ALIQUOTA APURACAO COFINS
																			(cAliasF500)->CONTA		:=	"" //CONTA ANALITICA CONTABIL
																			(cAliasF500)->BASEPIS	:=	0  //BASE PIS
																			(cAliasF500)->VRPIS		:=	0  //VALOR PIS
																			(cAliasF500)->BASECOF	:=	0  //BASE COFINS
																			(cAliasF500)->VRCOFINS	:=	0  //VALOR COFINS
																			(cAliasF500)->VRDESC		:=	aRegBx[nI,47] //VALOR DESCONTO
																			(cAliasF500)->NUMPRO		:=	"" //Nro Processo Referencial
																			(cAliasF500)->INDPRO		:=  ""	//Tipo Processo Referencial
																		Endif

																		(cAliasF500)->VRDESCON		:=	0 // Este campo foi criado por solicitacao do Fiscal para envio de valor de NCC em caso de compensacao porem depois foi definido que este valor nao deveria ser enviado pela consultoria juridica.

																		(cAliasF500)->VALORE1	:=	nBase
																		(cAliasF500)->VALOR		:=	nBase

																	Next
																	aRegBx	:=	{}
																EndDo

															Elseif aAlias[nA] == "SEI"	.And. lSEI_ .And. !Empty(cNatApl)

																#IFDEF TOP

																	F500Top(lNRastDSD,cDataIni,cDataFim,cMotBx,lBxSped,aNatNTrib,cBxSql,cAlias)

																	dbSelectArea(cAlias)

																	While !(cAlias)->(Eof())

																		lEnvBase	:=	.T.
																		nBase		:=	nPisBx	:=	nCofBx	:=	0

																		If  ((cAlias)->CSTPIS $ "07_08_09_49"	.Or.		(cAlias)->CSTCOF  $ "07_08_09_49")
																			lEnvBase	:=	.F.
																		Endif

																		nVrJuros	:=	nRegApl	:=	0
																		aRegApl		:= 	{}
																		nTxMoeda	:=	(cAlias)->TXMOEDA
																		cTpApl			:=	(cAlias)->TIPO
																		cChaveApl	:= 	(cAlias)->FILIAL+ (cAlias)->APLEMP + (cAlias)->NUMERO + (cAlias)->REVISAO + (cAlias)->SEQ
																		nMoeda			:=	(cAlias)->MOEDA

																		aAdd(aRegApl,{aAlias[nA],; // 1
																		(cAlias)->FILIAL,; //2
																		(cAlias)->APLEMP,; //3
																		(cAlias)->NUMERO,; // 4
																		(cAlias)->REVISAO,; // 5
																		(cAlias)->SEQ,; // 6
																		(cAlias)->TIPO,; // 7
																		(cAlias)->BANCO,; // 8
																		(cAlias)->AGENCIA,; // 9
																		(cAlias)->CONTA,; // 10
																		(cAlias)->NATUREZ,;  // 11
																		(cAlias)->DATA,; // 12
																		(cAlias)->CSTPIS,; // 13
																		(cAlias)->PCAPPIS,; // 14
																		(cAlias)->CSTCOF,; // 15
																		(cAlias)->PCAPCOF,; // 16
																		(cAlias)->TABCCZ,; // 17
																		(cAlias)->CODCCZ,; // 18
																		(cAlias)->GRUCCZ,; // 19
																		(cAlias)->DTFCCZ,; // 20
																		(cAlias)->CONTASED,; // 21
																		(cAlias)->RECNO}) // 22

																		While !(cAlias)->(Eof()) .And. ((cAlias)->FILIAL+ (cAlias)->APLEMP + (cAlias)->NUMERO + (cAlias)->REVISAO + (cAlias)->SEQ) = cChaveApl
																			If   (cAlias)->TIPODOC = "JR"
																				nVrJuros	+=	(cAlias)->VALOR
																			Endif
																			(cAlias)->(Dbskip())
																		Enddo

																		nBase	:=	nVrJuros

																		If  nMoeda >1  .And. Alltrim(aRegApl[1,7]) <> "CDI"
																			nBase	:= nBase	* nTxMoeda
																		Endif

																		If	aRegApl[1,14]	> 0 //Apuracao PIS
																			nPisBx := Round( nBase * ( aRegApl[1,14]/100),2)
																		Endif

																		If 	 aRegApl[1,16] >0 //Apuracao COFINS
																			nCofBx := Round( nBase * ( aRegApl[1,16]/100),2)
																		Endif

																		(cAliasF500)->(DbAppend())
																		(cAliasF500)->FILIAL				:=	aRegApl[1,2]
																		(cAliasF500)->PREFIXO			:=	aRegApl[1,3] // APLEMP
																		(cAliasF500)->NUMERO			:=	aRegApl[1,4]
																		(cAliasF500)->PARCELA		:=	aRegApl[1,5] // REVISAO
																		(cAliasF500)->TIPO					:=	aRegApl[1,7]
																		(cAliasF500)->CLIENTE			:=	aRegApl[1,8]  // BANCO
																		(cAliasF500)->LOJA					:=	aRegApl[1,9] // AGENCIA
																		(cAliasF500)->CHVCLIENTE:=  	aRegApl[1,8] + aRegApl[1,9] + aRegApl[1,10]// BANCO + AGENCIA + CONTA
																		(cAliasF500)->DTMOV    		:=	aRegApl[1,12]
																		(cAliasF500)->TABELA	  		:=	"SEI"
																		(cAliasF500)->NROREG   		:=	aRegApl[1,22]
																		(cAliasF500)->ORIGEM			:=	 "FINA181"
																		(cAliasF500)->SERIE				:=	aRegApl[1,6]// SEQ
																		(cAliasF500)->ORIFIN				:=	.T. 									//ORIGEM FINANCEIRO (.T.) OU NÃO (.F.)
																		(cAliasF500)->EMISSAO		:=  	aRegApl[1,12]
																		(cAliasF500)->VALORE1		:=   nBase
																		(cAliasF500)->VALOR				:=	nBase
																		(cAliasF500)->PERC 				:= 	100
																		(cAliasF500)->ED_TABCCZ	:= 	aRegApl[1,17]
																		(cAliasF500)->ED_CODCCZ	:=	aRegApl[1,18]
																		(cAliasF500)->ED_GRUCCZ	:= 	aRegApl[1,19]
																		(cAliasF500)->ED_DTFCCZ	:= 	aRegApl[1,20]
																		(cAliasF500)->NATUREZ		:= 	aRegApl[1,11]
																		(cAliasF500)->CSTPIS				:=	aRegApl[1,13]
																		(cAliasF500)->ALIQPIS			:=	aRegApl[1,14]  // PCAPPIS
																		(cAliasF500)->CSTCOF			:=	aRegApl[1,15]
																		(cAliasF500)->ALIQCOF			:=	aRegApl[1,16]	 // PCAPCOF
																		(cAliasF500)->CONTA				:=	aRegApl[1,21]	 // CONTASED
																		(cAliasF500)->BASEPIS			:=	Iif(lEnvBase,nBase,0) //BASE PIS
																		(cAliasF500)->VRPIS				:=	nPisBx        //VALOR PIS
																		(cAliasF500)->BASECOF		:=	Iif(lEnvBase,nBase,0) //BASE COFINS
																		(cAliasF500)->VRCOFINS		:=	nCofBx        //VALOR COFINS
																		(cAliasF500)->VRDESC			:=   0
																		(cAliasF500)->NUMPRO			:=	""//Nro do Processo Referencial
																		(cAliasF500)->INDPRO			:=	""//Tipo do Processo Referencial
																	Enddo
																#ENDIF
															Endif

															If Select(cAlias) <> 0
																dbSelectArea(cAlias)
																dbCloseArea()
																Ferase(cNomeArq+GetDBExtension())
															EndIf

														Next

														SC5->(RestArea(aAreaSC5))
														Return

														/*
														ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
														±±ºPrograma  ³F500Top   ºAutor  ³Clovis Magenta      º Data ³  29/06/12   º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºDesc.     ³ Funcao de filtros dos registros do bloco F500 - SPED PIS   º±±
														±±º          ³ COFINS - para TOP CONNECT                                  º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºUso       ³ AP                                                        º±±
														±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
														*/
													Function	F500Top(lNRastDSD,cDataIni,cDataFim,cMotBx,lBxSped,aNatNTrib,cBxSql,cAlias)
														Local cQuery		:= ""
														Local aStrucTRB1:= {}
														Local aStrucTRB2:= {}
														Local nI					:= 	0
														Local nA				:=	0
														//Identifico se tenho unidade de negócios.
														Local lUnidNeg 	:= Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
														Local cFilSe5		:= xFilial("SE5")
														Local cFilSe1		:= xFilial("SE1")
														Local cFilSei		:= xFilial("SEI")
														Local lSe1MsFil	:=	SE1->(FieldPos("E1_MSFIL")) > 0
														Local lSe5MsFil	:=	SE5->(FieldPos("E5_MSFIL")) > 0
														Local lSeiMsFil	:=	SEI->(FieldPos("EI_MSFIL")) > 0
														Local lTpDesc		:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
														Local lSE1Proc	:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)
														Local cTipoTit		:=	""
														Local lAplSped	:= SuperGetMv("MV_APLFIN",,.F.) //Habilita o envio das Aplicacoes financeiras.
														Local cNatApl		:= SuperGetMv("MV_APLNAT",,"") 	//Codigo da Natureza das Aplicacoes Financeiras.
														Local cTpApl		:= cNomeApl	:=	""
														Local 	cNatResg := &(GetMv("MV_NATRAPL"))
														Local 	cBxCanc	:= 	""

														If	cAlias	= "SEIQRY"
															If lAplSped .And. !Empty(cNatApl) // Tratamento para o parametro MV_APLNAT.
																cNomeApl:="'"	// Inserindo aspas e virgulas para o select da query.
																For nA:=1 To Len(cNatApl)
																	If Subst(cNatApl,nA,1) $ ";,-_|./"
																		cNomeApl+="','"
																	Else
																		cNomeApl+=Subst(cNatApl,nA,1)
																	Endif
																Next
																cNomeApl	+=	"'"
																cTpApl	:=""
																cNatApl	:=""
																For nA:=1 To Len(cNomeApl)
																	If Subst(cNomeApl,nA,1) $ "'"
																		If Len(cNatApl) > 1 .And. Len(cNatApl) < 10
																			cTpApl+=Space(1)
																		Endif
																		cTpApl+=Subst(cNomeApl,nA,1)
																		cNatApl:=""
																	ElseIf Subst(cNomeApl,nA,1) $ ","
																		cTpApl+=Subst(cNomeApl,nA,1)
																	Else
																		cTpApl	+=Subst(cNomeApl,nA,1)
																		cNatApl	+=Subst(cNomeApl,nA,1)
																	Endif
																Next
															Endif
														Endif

														If	cAlias	= "SE5QRY"
															If lUnidNeg
																cFilSe5	:= SM0->M0_CODFIL
																cFilSe1 := SM0->M0_CODFIL
															Else
																cFilSe5	:= xFilial("SE5")
																cFilSe1 := xFilial("SE1")
															Endif

															dbSelectArea("SE5")
															aStrucTRB1 := dbStruct()

															cQuery 		:= "SELECT  "
															cQuery	 	+= "SE5.E5_FILIAL FILIAL, SE5.E5_PREFIXO PREFIXO, SE5.E5_NUMERO NUMERO, SE5.E5_PARCELA PARCELA, SE5.E5_TIPO TIPO, "
															cQuery		+= "SE5.E5_CLIFOR CLIENTE, SE5.E5_LOJA LOJA, SE5.E5_TIPODOC TIPODOC, SE5.E5_MOTBX MOTBX, SE5.E5_DATA DTMOV, "
															cQuery	 	+= "SE5.E5_VRETPIS VRETPIS, SE5.E5_VRETCOF VRETCOF, SE5.E5_VRETCSL VRETCSL,SE5.E5_VALOR VALOR, SE5.R_E_C_N_O_ NROREG, "
															cQuery		+= "SE5.E5_VLMULTA VLMULTA, SE5.E5_VLJUROS VLJUROS, SE5.E5_VLDESCO VLDESCO, SE5.E5_DOCUMEN DOCUMEN, "
															cQuery		+= "SE5.E5_PRETPIS PRETPIS, SE5.E5_PRETCOF PRETCOF, SE5.E5_PRETCSL PRETCSL, "

															//Campos da tabela SE1
															cQuery	 	+= "SE1.E1_ORIGEM ORIGEM, SE1.E1_NATUREZ NATUREZ, SE1.E1_SALDO SALDO,SE1.E1_MOEDA TPMOEDA, "
															cQuery	 	+= "SE1.E1_PIS PIS, SE1.E1_COFINS COFINS, SE1.E1_INSS INSS, SE1.E1_ISS ISS, SE1.E1_IRRF IRRF, "
															cQuery		+= "SE1.E1_CSLL CSLL, SE1.E1_VALOR VALORE1, SE1.E1_SERIE SERIE, SE1.E1_VLCRUZ VLCRUZ, SE1.E1_BASEIRF BASEIRF, "
															cQuery		+= "SE1.E1_DESDOBR DESDOBR, SE1.E1_EMISSAO EMISSAO,  SE1.E1_PEDIDO PEDIDO, "

															If lTpDesc
																cQuery   += "SE1.E1_TPDESC TPDESC, "
															Endif

															If lSE1Proc
																cQuery   += "SE1.E1_NUMPRO NUMPRO, SE1.E1_INDPRO INDPRO,"
															Endif

															//Campos da tabela SED
															cQuery	 	+= "SED.ED_CSTPIS CSTPIS, SED.ED_PCAPPIS PCAPPIS, SED.ED_CSTCOF CSTCOF, SED.ED_PCAPCOF PCAPCOF, SED.ED_CONTA CONTA, "
															cQuery	 	+= "SED.ED_CODIGO CODIGO, SED.ED_APURCOF APURCOF, SED.ED_APURPIS APURPIS,SED.ED_TABCCZ ED_TABCCZ, "
															cQuery	 	+= "SED.ED_CODCCZ ED_CODCCZ, SED.ED_GRUCCZ ED_GRUCCZ, SED.ED_DTFCCZ ED_DTFCCZ "

															cQuery	 	+= "FROM "
															cQuery 		+= RetSqlName("SE5") + " SE5, "
															cQuery 		+= RetSqlName("SE1") + " SE1 	"
															cQuery 		+= " LEFT JOIN " // Left join pois existe a possibilidade de titulos vindos do FAT não terem natureza.
															cQuery 		+= RetSqlName("SED") + " SED "
															cQuery 		+= " ON SE1.E1_NATUREZ = SED.ED_CODIGO AND "
															cQuery 		+= " SE1.E1_FILIAL = SED.ED_FILIAL AND "
															cQuery 		+= " SED.D_E_L_E_T_ = '' "

															cQuery	 	+= "WHERE "

															If !Empty( Iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) )
																cQuery 	+= "SE5.E5_FILIAL = '"  + xFilial("SE5") + "' AND "
															Else
																If lSe5MsFil
																	cQuery 	+= "SE5.E5_MSFIL = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
																Else
																	cQuery 	+= "SE5.E5_FILORIG = '" + Iif(lUnidNeg, cFilSe5, cFilAnt) + "' AND "
																Endif
															EndIf

															If !Empty( Iif( lUnidNeg, FWFilial("SE1") , xFilial("SE1") ) )
																cQuery 	+= "SE1.E1_FILIAL = '"  + xFilial("SE1") + "' AND "
															Else
																If lSe1MsFil
																	cQuery 	+= "SE1.E1_MSFIL = '" + Iif(lUnidNeg, cFilSe1, cFilAnt) + "' AND "
																Else
																	cQuery 	+= "SE1.E1_FILORIG = '" + Iif(lUnidNeg, cFilSe1, cFilAnt) + "' AND "
																Endif
															EndIf

															cQuery 		+= "SE5.E5_PREFIXO = SE1.E1_PREFIXO AND "
															cQuery 		+= "SE5.E5_NUMERO = SE1.E1_NUM AND "
															cQuery 		+= "SE5.E5_PARCELA = SE1.E1_PARCELA AND "
															cQuery 		+= "SE5.E5_TIPO = SE1.E1_TIPO AND "
															cQuery	 	+= "SE5.E5_CLIFOR = SE1.E1_CLIENTE AND "
															cQuery		+= "SE5.E5_LOJA = SE1.E1_LOJA AND "
															cQuery	 	+= "(SE5.E5_DATA >= '"+cDataIni+"' AND SE5.E5_DATA <= '"+cDataFim+"') AND "

															If  !lNRastDSD //Tratamento para desdobramento
																cQuery	+= "((SE1.E1_DESDOBR = '1' AND SE1.E1_BAIXA <>'' AND SE1.E1_SITUACA <> '') OR SE1.E1_DESDOBR <> '1') AND "
															Endif

															//Exclui os titulos que possuem estorno
															cQuery	 	+= "SE5.E5_SEQ NOT IN "
															cQuery 		+= "(SELECT SE5AUX.E5_SEQ FROM "+RetSqlName("SE5")+" SE5AUX WHERE "
															cQuery		+= 		" SE5AUX.E5_FILIAL = SE5.E5_FILIAL AND "
															cQuery		+= 		" SE5AUX.E5_PREFIXO = SE5.E5_PREFIXO AND "
															cQuery		+= 		" SE5AUX.E5_NUMERO = SE5.E5_NUMERO AND  "
															cQuery		+= 		" SE5AUX.E5_PARCELA = SE5.E5_PARCELA AND "
															cQuery		+= 		" SE5AUX.E5_TIPO = SE5.E5_TIPO AND "
															cQuery		+= 		" SE5AUX.E5_CLIFOR = SE5.E5_CLIFOR AND "
															cQuery		+= 		" SE5AUX.E5_LOJA = SE5.E5_LOJA AND "
															cQuery		+= 		" SE5AUX.E5_TIPODOC = 'ES' AND "
															cQuery		+= 		" SE5AUX.D_E_L_E_T_ = '' "
															cQuery 		+= ") AND "

															cTipoTit		:=	""
															cTipoTit		:=	MVABATIM + "|" + MV_CRNEG + "|" + MVPROVIS
															cQuery 		+= "SE5.E5_TIPO NOT IN " + FormatIn(cTipoTit,If("|"$cTipoTit,"|",","))  + " AND "

															//Caso os parametros estejam configurados devem ser enviadas as receitas nao tributaveis (juros, multas, variacao cambial).
															If lBxSped .And. Len(aNatNTrib)>0
																cQuery		+= "((SE5.E5_MOTBX = 'FAT' AND SE5.E5_TIPODOC IN ('DC','JR','MT','CM')) OR "
																cQuery		+= " (SE5.E5_MOTBX <> 'FAT' AND SE5.E5_TIPO <> 'RA') OR (SE5.E5_MOTBX = 'CMP' AND SE5.E5_TIPODOC = 'CP' AND SE5.E5_TIPO = 'NF')) AND "
															Endif

															cQuery		+= " ((SE5.E5_MOTBX <> 'FAT' AND SE5.E5_TIPO <> 'RA') OR (SE5.E5_MOTBX = 'CMP' AND SE5.E5_TIPODOC = 'CP' AND SE5.E5_TIPO = 'NF')) AND "

															cBxCanc		:= "('LIQ'"

															If !Empty(cBxSql)
																cBxCanc += "," + cBxSql
															EndIf

															cBxCanc		+= ")"

															cQuery		+= "SE5.E5_MOTBX NOT IN " + cBxCanc + " AND "

															cQuery		+= "SE5.E5_SITUACA <> 'C' AND "

															cQuery	 	+= "SE5.E5_RECPAG = 'R' AND "		//Conforme definicao do Fiscal somente titulos a receber (tabela SE1).

															cQuery		+= "SE5.D_E_L_E_T_ = '' "

															cQuery		+= "AND SE1.D_E_L_E_T_ = '' "
															cQuery 		+= " ORDER BY FILIAL, PREFIXO, NUMERO, PARCELA, TIPO, CLIENTE, LOJA"

															cQuery 		:= ChangeQuery(cQuery)
															dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias)

															For nI := 1 To len(aStrucTRB1)
																If aStrucTRB1[nI][2] <> "C" .And. FieldPos(aStrucTRB1[nI][1])<>0
																	TcSetField(cAlias,aStrucTRB1[nI][1],aStrucTRB1[nI][2],aStrucTRB1[nI][3],aStrucTRB1[nI][4])
																EndIf
															Next nI

														ElseIf	cAlias	= "SEIQRY"

															If lUnidNeg
																cFilSei	:= SM0->M0_CODFIL
															Else
																cFilSei	:= xFilial("SEI")
															Endif

															dbSelectArea("SEI")
															aStrucTRB := dbStruct()

															cQuery	 	:= "SELECT "
															cQuery	 	+= "SEI.EI_FILIAL FILIAL, SEI.EI_NUMERO NUMERO, SEI.EI_REVISAO REVISAO, SEI.EI_APLEMP APLEMP, SEI.EI_SEQ SEQ,  "
															cQuery	 	+= "SEI.EI_TIPO TIPO, SEI.EI_DATA DATA,SEI.EI_VALOR VALOR,  "
															cQuery	 	+= "SEI.EI_BANCO BANCO, SEI.EI_AGENCIA AGENCIA, SEI.EI_CONTA CONTA, SEI.EI_TIPODOC TIPODOC,  "
															cQuery   	+= "SEI.EI_VLMOED2 VLCRUZ, SEH.EH_MOEDA MOEDA, SEI.EI_NATUREZ NATUREI, SEI.EI_TXMOEDA TXMOEDA, "
															cQuery   	+= "SEH.EH_NATUREZ NATUREZ,  "

															//Campos da tabela SED
															cQuery	 	+= "SED.ED_CSTPIS CSTPIS, SED.ED_PCAPPIS PCAPPIS, SED.ED_CSTCOF CSTCOF, SED.ED_PCAPCOF PCAPCOF, SED.ED_CONTA CONTASED, "
															cQuery	 	+= "SED.ED_CODIGO CODIGO, SED.ED_APURCOF APURCOF, SED.ED_APURPIS APURPIS,SED.ED_TABCCZ TABCCZ, "
															cQuery	 	+= "SED.ED_CODCCZ CODCCZ, SED.ED_GRUCCZ GRUCCZ, SED.ED_DTFCCZ DTFCCZ,  "

															cQuery	 	+= "SEI.R_E_C_N_O_ RECNO "
															cQuery	 	+= "FROM "
															cQuery 		+= RetSqlName("SEI") + " SEI,  "
															cQuery 		+= RetSqlName("SEH") + " SEH,  "
															cQuery 		+= RetSqlName("SA6") + " SA6,  "
															cQuery 		+= RetSqlName("SED") + " SED   "

															cQuery	 	+= "WHERE "

															cQuery	 	+= "(SEI.EI_DATA >= '"+cDataIni+"' AND SEI.EI_DATA <= '"+cDataFim+"') AND "

															If !Empty( Iif( lUnidNeg, FWFilial("SEI") , xFilial("SEI") ) )
																cQuery 	+= "SEI.EI_FILIAL = '"  + xFilial("SEI") + "' AND "
															Else
																If lSeiMsFil
																	cQuery 	+= "SEI.EI_MSFIL = '" + Iif(lUnidNeg, cFilSei, cFilAnt) + "' AND "
																Else
																	cQuery 	+= "SEI.EI_FILIAL = '"  + xFilial("SEI") + "' AND "
																Endif
															EndIf

															cQuery 		+=	"SEH.EH_FILIAL='" + xFilial("SEH") + "' AND "
															cQuery 		+=	"SA6.A6_FILIAL='" + xFilial("SA6") + "' AND "
															cQuery 		+=	"SED.ED_FILIAL='" + xFilial("SED") + "' AND "

															cQuery		+= "SEI.EI_NUMERO = SEH.EH_NUMERO AND "
															cQuery		+= "SEI.EI_REVISAO = SEH.EH_REVISAO AND "
															cQuery		+= "SEI.EI_APLEMP = SEH.EH_APLEMP AND "

															cQuery 	+=  "SEI.EI_STATUS NOT IN ( 'C')   AND "

															cQuery 		+=  "SEI.EI_TIPODOC IN ('JR')  AND "

															cQuery 		+= "SEH.EH_NATUREZ IN (" + cTpApl + ") AND "
															cQuery 		+= "SEI.EI_NATUREZ IN ('" + cNatResg + "') AND "

															cQuery 	+=  "SEI.EI_BANCO  != ' '  AND "
															cQuery 	+=  "SEI.EI_AGENCIA  != ' '  AND "
															cQuery 	+=  "SEI.EI_CONTA  != ' '   AND "

															cQuery		+= "SA6.A6_COD = SEI.EI_BANCO AND "
															cQuery		+= "SA6.A6_AGENCIA = SEI.EI_AGENCIA AND "
															cQuery		+= "SA6.A6_NUMCON = SEI.EI_CONTA AND "

															cQuery		+= "SED.ED_CODIGO = SEH.EH_NATUREZ AND "
															cQuery		+= "SEI.D_E_L_E_T_ = '' "

															cQuery 		+= " ORDER BY FILIAL, APLEMP, NUMERO, REVISAO, SEQ"

															cQuery 		:= ChangeQuery(cQuery)
															dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias)

															For nI := 1 To len(aStrucTRB2)
																If aStrucTRB2[nI][2] <> "C" .And. FieldPos(aStrucTRB2[nI][1])<>0
																	TcSetField(cAlias,aStrucTRB2[nI][1],aStrucTRB2[nI][2],aStrucTRB2[nI][3],aStrucTRB2[nI][4])
																EndIf
															Next nI

														Endif

														Return

														/*
														ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
														±±ºPrograma  ³F500DBF   ºAutor  ³Clovis Magenta      º Data ³  29/06/12   º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºDesc.     ³ Funcao de filtros dos registros do bloco F500 - SPED PIS   º±±
														±±º          ³ COFINS - para DBF                                          º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºUso       ³ AP                                                        º±±
														±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
														*/
													Function F500DBF(lNRastDSD,cDataIni,cDataFim,cMotBx,lBxSped,aNatNTrib,cBxSql,aMotBx,aStructTRB,cAlias)

														Local cTrabalho := CriaTrab(aStructTRB)
														Local lSe1MsFil:=	SE1->(FieldPos("E1_MSFIL")) > 0
														Local lSe5MsFil:=	SE5->(FieldPos("E5_MSFIL")) > 0
														Local lTpDesc	:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
														Local lUnidNeg	:= Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
														Local lSE1Proc	:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)

														dbUseArea(.T.,,cTrabalho,cAlias,.F.,.F.)
														dbCreateInd(cTrabalho, "DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA", {||DTMOV+FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIENTE+LOJA})

														SE1 -> ( dbSetOrder ( 1 ) ) //FILIAL+PREFIXO+NUM+PARCELA+TIPO
														SA1 -> ( dbSetOrder ( 1 ) ) //FILIAL+COD+LOJA
														SED -> ( dbSetOrder ( 1 ) ) //FILIAL+CODIGO

														dbSelectArea("SE5")
														SE5 -> ( dbSetOrder ( 1 ) ) //FILIAL+DTOS(DATA)+BANCO+AGENCIA+CONTA+NUMCHEQ
														SE5 -> ( dbSeek ( xFilial("SE5") + cDataIni, .T. ) )
														Do While ( SE5->(!Eof()) .And. Dtos(SE5->E5_DATA) >= cDataIni .And. Dtos(SE5->E5_DATA) <= cDataFim .And. SE5->E5_FILIAL = xFilial("SE5"))

															If Empty( Iif( lUnidNeg, FWFilial("SE5") , xFilial("SE5") ) )//Compartilhada
																If lSe5MsFil
																	If SE5->E5_MSFIL <> Iif(lUnidNeg, cFilSe5, cFilAnt)
																		SE5->(Dbskip())
																		Loop
																	Endif
																Else
																	If SE5->E5_FILORIG <> Iif(lUnidNeg, cFilSe5, cFilAnt)
																		SE5->(Dbskip())
																		Loop
																	Endif
																Endif
															EndIf

															If Alltrim(SE5->E5_MOTBX) $ cBxSql
																SE5->(dbSkip())
																Loop
															EndIf

															If SE5->E5_TIPODOC = 'ES' .Or. SE5->E5_MOTBX $ 'LIQ'
																SE5->(dbSkip())
																Loop
															EndIf

															If (SE5->E5_TIPO $ (MVABATIM+MV_CRNEG+MVPROVIS)) .Or. SE5->E5_SITUACA = 'C'
																SE5->(dbSkip())
																Loop
															EndIf

															//Caso os parametros estejam configurados devem ser enviadas as receitas nao tributaveis (juros, multas, variacao cambial).
															If (!lBxSped .Or. Len(aNatNTrib)=0) .And. (SE5->E5_TIPODOC $ 'DC_JR_MT_CM')
																SE5->(dbSkip())
																Loop
															Endif

															If !((SE5->E5_MOTBX <> "FAT" .And. SE5->E5_TIPO <> "RA") .Or.;
																	(SE5->E5_MOTBX = "CMP" .And. SE5->E5_TIPODOC = "CP" .And. SE5->E5_TIPO = "NF"))
																SE5->(dbSkip())
																Loop
															Endif

															If SE5->E5_RECPAG <> 'R' //Conforme definicao do Fiscal somente titulos a receber (tabela SE1).
																SE5->(dbSkip())
																Loop
															EndIf

															If !SE1 -> ( DbSeek ( xFilial("SE1") + SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO)) )
																SE5->(dbSkip())
																Loop
															Endif

															If Empty( Iif( lUnidNeg, FWFilial("SE1") , xFilial("SE1") ) )
																If lSe1MsFil
																	If SE1->E1_MSFIL <> Iif(lUnidNeg, FWFilial("SE1") , cFilAnt)
																		SE1->(Dbskip())
																		Loop
																	Endif
																Else
																	If SE1->E1_FILORIG <> Iif(lUnidNeg, FWFilial("SE1") , cFilAnt)
																		SE1->(Dbskip())
																		Loop
																	Endif
																Endif
															EndIf

															IF !Empty(SE1->E1_NATUREZ) .And. SED->(DbSeek(xFilial("SED")+ SE1->E1_NATUREZ)) // Podemos ter titulo sem natureza quando vem do FAT
																If (SED->ED_CODIGO <> SE1->E1_NATUREZ) .Or. (Empty(SED->ED_APURCOF) .Or. Empty(SED->ED_APURPIS))
																	SE5->(Dbskip())
																	Loop
																Endif
															Endif

															If !(SA1 -> ( dbSeek ( xFilial("SA1") + SE1->(E1_CLIENTE+E1_LOJA))))
																SE5->(dbSkip())
																Loop
															Endif

															RecLock (cAlias, .T. )
															(cAlias) ->	FILIAL		:= SE5 -> E5_FILIAL
															(cAlias) ->	PREFIXO		:= SE5 -> E5_PREFIXO
															(cAlias) ->	NUMERO		:= SE5 -> E5_NUMERO
															(cAlias) ->	PARCELA		:= SE5 -> E5_PARCELA
															(cAlias) ->	TIPO			:= SE5 -> E5_TIPO
															(cAlias) ->	CLIENTE		:= SE5 -> E5_CLIENTE
															(cAlias) ->	LOJA			:= SE5 -> E5_LOJA
															(cAlias) ->	TIPODOC		:= SE5 -> E5_TIPODOC
															(cAlias) ->	VALOR			:= SE5 -> E5_VALOR
															(cAlias) ->	NATUREZ		:= SE5 -> E5_NATUREZ
															(cAlias) -> DTMOV    	:= Dtos(SE5 -> E5_DATA)
															(cAlias) ->	NROREG		:= SE5 -> (Recno())
															(cAlias) ->	PIS			:= SE1 -> E1_PIS
															(cAlias) ->	COFINS		:= SE1 -> E1_COFINS
															(cAlias) ->	CSLL			:= SE1 -> E1_CSLL
															(cAlias) ->	VALORE1		:= SE1 -> E1_VALOR
															(cAlias) ->	SALDO			:= SE1 -> E1_SALDO
															(cAlias) ->	IRRF			:= SE1 -> E1_IRRF
															(cAlias) ->	INSS			:= SE1 -> E1_INSS
															(cAlias) ->	ISS			:= SE1 -> E1_ISS
															(cAlias) ->	TPMOEDA		:= SE1 -> E1_MOEDA
															(cAlias) ->	VLCRUZ		:= SE1 -> E1_VLCRUZ
															(cAlias) ->	BASEIRF		:= SE1 -> E1_BASEIRF
															(cAlias) ->	MOTBX			:= SE5 -> E5_MOTBX
															(cAlias) ->	ORIGEM		:= SE1 -> E1_ORIGEM
															(cAlias) ->	DESDOBR		:= SE1 -> E1_DESDOBR
															(cAlias) ->	CSTPIS		:= SED -> ED_CSTPIS
															(cAlias) ->	PCAPPIS		:= SED -> ED_PCAPPIS
															(cAlias) ->	CSTCOF		:= SED -> ED_CSTCOF
															(cAlias) ->	PCAPCOF		:= SED -> ED_PCAPCOF
															(cAlias) -> CONTA			:= SED -> ED_CONTA
															(cAlias) -> SERIE			:= SE1 -> E1_SERIE
															(cAlias) -> ORIFIN		:= ("FIN" $ SE1->E1_ORIGEM)
															(cAlias) ->	ED_TABCCZ	:= SED -> ED_TABCCZ
															(cAlias) ->	ED_CODCCZ	:= SED -> ED_CODCCZ
															(cAlias) ->	ED_GRUCCZ	:= SED -> ED_GRUCCZ
															(cAlias) ->	ED_DTFCCZ	:= Dtos(SED -> ED_DTFCCZ)
															(cAlias) ->	EMISSAO		:= Dtos(SE1 -> E1_EMISSAO)
															(cAlias) ->	VRETPIS		:= SE5 -> E5_VRETPIS
															(cAlias) ->	VRETCOF		:= SE5 -> E5_VRETCOF
															(cAlias) ->	VRETCSL		:= SE5 -> E5_VRETCSL
															(cAlias) ->	VLDESCO	:= SE5 -> E5_VLDESCO
															(cAlias) -> 	PEDIDO			:= SE1 -> E1_PEDIDO
															(cAlias) -> 	DOCUMEN		:= SE5 -> E5_DOCUMEN

															If lTpDesc
																(cAlias) ->	TPDESC	:= SE1 -> E1_TPDESC
															Endif

															If lSE1Proc
																(cAlias) ->	NUMPRO		:= SE1 -> E1_NUMPRO
																(cAlias) ->	INDPRO		:= SE1 -> E1_INDPRO
															Endif

															(cAlias) ->	VLMULTA		:= SE5 -> E5_VLMULTA
															(cAlias) ->	VLJUROS		:= SE5 -> E5_VLJUROS
															(cAlias) -> (MsUnlock())

															SE5->(dbSkip())
														EndDo

														Return

														/*
														ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
														±±ºPrograma  ³DTVenIcms ºAutor  ³Marcio Nunes        º Data ³  24/08/2012 º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºDesc.     ³ Funcao que retorna a data de vencimento dos impostos       º±±
														±±º          ³ FETHAB / FABOB / FACS                                      º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºUso       ³                                                            º±±
														±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
														*/
													Function DTVenIcms(lVctReal)

														Local cICMVenc	:= SubStr(SuperGetMV("MV_ICMVENC",,""),1,2)
														Local dUltDia	:= UltimoDia(dDataBase)
														Local dDatValid := dUltDia+Val(cICMVenc)
														Local dDifdt  	:= CTOD("  /  /    ")

														DEFAULT lVctReal := .F.

														If cICMVenc == ""
															dDtVenc := dDataBase

														ElseIf cICMVenc == "06"
															dDtVenc := DataValida(dDatValid,.T.)

														ElseIf cICMVenc <> "06" // retorna o dia util anterior a data de vencimento
															If DataValida(dDatValid,.T.) <> dDatValid
																dDifdt	:= DataValida(dDatValid,.T.) - dDatValid
																dDtVenc := DataValida(dDatValid,.T.)-(dDifdt+1)
															Else
																dDtVenc := dDatValid
															EndIf
														EndIf

														If lVctReal
															dDtVenc := dDatValid
														EndIf

														Return (dDtVenc)


														/*
														ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
														±±ºPrograma  ³FinRepM220ºAutor  ³Andrea V. Santiago  º Data ³  20/08/12   º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºDesc.     ³ Funcao para compor o valor da base para calculo dos        º±±
														±±º          ³ impostos Pis e Cofins na geracao do bloco M220.            º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºUso       ³ SIGAFIN                                                    º±±
														±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
														*/
													Function FinRepM220(cAliasQry)

														Local nValBase 	:=	0	//Valor base para calculdo do PIS e COFINS.
														Local nValTit		:=	0	//Valor total do titulo gerado.
														Local lPCCBaixa	:= If(FindFunction("FPccBxCr"),FPccBxCr(),.F.)
														Local nMoeda		:=	(cAliasQry)->MOEDA

														If ("SE5" $ cAliasQry .And. IsInCallStack("FinSpdM220"))

															nValBase	:=	0

															If lPCCBaixa // Pcc na Baixa
																SED->(DbSetOrder(1))
																If SED->(DbSeek(xFilial("SED")+ (cAliasQry)->NATUREZ))
																	//Calculo inverso assim caso seja base reduzida ou normal o valor vai ser gerado correto.
																	If (cAliasQry)->VRETPIS > 0 .And. !Empty(SED->ED_PERCPIS)
																		nValBase	:=	(cAliasQry)->VRETPIS / (SED->ED_PERCPIS/100)
																	Endif
																	If (cAliasQry)->VRETCOF > 0 .And. (nValBase == 0 .Or. nValBase <> (cAliasQry)->VRETCOF / (SED->ED_PERCCOF/100)) .And. !Empty(SED->ED_PERCCOF)
																		nValBase	:=	(cAliasQry)->VRETCOF / (SED->ED_PERCCOF/100)
																	Endif
																Endif
															Else
																SED->(DbSetOrder(1))
																If SED->(DbSeek(xFilial("SED")+ (cAliasQry)->NATUREZ))
																	//Calculo inverso assim caso seja base reduzida ou normal o valor vai ser gerado correto.
																	If (cAliasQry)->PIS > 0 .And. !Empty(SED->ED_PERCPIS)
																		nValBase	:=	(cAliasQry)->PIS / (SED->ED_PERCPIS/100)
																	Endif
																	If (cAliasQry)->COFINS > 0 .And. (nValBase == 0 .Or. nValBase <> 	(cAliasQry)->COFINS / (SED->ED_PERCCOF/100)) .And. !Empty(SED->ED_PERCCOF)
																		nValBase	:=	(cAliasQry)->COFINS / (SED->ED_PERCCOF/100)
																	Endif
																Endif
															Endif

															If nValBase == 0 //Natureza somente de apuracao sem retencao.
																nValBase	:= If(nMoeda>1,(cAliasQry)->VLCRUZ,(cAliasQry)->VALORE1)
															Endif

															nValTit	:=	 nValBase
														Endif

														Return ({nValBase,nValTit})


														/*
														ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
														±±ºPrograma  ³PercM220	ºAutor  ³Andrea V. Santiago  º Data ³  21/08/12   º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºDesc.     ³ Funcao para calcular o valor percentual para o calculo 	  º±±
														±±º          ³ do Pis e Cofins quando Pcc na Baixa para o bloco M220.     º±±
														±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
														±±ºUso       ³ SIGAFIN                                                    º±±
														±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
														±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
														ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
														*/
													Function PercM220(cAliasQry,nMoeda)
														Local lRecISS 		:= .T.
														Local cChaveBx		:=	""
														Local nJurosBx	,nDescBx,nVlrSe5,nRet,nTxMoeda
														Local	nVrPIS,nVrCOFINS,nVrCSLL,nVrIR,nVrISS,nVrINSS
														Local aRet			:=	{}
														Local lMVDescIss	:= GetNewPar("MV_DESCISS",.F.)

														cChaveBx		:=	(cAliasQry)->FILIAL + (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA
														nJurosBx		:=	nDescBx		:=	nVlrSe5		:=	nTxMoeda	:=	0
														nRet			:=	nVrPIS		:=	nVrCOFINS	:=	nVrCSLL :=	nVrIR	:=	nVrISS :=	nVrINSS	:=	0

														// Posiciona no cliente e loja do titulo que serao processadas as movimentacoes no loop abaixo
														SA1->( MsSeek( xFilial("SA1") + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA ) )

														While  (cAliasQry)->( !EoF()) .AND. cChaveBx ==  ( (cAliasQry)->FILIAL + (cAliasQry)->PREFIXO + (cAliasQry)->NUM + (cAliasQry)->PARCELA + (cAliasQry)->TIPO + (cAliasQry)->CLIFOR + (cAliasQry)->LOJA )

															SED->( MsSeek( xFilial("SED") + (cAliasQry)->NATUREZ ) )

															If (cAliasQry)->TIPO $ ( MVABATIM + MV_CRNEG + MVPROVIS )
																(cAliasQry)->( dbSkip() )
																Loop
															EndIf

															lRecIss := (SA1->A1_RECISS == "1" .And. lMVDescIss)

															nVrPIS		:=	(cAliasQry)->PIS
															nVrCOFINS	:=	(cAliasQry)->COFINS
															nVrCSLL		:=	(cAliasQry)->CSLL
															nVrIR			:=	(cAliasQry)->VRIR
															nVrISS		:=	(cAliasQry)->VRISS
															nVrINSS		:=	(cAliasQry)->VRINSS

															If (cAliasQry)->TIPODOC $ "JR_MT_J2_M2"
																nJurosBx	+= (cAliasQry)->VALOR
															ElseIf(cAliasQry)->TIPODOC $ "DC_CM_D2_C2"
																nDescBx	+= (cAliasQry)->VALOR
															ElseIf !(cAliasQry)->TIPODOC $ "JR_MT_J2_M2_DC_CM_D2_C2"
																nVlrSe5	+=	(cAliasQry)->VALOR
																nTxMoeda	:=	0
																If (cAliasQry)->MOEDA > 1
																	If (cAliasQry)->TXMOEDA == 0
																		nTxMoeda := RecMoeda(Stod((cAliasQry)->EMISSAO),(cAliasQry)->MOEDA)
																	Else
																		nTxMoeda := (cAliasQry)->TXMOEDA
																	Endif
																Endif

																AaDd(aRet,{	nVrPIS,;  		// 1
																nVrCOFINS,;  	// 2
																nVrCSLL,;  		// 3
																nVrIR,;  		// 4
																If(lRecIss, nVrISS,0),;  // 5
																	nVrINSS,;  		// 6
																	(cAliasQry)->VALORE1,;	// 7
																	(cAliasQry)->VALOR,;		//	8
																	(cAliasQry)->SALDO,;		//	9
																	(cAliasQry)->VLCRUZ,;	//	10
																	(cAliasQry)->MULTNAT,;	//	11
																	nTxMoeda	})					// 12
																Endif
																(cAliasQry)->(Dbskip())
															Enddo

															nRet	:=	0
															If Len(aRet)>0
																If aRet[1,9] > 0 //Titulo nao baixado totalmente
																	nRet	:=	((( nVlrSe5 - nJurosBx + nDescBx ) *100)/ If(aRet[1,12]>1,aRet[1,8],aRet[1,7]))
																Else// baixa total ou ultima baixa do titulo precisa acrescentar o valor dos impostos descontados na movimentacao do SE5
																	nRet	:=	((((nVlrSe5 + aRet[1,1]+aRet[1,2]+aRet[1,3]+aRet[1,4]+aRet[1,5]+aRet[1,6]) - nJurosBx + nDescBx)*100)/aRet[1,7])
																	If aRet[1,12] > 0
																		nRet	:= (nRet)/aRet[1,12]
																	Endif
																Endif
															Endif
															Return nRet


															/*
															ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
															±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
															±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
															±±ºPrograma  ³FinRepBaseºAutor  ³Clovis Magenta      º Data ³  31/07/12   º±±
															±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
															±±ºDesc.     ³ Funcao para compor o valor da base para calculo dos        º±±
															±±º          ³ impostos Pis e Cofins na geracao do bloco F100.            º±±
															±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
															±±ºUso       ³ SIGAFIN                                                    º±±
															±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
															±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
															ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
															*/
														Function FinRepBase(cAliasQry,nMoeda,cChave)

															Local nValBase 	:=	0	//Valor base para calculdo do PIS e COFINS.
															Local nValTit		:=	0	//Valor total do titulo gerado.
															Local cTipRetIr	:= ""
															Local cAbatImp 	:= ""
															Local lDescISS 	:= .F.
															Local lPCCBaixa	:= If(FindFunction("FPccBxCr"),FPccBxCr(),.F.)
															Local aArea 		:= GetArea()
															Local lCalcIssBx 	:= GetNewPar("MV_MRETISS","1") == "2"  	//Retencao do ISS pela emissao (1) ou baixa (2)
															Local cIRPFBaixa 	:= ""
															Local lRedCof		:=	SED->(FieldPos('ED_REDCOF'))> 0
															Local lRedPis		:=	SED->(FieldPos('ED_REDPIS')) > 0
															Local lSest1		:= SE1->(FieldPos("E1_SEST"))	> 0  		//Verifica campo de SEST
															Local lSest2		:= SE2->(FieldPos("E2_SEST"))	> 0  		//Verifica campo de SEST
															Local lTpDesc		:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
															Local lBasePis	:= .F.
															Local lEnvia			:= .T.

															Do Case

															Case "SE1" $ cAliasQry
																dbSelectArea("SE1")
																dbSetOrder(1)
																If DbSeek( xFilial("SE1") + cChave )
																	lBasePis := SE1->(FieldPos("E1_BASEPIS")>0) .AND. SE1->(FieldPos("E1_BASECOF")>0) .AND. (SE1->E1_BASEPIS>0 .OR. SE1->E1_BASECOF>0)
																	nValBase	:=	0

																	If "JURA" $ SE1->E1_ORIGEM //Gerado pelo Juridico com natureza que retem imposto mas nao gera imposto o titulo nao deve ser enviado.
																		SED->(DbSetOrder(1))
																		If SED->(DbSeek(xFilial("SED")+ SE1->E1_NATUREZ)) .And. !Empty(SED->ED_PERCPIS) .And. !Empty(SED->ED_PERCCOF) .And.;
																				SE1->E1_PIS == 0 .And. SE1->E1_COFINS == 0 .And. SE1->E1_BASEPIS == 0 .And. SE1->E1_BASECOF == 0
																			lEnvia	:=	.F.
																		Endif
																	Endif

																	If !lEnvia
																		nValBase	:=	nValTit	:=	0
																	Else
																		//Calculo inverso assim caso seja base reduzida ou normal o valor vai ser gerado correto.
																		If SE1->E1_PIS > 0
																			SED->(DbSetOrder(1))
																			If SED->(DbSeek(xFilial("SED")+ SE1->E1_NATUREZ)) .And. !Empty(SED->ED_PERCPIS)
																				nValBase	:=	If(lBasePis,SE1->E1_BASEPIS,SE1->E1_PIS / (SED->ED_PERCPIS/100))
																			Endif
																		Endif

																		If nValBase == 0 .And. SE1->E1_COFINS > 0
																			SED->(DbSetOrder(1))
																			If SED->(DbSeek(xFilial("SED")+ SE1->E1_NATUREZ)) .And. !Empty(SED->ED_PERCCOF)
																				nValBase	:=If(lBasePis,SE1->E1_BASECOF, SE1->E1_COFINS / (SED->ED_PERCCOF/100))
																			Endif
																		Endif

																		If nValBase == 0
																			nValBase	+= SE1->E1_VALOR
																		Endif

																		If nMoeda > 1
																			If SE1->E1_TXMOEDA == 0
																				nValBase := nValBase/RecMoeda(SE1->E1_EMISSAO,nMoeda)
																			Else
																				nValBase := (nValBase/SE1->E1_TXMOEDA)
																			Endif
																		Endif

																		SFQ->(DbSetOrder(1)) // FQ_FILIAL + FQ_ENTORI + FQ_PREFORI + FQ_NUMORI + FQ_PARCORI + FQ_TIPOORI + FQ_CFORI + FQ_LOJAORI
																		If SFQ->(DbSeek(xFilial("SFQ")+"SE1"+ SE1->E1_PREFIXO + SE1->E1_NUM + SE1->E1_PARCELA + SE1->E1_TIPO + SE1->E1_CLIENTE + SE1->E1_LOJA))
																			nValBase	:= SE1->E1_VALOR
																		Endif

																		If SE1->E1_MULTNAT <> "1" .And. ((lRedPis .And. SE1->E1_PIS = 0) .Or. (lRedCof .And. SE1->E1_COFINS = 0)) //Para naturezas de APURACAO que possuam reducao.
																			SED->(DbSetOrder(1))
																			If SED->(DbSeek(xFilial("SED")+ SE1->E1_NATUREZ)) .And. !Empty(SED->ED_REDPIS)	.And. Empty(SED->ED_PERCPIS)
																				nValBase	:=	nValBase * (SED->ED_REDPIS/100)
																			ElseIf SED->(DbSeek(xFilial("SED")+ SE1->E1_NATUREZ)) .And. !Empty(SED->ED_REDCOF) .And. Empty(SED->ED_PERCCOF)
																				nValBase	:=	nValBase * (SED->ED_REDCOF/100)
																			Endif
																		Endif

																		nValTit	:=	 nValBase

																		If lTpDesc
																			If SE1->E1_TPDESC == "I" .And. SE1->E1_DECRESC > 0 .And.  nValBase > SE1->E1_DECRESC
																				nValBase	-=	SE1->E1_DECRESC
																			Endif
																		Endif
																	Endif
																Endif
															Case "SE2" $ cAliasQry

																dbSelectArea("SE2")
																dbSetOrder(1)
																If DbSeek( xFilial("SE2") + cChave )
																	nValBase	:=	0
																	SED->(DbSetOrder(1))
																	SED->(DbSeek(xFilial("SED")+ SE2->E2_NATUREZ))
																	If !Empty(SED->ED_PERCPIS) .Or. !Empty(SED->ED_PERCCOF) //Caso tenha uma natureza que retenha impostos...
																		//Calculo inverso assim caso seja base reduzida ou normal o valor vai ser gerado correto.
																		If SE2->E2_PIS > 0 .And. !Empty(SED->ED_PERCPIS)
																			nValBase	:=	SE2->E2_PIS / (SED->ED_PERCPIS/100)
																		ElseIf SE2->E2_COFINS > 0 .And. !Empty(SED->ED_PERCCOF)
																			nValBase	:=	SE2->E2_COFINS / (SED->ED_PERCCOF/100)
																		Else
																			nValBase	:= SE2->E2_VALOR
																		Endif
																	Endif

																	nValTit	:= If(lPccBaixa,SE2->E2_VLCRUZ,SE2->E2_VALOR)

																	If SE2->E2_PIS > 0
																		If !lPCCBaixa
																			nValTit += SE2->E2_PIS
																		Endif
																	Endif

																	If SE2->E2_COFINS > 0
																		If !lPCCBaixa
																			nValTit += SE2->E2_COFINS
																		Endif
																	Endif

																	If SE2->E2_CSLL > 0
																		If !lPCCBaixa
																			nValTit += SE2->E2_CSLL
																		Endif
																	Endif

																	If SE2->E2_INSS > 0
																		nValTit += SE2->E2_INSS

																	Endif

																	If SE2->E2_FETHAB > 0
																		nValTit += SE2->E2_FETHAB
																	Endif

																	If SE2->E2_FABOV > 0
																		nValTit += SE2->E2_FABOV
																	Endif

																	If SE2->E2_FACS > 0
																		nValTit += SE2->E2_FACS
																	Endif

																	If lSest2
																		nValTit += SE2->E2_SEST
																	Endif

																	If SE2->E2_IRRF > 0
																		cIRPFBaixa	:= Posicione("SA2", 1, xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA) , "A2_CALCIRF" )
																		If cIRPFBaixa = "1" //Emissao
																			nValTit += SE2->E2_IRRF
																		Endif
																	Endif

																	If SE2->E2_ISS > 0
																		lDescISS := IIF(GetNewPar("MV_DESCISS",.F.) .And. lCalcIssBx ,.T.,.F.)
																		If !lDescISS //Emissao.
																			nValTit += SE2->E2_ISS

																		Endif
																	Endif

																	If nValBase == 0 //Caso tenha uma natureza que nao retenha impostos... exemplo imposto gerado por outro modulo com retencao no produto.
																		nValBase	:=	nValTit
																	Endif

																	If SE2->E2_MULTNAT <> "1" .And. ((lRedPis .And. SE2->E2_PIS = 0) .Or. (lRedCof .And. SE2->E2_COFINS = 0)) //Para naturezas de APURACAO que possuam reducao.
																		SED->(DbSetOrder(1))
																		If SED->(DbSeek(xFilial("SED")+ SE2->E2_NATUREZ)) .And. !Empty(SED->ED_REDPIS)	.And. Empty(SED->ED_PERCPIS)
																			nValBase	:=	nValBase * (SED->ED_REDPIS/100)
																		ElseIf SED->(DbSeek(xFilial("SED")+ SE2->E2_NATUREZ)) .And. !Empty(SED->ED_REDCOF) .And. Empty(SED->ED_PERCCOF)
																			nValBase	:=	nValBase * (SED->ED_REDCOF/100)
																		Endif
																	Endif

																	If lPccBaixa .And. lEnvDesd .And. SE2->E2_DESDOBR = "S" .And. Empty(SE2->E2_STATUS)
																		nValTit	:=	nValBase
																	Endif

																EndIf

															EndCase
															RestArea(aArea)

															Return ({nValBase,nValTit})


															/*
															ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
															±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
															±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
															±±ºPrograma  ³TitFatF100ºAutor  ³Andrea V. Santiago  º Data ³  23/08/12   º±±
															±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
															±±ºDesc.     ³ Funcao para retornar os titulos da fatura que devem ser    º±±
															±±º          ³ enviados na geracao do bloco F100.                         º±±
															±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
															±±ºUso       ³ SIGAFIN                                                    º±±
															±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
															±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
															ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
															*/
														Function TitFatF100(cAliasQry,cAlias,nEnvFatCp)

															Local aAreaSEV 	:=	{}
															Local aAreaTit		:= {}
															Local nVrRateio	:=	0
															Local aRet			:=	{}
															Local cChave		:=	cChaveFat	:=		cChaveTit	:=	""
															Local nPerc			:= 0	//Percentual do titulo em relacao a fatura.
															Local nMoeda		:=	nTxMoeda	:=	0
															Local nI				:=	0
															Local nTotFat		:=	0
															Local aTitFat		:= {}
															Local	aBaseTit		:=	{}
															Local	nBaseTit		:=	0
															Local lScorgp		:=	SE1->(FieldPos("E1_SCORGP")) > 0 //Identifica bem ou servico contratado por orgaos publicos.
															Local nDescBx	:=	nJurosBx	:= 0
															Local lRedCof	:=	SED->(FieldPos('ED_REDCOF'))> 0
															Local lRedPis	:=	SED->(FieldPos('ED_REDPIS')) > 0
															Local cNatSe2		:= SuperGetMv("MV_NATCP",,"")
															Local lSE1Proc	:=	(SE1->(FieldPos('E1_NUMPRO')) > 0 .And. SE1->(FieldPos('E1_INDPRO')) > 0)
															Local lSE2Proc	:=	(SE2->(FieldPos('E2_NUMPRO')) > 0 .And. SE2->(FieldPos('E2_INDPRO')) > 0)
															Local lDescDoc	:= SuperGetMv("MV_DESCDOC",,.F.) //Habilita o envio da descrição da operação/documento no bloco F100 do SPED PIS/COFINS.
															Local lTpDesc	:= SE1->(FieldPos("E1_TPDESC"))	> 0  		//Verifica campo TPDESC (<C>ondicional ou <I>ncondicional)
															Local cDocSpd	:= SuperGetMv("MV_DOCSPD",,"")
															Local cDcsSpd	:= SuperGetMv("MV_DCSSPD",,"")
															Local lSpdMt100:= .F.
															Local lSpdMt460:= .F.
															Local lSE2		:= (cAlias == "SE2")
															Local lSE1		:= (cAlias == "SE1")
															Local cOrigem	:= ""
															Local cNewDocSpd:=","+STRTRAN(STRTRAN(STRTRAN(STRTRAN(STRTRAN(STRTRAN(cDcsSpd,";",","),"/",","),"|",",")," ",","),"-",","),"_",",")+","


															nMoeda := (cAliasQry)->MOEDA

															//Totalizar valores da fatura para ser utilizado na proporcionalizacao. A fatura pode ser dividida em varias parcelas.
															cChaveFat	:=	(cAliasQry)->(FILIAL+CLIFOR+LOJA+PREFIXO+NUM)
															nTotFat		:=	0
															aTitFat		:=	{}
															While cChaveFat == (cAliasQry)->(FILIAL+CLIFOR+LOJA+PREFIXO+NUM) .And. !(cAliasQry)->(EOF())
																nTotFat	+=	(cAliasQry)->VALOR
																#IFDEF TOP
																	aAdd(aTitFat,{(cAliasQry)->(FILIAL+CLIFOR+LOJA+PREFIXO+NUM),(cAliasQry)->VALOR,(cAliasQry)->NATUREZ,(cAliasQry)->MOEDA,;
																		(cAliasQry)->TXMOEDA,(cAliasQry)->EMISSAO,(cAliasQry)->MULTNAT,cAliasQry,cChaveFat,;
																		(cAliasQry)->(CLIFOR+LOJA),If(lSE1,(cAliasQry)->TIPOA1,""),If(lSE1 .And. lScorgp,(cAliasQry)->SCORGP,""),;
																		IIf(lSE1Proc .And. lSE2Proc ,(cAliasQry)->NUMPRO,""),IIf(lSE1Proc .And. lSE2Proc ,(cAliasQry)->INDPRO,""),;
																		(cAliasQry)->FILIAL,(cAliasQry)->PREFIXO,(cAliasQry)->NUM,(cAliasQry)->PARCELA,(cAliasQry)->TIPO,(cAliasQry)->CLIFOR,;
																		(cAliasQry)->LOJA,(cAliasQry)->EMISSAO,Iif(lDescDoc,(cAliasQry)->HIST,"")})
																#ELSE
																	aAdd(aTitFat,{(cAliasQry)->(FILIAL+CLIFOR+LOJA+PREFIXO+NUM),(cAliasQry)->VALOR,(cAliasQry)->NATUREZ,(cAliasQry)->MOEDA,;
																		(cAliasQry)->TXMOEDA,(cAliasQry)->DTMOV,(cAliasQry)->MULTNAT,cAliasQry,cChaveFat,;
																		(cAliasQry)->(CLIFOR+LOJA),If(lSE1,(cAliasQry)->TIPOA1,""),If(lSE1 .And. lScorgp,(cAliasQry)->SCORGP,""),;
																		IIf(lSE1Proc .And. lSE2Proc ,(cAliasQry)->NUMPRO,""),IIf(lSE1Proc .And. lSE2Proc ,(cAliasQry)->INDPRO,""),;
																		(cAliasQry)->FILIAL,(cAliasQry)->PREFIXO,(cAliasQry)->NUM,(cAliasQry)->PARCELA,(cAliasQry)->TIPO,(cAliasQry)->CLIFOR,;
																		(cAliasQry)->LOJA,(cAliasQry)->DTMOV,Iif(lDescDoc,(cAliasQry)->HIST,"")})
																#ENDIF
																(cAliasQry)->(Dbskip())
															Enddo

															If lSE1
																//aAreaTit := SE1->(GetArea())
																DbSelectArea("SE1")
																SE1->(Dbsetorder(10)) //FILIAL+CLIENTE+LOJA+FATPREF+FATURA
																cChaveTit	:=	"SE1->E1_FILIAL + SE1->E1_CLIENTE + SE1->E1_LOJA + SE1->E1_FATPREF + SE1->E1_FATURA"
															ElseIf lSE2
																//aAreaTit := SE2->(GetArea())
																DbSelectArea("SE2")
																SE2->(Dbsetorder(9)) //FILIAL+FORNECE+LOJA+FATPREF+FATURA
																cChaveTit	:=	"SE2->E2_FILIAL + SE2->E2_FORNECE + SE2->E2_LOJA + SE2->E2_FATPREF + SE2->E2_FATURA"
															Endif

															For nI:=1 to Len(aTitFat)

																cChaveFat	:= aTitFat[nI,1]
																DBseek(cChaveFat)

																While cChaveFat == &cChaveTit .And. !(cAlias)->(EOF())

																	lSpdMt100 := .F.
																	lSpdMt460 := .F.

																	//No caso de titulos a pagar na primeira query as faturas sao selecionadas pela data de emissao entao os titulos desdobrados nao devem ser processados.
																	//Na segunda query as faturas sao selecionadas pela data de baixa para processar somente os titulos desdobrados.
																	If	lSE2 .And. (cAlias)->E2_DESDOBR = 'S' .And. nEnvFatCp = 1
																		Dbskip()
																		Loop
																	Endif
																	If	lSE2 .And. (cAlias)->E2_DESDOBR <> 'S' .And. nEnvFatCp = 2
																		Dbskip()
																		Loop
																	Endif
																	cOrigem	:= IIf(lSE1,SE1->E1_ORIGEM,SE2->E2_ORIGEM)
																	If	!("FIN" $ cOrigem)
																		aArea := GetArea()

																		If AllTrim(cOrigem) == "MATA100" .And. cAlias == "SE2"

																			DbSelectArea("SF1")
																			DbSetOrder(1)
																			If DbSeek(xFilial("SF1")+(cAlias)->(E2_NUM+E2_PREFIXO+E2_FORNECE+E2_LOJA)) .And.  At(","+Alltrim(SF1->F1_ESPECIE)+",",cNewDocSpd)>0
																				lSpdMt100 := .T.
																			Endif

																			If !lSpdMt100
																				(cAlias)->(Dbskip())
																				Loop
																			Endif
																		Endif

																		If AllTrim(cOrigem) == "MATA100" .And. cAlias == "SE1"

																			DbSelectArea("SF1")
																			DbSetOrder(1)
																			If DbSeek(xFilial("SF1")+(cAlias)->(E1_NUM+E1_PREFIXO+E1_CLIENTE+E1_LOJA)) .And.  At(","+Alltrim(SF1->F1_ESPECIE)+",",cNewDocSpd)>0
																				lSpdMt100 := .T.
																			Endif

																			If !lSpdMt100
																				(cAlias)->(Dbskip())
																				Loop
																			Endif
																		Elseif AllTrim(cOrigem) == "MATA460" .And. cAlias == "SE2"

																			DbSelectArea("SF2")
																			If DbSeek(xFilial("SF2")+(cAlias)->(E2_NUM+E2_PREFIXO+E2_FORNECE+E2_LOJA)) .And.  At(","+Alltrim(SF2->F2_SERIE)+",",cNewDocSpd)>0
																				lSpdMt460 := .T.
																			Endif

																			If !lSpdMt460
																				(cAlias)->(Dbskip())
																				Loop
																			Endif
																		EndIf

																		If AllTrim(cOrigem) == "MATA460" .And. cAlias == "SE1"

																			DbSelectArea("SF2")
																			If DbSeek(xFilial("SF2")+(cAlias)->(E1_NUM+E1_PREFIXO+E1_CLIENTE+E1_LOJA)) .And. At(","+Alltrim(SF2->F2_SERIE)+",",cNewDocSpd)>0
																				lSpdMt460 := .T.
																			Endif

																			If !lSpdMt460
																				(cAlias)->(Dbskip())
																				Loop
																			Endif

																		Endif
																		RestArea(aArea)
																	Endif

																	If	lSE1 .And. (Empty(SE1->E1_BAIXA))
																		Dbskip()
																		Loop
																	Endif

																	If	lSE2 .And. Iif(!Empty(cNatSe2) .And. (cAlias)->E2_NATUREZ $ cNatSe2,(Empty(SE2->E2_VENCTO)),(Empty(SE2->E2_BAIXA)))
																		(cAlias)->(Dbskip())
																		Loop

																	Endif

																	If	(iIf(lSE1,SE1->E1_TIPO,SE2->E2_TIPO) $ "PRE|PR |IRF|ISR|IT |IT-|SES|INA|")
																		(cAlias)->(Dbskip())
																		Loop
																	Endif

																	If	((iIf(lSE1,SE1->E1_TIPO,SE2->E2_TIPO) $ MVABATIM) .Or. (iIf(lSE1,SE1->E1_TIPO,SE2->E2_TIPO) $ MVPROVIS))
																		(cAlias)->(Dbskip())
																		Loop
																	Endif

																	//Caso o titulo tenha mes e ano inferior ao da fatura quer dizer que jah foi enviado no bloco F100 por exemplo no mes anterior.
																	IF lSE1 .And. Subst(Dtoc(SE1->E1_EMISSAO),4,2)+Alltrim(Str(Year(SE1->E1_EMISSAO))) < Alltrim(Subst(aTitFat[nI,22],5,2)+Subst(aTitFat[nI,22],1,4) )
																		(cAlias)->(Dbskip())
																		Loop
																	Endif

																	IF lSE2 .And. Subst(Dtoc(SE2->E2_EMISSAO),4,2)+Alltrim(Str(Year(SE2->E2_EMISSAO))) < Alltrim(Subst(aTitFat[nI,22],5,2)+Subst(aTitFat[nI,22],1,4) )  .And.;
																			nEnvFatCp = 1 .And. (cAlias)->E2_DESDOBR <> 'S'
																		(cAlias)->(Dbskip())
																		Loop
																	Endif



																	aBaseTit		:=	{}
																	nBaseTit		:=	0
																	nVrRateio	:=	0
																	nPerc			:=	(aTitFat[nI,2]/nTotFat)

																	If lSE1
																		cChave	:=	(SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_CLIENTE+SE1->E1_LOJA)
																	ElseIf lSE2
																		cChave	:=	(SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+SE2->E2_FORNECE+SE2->E2_LOJA)
																	Endif

																	nMoeda 	:= iIF(lSE1,SE1->E1_MOEDA,SE2->E2_MOEDA)
																	nTxMoeda	:=	iIF(lSE1,SE1->E1_TXMOEDA,SE2->E2_TXMOEDA)

																	If IIf(lSE1,SE1->E1_MULTNAT,SE2->E2_MULTNAT) = "1"
																		aAreaTit	:= (cAlias)->(GetArea())
																		aAreaSEV := SEV->(GetArea())
																		DbSelectArea("SEV")
																		DbSetOrder(1)
																		//Verificar se o titulo possui multiplas naturezas.
																		SEV->(DbSeek(xFilial("SEV")+ cChave))
																		While SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA) == cChave .And. !SEV->(EOF())

																			nVrRateio	:=	0

																			If SEV->EV_IDENT <> "1" // 1=Rateio de Inclusao 2=Rateio de Baixa
																				SEV->(Dbskip())
																				Loop
																			Endif

																			If	(lSE2 .And. SEV->EV_RECPAG == "P") .Or. (lSE1 .And. SEV->EV_RECPAG == "R")
																				aAreaSED := SED->(GetArea()) //Caso a natureza apure Pis ou Cofins
																				DbSelectArea("SED")
																				DbSetOrder(1)
																				If DbSeek(xFilial("SED")+ SEV->EV_NATUREZ)
																					If (!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))

																						nVrRateio	:= (SEV->EV_VALOR	 * nPerc)

																						If nMoeda > 1
																							If nTxMoeda == 0
																								nVrRateio	:=	xMoeda( nVrRateio ,nMoeda, 1, iIf(lSE1,SE1->E1_EMISSAO,SE2->E2_EMISSAO))
																							Else
																								nVrRateio	:=	Round( nVrRateio * nTxMoeda,2)
																							Endif
																						Endif

																						//Calculando reducao do valor em natureza que contenha somente apuracao de Pis e Cofins.
																						If lRedPis .And. !Empty(SED->ED_REDPIS) .And. Empty(SED->ED_PERCPIS)
																							nVrRateio	:=	nVrRateio * (SED->ED_REDPIS/100)
																						ElseIf lRedCof .And. !Empty(SED->ED_REDCOF)	.And. Empty(SED->ED_PERCCOF)
																							nVrRateio	:=	nVrRateio * (SED->ED_REDCOF/100)
																						Endif

																						aAdd(aRet,{cAlias,aTitFat[nI,6],;                                      //2
																						SEV->EV_RECPAG,nVrRateio,SEV->EV_PERC,SED->ED_CODIGO,SED->ED_APURPIS,; //7
																						SED->ED_APURCOF,SED->ED_CSTPIS,;       //9
																						SED->ED_CSTCOF,SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_TABCCZ,SED->ED_CODCCZ,;    //16
																						SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC,	If(SED->(FieldPos("ED_CLASFIS")) > 0,SED->ED_CLASFIS, "" ),; //22
																						SEV->EV_PERC,nPerc,aTitFat[nI,10],; //25
																						aTitFat[nI,6],(cAlias)->(RECNO()),aTitFat[nI,10],aTitFat[nI,11],aTitFat[nI,12],aTitFat[nI,13],aTitFat[nI,14],;      //32
																						aTitFat[nI,15],aTitFat[nI,16],aTitFat[nI,17],aTitFat[nI,18],aTitFat[nI,19],aTitFat[nI,20],aTitFat[nI,21],;     //39
																						IIf(lSE1,Dtos(SE1->E1_EMISSAO),Dtos(SE2->E2_EMISSAO)),SE1->E1_DECRESC,Iif(lTpDesc,SE1->E1_TPDESC,"")})    //42

																					Endif
																				Endif
																				RestArea(aAreaSED)
																			Endif
																			SEV->(Dbskip())
																		Enddo
																		RestArea(aAreaSEV)
																		RestArea(aAreaTit)
																	Else
																		SED->(DbSetOrder(1))
																		SED->(DbSeek(xFilial("SED")+ If(lSE1,SE1->E1_NATUREZ,SE2->E2_NATUREZ)))
																		If (!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))

																			nDescBx	:=	nJurosBx	:= 0
																			aAreaTit	:= (cAlias)->(GetArea())
																			dbSelectArea("SE5")
																			SE5 -> ( dbSetOrder ( 7 ) ) //FILIAL+PREFIXO+NUMERO+PARCELA+TIPO+CLIFOR+LOJA+SEQ
																			SE5 -> ( dbSeek ( xFilial("SE5") + cChave ) )

																			Do While ( SE5->(!Eof()) .And. Alltrim(cChave) == Alltrim(SE5->E5_FILIAL+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA))
																				If SE5->E5_TIPODOC $ "JR_MT_J2_M2_CM_C2"
																					nJurosBx	+= SE5->E5_VALOR
																				ElseIf SE5->E5_TIPODOC $ "DC_D2"
																					nDescBx	+= SE5->E5_VALOR
																				Endif
																				SE5->(Dbskip())
																			Enddo
																			RestArea(aAreaTit)

																			aBaseTit	:=	{}
																			aBaseTit := FinRepBase(cAlias,nMoeda,cChave)
																			nBaseTit	:=	aBaseTit[1] //Valor base para calculo do Pis e Cofins...

																			If nMoeda > 1
																				//Caso seja moeda 2 e natureza que nao retenha somente apure a base vem calculada como moeda 1 entao retorno ao valor normal do titulo.
																				If Empty(SED->ED_PERCPIS)  .Or. Empty(SED->ED_PERCCOF)
																					If SE1->E1_TXMOEDA == 0
																						nBaseTit := nBaseTit*RecMoeda(SE1->E1_EMISSAO,nMoeda)
																					Else
																						nBaseTit := (nBaseTit*SE1->E1_TXMOEDA)
																					Endif
																				Endif
																				//Transformo em moeda real.
																				If nTxMoeda == 0
																					nVrRateio	:=	xMoeda( nBaseTit ,nMoeda, 1, iIf(lSE1,SE1->E1_EMISSAO,SE2->E2_EMISSAO))
																				Else
																					nVrRateio	:=	Round( nBaseTit * nTxMoeda,2)
																				Endif
																			Else
																				nVrRateio	:=	nBaseTit
																			Endif

																			nVrRateio	:=	(nVrRateio * nPerc)

																			If nJurosBx > 0 .Or. nDescBx > 0
																				nVrRateio:= (nVrRateio - nDescBx + nJurosBx)
																			Endif

																			aAdd(aRet,{cAlias,aTitFat[nI,6],;
																				If(cAlias="SE1","R","P"),nVrRateio,100,SED->ED_CODIGO,SED->ED_APURPIS,SED->ED_APURCOF,SED->ED_CSTPIS,;
																					SED->ED_CSTCOF,SED->ED_PCAPPIS,SED->ED_PCAPCOF,SED->ED_CLASFIS,SED->ED_INDCMLT,	SED->ED_TABCCZ,SED->ED_CODCCZ,;
																					SED->ED_GRUCCZ,Dtos(SED->ED_DTFCCZ),SED->ED_CONTA,SED->ED_CCD,SED->ED_CCC,If(SED->(FieldPos("ED_CLASFIS")) > 0,SED->ED_CLASFIS, "" ),; //22
																				100,nPerc,aTitFat[nI,10],aTitFat[nI,6],;//26
																				(cAlias)->(RECNO()),aTitFat[nI,10],aTitFat[nI,11],aTitFat[nI,12],aTitFat[nI,13],aTitFat[nI,14],;
																					aTitFat[nI,15],aTitFat[nI,16],aTitFat[nI,17],aTitFat[nI,18],aTitFat[nI,19],aTitFat[nI,20],aTitFat[nI,21],;
																					IIf(cAlias="SE1",Dtos(SE1->E1_EMISSAO),Dtos(SE2->E2_EMISSAO)),SE1->E1_DECRESC,Iif(lTpDesc,SE1->E1_TPDESC,"")})


																			Endif
																		Endif
																		(cAlias)->(Dbskip())
																	Enddo
																Next

																Return aRet

																/*
																ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
																±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
																±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
																±±ºPrograma  ³VldFilOrigºAutor  ³Caio Cesar Felipe   º Data ³  26/02/2013 º±±
																±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
																±±ºDesc.     ³Valida se a filial informada é válida                       º±±
																±±º          ³                                                            º±±
																±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
																±±ºUso       ³ AP                                                         º±±
																±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
																±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
																ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
																*/
															Function VldFilOrig(cFilAux)
																Local lRet 		:= .F.
																Local aArea		:= GetArea()

																lRet := FWFilExist(cEmpAnt,cFilAux)

																If !lRet
																	MsgAlert("A Filial informada no campo Filial Orig. não é válida.")
																EndIf

																RestArea( aArea )

																Return( lRet )


																/*
																ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
																±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
																±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
																±±ºFuncao    ³GetlSemServerºAutor  ³ Vendas Cliente ºData ³ 05/Abr/2013   º±±
																±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
																±±ºDesc.     ³ Retorna o conteudo da variavel estatica __lSemServer       º±±
																±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
																±±ºParametros³                                                            º±±
																±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
																±±ºRetorno   ³ Logico -  .T. ou .F.                                       º±±
																±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
																±±ºUso       ³ LOJA701                                                    º±±
																±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
																±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
																ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
																*/
															Function GetlSemServer()
																Return __lSemServer <> Nil .And. __lSemServer
