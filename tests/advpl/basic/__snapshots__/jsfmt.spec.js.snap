// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prw: codeblocks.prw program 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "

====================================options=====================================
debug: false
filepath: \\"W:\\\\\\\\ws_tds_vscode\\\\\\\\tds-parsers\\\\\\\\tests\\\\\\\\advpl\\\\\\\\basic/codeblocks.prw\\"
parserProcess: \\"program\\"
=====================================input======================================
001:user function hello1() 
002:  local x := { || }
003:  local x := { |a| }
004:  local x := { |a,b| }
005:  local x := { || l1() }
006:  local x := { |a| l1(a) }
007:
=====================================output=====================================
program:  [1:1-6:27] {C:1} {A:{}}
| block:  [1:1-6:27] {C:3} {A:{}}
| | beginBlock:  [1:1-1:24] {C:1} {A:{}}
| | | keyword: user [1:1-1:4] {C:0} {A:{}}
| | | whiteSpace:   [1:5-1:5] {C:0} {A:{}}
| | | keyword: function [1:6-1:13] {C:0} {A:{\\"command\\":\\"function\\"}}
| | | whiteSpace:   [1:14-1:14] {C:0} {A:{}}
| | | identifier: hello1 [1:15-1:20] {C:0} {A:{}}
| | | argumentList:  [1:21-1:22] {C:3} {A:{}}
| | | | operatorParenthesis: ( [1:21-1:21] {C:0} {A:{}}
| | | | operatorParenthesis: ) [1:22-1:22] {C:0} {A:{}}
| | | endLine: - [1:23-1:24] {C:0} {A:{}}
| | | -whiteSpace:   [1:23-1:23] {C:0} {A:{}}
| | | -newLine: \\\\n [1:24-1:24] {C:0} {A:{}}
| | bodyBlock:  [1:1-6:27] {C:1} {A:{}}
| | | whiteSpace:    [2:1-2:2] {C:0} {A:{}}
| | | keyword: local [2:3-2:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| | | whiteSpace:   [2:8-2:8] {C:0} {A:{}}
| | | identifier: x [2:9-2:9] {C:0} {A:{}}
| | | whiteSpace:   [2:10-2:10] {C:0} {A:{}}
| | | operatorAssign: := [2:11-2:12] {C:0} {A:{}}
| | | whiteSpace:   [2:13-2:13] {C:0} {A:{}}
| | | operatorBraces: { [2:14-2:14] {C:0} {A:{}}
| | | whiteSpace:   [2:15-2:15] {C:0} {A:{}}
| | | operator: | [2:16-2:16] {C:0} {A:{}}
| | | operator: | [2:17-2:17] {C:0} {A:{}}
| | | whiteSpace:   [2:18-2:18] {C:0} {A:{}}
| | | operatorBraces: } [2:19-2:19] {C:0} {A:{}}
| | | newLine: \\\\n [2:20-2:20] {C:0} {A:{}}
| | | whiteSpace:    [3:1-3:2] {C:0} {A:{}}
| | | keyword: local [3:3-3:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| | | whiteSpace:   [3:8-3:8] {C:0} {A:{}}
| | | identifier: x [3:9-3:9] {C:0} {A:{}}
| | | whiteSpace:   [3:10-3:10] {C:0} {A:{}}
| | | operatorAssign: := [3:11-3:12] {C:0} {A:{}}
| | | whiteSpace:   [3:13-3:13] {C:0} {A:{}}
| | | operatorBraces: { [3:14-3:14] {C:0} {A:{}}
| | | whiteSpace:   [3:15-3:15] {C:0} {A:{}}
| | | operator: | [3:16-3:16] {C:0} {A:{}}
| | | identifier: a [3:17-3:17] {C:0} {A:{}}
| | | operator: | [3:18-3:18] {C:0} {A:{}}
| | | whiteSpace:   [3:19-3:19] {C:0} {A:{}}
| | | operatorBraces: } [3:20-3:20] {C:0} {A:{}}
| | | newLine: \\\\n [3:21-3:21] {C:0} {A:{}}
| | | whiteSpace:    [4:1-4:2] {C:0} {A:{}}
| | | keyword: local [4:3-4:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| | | whiteSpace:   [4:8-4:8] {C:0} {A:{}}
| | | identifier: x [4:9-4:9] {C:0} {A:{}}
| | | whiteSpace:   [4:10-4:10] {C:0} {A:{}}
| | | operatorAssign: := [4:11-4:12] {C:0} {A:{}}
| | | whiteSpace:   [4:13-4:13] {C:0} {A:{}}
| | | operatorBraces: { [4:14-4:14] {C:0} {A:{}}
| | | whiteSpace:   [4:15-4:15] {C:0} {A:{}}
| | | operator: | [4:16-4:16] {C:0} {A:{}}
| | | identifier: a [4:17-4:17] {C:0} {A:{}}
| | | operatorSeparator: , [4:18-4:18] {C:0} {A:{}}
| | | identifier: b [4:19-4:19] {C:0} {A:{}}
| | | operator: | [4:20-4:20] {C:0} {A:{}}
| | | whiteSpace:   [4:21-4:21] {C:0} {A:{}}
| | | operatorBraces: } [4:22-4:22] {C:0} {A:{}}
| | | newLine: \\\\n [4:23-4:23] {C:0} {A:{}}
| | | whiteSpace:    [5:1-5:2] {C:0} {A:{}}
| | | keyword: local [5:3-5:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| | | whiteSpace:   [5:8-5:8] {C:0} {A:{}}
| | | identifier: x [5:9-5:9] {C:0} {A:{}}
| | | whiteSpace:   [5:10-5:10] {C:0} {A:{}}
| | | operatorAssign: := [5:11-5:12] {C:0} {A:{}}
| | | whiteSpace:   [5:13-5:13] {C:0} {A:{}}
| | | operatorBraces: { [5:14-5:14] {C:0} {A:{}}
| | | whiteSpace:   [5:15-5:15] {C:0} {A:{}}
| | | operator: | [5:16-5:16] {C:0} {A:{}}
| | | operator: | [5:17-5:17] {C:0} {A:{}}
| | | whiteSpace:   [5:18-5:18] {C:0} {A:{}}
| | | identifier: l1 [5:19-5:20] {C:0} {A:{}}
| | | operatorParenthesis: ( [5:21-5:21] {C:0} {A:{}}
| | | operatorParenthesis: ) [5:22-5:22] {C:0} {A:{}}
| | | whiteSpace:   [5:23-5:23] {C:0} {A:{}}
| | | operatorBraces: } [5:24-5:24] {C:0} {A:{}}
| | | newLine: \\\\n [5:25-5:25] {C:0} {A:{}}
| | | whiteSpace:    [6:1-6:2] {C:0} {A:{}}
| | | keyword: local [6:3-6:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| | | whiteSpace:   [6:8-6:8] {C:0} {A:{}}
| | | identifier: x [6:9-6:9] {C:0} {A:{}}
| | | whiteSpace:   [6:10-6:10] {C:0} {A:{}}
| | | operatorAssign: := [6:11-6:12] {C:0} {A:{}}
| | | whiteSpace:   [6:13-6:13] {C:0} {A:{}}
| | | operatorBraces: { [6:14-6:14] {C:0} {A:{}}
| | | whiteSpace:   [6:15-6:15] {C:0} {A:{}}
| | | operator: | [6:16-6:16] {C:0} {A:{}}
| | | identifier: a [6:17-6:17] {C:0} {A:{}}
| | | operator: | [6:18-6:18] {C:0} {A:{}}
| | | whiteSpace:   [6:19-6:19] {C:0} {A:{}}
| | | identifier: l1 [6:20-6:21] {C:0} {A:{}}
| | | operatorParenthesis: ( [6:22-6:22] {C:0} {A:{}}
| | | identifier: a [6:23-6:23] {C:0} {A:{}}
| | | operatorParenthesis: ) [6:24-6:24] {C:0} {A:{}}
| | | whiteSpace:   [6:25-6:25] {C:0} {A:{}}
| | | operatorBraces: } [6:26-6:26] {C:0} {A:{}}
| | | newLine: \\\\n [6:27-6:27] {C:0} {A:{}}
| | endBlock:  [1:1-6:27] {C:1} {A:{}}

================================================================================",
}
`;

exports[`prw: codeblocks.prw token 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "

====================================options=====================================
debug: false
filepath: \\"W:\\\\\\\\ws_tds_vscode\\\\\\\\tds-parsers\\\\\\\\tests\\\\\\\\advpl\\\\\\\\basic/codeblocks.prw\\"
parserProcess: \\"token\\"
=====================================input======================================
001:user function hello1() 
002:  local x := { || }
003:  local x := { |a| }
004:  local x := { |a,b| }
005:  local x := { || l1() }
006:  local x := { |a| l1(a) }
007:
=====================================output=====================================
token:  [1:1-6:27] {C:1} {A:{}}
| keyword: user [1:1-1:4] {C:0} {A:{}}
| whiteSpace:   [1:5-1:5] {C:0} {A:{}}
| keyword: function [1:6-1:13] {C:0} {A:{\\"command\\":\\"function\\"}}
| whiteSpace:   [1:14-1:14] {C:0} {A:{}}
| identifier: hello1 [1:15-1:20] {C:0} {A:{}}
| operatorParenthesis: ( [1:21-1:21] {C:0} {A:{}}
| operatorParenthesis: ) [1:22-1:22] {C:0} {A:{}}
| whiteSpace:   [1:23-1:23] {C:0} {A:{}}
| newLine: \\\\n [1:24-1:24] {C:0} {A:{}}
| whiteSpace:    [2:1-2:2] {C:0} {A:{}}
| keyword: local [2:3-2:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| whiteSpace:   [2:8-2:8] {C:0} {A:{}}
| identifier: x [2:9-2:9] {C:0} {A:{}}
| whiteSpace:   [2:10-2:10] {C:0} {A:{}}
| operatorAssign: := [2:11-2:12] {C:0} {A:{}}
| whiteSpace:   [2:13-2:13] {C:0} {A:{}}
| operatorBraces: { [2:14-2:14] {C:0} {A:{}}
| whiteSpace:   [2:15-2:15] {C:0} {A:{}}
| operator: | [2:16-2:16] {C:0} {A:{}}
| operator: | [2:17-2:17] {C:0} {A:{}}
| whiteSpace:   [2:18-2:18] {C:0} {A:{}}
| operatorBraces: } [2:19-2:19] {C:0} {A:{}}
| newLine: \\\\n [2:20-2:20] {C:0} {A:{}}
| whiteSpace:    [3:1-3:2] {C:0} {A:{}}
| keyword: local [3:3-3:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| whiteSpace:   [3:8-3:8] {C:0} {A:{}}
| identifier: x [3:9-3:9] {C:0} {A:{}}
| whiteSpace:   [3:10-3:10] {C:0} {A:{}}
| operatorAssign: := [3:11-3:12] {C:0} {A:{}}
| whiteSpace:   [3:13-3:13] {C:0} {A:{}}
| operatorBraces: { [3:14-3:14] {C:0} {A:{}}
| whiteSpace:   [3:15-3:15] {C:0} {A:{}}
| operator: | [3:16-3:16] {C:0} {A:{}}
| identifier: a [3:17-3:17] {C:0} {A:{}}
| operator: | [3:18-3:18] {C:0} {A:{}}
| whiteSpace:   [3:19-3:19] {C:0} {A:{}}
| operatorBraces: } [3:20-3:20] {C:0} {A:{}}
| newLine: \\\\n [3:21-3:21] {C:0} {A:{}}
| whiteSpace:    [4:1-4:2] {C:0} {A:{}}
| keyword: local [4:3-4:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| whiteSpace:   [4:8-4:8] {C:0} {A:{}}
| identifier: x [4:9-4:9] {C:0} {A:{}}
| whiteSpace:   [4:10-4:10] {C:0} {A:{}}
| operatorAssign: := [4:11-4:12] {C:0} {A:{}}
| whiteSpace:   [4:13-4:13] {C:0} {A:{}}
| operatorBraces: { [4:14-4:14] {C:0} {A:{}}
| whiteSpace:   [4:15-4:15] {C:0} {A:{}}
| operator: | [4:16-4:16] {C:0} {A:{}}
| identifier: a [4:17-4:17] {C:0} {A:{}}
| operatorSeparator: , [4:18-4:18] {C:0} {A:{}}
| identifier: b [4:19-4:19] {C:0} {A:{}}
| operator: | [4:20-4:20] {C:0} {A:{}}
| whiteSpace:   [4:21-4:21] {C:0} {A:{}}
| operatorBraces: } [4:22-4:22] {C:0} {A:{}}
| newLine: \\\\n [4:23-4:23] {C:0} {A:{}}
| whiteSpace:    [5:1-5:2] {C:0} {A:{}}
| keyword: local [5:3-5:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| whiteSpace:   [5:8-5:8] {C:0} {A:{}}
| identifier: x [5:9-5:9] {C:0} {A:{}}
| whiteSpace:   [5:10-5:10] {C:0} {A:{}}
| operatorAssign: := [5:11-5:12] {C:0} {A:{}}
| whiteSpace:   [5:13-5:13] {C:0} {A:{}}
| operatorBraces: { [5:14-5:14] {C:0} {A:{}}
| whiteSpace:   [5:15-5:15] {C:0} {A:{}}
| operator: | [5:16-5:16] {C:0} {A:{}}
| operator: | [5:17-5:17] {C:0} {A:{}}
| whiteSpace:   [5:18-5:18] {C:0} {A:{}}
| identifier: l1 [5:19-5:20] {C:0} {A:{}}
| operatorParenthesis: ( [5:21-5:21] {C:0} {A:{}}
| operatorParenthesis: ) [5:22-5:22] {C:0} {A:{}}
| whiteSpace:   [5:23-5:23] {C:0} {A:{}}
| operatorBraces: } [5:24-5:24] {C:0} {A:{}}
| newLine: \\\\n [5:25-5:25] {C:0} {A:{}}
| whiteSpace:    [6:1-6:2] {C:0} {A:{}}
| keyword: local [6:3-6:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| whiteSpace:   [6:8-6:8] {C:0} {A:{}}
| identifier: x [6:9-6:9] {C:0} {A:{}}
| whiteSpace:   [6:10-6:10] {C:0} {A:{}}
| operatorAssign: := [6:11-6:12] {C:0} {A:{}}
| whiteSpace:   [6:13-6:13] {C:0} {A:{}}
| operatorBraces: { [6:14-6:14] {C:0} {A:{}}
| whiteSpace:   [6:15-6:15] {C:0} {A:{}}
| operator: | [6:16-6:16] {C:0} {A:{}}
| identifier: a [6:17-6:17] {C:0} {A:{}}
| operator: | [6:18-6:18] {C:0} {A:{}}
| whiteSpace:   [6:19-6:19] {C:0} {A:{}}
| identifier: l1 [6:20-6:21] {C:0} {A:{}}
| operatorParenthesis: ( [6:22-6:22] {C:0} {A:{}}
| identifier: a [6:23-6:23] {C:0} {A:{}}
| operatorParenthesis: ) [6:24-6:24] {C:0} {A:{}}
| whiteSpace:   [6:25-6:25] {C:0} {A:{}}
| operatorBraces: } [6:26-6:26] {C:0} {A:{}}
| newLine: \\\\n [6:27-6:27] {C:0} {A:{}}

================================================================================",
}
`;

exports[`prw: operators.prw program 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "

====================================options=====================================
debug: false
filepath: \\"W:\\\\\\\\ws_tds_vscode\\\\\\\\tds-parsers\\\\\\\\tests\\\\\\\\advpl\\\\\\\\basic/operators.prw\\"
parserProcess: \\"program\\"
=====================================input======================================
001:user function hello1() 
002:  local x := .t.
003:  local x := .y.
004:
005:
=====================================output=====================================
program:  [1:1-3:18] {C:1} {A:{}}
| block:  [1:1-3:18] {C:3} {A:{}}
| | beginBlock:  [1:1-1:24] {C:1} {A:{}}
| | | keyword: user [1:1-1:4] {C:0} {A:{}}
| | | whiteSpace:   [1:5-1:5] {C:0} {A:{}}
| | | keyword: function [1:6-1:13] {C:0} {A:{\\"command\\":\\"function\\"}}
| | | whiteSpace:   [1:14-1:14] {C:0} {A:{}}
| | | identifier: hello1 [1:15-1:20] {C:0} {A:{}}
| | | argumentList:  [1:21-1:22] {C:3} {A:{}}
| | | | operatorParenthesis: ( [1:21-1:21] {C:0} {A:{}}
| | | | operatorParenthesis: ) [1:22-1:22] {C:0} {A:{}}
| | | endLine: - [1:23-1:24] {C:0} {A:{}}
| | | -whiteSpace:   [1:23-1:23] {C:0} {A:{}}
| | | -newLine: \\\\n [1:24-1:24] {C:0} {A:{}}
| | bodyBlock:  [1:1-3:18] {C:1} {A:{}}
| | | whiteSpace:    [2:1-2:2] {C:0} {A:{}}
| | | keyword: local [2:3-2:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| | | whiteSpace:   [2:8-2:8] {C:0} {A:{}}
| | | identifier: x [2:9-2:9] {C:0} {A:{}}
| | | whiteSpace:   [2:10-2:10] {C:0} {A:{}}
| | | operatorAssign: := [2:11-2:12] {C:0} {A:{}}
| | | whiteSpace:   [2:13-2:13] {C:0} {A:{}}
| | | boolean: .t. [2:14-2:16] {C:0} {A:{}}
| | | newLine: \\\\n [2:17-2:17] {C:0} {A:{}}
| | | whiteSpace:    [3:1-3:2] {C:0} {A:{}}
| | | keyword: local [3:3-3:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| | | whiteSpace:   [3:8-3:8] {C:0} {A:{}}
| | | identifier: x [3:9-3:9] {C:0} {A:{}}
| | | whiteSpace:   [3:10-3:10] {C:0} {A:{}}
| | | operatorAssign: := [3:11-3:12] {C:0} {A:{}}
| | | whiteSpace:   [3:13-3:13] {C:0} {A:{}}
| | | boolean: .y. [3:14-3:16] {C:0} {A:{}}
| | | newLine: \\\\n\\\\n [3:17-3:18] {C:0} {A:{}}
| | endBlock:  [1:1-3:18] {C:1} {A:{}}

================================================================================",
}
`;

exports[`prw: operators.prw token 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "

====================================options=====================================
debug: false
filepath: \\"W:\\\\\\\\ws_tds_vscode\\\\\\\\tds-parsers\\\\\\\\tests\\\\\\\\advpl\\\\\\\\basic/operators.prw\\"
parserProcess: \\"token\\"
=====================================input======================================
001:user function hello1() 
002:  local x := .t.
003:  local x := .y.
004:
005:
=====================================output=====================================
token:  [1:1-3:18] {C:1} {A:{}}
| keyword: user [1:1-1:4] {C:0} {A:{}}
| whiteSpace:   [1:5-1:5] {C:0} {A:{}}
| keyword: function [1:6-1:13] {C:0} {A:{\\"command\\":\\"function\\"}}
| whiteSpace:   [1:14-1:14] {C:0} {A:{}}
| identifier: hello1 [1:15-1:20] {C:0} {A:{}}
| operatorParenthesis: ( [1:21-1:21] {C:0} {A:{}}
| operatorParenthesis: ) [1:22-1:22] {C:0} {A:{}}
| whiteSpace:   [1:23-1:23] {C:0} {A:{}}
| newLine: \\\\n [1:24-1:24] {C:0} {A:{}}
| whiteSpace:    [2:1-2:2] {C:0} {A:{}}
| keyword: local [2:3-2:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| whiteSpace:   [2:8-2:8] {C:0} {A:{}}
| identifier: x [2:9-2:9] {C:0} {A:{}}
| whiteSpace:   [2:10-2:10] {C:0} {A:{}}
| operatorAssign: := [2:11-2:12] {C:0} {A:{}}
| whiteSpace:   [2:13-2:13] {C:0} {A:{}}
| boolean: .t. [2:14-2:16] {C:0} {A:{}}
| newLine: \\\\n [2:17-2:17] {C:0} {A:{}}
| whiteSpace:    [3:1-3:2] {C:0} {A:{}}
| keyword: local [3:3-3:7] {C:0} {A:{\\"command\\":\\"local\\"}}
| whiteSpace:   [3:8-3:8] {C:0} {A:{}}
| identifier: x [3:9-3:9] {C:0} {A:{}}
| whiteSpace:   [3:10-3:10] {C:0} {A:{}}
| operatorAssign: := [3:11-3:12] {C:0} {A:{}}
| whiteSpace:   [3:13-3:13] {C:0} {A:{}}
| boolean: .y. [3:14-3:16] {C:0} {A:{}}
| newLine: \\\\n\\\\n [3:17-3:18] {C:0} {A:{}}

================================================================================",
}
`;
